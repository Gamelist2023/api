{
  "log": {
    "version": "1.2",
    "creator": {
      "name": "WebInspector",
      "version": "537.36"
    },
    "pages": [
      {
        "startedDateTime": "2024-12-05T00:15:57.440Z",
        "id": "page_5",
        "title": "https://huggingface.co/chat/login",
        "pageTimings": {
          "onContentLoad": 1379.9589999980526,
          "onLoad": 1837.2090000048047
        }
      }
    ],
    "entries": [
      {
        "_initiator": {
          "type": "other"
        },
        "_priority": "VeryHigh",
        "_resourceType": "document",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "POST",
          "url": "https://huggingface.co/chat/login",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/chat/login"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "cache-control",
              "value": "max-age=0"
            },
            {
              "name": "content-length",
              "value": "0"
            },
            {
              "name": "content-type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "name": "origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "priority",
              "value": "u=0, i"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/chat/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "document"
            },
            {
              "name": "sec-fetch-mode",
              "value": "navigate"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "sec-fetch-user",
              "value": "?1"
            },
            {
              "name": "upgrade-insecure-requests",
              "value": "1"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 303,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "content-security-policy",
              "value": "frame-ancestors 'none';"
            },
            {
              "name": "date",
              "value": "Thu, 05 Dec 2024 00:15:58 GMT"
            },
            {
              "name": "location",
              "value": "https://huggingface.co/oauth/authorize?client_id=8f1a1d63-479b-46c8-84cb-521fe9f3222f&scope=openid%20profile%20inference-api&response_type=code&redirect_uri=https%3A%2F%2Fhuggingface.co%2Fchat%2Flogin%2Fcallback&state=eyJkYXRhIjp7ImV4cGlyYXRpb24iOjE3MzMzNjEzNTg5NjEsInJlZGlyZWN0VXJsIjoiaHR0cHM6Ly9odWdnaW5nZmFjZS5jby9jaGF0L2xvZ2luL2NhbGxiYWNrIn0sInNpZ25hdHVyZSI6IjI0ZWNiNDRlYzlkOWIwYzJhN2E3NzJjNmJmNWMxZWFiMDVlNWEyZGFhZWQxNjA5ZTBmYjAwODVhNTUzNTc3OTMifQ%3D%3D"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "8an7sDYQiVhJIxYq7qOXxOSX46PMWKehCpEtHPxxoAzFmBPGX2oZmQ=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Miss from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "x-unknown"
          },
          "redirectURL": "https://huggingface.co/oauth/authorize?client_id=8f1a1d63-479b-46c8-84cb-521fe9f3222f&scope=openid%20profile%20inference-api&response_type=code&redirect_uri=https%3A%2F%2Fhuggingface.co%2Fchat%2Flogin%2Fcallback&state=eyJkYXRhIjp7ImV4cGlyYXRpb24iOjE3MzMzNjEzNTg5NjEsInJlZGlyZWN0VXJsIjoiaHR0cHM6Ly9odWdnaW5nZmFjZS5jby9jaGF0L2xvZ2luL2NhbGxiYWNrIn0sInNpZ25hdHVyZSI6IjI0ZWNiNDRlYzlkOWIwYzJhN2E3NzJjNmJmNWMxZWFiMDVlNWEyZGFhZWQxNjA5ZTBmYjAwODVhNTUzNTc3OTMifQ%3D%3D",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 698,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:57.437Z",
        "time": 539.9120000074618,
        "timings": {
          "blocked": 4.14600000590086,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.2779999999999998,
          "wait": 531.6780000068601,
          "receive": 3.8099999947007746,
          "_blocked_queueing": 2.66100000590086,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "other"
        },
        "_priority": "VeryHigh",
        "_resourceType": "document",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/oauth/authorize?client_id=8f1a1d63-479b-46c8-84cb-521fe9f3222f&scope=openid%20profile%20inference-api&response_type=code&redirect_uri=https%3A%2F%2Fhuggingface.co%2Fchat%2Flogin%2Fcallback&state=eyJkYXRhIjp7ImV4cGlyYXRpb24iOjE3MzMzNjEzNTg5NjEsInJlZGlyZWN0VXJsIjoiaHR0cHM6Ly9odWdnaW5nZmFjZS5jby9jaGF0L2xvZ2luL2NhbGxiYWNrIn0sInNpZ25hdHVyZSI6IjI0ZWNiNDRlYzlkOWIwYzJhN2E3NzJjNmJmNWMxZWFiMDVlNWEyZGFhZWQxNjA5ZTBmYjAwODVhNTUzNTc3OTMifQ%3D%3D",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/oauth/authorize?client_id=8f1a1d63-479b-46c8-84cb-521fe9f3222f&scope=openid%20profile%20inference-api&response_type=code&redirect_uri=https%3A%2F%2Fhuggingface.co%2Fchat%2Flogin%2Fcallback&state=eyJkYXRhIjp7ImV4cGlyYXRpb24iOjE3MzMzNjEzNTg5NjEsInJlZGlyZWN0VXJsIjoiaHR0cHM6Ly9odWdnaW5nZmFjZS5jby9jaGF0L2xvZ2luL2NhbGxiYWNrIn0sInNpZ25hdHVyZSI6IjI0ZWNiNDRlYzlkOWIwYzJhN2E3NzJjNmJmNWMxZWFiMDVlNWEyZGFhZWQxNjA5ZTBmYjAwODVhNTUzNTc3OTMifQ%3D%3D"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "cache-control",
              "value": "max-age=0"
            },
            {
              "name": "priority",
              "value": "u=0, i"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/chat/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "document"
            },
            {
              "name": "sec-fetch-mode",
              "value": "navigate"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "sec-fetch-user",
              "value": "?1"
            },
            {
              "name": "upgrade-insecure-requests",
              "value": "1"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [
            {
              "name": "client_id",
              "value": "8f1a1d63-479b-46c8-84cb-521fe9f3222f"
            },
            {
              "name": "scope",
              "value": "openid%20profile%20inference-api"
            },
            {
              "name": "response_type",
              "value": "code"
            },
            {
              "name": "redirect_uri",
              "value": "https%3A%2F%2Fhuggingface.co%2Fchat%2Flogin%2Fcallback"
            },
            {
              "name": "state",
              "value": "eyJkYXRhIjp7ImV4cGlyYXRpb24iOjE3MzMzNjEzNTg5NjEsInJlZGlyZWN0VXJsIjoiaHR0cHM6Ly9odWdnaW5nZmFjZS5jby9jaGF0L2xvZ2luL2NhbGxiYWNrIn0sInNpZ25hdHVyZSI6IjI0ZWNiNDRlYzlkOWIwYzJhN2E3NzJjNmJmNWMxZWFiMDVlNWEyZGFhZWQxNjA5ZTBmYjAwODVhNTUzNTc3OTMifQ%3D%3D"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 303,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "content-length",
              "value": "348"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "cross-origin-opener-policy",
              "value": "same-origin"
            },
            {
              "name": "date",
              "value": "Thu, 05 Dec 2024 00:15:59 GMT"
            },
            {
              "name": "location",
              "value": "https://huggingface.co/chat/login/callback?code=FunKSiKTBJAsAClj&state=eyJkYXRhIjp7ImV4cGlyYXRpb24iOjE3MzMzNjEzNTg5NjEsInJlZGlyZWN0VXJsIjoiaHR0cHM6Ly9odWdnaW5nZmFjZS5jby9jaGF0L2xvZ2luL2NhbGxiYWNrIn0sInNpZ25hdHVyZSI6IjI0ZWNiNDRlYzlkOWIwYzJhN2E3NzJjNmJmNWMxZWFiMDVlNWEyZGFhZWQxNjA5ZTBmYjAwODVhNTUzNTc3OTMifQ%3D%3D"
            },
            {
              "name": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "name": "vary",
              "value": "Accept"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "Hl51CA4VRAzNp7mIm0-Y8iHVAJH_2Vlwdn_YaZgaTQN4hfIWZ0a3TA=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Miss from cloudfront"
            },
            {
              "name": "x-powered-by",
              "value": "huggingface-moon"
            },
            {
              "name": "x-request-id",
              "value": "Root=1-6750f0bf-586ebd8536e03e78330ad84f"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "text/html"
          },
          "redirectURL": "https://huggingface.co/chat/login/callback?code=FunKSiKTBJAsAClj&state=eyJkYXRhIjp7ImV4cGlyYXRpb24iOjE3MzMzNjEzNTg5NjEsInJlZGlyZWN0VXJsIjoiaHR0cHM6Ly9odWdnaW5nZmFjZS5jby9jaGF0L2xvZ2luL2NhbGxiYWNrIn0sInNpZ25hdHVyZSI6IjI0ZWNiNDRlYzlkOWIwYzJhN2E3NzJjNmJmNWMxZWFiMDVlNWEyZGFhZWQxNjA5ZTBmYjAwODVhNTUzNTc3OTMifQ%3D%3D",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 979,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:57.977Z",
        "time": 219.92299999692477,
        "timings": {
          "blocked": 2.2730000009667126,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.2929999999999999,
          "wait": 214.21899999592267,
          "receive": 3.1380000000353903,
          "_blocked_queueing": 1.0130000009667128,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "other"
        },
        "_priority": "VeryHigh",
        "_resourceType": "document",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/login/callback?code=FunKSiKTBJAsAClj&state=eyJkYXRhIjp7ImV4cGlyYXRpb24iOjE3MzMzNjEzNTg5NjEsInJlZGlyZWN0VXJsIjoiaHR0cHM6Ly9odWdnaW5nZmFjZS5jby9jaGF0L2xvZ2luL2NhbGxiYWNrIn0sInNpZ25hdHVyZSI6IjI0ZWNiNDRlYzlkOWIwYzJhN2E3NzJjNmJmNWMxZWFiMDVlNWEyZGFhZWQxNjA5ZTBmYjAwODVhNTUzNTc3OTMifQ%3D%3D",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/chat/login/callback?code=FunKSiKTBJAsAClj&state=eyJkYXRhIjp7ImV4cGlyYXRpb24iOjE3MzMzNjEzNTg5NjEsInJlZGlyZWN0VXJsIjoiaHR0cHM6Ly9odWdnaW5nZmFjZS5jby9jaGF0L2xvZ2luL2NhbGxiYWNrIn0sInNpZ25hdHVyZSI6IjI0ZWNiNDRlYzlkOWIwYzJhN2E3NzJjNmJmNWMxZWFiMDVlNWEyZGFhZWQxNjA5ZTBmYjAwODVhNTUzNTc3OTMifQ%3D%3D"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "cache-control",
              "value": "max-age=0"
            },
            {
              "name": "priority",
              "value": "u=0, i"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/chat/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "document"
            },
            {
              "name": "sec-fetch-mode",
              "value": "navigate"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "sec-fetch-user",
              "value": "?1"
            },
            {
              "name": "upgrade-insecure-requests",
              "value": "1"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [
            {
              "name": "code",
              "value": "FunKSiKTBJAsAClj"
            },
            {
              "name": "state",
              "value": "eyJkYXRhIjp7ImV4cGlyYXRpb24iOjE3MzMzNjEzNTg5NjEsInJlZGlyZWN0VXJsIjoiaHR0cHM6Ly9odWdnaW5nZmFjZS5jby9jaGF0L2xvZ2luL2NhbGxiYWNrIn0sInNpZ25hdHVyZSI6IjI0ZWNiNDRlYzlkOWIwYzJhN2E3NzJjNmJmNWMxZWFiMDVlNWEyZGFhZWQxNjA5ZTBmYjAwODVhNTUzNTc3OTMifQ%3D%3D"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 302,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "content-security-policy",
              "value": "frame-ancestors 'none';"
            },
            {
              "name": "date",
              "value": "Thu, 05 Dec 2024 00:15:59 GMT"
            },
            {
              "name": "location",
              "value": "/chat/"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "6FSyaWkMW0ajEe1-NPWVP6jMJe4GhUu1umRUgvwXyMDMgtO1cFuS6A=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Miss from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "x-unknown"
          },
          "redirectURL": "/chat/",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 355,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.197Z",
        "time": 260.12800000899006,
        "timings": {
          "blocked": 2.52399999859184,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.29600000000000004,
          "wait": 253.76899999830127,
          "receive": 3.539000012096949,
          "_blocked_queueing": 0.9629999985918403,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "other"
        },
        "_priority": "VeryHigh",
        "_resourceType": "document",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/chat/"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "cache-control",
              "value": "max-age=0"
            },
            {
              "name": "priority",
              "value": "u=0, i"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/chat/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "document"
            },
            {
              "name": "sec-fetch-mode",
              "value": "navigate"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "sec-fetch-user",
              "value": "?1"
            },
            {
              "name": "upgrade-insecure-requests",
              "value": "1"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "content-security-policy",
              "value": "frame-ancestors 'none';"
            },
            {
              "name": "content-type",
              "value": "text/html"
            },
            {
              "name": "date",
              "value": "Thu, 05 Dec 2024 00:15:59 GMT"
            },
            {
              "name": "link",
              "value": "</chat/_app/immutable/assets/0.DL0hXqfB.css>; rel=\"preload\";as=\"style\"; nopush, </chat/_app/immutable/assets/pendingMessage.Cv82MC_y.css>; rel=\"preload\";as=\"style\"; nopush, </chat/_app/immutable/entry/start.BRybKgr3.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/entry.CNbBV9gi.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/scheduler.CeakrPJD.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/control.CYgJF_JY.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/entry/app.DEpQDNs9.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/13.Wxvm8eoO.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/index.Cljt5KuQ.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/nodes/0.QS2KVdeN.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/stores.BBDoy_q4.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/public.BItpSmwI.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/cookiesAreEnabled.CmuqkX8M.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/isDesktop.Bkn--V8t.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/settings.qWXPmYFi.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/titleUpdate.CtC19nZI.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/index.Bq3K2eeF.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/await_block.B9GGS9dX.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/each.BIi1aKAa.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/checkmark.DA-eCoqi.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/trash-can.Co0XsrUS.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/close.CsMZUCB4.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/Modal.BkbMR74H.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/nodes/6.YukEGq_p.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/Tool.aW5GZKd4.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/Switch.DLwPPHY0.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/clickOutside.D-5j4fJ8.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/isHuggingChat.DRo1Q1X0.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/image.BBvJllls.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/models.BNqoyBuH.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/user-multiple.Mj9PndoY.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/IconInternet.BkJSosd-.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/tools.DNRAFGSA.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/CopyToClipBoardBtn.BlbrNBhY.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/pen.Dy7UR-Ba.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/forms.J3xl8G-J.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/_commonjsHelpers.Cpj98o6Y.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/marked.esm.LTwExiil.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/arrow-up-right.Dl9l-gxp.js>; rel=\"modulepreload\"; nopush, </chat/_app/immutable/chunks/code.Dqet6oxH.js>; rel=\"modulepreload\"; nopush"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "JFGOF91O8EplmvGWpRLcap2kDWYMEt3IesxucAmr7A9F5LyBZJ-38w=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Miss from cloudfront"
            },
            {
              "name": "x-sveltekit-page",
              "value": "true"
            }
          ],
          "cookies": [],
          "content": {
            "size": 54831,
            "mimeType": "text/html",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 57734,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.457Z",
        "time": 357.33099999197293,
        "timings": {
          "blocked": 4.161999995383434,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.2759999999999998,
          "wait": 242.56199999309146,
          "receive": 110.33100000349805,
          "_blocked_queueing": 1.017999995383434,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "VeryHigh",
        "_resourceType": "stylesheet",
        "cache": {},
        "connection": "2628",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/assets/0.DL0hXqfB.css",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": "https://huggingface.co/chat/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"11302-1733326797000\""
            },
            {
              "name": "age",
              "value": "30318"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "11302"
            },
            {
              "name": "x-amz-cf-id",
              "value": "C-UVZ1plb6cezgUCUhrxR5UfY-iVJmlkZa01nlALfCUmGTvLKx8zFQ=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:41 GMT"
            },
            {
              "name": "content-type",
              "value": "text/css"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 84487,
            "mimeType": "text/css",
            "text": "pre code.hljs{display:block;overflow-x:auto;padding:1em}code.hljs{padding:3px 5px}.hljs{color:#abb2bf;background:#282c34}.hljs-comment,.hljs-quote{color:#5c6370;font-style:italic}.hljs-doctag,.hljs-keyword,.hljs-formula{color:#c678dd}.hljs-section,.hljs-name,.hljs-selector-tag,.hljs-deletion,.hljs-subst{color:#e06c75}.hljs-literal{color:#56b6c2}.hljs-string,.hljs-regexp,.hljs-addition,.hljs-attribute,.hljs-meta .hljs-string{color:#98c379}.hljs-attr,.hljs-variable,.hljs-template-variable,.hljs-type,.hljs-selector-class,.hljs-selector-attr,.hljs-selector-pseudo,.hljs-number{color:#d19a66}.hljs-symbol,.hljs-bullet,.hljs-link,.hljs-meta,.hljs-selector-id,.hljs-title{color:#61aeee}.hljs-built_in,.hljs-title.class_,.hljs-class .hljs-title{color:#e6c07b}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:700}.hljs-link{text-decoration:underline}*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: \"\"}html,:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",Segoe UI Symbol,\"Noto Color Emoji\";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*{scrollbar-color:initial;scrollbar-width:initial}*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }.prose{color:var(--tw-prose-body);max-width:65ch}.prose :where(p):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.25em;margin-bottom:1.25em}.prose :where([class~=lead]):not(:where([class~=not-prose],[class~=not-prose] *)){color:var(--tw-prose-lead);font-size:1.25em;line-height:1.6;margin-top:1.2em;margin-bottom:1.2em}.prose :where(a):not(:where([class~=not-prose],[class~=not-prose] *)){color:var(--tw-prose-links);text-decoration:underline;font-weight:500}.prose :where(strong):not(:where([class~=not-prose],[class~=not-prose] *)){color:var(--tw-prose-bold);font-weight:600}.prose :where(a strong):not(:where([class~=not-prose],[class~=not-prose] *)){color:inherit}.prose :where(blockquote strong):not(:where([class~=not-prose],[class~=not-prose] *)){color:inherit}.prose :where(thead th strong):not(:where([class~=not-prose],[class~=not-prose] *)){color:inherit}.prose :where(ol):not(:where([class~=not-prose],[class~=not-prose] *)){list-style-type:decimal;margin-top:1.25em;margin-bottom:1.25em;padding-inline-start:1.625em}.prose :where(ol[type=A]):not(:where([class~=not-prose],[class~=not-prose] *)){list-style-type:upper-alpha}.prose :where(ol[type=a]):not(:where([class~=not-prose],[class~=not-prose] *)){list-style-type:lower-alpha}.prose :where(ol[type=A s]):not(:where([class~=not-prose],[class~=not-prose] *)){list-style-type:upper-alpha}.prose :where(ol[type=a s]):not(:where([class~=not-prose],[class~=not-prose] *)){list-style-type:lower-alpha}.prose :where(ol[type=I]):not(:where([class~=not-prose],[class~=not-prose] *)){list-style-type:upper-roman}.prose :where(ol[type=i]):not(:where([class~=not-prose],[class~=not-prose] *)){list-style-type:lower-roman}.prose :where(ol[type=I s]):not(:where([class~=not-prose],[class~=not-prose] *)){list-style-type:upper-roman}.prose :where(ol[type=i s]):not(:where([class~=not-prose],[class~=not-prose] *)){list-style-type:lower-roman}.prose :where(ol[type=\"1\"]):not(:where([class~=not-prose],[class~=not-prose] *)){list-style-type:decimal}.prose :where(ul):not(:where([class~=not-prose],[class~=not-prose] *)){list-style-type:disc;margin-top:1.25em;margin-bottom:1.25em;padding-inline-start:1.625em}.prose :where(ol>li):not(:where([class~=not-prose],[class~=not-prose] *))::marker{font-weight:400;color:var(--tw-prose-counters)}.prose :where(ul>li):not(:where([class~=not-prose],[class~=not-prose] *))::marker{color:var(--tw-prose-bullets)}.prose :where(dt):not(:where([class~=not-prose],[class~=not-prose] *)){color:var(--tw-prose-headings);font-weight:600;margin-top:1.25em}.prose :where(hr):not(:where([class~=not-prose],[class~=not-prose] *)){border-color:var(--tw-prose-hr);border-top-width:1px;margin-top:3em;margin-bottom:3em}.prose :where(blockquote):not(:where([class~=not-prose],[class~=not-prose] *)){font-weight:500;font-style:italic;color:var(--tw-prose-quotes);border-inline-start-width:.25rem;border-inline-start-color:var(--tw-prose-quote-borders);quotes:\"“\"\"”\"\"‘\"\"’\";margin-top:1.6em;margin-bottom:1.6em;padding-inline-start:1em}.prose :where(blockquote p:first-of-type):not(:where([class~=not-prose],[class~=not-prose] *)):before{content:open-quote}.prose :where(blockquote p:last-of-type):not(:where([class~=not-prose],[class~=not-prose] *)):after{content:close-quote}.prose :where(h1):not(:where([class~=not-prose],[class~=not-prose] *)){color:var(--tw-prose-headings);font-weight:800;font-size:2.25em;margin-top:0;margin-bottom:.8888889em;line-height:1.1111111}.prose :where(h1 strong):not(:where([class~=not-prose],[class~=not-prose] *)){font-weight:900;color:inherit}.prose :where(h2):not(:where([class~=not-prose],[class~=not-prose] *)){color:var(--tw-prose-headings);font-weight:700;font-size:1.5em;margin-top:2em;margin-bottom:1em;line-height:1.3333333}.prose :where(h2 strong):not(:where([class~=not-prose],[class~=not-prose] *)){font-weight:800;color:inherit}.prose :where(h3):not(:where([class~=not-prose],[class~=not-prose] *)){color:var(--tw-prose-headings);font-weight:600;font-size:1.25em;margin-top:1.6em;margin-bottom:.6em;line-height:1.6}.prose :where(h3 strong):not(:where([class~=not-prose],[class~=not-prose] *)){font-weight:700;color:inherit}.prose :where(h4):not(:where([class~=not-prose],[class~=not-prose] *)){color:var(--tw-prose-headings);font-weight:600;margin-top:1.5em;margin-bottom:.5em;line-height:1.5}.prose :where(h4 strong):not(:where([class~=not-prose],[class~=not-prose] *)){font-weight:700;color:inherit}.prose :where(img):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:2em;margin-bottom:2em}.prose :where(picture):not(:where([class~=not-prose],[class~=not-prose] *)){display:block;margin-top:2em;margin-bottom:2em}.prose :where(video):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:2em;margin-bottom:2em}.prose :where(kbd):not(:where([class~=not-prose],[class~=not-prose] *)){font-weight:500;font-family:inherit;color:var(--tw-prose-kbd);box-shadow:0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),0 3px rgb(var(--tw-prose-kbd-shadows) / 10%);font-size:.875em;border-radius:.3125rem;padding-top:.1875em;padding-inline-end:.375em;padding-bottom:.1875em;padding-inline-start:.375em}.prose :where(code):not(:where([class~=not-prose],[class~=not-prose] *)){color:var(--tw-prose-code);font-weight:600;font-size:.875em}.prose :where(code):not(:where([class~=not-prose],[class~=not-prose] *)):before{content:\"`\"}.prose :where(code):not(:where([class~=not-prose],[class~=not-prose] *)):after{content:\"`\"}.prose :where(a code):not(:where([class~=not-prose],[class~=not-prose] *)){color:inherit}.prose :where(h1 code):not(:where([class~=not-prose],[class~=not-prose] *)){color:inherit}.prose :where(h2 code):not(:where([class~=not-prose],[class~=not-prose] *)){color:inherit;font-size:.875em}.prose :where(h3 code):not(:where([class~=not-prose],[class~=not-prose] *)){color:inherit;font-size:.9em}.prose :where(h4 code):not(:where([class~=not-prose],[class~=not-prose] *)){color:inherit}.prose :where(blockquote code):not(:where([class~=not-prose],[class~=not-prose] *)){color:inherit}.prose :where(thead th code):not(:where([class~=not-prose],[class~=not-prose] *)){color:inherit}.prose :where(pre):not(:where([class~=not-prose],[class~=not-prose] *)){color:var(--tw-prose-pre-code);background-color:var(--tw-prose-pre-bg);overflow-x:auto;font-weight:400;font-size:.875em;line-height:1.7142857;margin-top:1.7142857em;margin-bottom:1.7142857em;border-radius:.375rem;padding-top:.8571429em;padding-inline-end:1.1428571em;padding-bottom:.8571429em;padding-inline-start:1.1428571em}.prose :where(pre code):not(:where([class~=not-prose],[class~=not-prose] *)){background-color:transparent;border-width:0;border-radius:0;padding:0;font-weight:inherit;color:inherit;font-size:inherit;font-family:inherit;line-height:inherit}.prose :where(pre code):not(:where([class~=not-prose],[class~=not-prose] *)):before{content:none}.prose :where(pre code):not(:where([class~=not-prose],[class~=not-prose] *)):after{content:none}.prose :where(table):not(:where([class~=not-prose],[class~=not-prose] *)){width:100%;table-layout:auto;margin-top:2em;margin-bottom:2em;font-size:.875em;line-height:1.7142857}.prose :where(thead):not(:where([class~=not-prose],[class~=not-prose] *)){border-bottom-width:1px;border-bottom-color:var(--tw-prose-th-borders)}.prose :where(thead th):not(:where([class~=not-prose],[class~=not-prose] *)){color:var(--tw-prose-headings);font-weight:600;vertical-align:bottom;padding-inline-end:.5714286em;padding-bottom:.5714286em;padding-inline-start:.5714286em}.prose :where(tbody tr):not(:where([class~=not-prose],[class~=not-prose] *)){border-bottom-width:1px;border-bottom-color:var(--tw-prose-td-borders)}.prose :where(tbody tr:last-child):not(:where([class~=not-prose],[class~=not-prose] *)){border-bottom-width:0}.prose :where(tbody td):not(:where([class~=not-prose],[class~=not-prose] *)){vertical-align:baseline}.prose :where(tfoot):not(:where([class~=not-prose],[class~=not-prose] *)){border-top-width:1px;border-top-color:var(--tw-prose-th-borders)}.prose :where(tfoot td):not(:where([class~=not-prose],[class~=not-prose] *)){vertical-align:top}.prose :where(th,td):not(:where([class~=not-prose],[class~=not-prose] *)){text-align:start}.prose :where(figure>*):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:0;margin-bottom:0}.prose :where(figcaption):not(:where([class~=not-prose],[class~=not-prose] *)){color:var(--tw-prose-captions);font-size:.875em;line-height:1.4285714;margin-top:.8571429em}.prose{--tw-prose-body: #374151;--tw-prose-headings: #111827;--tw-prose-lead: #4b5563;--tw-prose-links: #111827;--tw-prose-bold: #111827;--tw-prose-counters: #6b7280;--tw-prose-bullets: #d1d5db;--tw-prose-hr: #e5e7eb;--tw-prose-quotes: #111827;--tw-prose-quote-borders: #e5e7eb;--tw-prose-captions: #6b7280;--tw-prose-kbd: #111827;--tw-prose-kbd-shadows: 17 24 39;--tw-prose-code: #111827;--tw-prose-pre-code: #e5e7eb;--tw-prose-pre-bg: #1f2937;--tw-prose-th-borders: #d1d5db;--tw-prose-td-borders: #e5e7eb;--tw-prose-invert-body: #d1d5db;--tw-prose-invert-headings: #fff;--tw-prose-invert-lead: #9ca3af;--tw-prose-invert-links: #fff;--tw-prose-invert-bold: #fff;--tw-prose-invert-counters: #9ca3af;--tw-prose-invert-bullets: #4b5563;--tw-prose-invert-hr: #374151;--tw-prose-invert-quotes: #f3f4f6;--tw-prose-invert-quote-borders: #374151;--tw-prose-invert-captions: #9ca3af;--tw-prose-invert-kbd: #fff;--tw-prose-invert-kbd-shadows: 255 255 255;--tw-prose-invert-code: #fff;--tw-prose-invert-pre-code: #d1d5db;--tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);--tw-prose-invert-th-borders: #4b5563;--tw-prose-invert-td-borders: #374151;font-size:1rem;line-height:1.75}.prose :where(picture>img):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:0;margin-bottom:0}.prose :where(li):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:.5em;margin-bottom:.5em}.prose :where(ol>li):not(:where([class~=not-prose],[class~=not-prose] *)){padding-inline-start:.375em}.prose :where(ul>li):not(:where([class~=not-prose],[class~=not-prose] *)){padding-inline-start:.375em}.prose :where(.prose>ul>li p):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:.75em;margin-bottom:.75em}.prose :where(.prose>ul>li>p:first-child):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.25em}.prose :where(.prose>ul>li>p:last-child):not(:where([class~=not-prose],[class~=not-prose] *)){margin-bottom:1.25em}.prose :where(.prose>ol>li>p:first-child):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.25em}.prose :where(.prose>ol>li>p:last-child):not(:where([class~=not-prose],[class~=not-prose] *)){margin-bottom:1.25em}.prose :where(ul ul,ul ol,ol ul,ol ol):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:.75em;margin-bottom:.75em}.prose :where(dl):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.25em;margin-bottom:1.25em}.prose :where(dd):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:.5em;padding-inline-start:1.625em}.prose :where(hr+*):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:0}.prose :where(h2+*):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:0}.prose :where(h3+*):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:0}.prose :where(h4+*):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:0}.prose :where(thead th:first-child):not(:where([class~=not-prose],[class~=not-prose] *)){padding-inline-start:0}.prose :where(thead th:last-child):not(:where([class~=not-prose],[class~=not-prose] *)){padding-inline-end:0}.prose :where(tbody td,tfoot td):not(:where([class~=not-prose],[class~=not-prose] *)){padding-top:.5714286em;padding-inline-end:.5714286em;padding-bottom:.5714286em;padding-inline-start:.5714286em}.prose :where(tbody td:first-child,tfoot td:first-child):not(:where([class~=not-prose],[class~=not-prose] *)){padding-inline-start:0}.prose :where(tbody td:last-child,tfoot td:last-child):not(:where([class~=not-prose],[class~=not-prose] *)){padding-inline-end:0}.prose :where(figure):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:2em;margin-bottom:2em}.prose :where(.prose>:first-child):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:0}.prose :where(.prose>:last-child):not(:where([class~=not-prose],[class~=not-prose] *)){margin-bottom:0}.btn{display:inline-flex;flex-shrink:0;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;align-items:center;justify-content:center;white-space:nowrap;outline:2px solid transparent;outline-offset:2px;transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.btn:focus{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.btn:disabled{cursor:default}.pointer-events-none{pointer-events:none}.pointer-events-auto{pointer-events:auto}.visible{visibility:visible}.invisible{visibility:hidden}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.sticky{position:sticky}.inset-0{top:0;right:0;bottom:0;left:0}.inset-x-0{left:0;right:0}.inset-y-0{top:0;bottom:0}.-bottom-4{bottom:-1rem}.-bottom-6{bottom:-1.5rem}.-right-2{right:-.5rem}.-top-16{top:-4rem}.-top-2{top:-.5rem}.-top-20{top:-5rem}.-top-6{top:-1.5rem}.bottom-0{bottom:0}.bottom-10{bottom:2.5rem}.bottom-2{bottom:.5rem}.bottom-4{bottom:1rem}.bottom-6{bottom:1.5rem}.bottom-full{bottom:100%}.left-0{left:0}.left-1\\/2{left:50%}.left-2{left:.5rem}.left-3{left:.75rem}.left-\\[290px\\]{left:290px}.right-0{right:0}.right-2{right:.5rem}.right-3{right:.75rem}.right-4{right:1rem}.right-8{right:2rem}.top-0{top:0}.top-1\\/2{top:50%}.top-12{top:3rem}.top-2{top:.5rem}.top-3{top:.75rem}.top-3\\.5{top:.875rem}.top-4{top:1rem}.top-6{top:1.5rem}.top-full{top:100%}.z-0{z-index:0}.z-10{z-index:10}.z-20{z-index:20}.z-30{z-index:30}.z-40{z-index:40}.col-span-1{grid-column:span 1 / span 1}.col-span-2{grid-column:span 2 / span 2}.-m-1{margin:-.25rem}.m-0{margin:0}.m-1{margin:.25rem}.m-2{margin:.5rem}.-mx-8{margin-left:-2rem;margin-right:-2rem}.mx-1{margin-left:.25rem;margin-right:.25rem}.mx-1\\.5{margin-left:.375rem;margin-right:.375rem}.mx-auto{margin-left:auto;margin-right:auto}.my-1{margin-top:.25rem;margin-bottom:.25rem}.my-2{margin-top:.5rem;margin-bottom:.5rem}.my-2\\.5{margin-top:.625rem;margin-bottom:.625rem}.my-4{margin-top:1rem;margin-bottom:1rem}.my-auto{margin-top:auto;margin-bottom:auto}.-mb-1{margin-bottom:-.25rem}.-mb-4{margin-bottom:-1rem}.-ml-1{margin-left:-.25rem}.-ml-1\\.5{margin-left:-.375rem}.-ml-3{margin-left:-.75rem}.-mr-3{margin-right:-.75rem}.-mt-1{margin-top:-.25rem}.-mt-1\\.5{margin-top:-.375rem}.-mt-24{margin-top:-6rem}.mb-1{margin-bottom:.25rem}.mb-1\\.5{margin-bottom:.375rem}.mb-12{margin-bottom:3rem}.mb-2{margin-bottom:.5rem}.mb-20{margin-bottom:5rem}.mb-3{margin-bottom:.75rem}.mb-4{margin-bottom:1rem}.mb-5{margin-bottom:1.25rem}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.ml-0{margin-left:0}.ml-0\\.5{margin-left:.125rem}.ml-1{margin-left:.25rem}.ml-1\\.5{margin-left:.375rem}.ml-10{margin-left:2.5rem}.ml-2{margin-left:.5rem}.ml-3{margin-left:.75rem}.ml-3\\.5{margin-left:.875rem}.ml-auto{margin-left:auto}.mr-1{margin-right:.25rem}.mr-1\\.5{margin-right:.375rem}.mr-2{margin-right:.5rem}.mr-4{margin-right:1rem}.mr-5{margin-right:1.25rem}.mr-auto{margin-right:auto}.mt-0{margin-top:0}.mt-0\\.5{margin-top:.125rem}.mt-1{margin-top:.25rem}.mt-12{margin-top:3rem}.mt-14{margin-top:3.5rem}.mt-2{margin-top:.5rem}.mt-3{margin-top:.75rem}.mt-4{margin-top:1rem}.mt-5{margin-top:1.25rem}.mt-6{margin-top:1.5rem}.mt-7{margin-top:1.75rem}.mt-8{margin-top:2rem}.mt-\\[2px\\]{margin-top:2px}.mt-auto{margin-top:auto}.box-border{box-sizing:border-box}.line-clamp-1{overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1}.line-clamp-2{overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}.line-clamp-4{overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:4}.line-clamp-6{overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:6}.block{display:block}.inline-block{display:inline-block}.inline{display:inline}.flex{display:flex}.inline-flex{display:inline-flex}.table{display:table}.grid{display:grid}.inline-grid{display:inline-grid}.contents{display:contents}.hidden{display:none}.aspect-auto{aspect-ratio:auto}.aspect-square{aspect-ratio:1 / 1}.size-10{width:2.5rem;height:2.5rem}.size-12{width:3rem;height:3rem}.size-14{width:3.5rem;height:3.5rem}.size-16{width:4rem;height:4rem}.size-24{width:6rem;height:6rem}.size-4{width:1rem;height:1rem}.size-48{width:12rem;height:12rem}.size-5{width:1.25rem;height:1.25rem}.size-6{width:1.5rem;height:1.5rem}.size-8{width:2rem;height:2rem}.size-\\[21px\\]{width:21px;height:21px}.size-\\[22px\\]{width:22px;height:22px}.h-0{height:0px}.h-1{height:.25rem}.h-10{height:2.5rem}.h-12{height:3rem}.h-14{height:3.5rem}.h-16{height:4rem}.h-2{height:.5rem}.h-28{height:7rem}.h-3{height:.75rem}.h-3\\.5{height:.875rem}.h-4{height:1rem}.h-40{height:10rem}.h-48{height:12rem}.h-5{height:1.25rem}.h-6{height:1.5rem}.h-64{height:16rem}.h-7{height:1.75rem}.h-8{height:2rem}.h-9{height:2.25rem}.h-\\[1\\.14em\\]{height:1.14em}.h-\\[1\\.25rem\\]{height:1.25rem}.h-\\[2\\.4rem\\]{height:2.4rem}.h-\\[200px\\]{height:200px}.h-\\[30px\\]{height:30px}.h-\\[34px\\]{height:34px}.h-\\[41px\\]{height:41px}.h-\\[648px\\]{height:648px}.h-\\[95dvh\\]{height:95dvh}.h-dvh{height:100dvh}.h-fit{height:-moz-fit-content;height:fit-content}.h-full{height:100%}.h-max{height:-moz-max-content;height:max-content}.h-px{height:1px}.max-h-48{max-height:12rem}.max-h-\\[240px\\]{max-height:240px}.max-h-\\[90dvh\\]{max-height:90dvh}.max-h-screen{max-height:100vh}.min-h-0{min-height:0px}.min-h-8{min-height:2rem}.min-h-\\[420px\\]{min-height:420px}.min-h-\\[8lh\\]{min-height:8lh}.min-h-\\[calc\\(2rem\\+theme\\(spacing\\[3\\.5\\]\\)\\*2\\)\\]{min-height:3.75rem}.w-0{width:0px}.w-1{width:.25rem}.w-12{width:3rem}.w-20{width:5rem}.w-24{width:6rem}.w-3{width:.75rem}.w-3\\.5{width:.875rem}.w-4{width:1rem}.w-4\\/5{width:80%}.w-40{width:10rem}.w-48{width:12rem}.w-5{width:1.25rem}.w-6{width:1.5rem}.w-64{width:16rem}.w-7{width:1.75rem}.w-72{width:18rem}.w-8{width:2rem}.w-9{width:2.25rem}.w-\\[1\\.14em\\]{width:1.14em}.w-\\[1\\.1875rem\\]{width:1.1875rem}.w-\\[41px\\]{width:41px}.w-\\[90dvw\\]{width:90dvw}.w-\\[calc\\(100\\%\\+1rem\\)\\]{width:calc(100% + 1rem)}.w-fit{width:-moz-fit-content;width:fit-content}.w-full{width:100%}.w-max{width:-moz-max-content;width:max-content}.w-min{width:-moz-min-content;width:min-content}.w-screen{width:100vw}.min-w-0{min-width:0px}.min-w-64{min-width:16rem}.min-w-72{min-width:18rem}.min-w-\\[60px\\]{min-width:60px}.min-w-\\[80dvw\\]{min-width:80dvw}.max-w-2xl{max-width:42rem}.max-w-3xl{max-width:48rem}.max-w-4xl{max-width:56rem}.max-w-\\[540px\\]{max-width:540px}.max-w-full{max-width:100%}.max-w-lg{max-width:32rem}.max-w-none{max-width:none}.max-w-sm{max-width:24rem}.flex-1{flex:1 1 0%}.flex-none{flex:none}.shrink{flex-shrink:1}.shrink-0{flex-shrink:0}.flex-grow{flex-grow:1}.-translate-x-1\\/2{--tw-translate-x: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.-translate-y-1\\/2{--tw-translate-y: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-y-2{--tw-translate-y: .5rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-180{--tw-rotate: 180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.scale-110{--tw-scale-x: 1.1;--tw-scale-y: 1.1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.scale-50{--tw-scale-x: .5;--tw-scale-y: .5;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}@keyframes bounce{0%,to{transform:translateY(-25%);animation-timing-function:cubic-bezier(.8,0,1,1)}50%{transform:none;animation-timing-function:cubic-bezier(0,0,.2,1)}}.animate-bounce{animation:bounce 1s infinite}.animate-pulse{animation:pulse 2s cubic-bezier(.4,0,.6,1) infinite}.cursor-pointer{cursor:pointer}.select-none{-webkit-user-select:none;-moz-user-select:none;user-select:none}.resize-none{resize:none}.resize-y{resize:vertical}.resize{resize:both}.scroll-p-3{scroll-padding:.75rem}.list-none{list-style-type:none}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.grid-cols-\\[40px\\,1fr\\,24px\\]{grid-template-columns:40px 1fr 24px}.grid-rows-\\[auto\\,1fr\\,auto\\]{grid-template-rows:auto 1fr auto}.grid-rows-\\[auto\\,1fr\\]{grid-template-rows:auto 1fr}.grid-rows-\\[auto\\,auto\\,1fr\\,auto\\]{grid-template-rows:auto auto 1fr auto}.flex-row{flex-direction:row}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.place-content-center{place-content:center}.place-items-center{place-items:center}.content-center{align-content:center}.content-start{align-content:flex-start}.content-between{align-content:space-between}.items-start{align-items:flex-start}.items-center{align-items:center}.items-baseline{align-items:baseline}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.gap-1{gap:.25rem}.gap-1\\.5{gap:.375rem}.gap-2{gap:.5rem}.gap-2\\.5{gap:.625rem}.gap-3{gap:.75rem}.gap-4{gap:1rem}.gap-5{gap:1.25rem}.gap-6{gap:1.5rem}.gap-8{gap:2rem}.gap-x-2{-moz-column-gap:.5rem;column-gap:.5rem}.gap-x-4{-moz-column-gap:1rem;column-gap:1rem}.gap-x-5{-moz-column-gap:1.25rem;column-gap:1.25rem}.gap-x-6{-moz-column-gap:1.5rem;column-gap:1.5rem}.gap-y-1{row-gap:.25rem}.gap-y-1\\.5{row-gap:.375rem}.gap-y-2{row-gap:.5rem}.gap-y-3{row-gap:.75rem}.-space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(-.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(-.25rem * var(--tw-space-y-reverse))}.space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}.self-start{align-self:flex-start}.self-end{align-self:flex-end}.self-stretch{align-self:stretch}.overflow-auto{overflow:auto}.overflow-hidden{overflow:hidden}.overflow-clip{overflow:clip}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-y-hidden{overflow-y:hidden}.overflow-x-clip{overflow-x:clip}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-clip{text-overflow:clip}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.whitespace-break-spaces{white-space:break-spaces}.text-wrap{text-wrap:wrap}.text-balance{text-wrap:balance}.break-words{overflow-wrap:break-word}.break-all{word-break:break-all}.\\!rounded-md{border-radius:.375rem!important}.rounded{border-radius:.25rem}.rounded-2xl{border-radius:1rem}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:.5rem}.rounded-md{border-radius:.375rem}.rounded-sm{border-radius:.125rem}.rounded-xl{border-radius:.75rem}.rounded-b-none{border-bottom-right-radius:0;border-bottom-left-radius:0}.rounded-r-xl{border-top-right-radius:.75rem;border-bottom-right-radius:.75rem}.border{border-width:1px}.border-0{border-width:0px}.border-2{border-width:2px}.border-4{border-width:4px}.border-b{border-bottom-width:1px}.border-l{border-left-width:1px}.border-t{border-top-width:1px}.border-t-0{border-top-width:0px}.border-dotted{border-style:dotted}.\\!border-none{border-style:none!important}.border-none{border-style:none}.\\!border-blue-600{--tw-border-opacity: 1 !important;border-color:rgb(37 99 235 / var(--tw-border-opacity))!important}.\\!border-red-500\\/30{border-color:#ef44444d!important}.border-black{--tw-border-opacity: 1;border-color:rgb(0 0 0 / var(--tw-border-opacity))}.border-blue-200{--tw-border-opacity: 1;border-color:rgb(191 219 254 / var(--tw-border-opacity))}.border-blue-500{--tw-border-opacity: 1;border-color:rgb(59 130 246 / var(--tw-border-opacity))}.border-blue-500\\/20{border-color:#3b82f633}.border-blue-700{--tw-border-opacity: 1;border-color:rgb(29 78 216 / var(--tw-border-opacity))}.border-gray-100{--tw-border-opacity: 1;border-color:rgb(243 244 246 / var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity: 1;border-color:rgb(229 231 235 / var(--tw-border-opacity))}.border-gray-300{--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity: 1;border-color:rgb(156 163 175 / var(--tw-border-opacity))}.border-purple-300{--tw-border-opacity: 1;border-color:rgb(216 180 254 / var(--tw-border-opacity))}.border-red-500\\/30{border-color:#ef44444d}.border-transparent{border-color:transparent}.\\!bg-blue-500\\/10{background-color:#3b82f61a!important}.\\!bg-gray-100{--tw-bg-opacity: 1 !important;background-color:rgb(243 244 246 / var(--tw-bg-opacity))!important}.bg-\\[\\#FFA800\\]{--tw-bg-opacity: 1;background-color:rgb(255 168 0 / var(--tw-bg-opacity))}.bg-black{--tw-bg-opacity: 1;background-color:rgb(0 0 0 / var(--tw-bg-opacity))}.bg-black\\/80{background-color:#000c}.bg-blue-100{--tw-bg-opacity: 1;background-color:rgb(219 234 254 / var(--tw-bg-opacity))}.bg-blue-50{--tw-bg-opacity: 1;background-color:rgb(239 246 255 / var(--tw-bg-opacity))}.bg-blue-500\\/10{background-color:#3b82f61a}.bg-blue-500\\/20{background-color:#3b82f633}.bg-blue-500\\/5{background-color:#3b82f60d}.bg-blue-600{--tw-bg-opacity: 1;background-color:rgb(37 99 235 / var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity: 1;background-color:rgb(229 231 235 / var(--tw-bg-opacity))}.bg-gray-300{--tw-bg-opacity: 1;background-color:rgb(209 213 219 / var(--tw-bg-opacity))}.bg-gray-400{--tw-bg-opacity: 1;background-color:rgb(156 163 175 / var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity: 1;background-color:rgb(249 250 251 / var(--tw-bg-opacity))}.bg-gray-50\\/50{background-color:#f9fafb80}.bg-gray-500{--tw-bg-opacity: 1;background-color:rgb(107 114 128 / var(--tw-bg-opacity))}.bg-gray-500\\/20{background-color:#6b728033}.bg-inherit{background-color:inherit}.bg-orange-50{--tw-bg-opacity: 1;background-color:rgb(255 247 237 / var(--tw-bg-opacity))}.bg-purple-100{--tw-bg-opacity: 1;background-color:rgb(243 232 255 / var(--tw-bg-opacity))}.bg-purple-500\\/10{background-color:#a855f71a}.bg-purple-500\\/20{background-color:#a855f733}.bg-purple-500\\/5{background-color:#a855f70d}.bg-purple-600\\/10{background-color:#9333ea1a}.bg-purple-700{--tw-bg-opacity: 1;background-color:rgb(126 34 206 / var(--tw-bg-opacity))}.bg-red-700{--tw-bg-opacity: 1;background-color:rgb(185 28 28 / var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-white{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-white\\/80{background-color:#fffc}.bg-white\\/90{background-color:#ffffffe6}.bg-opacity-50{--tw-bg-opacity: .5 }.bg-gradient-to-b{background-image:linear-gradient(to bottom,var(--tw-gradient-stops))}.bg-gradient-to-bl{background-image:linear-gradient(to bottom left,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-t{background-image:linear-gradient(to top,var(--tw-gradient-stops))}.from-gray-200{--tw-gradient-from: #e5e7eb var(--tw-gradient-from-position);--tw-gradient-to: rgb(229 231 235 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to) }.from-gray-50{--tw-gradient-from: #f9fafb var(--tw-gradient-from-position);--tw-gradient-to: rgb(249 250 251 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to) }.from-gray-500\\/20{--tw-gradient-from: rgb(107 114 128 / .2) var(--tw-gradient-from-position);--tw-gradient-to: rgb(107 114 128 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to) }.from-primary-300{--tw-gradient-from: #fde047 var(--tw-gradient-from-position);--tw-gradient-to: rgb(253 224 71 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to) }.from-primary-500\\/40{--tw-gradient-from: rgb(234 179 8 / .4) var(--tw-gradient-from-position);--tw-gradient-to: rgb(234 179 8 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to) }.from-red-500\\/20{--tw-gradient-from: rgb(239 68 68 / .2) var(--tw-gradient-from-position);--tw-gradient-to: rgb(239 68 68 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to) }.from-white{--tw-gradient-from: #fff var(--tw-gradient-from-position);--tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to) }.via-primary-500\\/10{--tw-gradient-to: rgb(234 179 8 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), rgb(234 179 8 / .1) var(--tw-gradient-via-position), var(--tw-gradient-to) }.via-red-500\\/0{--tw-gradient-to: rgb(239 68 68 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), rgb(239 68 68 / 0) var(--tw-gradient-via-position), var(--tw-gradient-to) }.via-white\\/80{--tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), rgb(255 255 255 / .8) var(--tw-gradient-via-position), var(--tw-gradient-to) }.to-primary-500\\/0{--tw-gradient-to: rgb(234 179 8 / 0) var(--tw-gradient-to-position) }.to-red-500\\/0{--tw-gradient-to: rgb(239 68 68 / 0) var(--tw-gradient-to-position) }.to-white\\/0{--tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position) }.fill-current{fill:currentColor}.fill-primary-500{fill:#eab308}.stroke-gray-600{stroke:#4b5563}.stroke-purple-700{stroke:#7e22ce}.object-cover{-o-object-fit:cover;object-fit:cover}.p-0\\.5{padding:.125rem}.p-1{padding:.25rem}.p-1\\.5{padding:.375rem}.p-2{padding:.5rem}.p-2\\.5{padding:.625rem}.p-3{padding:.75rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-8{padding:2rem}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.\\!py-0{padding-top:0!important;padding-bottom:0!important}.px-1{padding-left:.25rem;padding-right:.25rem}.px-1\\.5{padding-left:.375rem;padding-right:.375rem}.px-2{padding-left:.5rem;padding-right:.5rem}.px-2\\.5{padding-left:.625rem;padding-right:.625rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-3\\.5{padding-left:.875rem;padding-right:.875rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.px-8{padding-left:2rem;padding-right:2rem}.px-\\[0\\.7rem\\]{padding-left:.7rem;padding-right:.7rem}.py-0\\.5{padding-top:.125rem;padding-bottom:.125rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.py-1\\.5{padding-top:.375rem;padding-bottom:.375rem}.py-12{padding-top:3rem;padding-bottom:3rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.py-3{padding-top:.75rem;padding-bottom:.75rem}.py-3\\.5{padding-top:.875rem;padding-bottom:.875rem}.py-4{padding-top:1rem;padding-bottom:1rem}.py-5{padding-top:1.25rem;padding-bottom:1.25rem}.py-6{padding-top:1.5rem;padding-bottom:1.5rem}.pb-10{padding-bottom:2.5rem}.pb-2{padding-bottom:.5rem}.pb-24{padding-bottom:6rem}.pb-3{padding-bottom:.75rem}.pb-36{padding-bottom:9rem}.pb-4{padding-bottom:1rem}.pb-5{padding-bottom:1.25rem}.pb-52{padding-bottom:13rem}.pb-6{padding-bottom:1.5rem}.pb-8{padding-bottom:2rem}.pl-0\\.5{padding-left:.125rem}.pl-1{padding-left:.25rem}.pl-1\\.5{padding-left:.375rem}.pl-2{padding-left:.5rem}.pl-2\\.5{padding-left:.625rem}.pl-3{padding-left:.75rem}.pl-36{padding-left:9rem}.pl-4{padding-left:1rem}.pl-5{padding-left:1.25rem}.pr-1{padding-right:.25rem}.pr-1\\.5{padding-right:.375rem}.pr-16{padding-right:4rem}.pr-2{padding-right:.5rem}.pr-2\\.5{padding-right:.625rem}.pr-3{padding-right:.75rem}.pt-0{padding-top:0}.pt-1{padding-top:.25rem}.pt-10{padding-top:2.5rem}.pt-2{padding-top:.5rem}.pt-3{padding-top:.75rem}.pt-4{padding-top:1rem}.pt-5{padding-top:1.25rem}.pt-6{padding-top:1.5rem}.pt-9{padding-top:2.25rem}.text-left{text-align:left}.text-center{text-align:center}.text-justify{text-align:justify}.align-middle{vertical-align:middle}.font-mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}.font-sans{font-family:ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",Segoe UI Symbol,\"Noto Color Emoji\"}.text-2xl{font-size:1.5rem;line-height:2rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-4xl{font-size:2.25rem;line-height:2.5rem}.text-5xl{font-size:3rem;line-height:1}.text-\\[\\.6rem\\]{font-size:.6rem}.text-\\[\\.7rem\\]{font-size:.7rem}.text-\\[\\.82rem\\]{font-size:.82rem}.text-\\[\\.8rem\\]{font-size:.8rem}.text-\\[\\.9rem\\]{font-size:.9rem}.text-\\[0\\.58rem\\]{font-size:.58rem}.text-base{font-size:1rem;line-height:1.5rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-smd{font-size:.94rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:.75rem;line-height:1rem}.text-xxs{font-size:.625rem}.font-black{font-weight:900}.font-bold{font-weight:700}.font-light{font-weight:300}.font-medium{font-weight:500}.font-normal{font-weight:400}.font-semibold{font-weight:600}.font-thin{font-weight:100}.uppercase{text-transform:uppercase}.leading-3{line-height:.75rem}.leading-4{line-height:1rem}.leading-none{line-height:1}.leading-relaxed{line-height:1.625}.leading-snug{line-height:1.375}.leading-tight{line-height:1.25}.\\!text-gray-400{--tw-text-opacity: 1 !important;color:rgb(156 163 175 / var(--tw-text-opacity))!important}.\\!text-gray-800{--tw-text-opacity: 1 !important;color:rgb(31 41 55 / var(--tw-text-opacity))!important}.\\!text-white{--tw-text-opacity: 1 !important;color:rgb(255 255 255 / var(--tw-text-opacity))!important}.text-black{--tw-text-opacity: 1;color:rgb(0 0 0 / var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity: 1;color:rgb(59 130 246 / var(--tw-text-opacity))}.text-blue-600{--tw-text-opacity: 1;color:rgb(37 99 235 / var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity: 1;color:rgb(29 78 216 / var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity: 1;color:rgb(30 64 175 / var(--tw-text-opacity))}.text-gray-100{--tw-text-opacity: 1;color:rgb(243 244 246 / var(--tw-text-opacity))}.text-gray-200{--tw-text-opacity: 1;color:rgb(229 231 235 / var(--tw-text-opacity))}.text-gray-300{--tw-text-opacity: 1;color:rgb(209 213 219 / var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity))}.text-gray-400\\/90{color:#9ca3afe6}.text-gray-500{--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity))}.text-gray-600{--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity: 1;color:rgb(31 41 55 / var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity: 1;color:rgb(17 24 39 / var(--tw-text-opacity))}.text-green-500{--tw-text-opacity: 1;color:rgb(34 197 94 / var(--tw-text-opacity))}.text-green-600{--tw-text-opacity: 1;color:rgb(22 163 74 / var(--tw-text-opacity))}.text-orange-800{--tw-text-opacity: 1;color:rgb(154 52 18 / var(--tw-text-opacity))}.text-primary-700{--tw-text-opacity: 1;color:rgb(161 98 7 / var(--tw-text-opacity))}.text-purple-500{--tw-text-opacity: 1;color:rgb(168 85 247 / var(--tw-text-opacity))}.text-purple-500\\/40{color:#a855f766}.text-purple-600{--tw-text-opacity: 1;color:rgb(147 51 234 / var(--tw-text-opacity))}.text-purple-700{--tw-text-opacity: 1;color:rgb(126 34 206 / var(--tw-text-opacity))}.text-red-500{--tw-text-opacity: 1;color:rgb(239 68 68 / var(--tw-text-opacity))}.text-red-600{--tw-text-opacity: 1;color:rgb(220 38 38 / var(--tw-text-opacity))}.text-red-700{--tw-text-opacity: 1;color:rgb(185 28 28 / var(--tw-text-opacity))}.text-red-800{--tw-text-opacity: 1;color:rgb(153 27 27 / var(--tw-text-opacity))}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity))}.underline{text-decoration-line:underline}.line-through{text-decoration-line:line-through}.no-underline{text-decoration-line:none}.decoration-gray-300{text-decoration-color:#d1d5db}.decoration-gray-400{text-decoration-color:#9ca3af}.underline-offset-2{text-underline-offset:2px}.accent-purple-500{accent-color:#a855f7}.opacity-0{opacity:0}.opacity-100{opacity:1}.opacity-30{opacity:.3}.opacity-50{opacity:.5}.opacity-60{opacity:.6}.opacity-80{opacity:.8}.\\!shadow-none{--tw-shadow: 0 0 #0000 !important;--tw-shadow-colored: 0 0 #0000 !important;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)!important}.shadow{--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-2xl{--tw-shadow: 0 25px 50px -12px rgb(0 0 0 / .25);--tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / .05);--tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow: 0 10px 15px -3px rgb(0 0 0 / .1), 0 4px 6px -4px rgb(0 0 0 / .1);--tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-md{--tw-shadow: 0 4px 6px -1px rgb(0 0 0 / .1), 0 2px 4px -2px rgb(0 0 0 / .1);--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow: 0 1px 2px 0 rgb(0 0 0 / .05);--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-1{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.ring-inset{--tw-ring-inset: inset }.ring-gray-200{--tw-ring-opacity: 1;--tw-ring-color: rgb(229 231 235 / var(--tw-ring-opacity)) }.ring-gray-400{--tw-ring-opacity: 1;--tw-ring-color: rgb(156 163 175 / var(--tw-ring-opacity)) }.ring-offset-1{--tw-ring-offset-width: 1px }.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.backdrop-blur-sm{--tw-backdrop-blur: blur(4px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}.transition-\\[300ms\\]{transition-property:.3s;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-colors{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-transform{transition-property:transform;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.scrollbar-thumb-gray-500{--scrollbar-thumb: #6b7280 !important}.scrollbar-custom::-webkit-scrollbar-track{background-color:var(--scrollbar-track);border-radius:var(--scrollbar-track-radius)}.scrollbar-custom::-webkit-scrollbar-track:hover{background-color:var(--scrollbar-track-hover, var(--scrollbar-track))}.scrollbar-custom::-webkit-scrollbar-track:active{background-color:var(--scrollbar-track-active, var(--scrollbar-track-hover, var(--scrollbar-track)))}.scrollbar-custom::-webkit-scrollbar-thumb{background-color:var(--scrollbar-thumb);border-radius:var(--scrollbar-thumb-radius)}.scrollbar-custom::-webkit-scrollbar-thumb:hover{background-color:var(--scrollbar-thumb-hover, var(--scrollbar-thumb))}.scrollbar-custom::-webkit-scrollbar-thumb:active{background-color:var(--scrollbar-thumb-active, var(--scrollbar-thumb-hover, var(--scrollbar-thumb)))}.scrollbar-custom::-webkit-scrollbar-corner{background-color:var(--scrollbar-corner);border-radius:var(--scrollbar-corner-radius)}.scrollbar-custom::-webkit-scrollbar-corner:hover{background-color:var(--scrollbar-corner-hover, var(--scrollbar-corner))}.scrollbar-custom::-webkit-scrollbar-corner:active{background-color:var(--scrollbar-corner-active, var(--scrollbar-corner-hover, var(--scrollbar-corner)))}.scrollbar-custom{scrollbar-width:thin;scrollbar-color:var(--scrollbar-thumb, initial) var(--scrollbar-track, initial)}.scrollbar-custom::-webkit-scrollbar{display:block;width:8px;height:8px}.scrollbar-custom{--scrollbar-track: transparent;--scrollbar-thumb: rgb(0 0 0 / .1);--scrollbar-thumb-radius: 9999px;--scrollbar-width: .25rem;--scrollbar-thumb-hover: rgb(0 0 0 / .2) }.scrollbar-custom:is(.dark *){--scrollbar-thumb: rgb(255 255 255 / .1);--scrollbar-thumb-hover: rgb(255 255 255 / .2) }.\\[transition-property\\:grid-template-columns\\]{transition-property:grid-template-columns}.dark\\:prose-invert:is(.dark *){--tw-prose-body: var(--tw-prose-invert-body);--tw-prose-headings: var(--tw-prose-invert-headings);--tw-prose-lead: var(--tw-prose-invert-lead);--tw-prose-links: var(--tw-prose-invert-links);--tw-prose-bold: var(--tw-prose-invert-bold);--tw-prose-counters: var(--tw-prose-invert-counters);--tw-prose-bullets: var(--tw-prose-invert-bullets);--tw-prose-hr: var(--tw-prose-invert-hr);--tw-prose-quotes: var(--tw-prose-invert-quotes);--tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);--tw-prose-captions: var(--tw-prose-invert-captions);--tw-prose-kbd: var(--tw-prose-invert-kbd);--tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);--tw-prose-code: var(--tw-prose-invert-code);--tw-prose-pre-code: var(--tw-prose-invert-pre-code);--tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);--tw-prose-th-borders: var(--tw-prose-invert-th-borders);--tw-prose-td-borders: var(--tw-prose-invert-td-borders) }@media not all and (min-width: 640px){.max-sm\\:prose-sm{font-size:.875rem;line-height:1.7142857}.max-sm\\:prose-sm :where(p):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.1428571em;margin-bottom:1.1428571em}.max-sm\\:prose-sm :where([class~=lead]):not(:where([class~=not-prose],[class~=not-prose] *)){font-size:1.2857143em;line-height:1.5555556;margin-top:.8888889em;margin-bottom:.8888889em}.max-sm\\:prose-sm :where(blockquote):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.3333333em;margin-bottom:1.3333333em;padding-inline-start:1.1111111em}.max-sm\\:prose-sm :where(h1):not(:where([class~=not-prose],[class~=not-prose] *)){font-size:2.1428571em;margin-top:0;margin-bottom:.8em;line-height:1.2}.max-sm\\:prose-sm :where(h2):not(:where([class~=not-prose],[class~=not-prose] *)){font-size:1.4285714em;margin-top:1.6em;margin-bottom:.8em;line-height:1.4}.max-sm\\:prose-sm :where(h3):not(:where([class~=not-prose],[class~=not-prose] *)){font-size:1.2857143em;margin-top:1.5555556em;margin-bottom:.4444444em;line-height:1.5555556}.max-sm\\:prose-sm :where(h4):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.4285714em;margin-bottom:.5714286em;line-height:1.4285714}.max-sm\\:prose-sm :where(img):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.7142857em;margin-bottom:1.7142857em}.max-sm\\:prose-sm :where(picture):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.7142857em;margin-bottom:1.7142857em}.max-sm\\:prose-sm :where(picture>img):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:0;margin-bottom:0}.max-sm\\:prose-sm :where(video):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.7142857em;margin-bottom:1.7142857em}.max-sm\\:prose-sm :where(kbd):not(:where([class~=not-prose],[class~=not-prose] *)){font-size:.8571429em;border-radius:.3125rem;padding-top:.1428571em;padding-inline-end:.3571429em;padding-bottom:.1428571em;padding-inline-start:.3571429em}.max-sm\\:prose-sm :where(code):not(:where([class~=not-prose],[class~=not-prose] *)){font-size:.8571429em}.max-sm\\:prose-sm :where(h2 code):not(:where([class~=not-prose],[class~=not-prose] *)){font-size:.9em}.max-sm\\:prose-sm :where(h3 code):not(:where([class~=not-prose],[class~=not-prose] *)){font-size:.8888889em}.max-sm\\:prose-sm :where(pre):not(:where([class~=not-prose],[class~=not-prose] *)){font-size:.8571429em;line-height:1.6666667;margin-top:1.6666667em;margin-bottom:1.6666667em;border-radius:.25rem;padding-top:.6666667em;padding-inline-end:1em;padding-bottom:.6666667em;padding-inline-start:1em}.max-sm\\:prose-sm :where(ol):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.1428571em;margin-bottom:1.1428571em;padding-inline-start:1.5714286em}.max-sm\\:prose-sm :where(ul):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.1428571em;margin-bottom:1.1428571em;padding-inline-start:1.5714286em}.max-sm\\:prose-sm :where(li):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:.2857143em;margin-bottom:.2857143em}.max-sm\\:prose-sm :where(ol>li):not(:where([class~=not-prose],[class~=not-prose] *)){padding-inline-start:.4285714em}.max-sm\\:prose-sm :where(ul>li):not(:where([class~=not-prose],[class~=not-prose] *)){padding-inline-start:.4285714em}.max-sm\\:prose-sm :where(.max-sm\\:prose-sm>ul>li p):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:.5714286em;margin-bottom:.5714286em}.max-sm\\:prose-sm :where(.max-sm\\:prose-sm>ul>li>p:first-child):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.1428571em}.max-sm\\:prose-sm :where(.max-sm\\:prose-sm>ul>li>p:last-child):not(:where([class~=not-prose],[class~=not-prose] *)){margin-bottom:1.1428571em}.max-sm\\:prose-sm :where(.max-sm\\:prose-sm>ol>li>p:first-child):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.1428571em}.max-sm\\:prose-sm :where(.max-sm\\:prose-sm>ol>li>p:last-child):not(:where([class~=not-prose],[class~=not-prose] *)){margin-bottom:1.1428571em}.max-sm\\:prose-sm :where(ul ul,ul ol,ol ul,ol ol):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:.5714286em;margin-bottom:.5714286em}.max-sm\\:prose-sm :where(dl):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.1428571em;margin-bottom:1.1428571em}.max-sm\\:prose-sm :where(dt):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.1428571em}.max-sm\\:prose-sm :where(dd):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:.2857143em;padding-inline-start:1.5714286em}.max-sm\\:prose-sm :where(hr):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:2.8571429em;margin-bottom:2.8571429em}.max-sm\\:prose-sm :where(hr+*):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:0}.max-sm\\:prose-sm :where(h2+*):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:0}.max-sm\\:prose-sm :where(h3+*):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:0}.max-sm\\:prose-sm :where(h4+*):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:0}.max-sm\\:prose-sm :where(table):not(:where([class~=not-prose],[class~=not-prose] *)){font-size:.8571429em;line-height:1.5}.max-sm\\:prose-sm :where(thead th):not(:where([class~=not-prose],[class~=not-prose] *)){padding-inline-end:1em;padding-bottom:.6666667em;padding-inline-start:1em}.max-sm\\:prose-sm :where(thead th:first-child):not(:where([class~=not-prose],[class~=not-prose] *)){padding-inline-start:0}.max-sm\\:prose-sm :where(thead th:last-child):not(:where([class~=not-prose],[class~=not-prose] *)){padding-inline-end:0}.max-sm\\:prose-sm :where(tbody td,tfoot td):not(:where([class~=not-prose],[class~=not-prose] *)){padding-top:.6666667em;padding-inline-end:1em;padding-bottom:.6666667em;padding-inline-start:1em}.max-sm\\:prose-sm :where(tbody td:first-child,tfoot td:first-child):not(:where([class~=not-prose],[class~=not-prose] *)){padding-inline-start:0}.max-sm\\:prose-sm :where(tbody td:last-child,tfoot td:last-child):not(:where([class~=not-prose],[class~=not-prose] *)){padding-inline-end:0}.max-sm\\:prose-sm :where(figure):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:1.7142857em;margin-bottom:1.7142857em}.max-sm\\:prose-sm :where(figure>*):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:0;margin-bottom:0}.max-sm\\:prose-sm :where(figcaption):not(:where([class~=not-prose],[class~=not-prose] *)){font-size:.8571429em;line-height:1.3333333;margin-top:.6666667em}.max-sm\\:prose-sm :where(.max-sm\\:prose-sm>:first-child):not(:where([class~=not-prose],[class~=not-prose] *)){margin-top:0}.max-sm\\:prose-sm :where(.max-sm\\:prose-sm>:last-child):not(:where([class~=not-prose],[class~=not-prose] *)){margin-bottom:0}}.\\*\\:pointer-events-none>*{pointer-events:none}.\\*\\:h-3>*{height:.75rem}.\\*\\:h-max>*{height:-moz-max-content;height:max-content}.\\*\\:w-1>*{width:.25rem}.\\*\\:w-\\[290px\\]>*{width:290px}.\\*\\:rounded-full>*{border-radius:9999px}.\\*\\:bg-gray-200>*{--tw-bg-opacity: 1;background-color:rgb(229 231 235 / var(--tw-bg-opacity))}.\\*\\:bg-gray-200\\/70>*{background-color:#e5e7ebb3}.\\*\\:transition-transform>*{transition-property:transform;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.first\\:ml-0:first-child{margin-left:0}.first\\:mt-0:first-child{margin-top:0}.last\\:\\!border-transparent:last-child{border-color:transparent!important}.last\\:pb-0:last-child{padding-bottom:0}.open\\:mb-3[open]{margin-bottom:.75rem}.open\\:border-purple-500\\/10[open]{border-color:#a855f71a}.open\\:bg-purple-600\\/5[open]{background-color:#9333ea0d}.open\\:shadow-sm[open]{--tw-shadow: 0 1px 2px 0 rgb(0 0 0 / .05);--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.focus-within\\:border-gray-300:focus-within{--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity))}@keyframes pulse{50%{opacity:.5}}.group:last-child .group-last\\:animate-pulse{animation:pulse 2s cubic-bezier(.4,0,.6,1) infinite}.group:last-child .group-last\\:bg-gray-300{--tw-bg-opacity: 1;background-color:rgb(209 213 219 / var(--tw-bg-opacity))}.group[open] .group-open\\:rotate-180{--tw-rotate: 180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.group[open] .group-open\\:rounded-b-none{border-bottom-right-radius:0;border-bottom-left-radius:0}.group\\/tool[open] .group-open\\/tool\\:text-purple-700{--tw-text-opacity: 1;color:rgb(126 34 206 / var(--tw-text-opacity))}.group:focus-within .group-focus-within\\:visible{visibility:visible}.group\\/tooltip:hover .group-hover\\/tooltip\\:visible,.group:hover .group-hover\\:visible{visibility:visible}.group\\/navbranch:hover .group-hover\\/navbranch\\:block,.group:hover .group-hover\\:block{display:block}.group:hover .group-hover\\:flex{display:flex}.group:hover .group-hover\\:-rotate-\\[20deg\\]{--tw-rotate: -20deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.group:hover .group-hover\\:rotate-\\[20deg\\]{--tw-rotate: 20deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.group\\/tooltip:hover .group-hover\\/tooltip\\:text-blue-600{--tw-text-opacity: 1;color:rgb(37 99 235 / var(--tw-text-opacity))}.group:hover .group-hover\\:text-gray-500{--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity))}.group:hover .group-hover\\:text-gray-800{--tw-text-opacity: 1;color:rgb(31 41 55 / var(--tw-text-opacity))}.group:hover .group-hover\\:opacity-100{opacity:1}.group\\/tooltip:active .group-active\\/tooltip\\:visible{visibility:visible}.peer:checked~.peer-checked\\:bg-blue-600{--tw-bg-opacity: 1;background-color:rgb(37 99 235 / var(--tw-bg-opacity))}.peer:hover~.peer-hover\\:visible{visibility:visible}.peer:focus~.peer-focus\\:visible{visibility:visible}.peer:focus-visible~.peer-focus-visible\\:ring{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.peer:focus-visible~.peer-focus-visible\\:ring-offset-1{--tw-ring-offset-width: 1px }.has-\\[\\:focus\\]\\:border-gray-400:has(:focus){--tw-border-opacity: 1;border-color:rgb(156 163 175 / var(--tw-border-opacity))}.has-\\[\\:checked\\]\\:font-semibold:has(:checked){font-weight:600}.hover\\:visible:hover{visibility:visible}.hover\\:border-gray-300:hover{--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity))}.hover\\:bg-blue-500:hover{--tw-bg-opacity: 1;background-color:rgb(59 130 246 / var(--tw-bg-opacity))}.hover\\:bg-gray-100:hover{--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity))}.hover\\:bg-gray-400:hover{--tw-bg-opacity: 1;background-color:rgb(156 163 175 / var(--tw-bg-opacity))}.hover\\:bg-gray-50:hover{--tw-bg-opacity: 1;background-color:rgb(249 250 251 / var(--tw-bg-opacity))}.hover\\:bg-gray-500\\/10:hover{background-color:#6b72801a}.hover\\:bg-gray-900:hover{--tw-bg-opacity: 1;background-color:rgb(17 24 39 / var(--tw-bg-opacity))}.hover\\:bg-purple-500\\/30:hover{background-color:#a855f74d}.hover\\:bg-slate-100:hover{--tw-bg-opacity: 1;background-color:rgb(241 245 249 / var(--tw-bg-opacity))}.hover\\:text-black:hover{--tw-text-opacity: 1;color:rgb(0 0 0 / var(--tw-text-opacity))}.hover\\:text-gray-400:hover{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity))}.hover\\:text-gray-500:hover{--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity))}.hover\\:text-gray-600:hover{--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity))}.hover\\:text-gray-800:hover{--tw-text-opacity: 1;color:rgb(31 41 55 / var(--tw-text-opacity))}.hover\\:text-green-500:hover{--tw-text-opacity: 1;color:rgb(34 197 94 / var(--tw-text-opacity))}.hover\\:text-purple-500:hover{--tw-text-opacity: 1;color:rgb(168 85 247 / var(--tw-text-opacity))}.hover\\:text-purple-700:hover{--tw-text-opacity: 1;color:rgb(126 34 206 / var(--tw-text-opacity))}.hover\\:text-red-500:hover{--tw-text-opacity: 1;color:rgb(239 68 68 / var(--tw-text-opacity))}.hover\\:text-white:hover{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity))}.hover\\:underline:hover{text-decoration-line:underline}.hover\\:no-underline:hover{text-decoration-line:none}.hover\\:decoration-gray-700:hover{text-decoration-color:#374151}.hover\\:accent-purple-600:hover{accent-color:#9333ea}.hover\\:opacity-90:hover{opacity:.9}.hover\\:shadow-inner:hover{--tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / .05);--tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.hover\\:shadow-none:hover{--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.hover\\:ring:hover{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.hover\\:brightness-0:hover{--tw-brightness: brightness(0);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.hover\\:brightness-50:hover{--tw-brightness: brightness(.5);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.hover\\:scrollbar-thumb-gray-400{--scrollbar-thumb-hover: #9ca3af !important}.\\*\\:hover\\:bg-gray-300:hover>*{--tw-bg-opacity: 1;background-color:rgb(209 213 219 / var(--tw-bg-opacity))}.hover\\:\\*\\:text-gray-800>*:hover{--tw-text-opacity: 1;color:rgb(31 41 55 / var(--tw-text-opacity))}.focus\\:border-blue-700:focus{--tw-border-opacity: 1;border-color:rgb(29 78 216 / var(--tw-border-opacity))}.focus\\:bg-blue-500\\/30:focus{background-color:#3b82f64d}.focus\\:text-blue-800:focus{--tw-text-opacity: 1;color:rgb(30 64 175 / var(--tw-text-opacity))}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring-0:focus{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.focus\\:ring-blue-700:focus{--tw-ring-opacity: 1;--tw-ring-color: rgb(29 78 216 / var(--tw-ring-opacity)) }.focus-visible\\:outline-none:focus-visible{outline:2px solid transparent;outline-offset:2px}.focus-visible\\:ring:focus-visible{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.focus-visible\\:ring-0:focus-visible{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.active\\:shadow-inner:active{--tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / .05);--tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.enabled\\:hover\\:text-gray-700:hover:enabled{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity))}.disabled\\:pointer-events-none:disabled{pointer-events:none}.disabled\\:cursor-not-allowed:disabled{cursor:not-allowed}.disabled\\:opacity-25:disabled{opacity:.25}.disabled\\:opacity-60:disabled{opacity:.6}.prose-headings\\:font-semibold :is(:where(h1,h2,h3,h4,h5,h6,th):not(:where([class~=not-prose],[class~=not-prose] *))){font-weight:600}.prose-h1\\:text-lg :is(:where(h1):not(:where([class~=not-prose],[class~=not-prose] *))){font-size:1.125rem;line-height:1.75rem}.prose-h2\\:text-base :is(:where(h2):not(:where([class~=not-prose],[class~=not-prose] *))){font-size:1rem;line-height:1.5rem}.prose-h3\\:text-base :is(:where(h3):not(:where([class~=not-prose],[class~=not-prose] *))){font-size:1rem;line-height:1.5rem}.prose-pre\\:my-2 :is(:where(pre):not(:where([class~=not-prose],[class~=not-prose] *))){margin-top:.5rem;margin-bottom:.5rem}.prose-pre\\:bg-gray-800 :is(:where(pre):not(:where([class~=not-prose],[class~=not-prose] *))){--tw-bg-opacity: 1;background-color:rgb(31 41 55 / var(--tw-bg-opacity))}.dark\\:border-blue-500:is(.dark *){--tw-border-opacity: 1;border-color:rgb(59 130 246 / var(--tw-border-opacity))}.dark\\:border-blue-600:is(.dark *){--tw-border-opacity: 1;border-color:rgb(37 99 235 / var(--tw-border-opacity))}.dark\\:border-gray-500:is(.dark *){--tw-border-opacity: 1;border-color:rgb(107 114 128 / var(--tw-border-opacity))}.dark\\:border-gray-600:is(.dark *){--tw-border-opacity: 1;border-color:rgb(75 85 99 / var(--tw-border-opacity))}.dark\\:border-gray-700:is(.dark *){--tw-border-opacity: 1;border-color:rgb(55 65 81 / var(--tw-border-opacity))}.dark\\:border-gray-700\\/60:is(.dark *){border-color:#37415199}.dark\\:border-gray-800:is(.dark *){--tw-border-opacity: 1;border-color:rgb(31 41 55 / var(--tw-border-opacity))}.dark\\:border-gray-800\\/70:is(.dark *){border-color:#1f2937b3}.dark\\:border-purple-500:is(.dark *){--tw-border-opacity: 1;border-color:rgb(168 85 247 / var(--tw-border-opacity))}.dark\\:border-purple-700:is(.dark *){--tw-border-opacity: 1;border-color:rgb(126 34 206 / var(--tw-border-opacity))}.dark\\:bg-black\\/50:is(.dark *){background-color:#00000080}.dark\\:bg-blue-500\\/10:is(.dark *){background-color:#3b82f61a}.dark\\:bg-blue-500\\/20:is(.dark *){background-color:#3b82f633}.dark\\:bg-gray-100:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity))}.dark\\:bg-gray-400:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(156 163 175 / var(--tw-bg-opacity))}.dark\\:bg-gray-600:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(75 85 99 / var(--tw-bg-opacity))}.dark\\:bg-gray-700:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(55 65 81 / var(--tw-bg-opacity))}.dark\\:bg-gray-800:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(31 41 55 / var(--tw-bg-opacity))}.dark\\:bg-gray-800\\/60:is(.dark *){background-color:#1f293799}.dark\\:bg-gray-800\\/70:is(.dark *){background-color:#1f2937b3}.dark\\:bg-gray-900:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(17 24 39 / var(--tw-bg-opacity))}.dark\\:bg-gray-900\\/80:is(.dark *){background-color:#111827cc}.dark\\:bg-gray-950\\/20:is(.dark *){background-color:#03071233}.dark\\:bg-purple-500\\/10:is(.dark *){background-color:#a855f71a}.dark\\:bg-purple-600\\/20:is(.dark *){background-color:#9333ea33}.dark\\:bg-purple-800\\/50:is(.dark *){background-color:#6b21a880}.dark\\:from-gray-700:is(.dark *){--tw-gradient-from: #374151 var(--tw-gradient-from-position);--tw-gradient-to: rgb(55 65 81 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to) }.dark\\:from-gray-800\\/30:is(.dark *){--tw-gradient-from: rgb(31 41 55 / .3) var(--tw-gradient-from-position);--tw-gradient-to: rgb(31 41 55 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to) }.dark\\:from-gray-800\\/40:is(.dark *){--tw-gradient-from: rgb(31 41 55 / .4) var(--tw-gradient-from-position);--tw-gradient-to: rgb(31 41 55 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to) }.dark\\:from-gray-900:is(.dark *){--tw-gradient-from: #111827 var(--tw-gradient-from-position);--tw-gradient-to: rgb(17 24 39 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to) }.dark\\:from-primary-900:is(.dark *){--tw-gradient-from: #713f12 var(--tw-gradient-from-position);--tw-gradient-to: rgb(113 63 18 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to) }.dark\\:to-gray-900\\/0:is(.dark *){--tw-gradient-to: rgb(17 24 39 / 0) var(--tw-gradient-to-position) }.dark\\:stroke-gray-400:is(.dark *){stroke:#9ca3af}.dark\\:text-blue-500:is(.dark *){--tw-text-opacity: 1;color:rgb(59 130 246 / var(--tw-text-opacity))}.dark\\:text-gray-100:is(.dark *){--tw-text-opacity: 1;color:rgb(243 244 246 / var(--tw-text-opacity))}.dark\\:text-gray-200:is(.dark *){--tw-text-opacity: 1;color:rgb(229 231 235 / var(--tw-text-opacity))}.dark\\:text-gray-300:is(.dark *){--tw-text-opacity: 1;color:rgb(209 213 219 / var(--tw-text-opacity))}.dark\\:text-gray-300\\/90:is(.dark *){color:#d1d5dbe6}.dark\\:text-gray-400:is(.dark *){--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity))}.dark\\:text-gray-500:is(.dark *){--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity))}.dark\\:text-gray-600:is(.dark *){--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity))}.dark\\:text-gray-700:is(.dark *){--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity))}.dark\\:text-green-400:is(.dark *){--tw-text-opacity: 1;color:rgb(74 222 128 / var(--tw-text-opacity))}.dark\\:text-primary-400:is(.dark *){--tw-text-opacity: 1;color:rgb(250 204 21 / var(--tw-text-opacity))}.dark\\:text-purple-300:is(.dark *){--tw-text-opacity: 1;color:rgb(216 180 254 / var(--tw-text-opacity))}.dark\\:text-purple-400:is(.dark *){--tw-text-opacity: 1;color:rgb(192 132 252 / var(--tw-text-opacity))}.dark\\:text-purple-500:is(.dark *){--tw-text-opacity: 1;color:rgb(168 85 247 / var(--tw-text-opacity))}.dark\\:text-purple-600:is(.dark *){--tw-text-opacity: 1;color:rgb(147 51 234 / var(--tw-text-opacity))}.dark\\:text-red-400:is(.dark *){--tw-text-opacity: 1;color:rgb(248 113 113 / var(--tw-text-opacity))}.dark\\:text-red-500:is(.dark *){--tw-text-opacity: 1;color:rgb(239 68 68 / var(--tw-text-opacity))}.dark\\:text-white:is(.dark *){--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity))}.dark\\:text-yellow-500:is(.dark *){--tw-text-opacity: 1;color:rgb(234 179 8 / var(--tw-text-opacity))}.dark\\:placeholder-gray-400:is(.dark *)::-moz-placeholder{--tw-placeholder-opacity: 1;color:rgb(156 163 175 / var(--tw-placeholder-opacity))}.dark\\:placeholder-gray-400:is(.dark *)::placeholder{--tw-placeholder-opacity: 1;color:rgb(156 163 175 / var(--tw-placeholder-opacity))}.dark\\:shadow-gray-950:is(.dark *){--tw-shadow-color: #030712;--tw-shadow: var(--tw-shadow-colored) }.dark\\:ring-gray-700:is(.dark *){--tw-ring-opacity: 1;--tw-ring-color: rgb(55 65 81 / var(--tw-ring-opacity)) }.dark\\:scrollbar-thumb-white\\/10:is(.dark *){--scrollbar-thumb: rgb(255 255 255 / .1) !important}.dark\\:\\*\\:bg-gray-700>*:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(55 65 81 / var(--tw-bg-opacity))}.dark\\:\\*\\:bg-gray-800>*:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(31 41 55 / var(--tw-bg-opacity))}.open\\:dark\\:border-purple-800\\/40:is(.dark *)[open]{border-color:#6b21a866}.open\\:dark\\:bg-purple-800\\/10:is(.dark *)[open]{background-color:#6b21a81a}.dark\\:focus-within\\:border-gray-500:focus-within:is(.dark *){--tw-border-opacity: 1;border-color:rgb(107 114 128 / var(--tw-border-opacity))}.group:last-child .group-last\\:dark\\:bg-gray-500:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(107 114 128 / var(--tw-bg-opacity))}.group\\/tool[open] .group-open\\/tool\\:dark\\:text-purple-300:is(.dark *){--tw-text-opacity: 1;color:rgb(216 180 254 / var(--tw-text-opacity))}.group:hover .dark\\:group-hover\\:text-gray-300:is(.dark *){--tw-text-opacity: 1;color:rgb(209 213 219 / var(--tw-text-opacity))}.dark\\:hover\\:border-gray-500:hover:is(.dark *){--tw-border-opacity: 1;border-color:rgb(107 114 128 / var(--tw-border-opacity))}.dark\\:hover\\:border-gray-700:hover:is(.dark *){--tw-border-opacity: 1;border-color:rgb(55 65 81 / var(--tw-border-opacity))}.dark\\:hover\\:bg-gray-600:hover:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(75 85 99 / var(--tw-bg-opacity))}.dark\\:hover\\:bg-gray-700:hover:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(55 65 81 / var(--tw-bg-opacity))}.dark\\:hover\\:bg-gray-800:hover:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(31 41 55 / var(--tw-bg-opacity))}.dark\\:hover\\:bg-gray-950\\/40:hover:is(.dark *){background-color:#03071266}.dark\\:hover\\:text-gray-200:hover:is(.dark *){--tw-text-opacity: 1;color:rgb(229 231 235 / var(--tw-text-opacity))}.dark\\:hover\\:text-gray-300:hover:is(.dark *){--tw-text-opacity: 1;color:rgb(209 213 219 / var(--tw-text-opacity))}.hover\\:dark\\:text-green-400:is(.dark *):hover{--tw-text-opacity: 1;color:rgb(74 222 128 / var(--tw-text-opacity))}.hover\\:dark\\:text-red-400:is(.dark *):hover{--tw-text-opacity: 1;color:rgb(248 113 113 / var(--tw-text-opacity))}.dark\\:hover\\:brightness-110:hover:is(.dark *){--tw-brightness: brightness(1.1);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.dark\\:hover\\:brightness-200:hover:is(.dark *){--tw-brightness: brightness(2);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.dark\\:hover\\:scrollbar-thumb-white\\/20:is(.dark *){--scrollbar-thumb-hover: rgb(255 255 255 / .2) !important}.dark\\:\\*\\:hover\\:bg-gray-600:hover>*:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(75 85 99 / var(--tw-bg-opacity))}.enabled\\:dark\\:hover\\:text-gray-100:hover:is(.dark *):enabled{--tw-text-opacity: 1;color:rgb(243 244 246 / var(--tw-text-opacity))}.dark\\:disabled\\:opacity-40:disabled:is(.dark *){opacity:.4}.dark\\:prose-pre\\:bg-gray-900 :is(:where(pre):not(:where([class~=not-prose],[class~=not-prose] *))):is(.dark *){--tw-bg-opacity: 1;background-color:rgb(17 24 39 / var(--tw-bg-opacity))}@media not all and (min-width: 1280px){.max-xl\\:text-sm{font-size:.875rem;line-height:1.25rem}}@media not all and (min-width: 768px){.max-md\\:visible{visibility:visible}.max-md\\:bottom-\\[calc\\(50\\%\\+26px\\)\\]{bottom:calc(50% + 26px)}.max-md\\:bottom-\\[calc\\(50\\%-26px\\)\\]{bottom:calc(50% - 26px)}.max-md\\:order-first{order:-9999}.max-md\\:-mx-4{margin-left:-1rem;margin-right:-1rem}.max-md\\:mb-2{margin-bottom:.5rem}.max-md\\:hidden{display:none}.max-md\\:h-\\[245px\\]{height:245px}.max-md\\:-translate-y-4{--tw-translate-y: -1rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.max-md\\:translate-y-0{--tw-translate-y: 0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.max-md\\:border{border-width:1px}.max-md\\:border-b-2{border-bottom-width:2px}.max-md\\:border-t{border-top-width:1px}.max-md\\:bg-white{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.max-md\\:pb-3{padding-bottom:.75rem}.max-md\\:pt-4{padding-top:1rem}.max-md\\:opacity-0{opacity:0}.max-md\\:opacity-100{opacity:1}.max-md\\:transition-all{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.max-md\\:dark\\:bg-gray-900:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(17 24 39 / var(--tw-bg-opacity))}}@media not all and (min-width: 640px){.max-sm\\:left-1\\/2{left:50%}.max-sm\\:\\!hidden{display:none!important}.max-sm\\:hidden{display:none}.max-sm\\:max-w-32{max-width:8rem}.max-sm\\:-translate-x-1\\/2{--tw-translate-x: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.max-sm\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.max-sm\\:flex-col{flex-direction:column}.max-sm\\:justify-center{justify-content:center}.max-sm\\:gap-2{gap:.5rem}.max-sm\\:self-start{align-self:flex-start}.max-sm\\:rounded-lg{border-radius:.5rem}.max-sm\\:bg-gray-50{--tw-bg-opacity: 1;background-color:rgb(249 250 251 / var(--tw-bg-opacity))}.max-sm\\:bg-gradient-to-t{background-image:linear-gradient(to top,var(--tw-gradient-stops))}.max-sm\\:p-2\\.5{padding:.625rem}.max-sm\\:px-1\\.5{padding-left:.375rem;padding-right:.375rem}.max-sm\\:px-2\\.5{padding-left:.625rem;padding-right:.625rem}.max-sm\\:px-4{padding-left:1rem;padding-right:1rem}.max-sm\\:pt-0{padding-top:0}.max-sm\\:pt-8{padding-top:2rem}.max-sm\\:text-\\[16px\\]{font-size:16px}.max-sm\\:text-sm{font-size:.875rem;line-height:1.25rem}.max-sm\\:text-smd{font-size:.94rem}.max-sm\\:text-xs{font-size:.75rem;line-height:1rem}.dark\\:max-sm\\:bg-gray-800:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(31 41 55 / var(--tw-bg-opacity))}}@media (min-width: 640px){.sm\\:-mb-8{margin-bottom:-2rem}.sm\\:-mt-10{margin-top:-2.5rem}.sm\\:mb-0{margin-bottom:0}.sm\\:mb-6{margin-bottom:1.5rem}.sm\\:mr-1\\.5{margin-right:.375rem}.sm\\:line-clamp-2{overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}.sm\\:block{display:block}.sm\\:hidden{display:none}.sm\\:size-20{width:5rem;height:5rem}.sm\\:size-24{width:6rem;height:6rem}.sm\\:h-24{height:6rem}.sm\\:h-64{height:16rem}.sm\\:h-\\[2\\.35rem\\]{height:2.35rem}.sm\\:h-\\[85dvh\\]{height:85dvh}.sm\\:w-64{width:16rem}.sm\\:w-96{width:24rem}.sm\\:w-auto{width:auto}.sm\\:min-w-\\[440px\\]{min-width:440px}.sm\\:max-w-\\[800px\\]{max-width:800px}.sm\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.sm\\:grid-rows-2{grid-template-rows:repeat(2,minmax(0,1fr))}.sm\\:flex-row{flex-direction:row}.sm\\:items-center{align-items:center}.sm\\:justify-center{justify-content:center}.sm\\:gap-5{gap:1.25rem}.sm\\:gap-6{gap:1.5rem}.sm\\:gap-8{gap:2rem}.sm\\:px-5{padding-left:1.25rem;padding-right:1.25rem}.sm\\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\\:pb-4{padding-bottom:1rem}.sm\\:pl-1{padding-left:.25rem}.sm\\:text-2xl{font-size:1.5rem;line-height:2rem}.sm\\:text-4xl{font-size:2.25rem;line-height:2.5rem}.sm\\:text-sm{font-size:.875rem;line-height:1.25rem}.sm\\:text-smd{font-size:.94rem}.sm\\:text-green-600{--tw-text-opacity: 1;color:rgb(22 163 74 / var(--tw-text-opacity))}.sm\\:text-primary-500{--tw-text-opacity: 1;color:rgb(234 179 8 / var(--tw-text-opacity))}}@media (min-width: 768px){.md\\:relative{position:relative}.md\\:bottom-0{bottom:0}.md\\:bottom-36{bottom:9rem}.md\\:bottom-48{bottom:12rem}.md\\:right-0{right:0}.md\\:right-4{right:1rem}.md\\:top-0{top:0}.md\\:top-4{top:1rem}.md\\:col-span-2{grid-column:span 2 / span 2}.md\\:col-span-3{grid-column:span 3 / span 3}.md\\:row-span-2{grid-row:span 2 / span 2}.md\\:mt-6{margin-top:1.5rem}.md\\:flex{display:flex}.md\\:hidden{display:none}.md\\:size-32{width:8rem;height:8rem}.md\\:w-fit{width:-moz-fit-content;width:fit-content}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.md\\:grid-cols-\\[0px\\,1fr\\]{grid-template-columns:0px 1fr}.md\\:grid-cols-\\[290px\\,1fr\\]{grid-template-columns:290px 1fr}.md\\:grid-rows-\\[1fr\\]{grid-template-rows:1fr}.md\\:grid-rows-\\[auto\\,1fr\\]{grid-template-rows:auto 1fr}.md\\:gap-4{gap:1rem}.md\\:rounded-xl{border-radius:.75rem}.md\\:bg-gradient-to-l{background-image:linear-gradient(to left,var(--tw-gradient-stops))}.md\\:from-gray-50{--tw-gradient-from: #f9fafb var(--tw-gradient-from-position);--tw-gradient-to: rgb(249 250 251 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to) }.md\\:p-8{padding:2rem}.md\\:px-8{padding-left:2rem;padding-right:2rem}.md\\:py-24{padding-top:6rem;padding-bottom:6rem}.md\\:py-8{padding-top:2rem;padding-bottom:2rem}.md\\:pr-6{padding-right:1.5rem}.md\\:pr-8{padding-right:2rem}.md\\:pt-12{padding-top:3rem}.md\\:pt-5{padding-top:1.25rem}.md\\:text-sm{font-size:.875rem;line-height:1.25rem}.md\\:text-xl{font-size:1.25rem;line-height:1.75rem}.group:hover .md\\:group-hover\\:visible{visibility:visible}.group:hover .md\\:group-hover\\:flex{display:flex}.group:hover .md\\:group-hover\\:opacity-100{opacity:1}.md\\:dark\\:from-gray-800\\/30:is(.dark *){--tw-gradient-from: rgb(31 41 55 / .3) var(--tw-gradient-from-position);--tw-gradient-to: rgb(31 41 55 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to) }}@media (min-width: 1024px){.lg\\:-right-2{right:-.5rem}.lg\\:right-10{right:2.5rem}.lg\\:col-span-1{grid-column:span 1 / span 1}.lg\\:col-span-2{grid-column:span 2 / span 2}.lg\\:col-span-3{grid-column:span 3 / span 3}.lg\\:mt-6{margin-top:1.5rem}.lg\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\\:grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr))}.lg\\:gap-5{gap:1.25rem}.lg\\:pl-24{padding-left:6rem}}@media (min-width: 1280px){.xl\\:w-\\[1200px\\]{width:1200px}.xl\\:w-\\[60rem\\]{width:60rem}.xl\\:max-w-4xl{max-width:56rem}.xl\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.xl\\:gap-8{gap:2rem}.xl\\:p-3\\.5{padding:.875rem}.xl\\:pt-10{padding-top:2.5rem}.xl\\:pt-8{padding-top:2rem}}@media (min-width: 1536px){.\\32xl\\:h-\\[75dvh\\]{height:75dvh}.\\32xl\\:max-h-\\[310px\\]{max-height:310px}.\\32xl\\:w-\\[64rem\\]{width:64rem}}.\\[\\&\\>\\*\\]\\:pointer-events-auto>*{pointer-events:auto}.peer:checked~.peer-checked\\:\\[\\&\\>div\\]\\:translate-x-3\\.5>div{--tw-translate-x: .875rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.730Z",
        "time": 0.0940000027185306,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.07500000356230885,
          "receive": 0.018999999156221747,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "VeryHigh",
        "_resourceType": "stylesheet",
        "cache": {},
        "connection": "2628",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/assets/pendingMessage.Cv82MC_y.css",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": "https://huggingface.co/chat/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"360-1733240213000\""
            },
            {
              "name": "age",
              "value": "116799"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "360"
            },
            {
              "name": "x-amz-cf-id",
              "value": "7FdrKQuTLsKALNssHxTa1q0Op8Dg_K9c_kUxuijiuULPLyD2NUeBZQ=="
            },
            {
              "name": "date",
              "value": "Tue, 03 Dec 2024 15:42:20 GMT"
            },
            {
              "name": "content-type",
              "value": "text/css"
            },
            {
              "name": "last-modified",
              "value": "Tue, 03 Dec 2024 15:36:53 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1028,
            "mimeType": "text/css",
            "text": "pre.svelte-jxi03l,textarea.svelte-jxi03l{font-family:inherit;box-sizing:border-box;line-height:1.5}.hoverable.svelte-egyr4h:hover{background-color:#6b72801a}details.svelte-1escu1z summary.svelte-1escu1z::-webkit-details-marker{display:none}.loading-path.svelte-1escu1z.svelte-1escu1z{stroke-dasharray:61.45;animation:svelte-1escu1z-loading 2s linear infinite}@keyframes svelte-1escu1z-loading{to{stroke-dashoffset:122.9}}details.svelte-z6gw3b summary.svelte-z6gw3b::-webkit-details-marker{display:none}.loading-path.svelte-z6gw3b.svelte-z6gw3b{stroke-dasharray:61.45;animation:loading 2s linear infinite}.katex-display{overflow:auto hidden}details.svelte-135jgtx summary.svelte-135jgtx::-webkit-details-marker{display:none}@keyframes svelte-1g7m645-loading{to{stroke-dashoffset:122.9}}.paste-glow.svelte-18d89uy{animation:svelte-18d89uy-glow 1s cubic-bezier(.4,0,.2,1) forwards;will-change:box-shadow}@keyframes svelte-18d89uy-glow{0%{box-shadow:0 0 #3b82f6cc}50%{box-shadow:0 0 20px 4px #3b82f699}to{box-shadow:0 0 #3b82f600}}\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.730Z",
        "time": 0.062000006437301636,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.051000009989365935,
          "receive": 0.0109999964479357,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/entry/start.BRybKgr3.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"72-1733326797000\""
            },
            {
              "name": "age",
              "value": "30340"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "72"
            },
            {
              "name": "x-amz-cf-id",
              "value": "HUwt4RnGJjhsSVrtXdEoG0lXdy-YC9UwebjB6vzc1c60M9kgyjsvnA=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:19 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 68,
            "mimeType": "text/javascript",
            "text": "import{e as a}from\"../chunks/entry.CNbBV9gi.js\";export{a as start};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.735Z",
        "time": 0.18200000340584666,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.14400000509340316,
          "receive": 0.037999998312443495,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"10621-1733326797000\""
            },
            {
              "name": "age",
              "value": "30315"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "10621"
            },
            {
              "name": "x-amz-cf-id",
              "value": "7M0SE-tTMlwz6Tmo4HuxVttdHeHEEaWZ3cawTv36_6tU9Q4OVyRNgA=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:44 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 29647,
            "mimeType": "text/javascript",
            "text": "import{n as pe,s as _t,a4 as we,z as wt}from\"./scheduler.CeakrPJD.js\";import{H as oe,S as Se,R as Ke}from\"./control.CYgJF_JY.js\";new URL(\"sveltekit-internal://\");function vt(e,n){return e===\"/\"||n===\"ignore\"?e:n===\"never\"?e.endsWith(\"/\")?e.slice(0,-1):e:n===\"always\"&&!e.endsWith(\"/\")?e+\"/\":e}function bt(e){return e.split(\"%25\").map(decodeURI).join(\"%25\")}function At(e){for(const n in e)e[n]=decodeURIComponent(e[n]);return e}function ge({href:e}){return e.split(\"#\")[0]}const kt=[\"href\",\"pathname\",\"search\",\"toString\",\"toJSON\"];function St(e,n,t){const a=new URL(e);Object.defineProperty(a,\"searchParams\",{value:new Proxy(a.searchParams,{get(r,o){if(o===\"get\"||o===\"getAll\"||o===\"has\")return i=>(t(i),r[o](i));n();const s=Reflect.get(r,o);return typeof s==\"function\"?s.bind(r):s}}),enumerable:!0,configurable:!0});for(const r of kt)Object.defineProperty(a,r,{get(){return n(),e[r]},enumerable:!0,configurable:!0});return a}const Et=\"/__data.json\",Rt=\".html__data.json\";function It(e){return e.endsWith(\".html\")?e.replace(/\\.html$/,Rt):e.replace(/\\/$/,\"\")+Et}function Ut(...e){let n=5381;for(const t of e)if(typeof t==\"string\"){let a=t.length;for(;a;)n=n*33^t.charCodeAt(--a)}else if(ArrayBuffer.isView(t)){const a=new Uint8Array(t.buffer,t.byteOffset,t.byteLength);let r=a.length;for(;r;)n=n*33^a[--r]}else throw new TypeError(\"value must be a string or TypedArray\");return(n>>>0).toString(36)}function Lt(e){const n=atob(e),t=new Uint8Array(n.length);for(let a=0;a<n.length;a++)t[a]=n.charCodeAt(a);return t.buffer}const ze=window.fetch;window.fetch=(e,n)=>((e instanceof Request?e.method:(n==null?void 0:n.method)||\"GET\")!==\"GET\"&&M.delete(Ee(e)),ze(e,n));const M=new Map;function Tt(e,n){const t=Ee(e,n),a=document.querySelector(t);if(a!=null&&a.textContent){let{body:r,...o}=JSON.parse(a.textContent);const s=a.getAttribute(\"data-ttl\");return s&&M.set(t,{body:r,init:o,ttl:1e3*Number(s)}),a.getAttribute(\"data-b64\")!==null&&(r=Lt(r)),Promise.resolve(new Response(r,o))}return window.fetch(e,n)}function Pt(e,n,t){if(M.size>0){const a=Ee(e,t),r=M.get(a);if(r){if(performance.now()<r.ttl&&[\"default\",\"force-cache\",\"only-if-cached\",void 0].includes(t==null?void 0:t.cache))return new Response(r.body,r.init);M.delete(a)}}return window.fetch(n,t)}function Ee(e,n){let a=`script[data-sveltekit-fetched][data-url=${JSON.stringify(e instanceof Request?e.url:e)}]`;if(n!=null&&n.headers||n!=null&&n.body){const r=[];n.headers&&r.push([...new Headers(n.headers)].join(\",\")),n.body&&(typeof n.body==\"string\"||ArrayBuffer.isView(n.body))&&r.push(n.body),a+=`[data-hash=\"${Ut(...r)}\"]`}return a}const xt=/^(\\[)?(\\.\\.\\.)?(\\w+)(?:=(\\w+))?(\\])?$/;function Ct(e){const n=[];return{pattern:e===\"/\"?/^\\/$/:new RegExp(`^${Ot(e).map(a=>{const r=/^\\[\\.\\.\\.(\\w+)(?:=(\\w+))?\\]$/.exec(a);if(r)return n.push({name:r[1],matcher:r[2],optional:!1,rest:!0,chained:!0}),\"(?:/(.*))?\";const o=/^\\[\\[(\\w+)(?:=(\\w+))?\\]\\]$/.exec(a);if(o)return n.push({name:o[1],matcher:o[2],optional:!0,rest:!1,chained:!0}),\"(?:/([^/]+))?\";if(!a)return;const s=a.split(/\\[(.+?)\\](?!\\])/);return\"/\"+s.map((c,l)=>{if(l%2){if(c.startsWith(\"x+\"))return me(String.fromCharCode(parseInt(c.slice(2),16)));if(c.startsWith(\"u+\"))return me(String.fromCharCode(...c.slice(2).split(\"-\").map(f=>parseInt(f,16))));const d=xt.exec(c),[,h,y,u,p]=d;return n.push({name:u,matcher:p,optional:!!h,rest:!!y,chained:y?l===1&&s[0]===\"\":!1}),y?\"(.*?)\":h?\"([^/]*)?\":\"([^/]+?)\"}return me(c)}).join(\"\")}).join(\"\")}/?$`),params:n}}function Nt(e){return!/^\\([^)]+\\)$/.test(e)}function Ot(e){return e.slice(1).split(\"/\").filter(Nt)}function jt(e,n,t){const a={},r=e.slice(1),o=r.filter(i=>i!==void 0);let s=0;for(let i=0;i<n.length;i+=1){const c=n[i];let l=r[i-s];if(c.chained&&c.rest&&s&&(l=r.slice(i-s,i+1).filter(d=>d).join(\"/\"),s=0),l===void 0){c.rest&&(a[c.name]=\"\");continue}if(!c.matcher||t[c.matcher](l)){a[c.name]=l;const d=n[i+1],h=r[i+1];d&&!d.rest&&d.optional&&h&&c.chained&&(s=0),!d&&!h&&Object.keys(a).length===o.length&&(s=0);continue}if(c.optional&&c.chained){s++;continue}return}if(!s)return a}function me(e){return e.normalize().replace(/[[\\]]/g,\"\\\\$&\").replace(/%/g,\"%25\").replace(/\\//g,\"%2[Ff]\").replace(/\\?/g,\"%3[Ff]\").replace(/#/g,\"%23\").replace(/[.*+?^${}()|\\\\]/g,\"\\\\$&\")}function $t({nodes:e,server_loads:n,dictionary:t,matchers:a}){const r=new Set(n);return Object.entries(t).map(([i,[c,l,d]])=>{const{pattern:h,params:y}=Ct(i),u={id:i,exec:p=>{const f=h.exec(p);if(f)return jt(f,y,a)},errors:[1,...d||[]].map(p=>e[p]),layouts:[0,...l||[]].map(s),leaf:o(c)};return u.errors.length=u.layouts.length=Math.max(u.errors.length,u.layouts.length),u});function o(i){const c=i<0;return c&&(i=~i),[c,e[i]]}function s(i){return i===void 0?i:[r.has(i),e[i]]}}function We(e,n=JSON.parse){try{return n(sessionStorage[e])}catch{}}function Oe(e,n,t=JSON.stringify){const a=t(n);try{sessionStorage[e]=a}catch{}}const j=[];function Re(e,n=pe){let t;const a=new Set;function r(i){if(_t(e,i)&&(e=i,t)){const c=!j.length;for(const l of a)l[1](),j.push(l,e);if(c){for(let l=0;l<j.length;l+=2)j[l][0](j[l+1]);j.length=0}}}function o(i){r(i(e))}function s(i,c=pe){const l=[i,c];return a.add(l),a.size===1&&(t=n(r,o)||pe),i(e),()=>{a.delete(l),a.size===0&&t&&(t(),t=null)}}return{set:r,update:o,subscribe:s}}var Me;const L=((Me=globalThis.__sveltekit_1ng6dh3)==null?void 0:Me.base)??\"/chat\";var He;const Dt=((He=globalThis.__sveltekit_1ng6dh3)==null?void 0:He.assets)??L,Ft=\"1733326775035\",Ye=\"sveltekit:snapshot\",Je=\"sveltekit:scroll\",Xe=\"sveltekit:states\",Vt=\"sveltekit:pageurl\",D=\"sveltekit:history\",K=\"sveltekit:navigation\",Z={tap:1,hover:2,viewport:3,eager:4,off:-1,false:-1},J=location.origin;function Ze(e){if(e instanceof URL)return e;let n=document.baseURI;if(!n){const t=document.getElementsByTagName(\"base\");n=t.length?t[0].href:document.URL}return new URL(e,n)}function Ie(){return{x:pageXOffset,y:pageYOffset}}function $(e,n){return e.getAttribute(`data-sveltekit-${n}`)}const je={...Z,\"\":Z.hover};function Qe(e){let n=e.assignedSlot??e.parentNode;return(n==null?void 0:n.nodeType)===11&&(n=n.host),n}function et(e,n){for(;e&&e!==n;){if(e.nodeName.toUpperCase()===\"A\"&&e.hasAttribute(\"href\"))return e;e=Qe(e)}}function ve(e,n){let t;try{t=new URL(e instanceof SVGAElement?e.href.baseVal:e.href,document.baseURI)}catch{}const a=e instanceof SVGAElement?e.target.baseVal:e.target,r=!t||!!a||ie(t,n)||(e.getAttribute(\"rel\")||\"\").split(/\\s+/).includes(\"external\"),o=(t==null?void 0:t.origin)===J&&e.hasAttribute(\"download\");return{url:t,external:r,target:a,download:o}}function Q(e){let n=null,t=null,a=null,r=null,o=null,s=null,i=e;for(;i&&i!==document.documentElement;)a===null&&(a=$(i,\"preload-code\")),r===null&&(r=$(i,\"preload-data\")),n===null&&(n=$(i,\"keepfocus\")),t===null&&(t=$(i,\"noscroll\")),o===null&&(o=$(i,\"reload\")),s===null&&(s=$(i,\"replacestate\")),i=Qe(i);function c(l){switch(l){case\"\":case\"true\":return!0;case\"off\":case\"false\":return!1;default:return}}return{preload_code:je[a??\"off\"],preload_data:je[r??\"off\"],keepfocus:c(n),noscroll:c(t),reload:c(o),replace_state:c(s)}}function $e(e){const n=Re(e);let t=!0;function a(){t=!0,n.update(s=>s)}function r(s){t=!1,n.set(s)}function o(s){let i;return n.subscribe(c=>{(i===void 0||t&&c!==i)&&s(i=c)})}return{notify:a,set:r,subscribe:o}}function Bt(){const{set:e,subscribe:n}=Re(!1);let t;async function a(){clearTimeout(t);try{const r=await fetch(`${Dt}/_app/version.json`,{headers:{pragma:\"no-cache\",\"cache-control\":\"no-cache\"}});if(!r.ok)return!1;const s=(await r.json()).version!==Ft;return s&&(e(!0),clearTimeout(t)),s}catch{return!1}}return{subscribe:n,check:a}}function ie(e,n){return e.origin!==J||!e.pathname.startsWith(n)}function De(e){const n=Gt(e),t=new ArrayBuffer(n.length),a=new DataView(t);for(let r=0;r<t.byteLength;r++)a.setUint8(r,n.charCodeAt(r));return t}const qt=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";function Gt(e){e.length%4===0&&(e=e.replace(/==?$/,\"\"));let n=\"\",t=0,a=0;for(let r=0;r<e.length;r++)t<<=6,t|=qt.indexOf(e[r]),a+=6,a===24&&(n+=String.fromCharCode((t&16711680)>>16),n+=String.fromCharCode((t&65280)>>8),n+=String.fromCharCode(t&255),t=a=0);return a===12?(t>>=4,n+=String.fromCharCode(t)):a===18&&(t>>=2,n+=String.fromCharCode((t&65280)>>8),n+=String.fromCharCode(t&255)),n}const Mt=-1,Ht=-2,Kt=-3,zt=-4,Wt=-5,Yt=-6;function hn(e,n){return tt(JSON.parse(e),n)}function tt(e,n){if(typeof e==\"number\")return r(e,!0);if(!Array.isArray(e)||e.length===0)throw new Error(\"Invalid input\");const t=e,a=Array(t.length);function r(o,s=!1){if(o===Mt)return;if(o===Kt)return NaN;if(o===zt)return 1/0;if(o===Wt)return-1/0;if(o===Yt)return-0;if(s)throw new Error(\"Invalid input\");if(o in a)return a[o];const i=t[o];if(!i||typeof i!=\"object\")a[o]=i;else if(Array.isArray(i))if(typeof i[0]==\"string\"){const c=i[0],l=n==null?void 0:n[c];if(l)return a[o]=l(r(i[1]));switch(c){case\"Date\":a[o]=new Date(i[1]);break;case\"Set\":const d=new Set;a[o]=d;for(let u=1;u<i.length;u+=1)d.add(r(i[u]));break;case\"Map\":const h=new Map;a[o]=h;for(let u=1;u<i.length;u+=2)h.set(r(i[u]),r(i[u+1]));break;case\"RegExp\":a[o]=new RegExp(i[1],i[2]);break;case\"Object\":a[o]=Object(i[1]);break;case\"BigInt\":a[o]=BigInt(i[1]);break;case\"null\":const y=Object.create(null);a[o]=y;for(let u=1;u<i.length;u+=2)y[i[u]]=r(i[u+1]);break;case\"Int8Array\":case\"Uint8Array\":case\"Uint8ClampedArray\":case\"Int16Array\":case\"Uint16Array\":case\"Int32Array\":case\"Uint32Array\":case\"Float32Array\":case\"Float64Array\":case\"BigInt64Array\":case\"BigUint64Array\":{const u=globalThis[c],p=i[1],f=De(p),m=new u(f);a[o]=m;break}case\"ArrayBuffer\":{const u=i[1],p=De(u);a[o]=p;break}default:throw new Error(`Unknown type ${c}`)}}else{const c=new Array(i.length);a[o]=c;for(let l=0;l<i.length;l+=1){const d=i[l];d!==Ht&&(c[l]=r(d))}}else{const c={};a[o]=c;for(const l in i){const d=i[l];c[l]=r(d)}}return a[o]}return r(0)}const nt=new Set([\"load\",\"prerender\",\"csr\",\"ssr\",\"trailingSlash\",\"config\"]);[...nt];const Jt=new Set([...nt]);[...Jt];function Xt(e){return e.filter(n=>n!=null)}const Zt=\"x-sveltekit-invalidated\",Qt=\"x-sveltekit-trailing-slash\";function ee(e){return e instanceof oe||e instanceof Se?e.status:500}function en(e){return e instanceof Se?e.text:\"Internal Error\"}const O=We(Je)??{},z=We(Ye)??{},P={url:$e({}),page:$e({}),navigating:Re(null),updated:Bt()};function Ue(e){O[e]=Ie()}function tn(e,n){let t=e+1;for(;O[t];)delete O[t],t+=1;for(t=n+1;z[t];)delete z[t],t+=1}function V(e){return location.href=e.href,new Promise(()=>{})}async function at(){if(\"serviceWorker\"in navigator){const e=await navigator.serviceWorker.getRegistration(L||\"/\");e&&await e.update()}}function Fe(){}let se,be,te,T,Ae,q;const ne=[],ae=[];let I=null;const rt=[],nn=[];let C=[],_={branch:[],error:null,url:null},Le=!1,re=!1,Ve=!0,W=!1,G=!1,ot=!1,ce=!1,N,S,U,E,B;const H=new Set;let ye;async function pn(e,n,t){var r,o;document.URL!==location.href&&(location.href=location.href),q=e,se=$t(e),T=document.documentElement,Ae=n,be=e.nodes[0],te=e.nodes[1],be(),te(),S=(r=history.state)==null?void 0:r[D],U=(o=history.state)==null?void 0:o[K],S||(S=U=Date.now(),history.replaceState({...history.state,[D]:S,[K]:U},\"\"));const a=O[S];a&&(history.scrollRestoration=\"manual\",scrollTo(a.x,a.y)),t?await fn(Ae,t):cn(location.href,{replaceState:!0}),ln()}async function it(){if(await(ye||(ye=Promise.resolve())),!ye)return;ye=null;const e=ue(_.url,!0);I=null;const n=B={},t=e&&await xe(e);if(!(!t||n!==B)){if(t.type===\"redirect\")return le(new URL(t.location,_.url).href,{},1,n);t.props.page&&(E=t.props.page),_=t.state,st(),N.$set(t.props)}}function st(){ne.length=0,ce=!1}function ct(e){ae.some(n=>n==null?void 0:n.snapshot)&&(z[e]=ae.map(n=>{var t;return(t=n==null?void 0:n.snapshot)==null?void 0:t.capture()}))}function lt(e){var n;(n=z[e])==null||n.forEach((t,a)=>{var r,o;(o=(r=ae[a])==null?void 0:r.snapshot)==null||o.restore(t)})}function Be(){Ue(S),Oe(Je,O),ct(U),Oe(Ye,z)}async function le(e,n,t,a){return X({type:\"goto\",url:Ze(e),keepfocus:n.keepFocus,noscroll:n.noScroll,replace_state:n.replaceState,state:n.state,redirect_count:t,nav_token:a,accept:()=>{n.invalidateAll&&(ce=!0)}})}async function an(e){if(e.id!==(I==null?void 0:I.id)){const n={};H.add(n),I={id:e.id,token:n,promise:xe({...e,preload:n}).then(t=>(H.delete(n),t.type===\"loaded\"&&t.state.error&&(I=null),t))}}return I.promise}async function _e(e){const n=se.find(t=>t.exec(dt(e)));n&&await Promise.all([...n.layouts,n.leaf].map(t=>t==null?void 0:t[1]()))}function ft(e,n,t){var o;_=e.state;const a=document.querySelector(\"style[data-sveltekit]\");a&&a.remove(),E=e.props.page,N=new q.root({target:n,props:{...e.props,stores:P,components:ae},hydrate:t,sync:!1}),lt(U);const r={from:null,to:{params:_.params,route:{id:((o=_.route)==null?void 0:o.id)??null},url:new URL(location.href)},willUnload:!1,type:\"enter\",complete:Promise.resolve()};C.forEach(s=>s(r)),re=!0}function Y({url:e,params:n,branch:t,status:a,error:r,route:o,form:s}){let i=\"never\";if(L&&(e.pathname===L||e.pathname===L+\"/\"))i=\"always\";else for(const u of t)(u==null?void 0:u.slash)!==void 0&&(i=u.slash);e.pathname=vt(e.pathname,i),e.search=e.search;const c={type:\"loaded\",state:{url:e,params:n,branch:t,error:r,route:o},props:{constructors:Xt(t).map(u=>u.node.component),page:E}};s!==void 0&&(c.props.form=s);let l={},d=!E,h=0;for(let u=0;u<Math.max(t.length,_.branch.length);u+=1){const p=t[u],f=_.branch[u];(p==null?void 0:p.data)!==(f==null?void 0:f.data)&&(d=!0),p&&(l={...l,...p.data},d&&(c.props[`data_${h}`]=l),h+=1)}return(!_.url||e.href!==_.url.href||_.error!==r||s!==void 0&&s!==E.form||d)&&(c.props.page={error:r,params:n,route:{id:(o==null?void 0:o.id)??null},state:{},status:a,url:new URL(e),form:s??null,data:d?l:E.data}),c}async function Te({loader:e,parent:n,url:t,params:a,route:r,server_data_node:o}){var d,h,y;let s=null,i=!0;const c={dependencies:new Set,params:new Set,parent:!1,route:!1,url:!1,search_params:new Set},l=await e();if((d=l.universal)!=null&&d.load){let u=function(...f){for(const m of f){const{href:b}=new URL(m,t);c.dependencies.add(b)}};const p={route:new Proxy(r,{get:(f,m)=>(i&&(c.route=!0),f[m])}),params:new Proxy(a,{get:(f,m)=>(i&&c.params.add(m),f[m])}),data:(o==null?void 0:o.data)??null,url:St(t,()=>{i&&(c.url=!0)},f=>{i&&c.search_params.add(f)}),async fetch(f,m){let b;f instanceof Request?(b=f.url,m={body:f.method===\"GET\"||f.method===\"HEAD\"?void 0:await f.blob(),cache:f.cache,credentials:f.credentials,headers:[...f.headers].length?f.headers:void 0,integrity:f.integrity,keepalive:f.keepalive,method:f.method,mode:f.mode,redirect:f.redirect,referrer:f.referrer,referrerPolicy:f.referrerPolicy,signal:f.signal,...m}):b=f;const R=new URL(b,t);return i&&u(R.href),R.origin===t.origin&&(b=R.href.slice(t.origin.length)),re?Pt(b,R.href,m):Tt(b,m)},setHeaders:()=>{},depends:u,parent(){return i&&(c.parent=!0),n()},untrack(f){i=!1;try{return f()}finally{i=!0}}};s=await l.universal.load.call(null,p)??null}return{node:l,loader:e,server:o,universal:(h=l.universal)!=null&&h.load?{type:\"data\",data:s,uses:c}:null,data:s??(o==null?void 0:o.data)??null,slash:((y=l.universal)==null?void 0:y.trailingSlash)??(o==null?void 0:o.slash)}}function qe(e,n,t,a,r,o){if(ce)return!0;if(!r)return!1;if(r.parent&&e||r.route&&n||r.url&&t)return!0;for(const s of r.search_params)if(a.has(s))return!0;for(const s of r.params)if(o[s]!==_.params[s])return!0;for(const s of r.dependencies)if(ne.some(i=>i(new URL(s))))return!0;return!1}function Pe(e,n){return(e==null?void 0:e.type)===\"data\"?e:(e==null?void 0:e.type)===\"skip\"?n??null:null}function rn(e,n){if(!e)return new Set(n.searchParams.keys());const t=new Set([...e.searchParams.keys(),...n.searchParams.keys()]);for(const a of t){const r=e.searchParams.getAll(a),o=n.searchParams.getAll(a);r.every(s=>o.includes(s))&&o.every(s=>r.includes(s))&&t.delete(a)}return t}function Ge({error:e,url:n,route:t,params:a}){return{type:\"loaded\",state:{error:e,url:n,route:t,params:a,branch:[]},props:{page:E,constructors:[]}}}async function xe({id:e,invalidating:n,url:t,params:a,route:r,preload:o}){if((I==null?void 0:I.id)===e)return H.delete(I.token),I.promise;const{errors:s,layouts:i,leaf:c}=r,l=[...i,c];s.forEach(g=>g==null?void 0:g().catch(()=>{})),l.forEach(g=>g==null?void 0:g[1]().catch(()=>{}));let d=null;const h=_.url?e!==_.url.pathname+_.url.search:!1,y=_.route?r.id!==_.route.id:!1,u=rn(_.url,t);let p=!1;const f=l.map((g,v)=>{var x;const A=_.branch[v],k=!!(g!=null&&g[0])&&((A==null?void 0:A.loader)!==g[1]||qe(p,y,h,u,(x=A.server)==null?void 0:x.uses,a));return k&&(p=!0),k});if(f.some(Boolean)){try{d=await gt(t,f)}catch(g){const v=await F(g,{url:t,params:a,route:{id:e}});return H.has(o)?Ge({error:v,url:t,params:a,route:r}):fe({status:ee(g),error:v,url:t,route:r})}if(d.type===\"redirect\")return d}const m=d==null?void 0:d.nodes;let b=!1;const R=l.map(async(g,v)=>{var de;if(!g)return;const A=_.branch[v],k=m==null?void 0:m[v];if((!k||k.type===\"skip\")&&g[1]===(A==null?void 0:A.loader)&&!qe(b,y,h,u,(de=A.universal)==null?void 0:de.uses,a))return A;if(b=!0,(k==null?void 0:k.type)===\"error\")throw k;return Te({loader:g[1],url:t,params:a,route:r,parent:async()=>{var Ne;const Ce={};for(let he=0;he<v;he+=1)Object.assign(Ce,(Ne=await R[he])==null?void 0:Ne.data);return Ce},server_data_node:Pe(k===void 0&&g[0]?{type:\"skip\"}:k??null,g[0]?A==null?void 0:A.server:void 0)})});for(const g of R)g.catch(()=>{});const w=[];for(let g=0;g<l.length;g+=1)if(l[g])try{w.push(await R[g])}catch(v){if(v instanceof Ke)return{type:\"redirect\",location:v.location};if(H.has(o))return Ge({error:await F(v,{params:a,url:t,route:{id:r.id}}),url:t,params:a,route:r});let A=ee(v),k;if(m!=null&&m.includes(v))A=v.status??A,k=v.error;else if(v instanceof oe)k=v.body;else{if(await P.updated.check())return await at(),await V(t);k=await F(v,{params:a,url:t,route:{id:r.id}})}const x=await ut(g,w,s);return x?Y({url:t,params:a,branch:w.slice(0,x.idx).concat(x.node),status:A,error:k,route:r}):await pt(t,{id:r.id},k,A)}else w.push(void 0);return Y({url:t,params:a,branch:w,status:200,error:null,route:r,form:n?void 0:null})}async function ut(e,n,t){for(;e--;)if(t[e]){let a=e;for(;!n[a];)a-=1;try{return{idx:a+1,node:{node:await t[e](),loader:t[e],data:{},server:null,universal:null}}}catch{continue}}}async function fe({status:e,error:n,url:t,route:a}){const r={};let o=null;if(q.server_loads[0]===0)try{const l=await gt(t,[!0]);if(l.type!==\"data\"||l.nodes[0]&&l.nodes[0].type!==\"data\")throw 0;o=l.nodes[0]??null}catch{(t.origin!==J||t.pathname!==location.pathname||Le)&&await V(t)}const i=await Te({loader:be,url:t,params:r,route:a,parent:()=>Promise.resolve({}),server_data_node:Pe(o)}),c={node:await te(),loader:te,universal:null,server:null,data:null};return Y({url:t,params:r,branch:[i,c],status:e,error:n,route:null})}function ue(e,n){if(!e||ie(e,L))return;let t;try{t=q.hooks.reroute({url:new URL(e)})??e.pathname}catch{return}const a=dt(t);for(const r of se){const o=r.exec(a);if(o)return{id:e.pathname+e.search,invalidating:n,route:r,params:At(o),url:e}}}function dt(e){return bt(e.slice(L.length)||\"/\")}function ht({url:e,type:n,intent:t,delta:a}){let r=!1;const o=yt(_,t,e,n);a!==void 0&&(o.navigation.delta=a);const s={...o.navigation,cancel:()=>{r=!0,o.reject(new Error(\"navigation cancelled\"))}};return W||rt.forEach(i=>i(s)),r?null:o}async function X({type:e,url:n,popped:t,keepfocus:a,noscroll:r,replace_state:o,state:s={},redirect_count:i=0,nav_token:c={},accept:l=Fe,block:d=Fe}){const h=ue(n,!1),y=ht({url:n,type:e,delta:t==null?void 0:t.delta,intent:h});if(!y){d();return}const u=S,p=U;l(),W=!0,re&&P.navigating.set(y.navigation),B=c;let f=h&&await xe(h);if(!f){if(ie(n,L))return await V(n);f=await pt(n,{id:null},await F(new Se(404,\"Not Found\",`Not found: ${n.pathname}`),{url:n,params:{},route:{id:null}}),404)}if(n=(h==null?void 0:h.url)||n,B!==c)return y.reject(new Error(\"navigation aborted\")),!1;if(f.type===\"redirect\")if(i>=20)f=await fe({status:500,error:await F(new Error(\"Redirect loop\"),{url:n,params:{},route:{id:null}}),url:n,route:{id:null}});else return le(new URL(f.location,n).href,{},i+1,c),!1;else f.props.page.status>=400&&await P.updated.check()&&(await at(),await V(n));if(st(),Ue(u),ct(p),f.props.page.url.pathname!==n.pathname&&(n.pathname=f.props.page.url.pathname),s=t?t.state:s,!t){const w=o?0:1,g={[D]:S+=w,[K]:U+=w,[Xe]:s};(o?history.replaceState:history.pushState).call(history,g,\"\",n),o||tn(S,U)}if(I=null,f.props.page.state=s,re){_=f.state,f.props.page&&(f.props.page.url=n);const w=(await Promise.all(nn.map(g=>g(y.navigation)))).filter(g=>typeof g==\"function\");if(w.length>0){let g=function(){C=C.filter(v=>!w.includes(v))};w.push(g),C.push(...w)}N.$set(f.props),ot=!0}else ft(f,Ae,!1);const{activeElement:m}=document;await we();const b=t?t.scroll:r?Ie():null;if(Ve){const w=n.hash&&document.getElementById(decodeURIComponent(n.hash.slice(1)));b?scrollTo(b.x,b.y):w?w.scrollIntoView():scrollTo(0,0)}const R=document.activeElement!==m&&document.activeElement!==document.body;!a&&!R&&ke(),Ve=!0,f.props.page&&(E=f.props.page),W=!1,e===\"popstate\"&&lt(U),y.fulfil(void 0),C.forEach(w=>w(y.navigation)),P.navigating.set(null)}async function pt(e,n,t,a){return e.origin===J&&e.pathname===location.pathname&&!Le?await fe({status:a,error:t,url:e,route:n}):await V(e)}function on(){let e;T.addEventListener(\"mousemove\",o=>{const s=o.target;clearTimeout(e),e=setTimeout(()=>{a(s,2)},20)});function n(o){o.defaultPrevented||a(o.composedPath()[0],1)}T.addEventListener(\"mousedown\",n),T.addEventListener(\"touchstart\",n,{passive:!0});const t=new IntersectionObserver(o=>{for(const s of o)s.isIntersecting&&(_e(s.target.href),t.unobserve(s.target))},{threshold:0});function a(o,s){const i=et(o,T);if(!i)return;const{url:c,external:l,download:d}=ve(i,L);if(l||d)return;const h=Q(i),y=c&&_.url.pathname+_.url.search===c.pathname+c.search;if(!h.reload&&!y)if(s<=h.preload_data){const u=ue(c,!1);u&&an(u)}else s<=h.preload_code&&_e(c.pathname)}function r(){t.disconnect();for(const o of T.querySelectorAll(\"a\")){const{url:s,external:i,download:c}=ve(o,L);if(i||c)continue;const l=Q(o);l.reload||(l.preload_code===Z.viewport&&t.observe(o),l.preload_code===Z.eager&&_e(s.pathname))}}C.push(r),r()}function F(e,n){if(e instanceof oe)return e.body;const t=ee(e),a=en(e);return q.hooks.handleError({error:e,event:n,status:t,message:a})??{message:a}}function sn(e,n){wt(()=>(e.push(n),()=>{const t=e.indexOf(n);e.splice(t,1)}))}function gn(e){sn(C,e)}function cn(e,n={}){return e=Ze(e),e.origin!==J?Promise.reject(new Error(\"goto: invalid URL\")):le(e,n,0)}function mn(e){if(typeof e==\"function\")ne.push(e);else{const{href:n}=new URL(e,location.href);ne.push(t=>t.href===n)}return it()}function yn(){return ce=!0,it()}async function _n(e){if(e.type===\"error\"){const n=new URL(location.href),{branch:t,route:a}=_;if(!a)return;const r=await ut(_.branch.length,t,a.errors);if(r){const o=Y({url:n,params:_.params,branch:t.slice(0,r.idx).concat(r.node),status:e.status??500,error:e.error,route:a});_=o.state,N.$set(o.props),we().then(ke)}}else e.type===\"redirect\"?le(e.location,{invalidateAll:!0},0):(N.$set({form:null,page:{...E,form:e.data,status:e.status}}),await we(),N.$set({form:e.data}),e.type===\"success\"&&ke())}function ln(){var n;history.scrollRestoration=\"manual\",addEventListener(\"beforeunload\",t=>{let a=!1;if(Be(),!W){const r=yt(_,void 0,null,\"leave\"),o={...r.navigation,cancel:()=>{a=!0,r.reject(new Error(\"navigation cancelled\"))}};rt.forEach(s=>s(o))}a?(t.preventDefault(),t.returnValue=\"\"):history.scrollRestoration=\"auto\"}),addEventListener(\"visibilitychange\",()=>{document.visibilityState===\"hidden\"&&Be()}),(n=navigator.connection)!=null&&n.saveData||on(),T.addEventListener(\"click\",async t=>{if(t.button||t.which!==1||t.metaKey||t.ctrlKey||t.shiftKey||t.altKey||t.defaultPrevented)return;const a=et(t.composedPath()[0],T);if(!a)return;const{url:r,external:o,target:s,download:i}=ve(a,L);if(!r)return;if(s===\"_parent\"||s===\"_top\"){if(window.parent!==window)return}else if(s&&s!==\"_self\")return;const c=Q(a);if(!(a instanceof SVGAElement)&&r.protocol!==location.protocol&&!(r.protocol===\"https:\"||r.protocol===\"http:\")||i)return;const[d,h]=r.href.split(\"#\"),y=d===ge(location);if(o||c.reload&&(!y||!h)){ht({url:r,type:\"link\"})?W=!0:t.preventDefault();return}if(h!==void 0&&y){const[,u]=_.url.href.split(\"#\");if(u===h){if(t.preventDefault(),h===\"\"||h===\"top\"&&a.ownerDocument.getElementById(\"top\")===null)window.scrollTo({top:0});else{const p=a.ownerDocument.getElementById(decodeURIComponent(h));p&&(p.scrollIntoView(),p.focus())}return}if(G=!0,Ue(S),e(r),!c.replace_state)return;G=!1}t.preventDefault(),await new Promise(u=>{requestAnimationFrame(()=>{setTimeout(u,0)}),setTimeout(u,100)}),X({type:\"link\",url:r,keepfocus:c.keepfocus,noscroll:c.noscroll,replace_state:c.replace_state??r.href===location.href})}),T.addEventListener(\"submit\",t=>{if(t.defaultPrevented)return;const a=HTMLFormElement.prototype.cloneNode.call(t.target),r=t.submitter;if(((r==null?void 0:r.formTarget)||a.target)===\"_blank\"||((r==null?void 0:r.formMethod)||a.method)!==\"get\")return;const i=new URL((r==null?void 0:r.hasAttribute(\"formaction\"))&&(r==null?void 0:r.formAction)||a.action);if(ie(i,L))return;const c=t.target,l=Q(c);if(l.reload)return;t.preventDefault(),t.stopPropagation();const d=new FormData(c),h=r==null?void 0:r.getAttribute(\"name\");h&&d.append(h,(r==null?void 0:r.getAttribute(\"value\"))??\"\"),i.search=new URLSearchParams(d).toString(),X({type:\"form\",url:i,keepfocus:l.keepfocus,noscroll:l.noscroll,replace_state:l.replace_state??i.href===location.href})}),addEventListener(\"popstate\",async t=>{var a;if((a=t.state)!=null&&a[D]){const r=t.state[D];if(B={},r===S)return;const o=O[r],s=t.state[Xe]??{},i=new URL(t.state[Vt]??location.href),c=t.state[K],l=ge(location)===ge(_.url);if(c===U&&(ot||l)){e(i),O[S]=Ie(),o&&scrollTo(o.x,o.y),s!==E.state&&(E={...E,state:s},N.$set({page:E})),S=r;return}const h=r-S;await X({type:\"popstate\",url:i,popped:{state:s,scroll:o,delta:h},accept:()=>{S=r,U=c},block:()=>{history.go(-h)},nav_token:B})}else if(!G){const r=new URL(location.href);e(r)}}),addEventListener(\"hashchange\",()=>{G&&(G=!1,history.replaceState({...history.state,[D]:++S,[K]:U},\"\",location.href))});for(const t of document.querySelectorAll(\"link\"))t.rel===\"icon\"&&(t.href=t.href);addEventListener(\"pageshow\",t=>{t.persisted&&P.navigating.set(null)});function e(t){_.url=t,P.page.set({...E,url:t}),P.page.notify()}}async function fn(e,{status:n=200,error:t,node_ids:a,params:r,route:o,data:s,form:i}){Le=!0;const c=new URL(location.href);({params:r={},route:o={id:null}}=ue(c,!1)||{});let l;try{const d=a.map(async(u,p)=>{const f=s[p];return f!=null&&f.uses&&(f.uses=mt(f.uses)),Te({loader:q.nodes[u],url:c,params:r,route:o,parent:async()=>{const m={};for(let b=0;b<p;b+=1)Object.assign(m,(await d[b]).data);return m},server_data_node:Pe(f)})}),h=await Promise.all(d),y=se.find(({id:u})=>u===o.id);if(y){const u=y.layouts;for(let p=0;p<u.length;p++)u[p]||h.splice(p,0,void 0)}l=Y({url:c,params:r,branch:h,status:n,error:t,form:i,route:y??null})}catch(d){if(d instanceof Ke){await V(new URL(d.location,location.href));return}l=await fe({status:ee(d),error:await F(d,{url:c,params:r,route:o}),url:c,route:o})}l.props.page&&(l.props.page.state={}),ft(l,e,!0)}async function gt(e,n){var r;const t=new URL(e);t.pathname=It(e.pathname),e.pathname.endsWith(\"/\")&&t.searchParams.append(Qt,\"1\"),t.searchParams.append(Zt,n.map(o=>o?\"1\":\"0\").join(\"\"));const a=await ze(t.href);if(!a.ok){let o;throw(r=a.headers.get(\"content-type\"))!=null&&r.includes(\"application/json\")?o=await a.json():a.status===404?o=\"Not Found\":a.status===500&&(o=\"Internal Error\"),new oe(a.status,o)}return new Promise(async o=>{var h;const s=new Map,i=a.body.getReader(),c=new TextDecoder;function l(y){return tt(y,{Promise:u=>new Promise((p,f)=>{s.set(u,{fulfil:p,reject:f})})})}let d=\"\";for(;;){const{done:y,value:u}=await i.read();if(y&&!d)break;for(d+=!u&&d?`\n`:c.decode(u,{stream:!0});;){const p=d.indexOf(`\n`);if(p===-1)break;const f=JSON.parse(d.slice(0,p));if(d=d.slice(p+1),f.type===\"redirect\")return o(f);if(f.type===\"data\")(h=f.nodes)==null||h.forEach(m=>{(m==null?void 0:m.type)===\"data\"&&(m.uses=mt(m.uses),m.data=l(m.data))}),o(f);else if(f.type===\"chunk\"){const{id:m,data:b,error:R}=f,w=s.get(m);s.delete(m),R?w.reject(l(R)):w.fulfil(l(b))}}}})}function mt(e){return{dependencies:new Set((e==null?void 0:e.dependencies)??[]),params:new Set((e==null?void 0:e.params)??[]),parent:!!(e!=null&&e.parent),route:!!(e!=null&&e.route),url:!!(e!=null&&e.url),search_params:new Set((e==null?void 0:e.search_params)??[])}}function ke(){const e=document.querySelector(\"[autofocus]\");if(e)e.focus();else{const n=document.body,t=n.getAttribute(\"tabindex\");n.tabIndex=-1,n.focus({preventScroll:!0,focusVisible:!1}),t!==null?n.setAttribute(\"tabindex\",t):n.removeAttribute(\"tabindex\");const a=getSelection();if(a&&a.type!==\"None\"){const r=[];for(let o=0;o<a.rangeCount;o+=1)r.push(a.getRangeAt(o));setTimeout(()=>{if(a.rangeCount===r.length){for(let o=0;o<a.rangeCount;o+=1){const s=r[o],i=a.getRangeAt(o);if(s.commonAncestorContainer!==i.commonAncestorContainer||s.startContainer!==i.startContainer||s.endContainer!==i.endContainer||s.startOffset!==i.startOffset||s.endOffset!==i.endOffset)return}a.removeAllRanges()}})}}}function yt(e,n,t,a){var c,l;let r,o;const s=new Promise((d,h)=>{r=d,o=h});return s.catch(()=>{}),{navigation:{from:{params:e.params,route:{id:((c=e.route)==null?void 0:c.id)??null},url:e.url},to:t&&{params:(n==null?void 0:n.params)??null,route:{id:((l=n==null?void 0:n.route)==null?void 0:l.id)??null},url:t},willUnload:!n,type:a,complete:s},fulfil:r,reject:o}}export{gn as a,L as b,_n as c,mn as d,pn as e,cn as g,yn as i,hn as p,P as s,Re as w};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.736Z",
        "time": 0.11799999629147351,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.10299999848939478,
          "receive": 0.014999997802078724,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"3439-1732708078000\""
            },
            {
              "name": "age",
              "value": "491890"
            },
            {
              "name": "via",
              "value": "1.1 8d674b0dbbb3efae2c2364b57d734a54.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "3439"
            },
            {
              "name": "x-amz-cf-id",
              "value": "Hz5S2d54eqxcqbsUPUcgzW79fHEvNKmrxPElU5XfeaJyyADWnCIM-Q=="
            },
            {
              "name": "date",
              "value": "Wed, 27 Nov 2024 11:52:03 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 27 Nov 2024 11:47:58 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 9794,
            "mimeType": "text/javascript",
            "text": "var R=Object.defineProperty;var F=(t,n,e)=>n in t?R(t,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[n]=e;var f=(t,n,e)=>F(t,typeof n!=\"symbol\"?n+\"\":n,e);function H(){}const lt=t=>t;function G(t,n){for(const e in n)t[e]=n[e];return t}function at(t){return!!t&&(typeof t==\"object\"||typeof t==\"function\")&&typeof t.then==\"function\"}function I(t){return t()}function ut(){return Object.create(null)}function z(t){t.forEach(I)}function U(t){return typeof t==\"function\"}function ft(t,n){return t!=t?n==n:t!==n||t&&typeof t==\"object\"||typeof t==\"function\"}let p;function _t(t,n){return t===n?!0:(p||(p=document.createElement(\"a\")),p.href=n,t===p.href)}function ht(t){return Object.keys(t).length===0}function j(t,...n){if(t==null){for(const i of n)i(void 0);return H}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function dt(t){let n;return j(t,e=>n=e)(),n}function mt(t,n,e){t.$$.on_destroy.push(j(n,e))}function pt(t,n,e,i){if(t){const s=L(t,n,e,i);return t[0](s)}}function L(t,n,e,i){return t[1]&&i?G(e.ctx.slice(),t[1](i(n))):e.ctx}function yt(t,n,e,i){if(t[2]&&i){const s=t[2](i(e));if(n.dirty===void 0)return s;if(typeof s==\"object\"){const l=[],r=Math.max(n.dirty.length,s.length);for(let c=0;c<r;c+=1)l[c]=n.dirty[c]|s[c];return l}return n.dirty|s}return n.dirty}function gt(t,n,e,i,s,l){if(s){const r=L(n,e,i,l);t.p(r,s)}}function bt(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let i=0;i<e;i++)n[i]=-1;return n}return-1}function xt(t){const n={};for(const e in t)e[0]!==\"$\"&&(n[e]=t[e]);return n}function Et(t,n,e){return t.set(e),n}function vt(t){return t&&U(t.destroy)?t.destroy:H}function Nt(t){const n=typeof t==\"string\"&&t.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);return n?[parseFloat(n[1]),n[2]||\"px\"]:[t,\"px\"]}let g=!1;function Tt(){g=!0}function wt(){g=!1}function W(t,n,e,i){for(;t<n;){const s=t+(n-t>>1);e(s)<=i?t=s+1:n=s}return t}function J(t){if(t.hydrate_init)return;t.hydrate_init=!0;let n=t.childNodes;if(t.nodeName===\"HEAD\"){const o=[];for(let a=0;a<n.length;a++){const u=n[a];u.claim_order!==void 0&&o.push(u)}n=o}const e=new Int32Array(n.length+1),i=new Int32Array(n.length);e[0]=-1;let s=0;for(let o=0;o<n.length;o++){const a=n[o].claim_order,u=(s>0&&n[e[s]].claim_order<=a?s+1:W(1,s,B=>n[e[B]].claim_order,a))-1;i[o]=e[u]+1;const A=u+1;e[A]=o,s=Math.max(A,s)}const l=[],r=[];let c=n.length-1;for(let o=e[s]+1;o!=0;o=i[o-1]){for(l.push(n[o-1]);c>=o;c--)r.push(n[c]);c--}for(;c>=0;c--)r.push(n[c]);l.reverse(),r.sort((o,a)=>o.claim_order-a.claim_order);for(let o=0,a=0;o<r.length;o++){for(;a<l.length&&r[o].claim_order>=l[a].claim_order;)a++;const u=a<l.length?l[a]:null;t.insertBefore(r[o],u)}}function K(t,n){t.appendChild(n)}function Q(t){if(!t)return document;const n=t.getRootNode?t.getRootNode():t.ownerDocument;return n&&n.host?n:t.ownerDocument}function kt(t){const n=w(\"style\");return n.textContent=\"/* empty */\",V(Q(t),n),n.sheet}function V(t,n){return K(t.head||t,n),n.sheet}function X(t,n){if(g){for(J(t),(t.actual_end_child===void 0||t.actual_end_child!==null&&t.actual_end_child.parentNode!==t)&&(t.actual_end_child=t.firstChild);t.actual_end_child!==null&&t.actual_end_child.claim_order===void 0;)t.actual_end_child=t.actual_end_child.nextSibling;n!==t.actual_end_child?(n.claim_order!==void 0||n.parentNode!==t)&&t.insertBefore(n,t.actual_end_child):t.actual_end_child=n.nextSibling}else(n.parentNode!==t||n.nextSibling!==null)&&t.appendChild(n)}function Y(t,n,e){t.insertBefore(n,e||null)}function Z(t,n,e){g&&!e?X(t,n):(n.parentNode!==t||n.nextSibling!=e)&&t.insertBefore(n,e||null)}function v(t){t.parentNode&&t.parentNode.removeChild(t)}function At(t,n){for(let e=0;e<t.length;e+=1)t[e]&&t[e].d(n)}function w(t){return document.createElement(t)}function M(t){return document.createElementNS(\"http://www.w3.org/2000/svg\",t)}function k(t){return document.createTextNode(t)}function Ct(){return k(\" \")}function Dt(){return k(\"\")}function Ht(t,n,e,i){return t.addEventListener(n,e,i),()=>t.removeEventListener(n,e,i)}function jt(t){return function(n){return n.preventDefault(),t.call(this,n)}}function Lt(t){return function(n){return n.stopPropagation(),t.call(this,n)}}function $(t,n,e){e==null?t.removeAttribute(n):t.getAttribute(n)!==e&&t.setAttribute(n,e)}function Mt(t,n){for(const e in n)$(t,e,n[e])}function St(t){return t.dataset.svelteH}function Pt(t){let n;return{p(...e){n=e,n.forEach(i=>t.push(i))},r(){n.forEach(e=>t.splice(t.indexOf(e),1))}}}function qt(t,n){let e=s(t),i;function s(c){for(let o=0;o<n.length;o++)c=c[n[o]]=c[n[o]]||[];return c}function l(){i.forEach(c=>e.push(c))}function r(){i.forEach(c=>e.splice(e.indexOf(c),1))}return{u(c){n=c;const o=s(t);o!==e&&(r(),e=o,l())},p(...c){i=c,l()},r}}function Ot(t){return Array.from(t.childNodes)}function S(t){t.claim_info===void 0&&(t.claim_info={last_index:0,total_claimed:0})}function P(t,n,e,i,s=!1){S(t);const l=(()=>{for(let r=t.claim_info.last_index;r<t.length;r++){const c=t[r];if(n(c)){const o=e(c);return o===void 0?t.splice(r,1):t[r]=o,s||(t.claim_info.last_index=r),c}}for(let r=t.claim_info.last_index-1;r>=0;r--){const c=t[r];if(n(c)){const o=e(c);return o===void 0?t.splice(r,1):t[r]=o,s?o===void 0&&t.claim_info.last_index--:t.claim_info.last_index=r,c}}return i()})();return l.claim_order=t.claim_info.total_claimed,t.claim_info.total_claimed+=1,l}function q(t,n,e,i){return P(t,s=>s.nodeName===n,s=>{const l=[];for(let r=0;r<s.attributes.length;r++){const c=s.attributes[r];e[c.name]||l.push(c.name)}l.forEach(r=>s.removeAttribute(r))},()=>i(n))}function Bt(t,n,e){return q(t,n,e,w)}function Rt(t,n,e){return q(t,n,e,M)}function tt(t,n){return P(t,e=>e.nodeType===3,e=>{const i=\"\"+n;if(e.data.startsWith(i)){if(e.data.length!==i.length)return e.splitText(i.length)}else e.data=i},()=>k(n),!0)}function Ft(t){return tt(t,\" \")}function C(t,n,e){for(let i=e;i<t.length;i+=1){const s=t[i];if(s.nodeType===8&&s.textContent.trim()===n)return i}return-1}function Gt(t,n){const e=C(t,\"HTML_TAG_START\",0),i=C(t,\"HTML_TAG_END\",e+1);if(e===-1||i===-1)return new b(n);S(t);const s=t.splice(e,i-e+1);v(s[0]),v(s[s.length-1]);const l=s.slice(1,s.length-1);if(l.length===0)return new b(n);for(const r of l)r.claim_order=t.claim_info.total_claimed,t.claim_info.total_claimed+=1;return new b(n,l)}function It(t,n){n=\"\"+n,t.data!==n&&(t.data=n)}function zt(t,n){t.value=n??\"\"}function Ut(t,n,e,i){e==null?t.style.removeProperty(n):t.style.setProperty(n,e,\"\")}function Wt(t,n,e){for(let i=0;i<t.options.length;i+=1){const s=t.options[i];if(s.__value===n){s.selected=!0;return}}(!e||n!==void 0)&&(t.selectedIndex=-1)}function Jt(t){const n=t.querySelector(\":checked\");return n&&n.__value}function Kt(t,n,e){t.classList.toggle(n,!!e)}function nt(t,n,{bubbles:e=!1,cancelable:i=!1}={}){return new CustomEvent(t,{detail:n,bubbles:e,cancelable:i})}function Qt(t,n){const e=[];let i=0;for(const s of n.childNodes)if(s.nodeType===8){const l=s.textContent.trim();l===`HEAD_${t}_END`?(i-=1,e.push(s)):l===`HEAD_${t}_START`&&(i+=1,e.push(s))}else i>0&&e.push(s);return e}class et{constructor(n=!1){f(this,\"is_svg\",!1);f(this,\"e\");f(this,\"n\");f(this,\"t\");f(this,\"a\");this.is_svg=n,this.e=this.n=null}c(n){this.h(n)}m(n,e,i=null){this.e||(this.is_svg?this.e=M(e.nodeName):this.e=w(e.nodeType===11?\"TEMPLATE\":e.nodeName),this.t=e.tagName!==\"TEMPLATE\"?e:e.content,this.c(n)),this.i(i)}h(n){this.e.innerHTML=n,this.n=Array.from(this.e.nodeName===\"TEMPLATE\"?this.e.content.childNodes:this.e.childNodes)}i(n){for(let e=0;e<this.n.length;e+=1)Y(this.t,this.n[e],n)}p(n){this.d(),this.h(n),this.i(this.a)}d(){this.n.forEach(v)}}class b extends et{constructor(e=!1,i){super(e);f(this,\"l\");this.e=this.n=null,this.l=i}c(e){this.l?this.n=this.l:super.c(e)}i(e){for(let i=0;i<this.n.length;i+=1)Z(this.t,this.n[i],e)}}function Vt(t,n){return new t(n)}let y;function x(t){y=t}function d(){if(!y)throw new Error(\"Function called outside component initialization\");return y}function Xt(t){d().$$.on_mount.push(t)}function Yt(t){d().$$.after_update.push(t)}function Zt(t){d().$$.on_destroy.push(t)}function $t(){const t=d();return(n,e,{cancelable:i=!1}={})=>{const s=t.$$.callbacks[n];if(s){const l=nt(n,e,{cancelable:i});return s.slice().forEach(r=>{r.call(t,l)}),!l.defaultPrevented}return!0}}function tn(t,n){return d().$$.context.set(t,n),n}function nn(t){return d().$$.context.get(t)}function en(t,n){const e=t.$$.callbacks[n.type];e&&e.slice().forEach(i=>i.call(this,n))}const m=[],D=[];let h=[];const N=[],O=Promise.resolve();let T=!1;function it(){T||(T=!0,O.then(rt))}function sn(){return it(),O}function st(t){h.push(t)}function rn(t){N.push(t)}const E=new Set;let _=0;function rt(){if(_!==0)return;const t=y;do{try{for(;_<m.length;){const n=m[_];_++,x(n),ct(n.$$)}}catch(n){throw m.length=0,_=0,n}for(x(null),m.length=0,_=0;D.length;)D.pop()();for(let n=0;n<h.length;n+=1){const e=h[n];E.has(e)||(E.add(e),e())}h.length=0}while(m.length);for(;N.length;)N.pop()();T=!1,E.clear(),x(t)}function ct(t){if(t.fragment!==null){t.update(),z(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(st)}}function cn(t){const n=[],e=[];h.forEach(i=>t.indexOf(i)===-1?n.push(i):e.push(i)),e.forEach(i=>i()),h=n}export{lt as $,Dt as A,St as B,zt as C,Wt as D,Ht as E,At as F,z as G,Jt as H,_t as I,G as J,M as K,b as L,Rt as M,Gt as N,Mt as O,xt as P,jt as Q,Lt as R,Kt as S,en as T,Et as U,at as V,d as W,x as X,rt as Y,Zt as Z,$t as _,Ct as a,Nt as a0,Yt as a1,Ut as a2,Vt as a3,sn as a4,nn as a5,dt as a6,tn as a7,Pt as a8,qt as a9,Q as aa,kt as ab,nt as ac,ut as ad,ht as ae,cn as af,y as ag,I as ah,m as ai,it as aj,Tt as ak,wt as al,Ot as b,Bt as c,tt as d,w as e,v as f,Ft as g,$ as h,Z as i,X as j,It as k,mt as l,pt as m,H as n,vt as o,bt as p,yt as q,U as r,ft as s,k as t,gt as u,st as v,D as w,Qt as x,rn as y,Xt as z};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.736Z",
        "time": 0.07500000356230885,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.062000006437301636,
          "receive": 0.012999997125007212,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/control.CYgJF_JY.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"161-1723041305000\""
            },
            {
              "name": "age",
              "value": "10158613"
            },
            {
              "name": "via",
              "value": "1.1 8d674b0dbbb3efae2c2364b57d734a54.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "161"
            },
            {
              "name": "x-amz-cf-id",
              "value": "SpKaWPpuTU1qpbVzolxLcZ9nQE6Dwk-FBzKrEk9IJfkEDKGqB1QRcg=="
            },
            {
              "name": "date",
              "value": "Wed, 07 Aug 2024 14:40:00 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 07 Aug 2024 14:35:05 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 336,
            "mimeType": "text/javascript",
            "text": "class i{constructor(t,s){this.status=t,typeof s==\"string\"?this.body={message:s}:s?this.body=s:this.body={message:`Error: ${t}`}}toString(){return JSON.stringify(this.body)}}class o{constructor(t,s){this.status=t,this.location=s}}class a extends Error{constructor(t,s,e){super(e),this.status=t,this.text=s}}export{i as H,o as R,a as S};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.736Z",
        "time": 0.07500000356230885,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.06299999949987978,
          "receive": 0.01200000406242907,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"3466-1733326797000\""
            },
            {
              "name": "age",
              "value": "30315"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "3466"
            },
            {
              "name": "x-amz-cf-id",
              "value": "9wf9WrDgPusu9_BS_lHX7YHAHu9EFjSmVSn-D4m7QuWaC8sdE6tY0w=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:44 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 14713,
            "mimeType": "text/javascript",
            "text": "const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=[\"_app/immutable/nodes/0.QS2KVdeN.js\",\"_app/immutable/chunks/scheduler.CeakrPJD.js\",\"_app/immutable/chunks/index.Cljt5KuQ.js\",\"_app/immutable/chunks/entry.CNbBV9gi.js\",\"_app/immutable/chunks/control.CYgJF_JY.js\",\"_app/immutable/chunks/stores.BBDoy_q4.js\",\"_app/immutable/chunks/public.BItpSmwI.js\",\"_app/immutable/chunks/cookiesAreEnabled.CmuqkX8M.js\",\"_app/immutable/chunks/isDesktop.Bkn--V8t.js\",\"_app/immutable/chunks/settings.qWXPmYFi.js\",\"_app/immutable/chunks/titleUpdate.CtC19nZI.js\",\"_app/immutable/chunks/index.Bq3K2eeF.js\",\"_app/immutable/chunks/await_block.B9GGS9dX.js\",\"_app/immutable/chunks/each.BIi1aKAa.js\",\"_app/immutable/chunks/checkmark.DA-eCoqi.js\",\"_app/immutable/chunks/trash-can.Co0XsrUS.js\",\"_app/immutable/chunks/close.CsMZUCB4.js\",\"_app/immutable/chunks/Modal.BkbMR74H.js\",\"_app/immutable/assets/0.DL0hXqfB.css\",\"_app/immutable/nodes/1._sk0cofe.js\",\"_app/immutable/nodes/2.BoPl5Ykx.js\",\"_app/immutable/chunks/clickOutside.D-5j4fJ8.js\",\"_app/immutable/nodes/3.Df9P9oqk.js\",\"_app/immutable/chunks/add.ClnZnXDL.js\",\"_app/immutable/nodes/4.C07P6gKY.js\",\"_app/immutable/chunks/index.De_1-CT6.js\",\"_app/immutable/chunks/isHuggingChat.DRo1Q1X0.js\",\"_app/immutable/nodes/5.BdfjAfgu.js\",\"_app/immutable/nodes/6.YukEGq_p.js\",\"_app/immutable/chunks/pendingMessage.BH5nrwUr.js\",\"_app/immutable/chunks/Tool.aW5GZKd4.js\",\"_app/immutable/chunks/Switch.DLwPPHY0.js\",\"_app/immutable/chunks/image.BBvJllls.js\",\"_app/immutable/chunks/models.BNqoyBuH.js\",\"_app/immutable/chunks/user-multiple.Mj9PndoY.js\",\"_app/immutable/chunks/IconInternet.BkJSosd-.js\",\"_app/immutable/chunks/tools.DNRAFGSA.js\",\"_app/immutable/chunks/CopyToClipBoardBtn.BlbrNBhY.js\",\"_app/immutable/chunks/pen.Dy7UR-Ba.js\",\"_app/immutable/chunks/forms.J3xl8G-J.js\",\"_app/immutable/chunks/_commonjsHelpers.Cpj98o6Y.js\",\"_app/immutable/chunks/marked.esm.LTwExiil.js\",\"_app/immutable/chunks/arrow-up-right.Dl9l-gxp.js\",\"_app/immutable/chunks/code.Dqet6oxH.js\",\"_app/immutable/assets/pendingMessage.Cv82MC_y.css\",\"_app/immutable/nodes/7.M1sVdhLQ.js\",\"_app/immutable/nodes/8.DNdwuxeJ.js\",\"_app/immutable/chunks/help-filled.judAWnUe.js\",\"_app/immutable/chunks/Assistant.B3xla3g6.js\",\"_app/immutable/chunks/debounce.C7HqF0ah.js\",\"_app/immutable/chunks/Review.CzlZDMzF.js\",\"_app/immutable/nodes/9.PVin43Ht.js\",\"_app/immutable/nodes/14.dNGlvTer.js\",\"_app/immutable/assets/14.Bhls0mtk.css\",\"_app/immutable/nodes/15.BacLtXqc.js\",\"_app/immutable/nodes/16.Cwfe4DO2.js\",\"_app/immutable/nodes/17.Cf_DhLe9.js\",\"_app/immutable/nodes/18.jgpUXYth.js\",\"_app/immutable/nodes/19.BV2zxeRw.js\",\"_app/immutable/chunks/TokensCounter.HOKCEa2r.js\",\"_app/immutable/chunks/link.Bltj-XWc.js\",\"_app/immutable/chunks/chat.DHlj6XQ7.js\",\"_app/immutable/nodes/20.a9jmr39U.js\",\"_app/immutable/chunks/ReportModal.DRhtg9L3.js\",\"_app/immutable/chunks/ToolLogo.BSvr5Bfp.js\",\"_app/immutable/nodes/21.BgAsWyA6.js\",\"_app/immutable/chunks/AssistantSettings.D-EVTDCh.js\",\"_app/immutable/chunks/13.Wxvm8eoO.js\",\"_app/immutable/nodes/22.Duf-t3pJ.js\",\"_app/immutable/nodes/23.Bxpns_KZ.js\",\"_app/immutable/nodes/24.16wmcq5Q.js\",\"_app/immutable/nodes/25.CU9CAnp8.js\",\"_app/immutable/chunks/ToolEdit.BbyXQbJs.js\",\"_app/immutable/nodes/26.DyMX4vmu.js\"])))=>i.map(i=>d[i]);\nimport{_ as u}from\"../chunks/13.Wxvm8eoO.js\";import{s as j,a as B,A as m,g as F,i as v,f as h,a1 as G,z as H,e as J,c as K,b as Q,h as L,a2 as D,t as W,d as X,k as Y,w as R,a3 as g,a4 as Z}from\"../chunks/scheduler.CeakrPJD.js\";import{S as x,i as tt,a as p,c as I,t as d,g as A,b as w,d as V,m as E,e as b}from\"../chunks/index.Cljt5KuQ.js\";const dt={};function et(r){let t,n,o;var s=r[1][0];function l(e,_){return{props:{data:e[3],form:e[2]}}}return s&&(t=g(s,l(r)),r[18](t)),{c(){t&&w(t.$$.fragment),n=m()},l(e){t&&V(t.$$.fragment,e),n=m()},m(e,_){t&&E(t,e,_),v(e,n,_),o=!0},p(e,_){if(_&2&&s!==(s=e[1][0])){if(t){A();const i=t;p(i.$$.fragment,1,0,()=>{b(i,1)}),I()}s?(t=g(s,l(e)),e[18](t),w(t.$$.fragment),d(t.$$.fragment,1),E(t,n.parentNode,n)):t=null}else if(s){const i={};_&8&&(i.data=e[3]),_&4&&(i.form=e[2]),t.$set(i)}},i(e){o||(t&&d(t.$$.fragment,e),o=!0)},o(e){t&&p(t.$$.fragment,e),o=!1},d(e){e&&h(n),r[18](null),t&&b(t,e)}}}function nt(r){let t,n,o;var s=r[1][0];function l(e,_){return{props:{data:e[3],$$slots:{default:[at]},$$scope:{ctx:e}}}}return s&&(t=g(s,l(r)),r[17](t)),{c(){t&&w(t.$$.fragment),n=m()},l(e){t&&V(t.$$.fragment,e),n=m()},m(e,_){t&&E(t,e,_),v(e,n,_),o=!0},p(e,_){if(_&2&&s!==(s=e[1][0])){if(t){A();const i=t;p(i.$$.fragment,1,0,()=>{b(i,1)}),I()}s?(t=g(s,l(e)),e[17](t),w(t.$$.fragment),d(t.$$.fragment,1),E(t,n.parentNode,n)):t=null}else if(s){const i={};_&8&&(i.data=e[3]),_&524407&&(i.$$scope={dirty:_,ctx:e}),t.$set(i)}},i(e){o||(t&&d(t.$$.fragment,e),o=!0)},o(e){t&&p(t.$$.fragment,e),o=!1},d(e){e&&h(n),r[17](null),t&&b(t,e)}}}function it(r){let t,n,o;var s=r[1][1];function l(e,_){return{props:{data:e[4],form:e[2]}}}return s&&(t=g(s,l(r)),r[16](t)),{c(){t&&w(t.$$.fragment),n=m()},l(e){t&&V(t.$$.fragment,e),n=m()},m(e,_){t&&E(t,e,_),v(e,n,_),o=!0},p(e,_){if(_&2&&s!==(s=e[1][1])){if(t){A();const i=t;p(i.$$.fragment,1,0,()=>{b(i,1)}),I()}s?(t=g(s,l(e)),e[16](t),w(t.$$.fragment),d(t.$$.fragment,1),E(t,n.parentNode,n)):t=null}else if(s){const i={};_&16&&(i.data=e[4]),_&4&&(i.form=e[2]),t.$set(i)}},i(e){o||(t&&d(t.$$.fragment,e),o=!0)},o(e){t&&p(t.$$.fragment,e),o=!1},d(e){e&&h(n),r[16](null),t&&b(t,e)}}}function st(r){let t,n,o;var s=r[1][1];function l(e,_){return{props:{data:e[4],$$slots:{default:[ft]},$$scope:{ctx:e}}}}return s&&(t=g(s,l(r)),r[15](t)),{c(){t&&w(t.$$.fragment),n=m()},l(e){t&&V(t.$$.fragment,e),n=m()},m(e,_){t&&E(t,e,_),v(e,n,_),o=!0},p(e,_){if(_&2&&s!==(s=e[1][1])){if(t){A();const i=t;p(i.$$.fragment,1,0,()=>{b(i,1)}),I()}s?(t=g(s,l(e)),e[15](t),w(t.$$.fragment),d(t.$$.fragment,1),E(t,n.parentNode,n)):t=null}else if(s){const i={};_&16&&(i.data=e[4]),_&524391&&(i.$$scope={dirty:_,ctx:e}),t.$set(i)}},i(e){o||(t&&d(t.$$.fragment,e),o=!0)},o(e){t&&p(t.$$.fragment,e),o=!1},d(e){e&&h(n),r[15](null),t&&b(t,e)}}}function _t(r){let t,n,o;var s=r[1][2];function l(e,_){return{props:{data:e[5],form:e[2]}}}return s&&(t=g(s,l(r)),r[14](t)),{c(){t&&w(t.$$.fragment),n=m()},l(e){t&&V(t.$$.fragment,e),n=m()},m(e,_){t&&E(t,e,_),v(e,n,_),o=!0},p(e,_){if(_&2&&s!==(s=e[1][2])){if(t){A();const i=t;p(i.$$.fragment,1,0,()=>{b(i,1)}),I()}s?(t=g(s,l(e)),e[14](t),w(t.$$.fragment),d(t.$$.fragment,1),E(t,n.parentNode,n)):t=null}else if(s){const i={};_&32&&(i.data=e[5]),_&4&&(i.form=e[2]),t.$set(i)}},i(e){o||(t&&d(t.$$.fragment,e),o=!0)},o(e){t&&p(t.$$.fragment,e),o=!1},d(e){e&&h(n),r[14](null),t&&b(t,e)}}}function ot(r){let t,n,o;var s=r[1][2];function l(e,_){return{props:{data:e[5],$$slots:{default:[rt]},$$scope:{ctx:e}}}}return s&&(t=g(s,l(r)),r[13](t)),{c(){t&&w(t.$$.fragment),n=m()},l(e){t&&V(t.$$.fragment,e),n=m()},m(e,_){t&&E(t,e,_),v(e,n,_),o=!0},p(e,_){if(_&2&&s!==(s=e[1][2])){if(t){A();const i=t;p(i.$$.fragment,1,0,()=>{b(i,1)}),I()}s?(t=g(s,l(e)),e[13](t),w(t.$$.fragment),d(t.$$.fragment,1),E(t,n.parentNode,n)):t=null}else if(s){const i={};_&32&&(i.data=e[5]),_&524359&&(i.$$scope={dirty:_,ctx:e}),t.$set(i)}},i(e){o||(t&&d(t.$$.fragment,e),o=!0)},o(e){t&&p(t.$$.fragment,e),o=!1},d(e){e&&h(n),r[13](null),t&&b(t,e)}}}function rt(r){let t,n,o;var s=r[1][3];function l(e,_){return{props:{data:e[6],form:e[2]}}}return s&&(t=g(s,l(r)),r[12](t)),{c(){t&&w(t.$$.fragment),n=m()},l(e){t&&V(t.$$.fragment,e),n=m()},m(e,_){t&&E(t,e,_),v(e,n,_),o=!0},p(e,_){if(_&2&&s!==(s=e[1][3])){if(t){A();const i=t;p(i.$$.fragment,1,0,()=>{b(i,1)}),I()}s?(t=g(s,l(e)),e[12](t),w(t.$$.fragment),d(t.$$.fragment,1),E(t,n.parentNode,n)):t=null}else if(s){const i={};_&64&&(i.data=e[6]),_&4&&(i.form=e[2]),t.$set(i)}},i(e){o||(t&&d(t.$$.fragment,e),o=!0)},o(e){t&&p(t.$$.fragment,e),o=!1},d(e){e&&h(n),r[12](null),t&&b(t,e)}}}function ft(r){let t,n,o,s;const l=[ot,_t],e=[];function _(i,c){return i[1][3]?0:1}return t=_(r),n=e[t]=l[t](r),{c(){n.c(),o=m()},l(i){n.l(i),o=m()},m(i,c){e[t].m(i,c),v(i,o,c),s=!0},p(i,c){let a=t;t=_(i),t===a?e[t].p(i,c):(A(),p(e[a],1,1,()=>{e[a]=null}),I(),n=e[t],n?n.p(i,c):(n=e[t]=l[t](i),n.c()),d(n,1),n.m(o.parentNode,o))},i(i){s||(d(n),s=!0)},o(i){p(n),s=!1},d(i){i&&h(o),e[t].d(i)}}}function at(r){let t,n,o,s;const l=[st,it],e=[];function _(i,c){return i[1][2]?0:1}return t=_(r),n=e[t]=l[t](r),{c(){n.c(),o=m()},l(i){n.l(i),o=m()},m(i,c){e[t].m(i,c),v(i,o,c),s=!0},p(i,c){let a=t;t=_(i),t===a?e[t].p(i,c):(A(),p(e[a],1,1,()=>{e[a]=null}),I(),n=e[t],n?n.p(i,c):(n=e[t]=l[t](i),n.c()),d(n,1),n.m(o.parentNode,o))},i(i){s||(d(n),s=!0)},o(i){p(n),s=!1},d(i){i&&h(o),e[t].d(i)}}}function $(r){let t,n=r[8]&&N(r);return{c(){t=J(\"div\"),n&&n.c(),this.h()},l(o){t=K(o,\"DIV\",{id:!0,\"aria-live\":!0,\"aria-atomic\":!0,style:!0});var s=Q(t);n&&n.l(s),s.forEach(h),this.h()},h(){L(t,\"id\",\"svelte-announcer\"),L(t,\"aria-live\",\"assertive\"),L(t,\"aria-atomic\",\"true\"),D(t,\"position\",\"absolute\"),D(t,\"left\",\"0\"),D(t,\"top\",\"0\"),D(t,\"clip\",\"rect(0 0 0 0)\"),D(t,\"clip-path\",\"inset(50%)\"),D(t,\"overflow\",\"hidden\"),D(t,\"white-space\",\"nowrap\"),D(t,\"width\",\"1px\"),D(t,\"height\",\"1px\")},m(o,s){v(o,t,s),n&&n.m(t,null)},p(o,s){o[8]?n?n.p(o,s):(n=N(o),n.c(),n.m(t,null)):n&&(n.d(1),n=null)},d(o){o&&h(t),n&&n.d()}}}function N(r){let t;return{c(){t=W(r[9])},l(n){t=X(n,r[9])},m(n,o){v(n,t,o)},p(n,o){o&512&&Y(t,n[9])},d(n){n&&h(t)}}}function lt(r){let t,n,o,s,l;const e=[nt,et],_=[];function i(a,k){return a[1][1]?0:1}t=i(r),n=_[t]=e[t](r);let c=r[7]&&$(r);return{c(){n.c(),o=B(),c&&c.c(),s=m()},l(a){n.l(a),o=F(a),c&&c.l(a),s=m()},m(a,k){_[t].m(a,k),v(a,o,k),c&&c.m(a,k),v(a,s,k),l=!0},p(a,[k]){let P=t;t=i(a),t===P?_[t].p(a,k):(A(),p(_[P],1,1,()=>{_[P]=null}),I(),n=_[t],n?n.p(a,k):(n=_[t]=e[t](a),n.c()),d(n,1),n.m(o.parentNode,o)),a[7]?c?c.p(a,k):(c=$(a),c.c(),c.m(s.parentNode,s)):c&&(c.d(1),c=null)},i(a){l||(d(n),l=!0)},o(a){p(n),l=!1},d(a){a&&(h(o),h(s)),_[t].d(a),c&&c.d(a)}}}function ct(r,t,n){let{stores:o}=t,{page:s}=t,{constructors:l}=t,{components:e=[]}=t,{form:_}=t,{data_0:i=null}=t,{data_1:c=null}=t,{data_2:a=null}=t,{data_3:k=null}=t;G(o.page.notify);let P=!1,O=!1,T=null;H(()=>{const f=o.page.subscribe(()=>{P&&(n(8,O=!0),Z().then(()=>{n(9,T=document.title||\"untitled page\")}))});return n(7,P=!0),f});function y(f){R[f?\"unshift\":\"push\"](()=>{e[3]=f,n(0,e)})}function S(f){R[f?\"unshift\":\"push\"](()=>{e[2]=f,n(0,e)})}function q(f){R[f?\"unshift\":\"push\"](()=>{e[2]=f,n(0,e)})}function z(f){R[f?\"unshift\":\"push\"](()=>{e[1]=f,n(0,e)})}function C(f){R[f?\"unshift\":\"push\"](()=>{e[1]=f,n(0,e)})}function M(f){R[f?\"unshift\":\"push\"](()=>{e[0]=f,n(0,e)})}function U(f){R[f?\"unshift\":\"push\"](()=>{e[0]=f,n(0,e)})}return r.$$set=f=>{\"stores\"in f&&n(10,o=f.stores),\"page\"in f&&n(11,s=f.page),\"constructors\"in f&&n(1,l=f.constructors),\"components\"in f&&n(0,e=f.components),\"form\"in f&&n(2,_=f.form),\"data_0\"in f&&n(3,i=f.data_0),\"data_1\"in f&&n(4,c=f.data_1),\"data_2\"in f&&n(5,a=f.data_2),\"data_3\"in f&&n(6,k=f.data_3)},r.$$.update=()=>{r.$$.dirty&3072&&o.page.set(s)},[e,l,_,i,c,a,k,P,O,T,o,s,y,S,q,z,C,M,U]}class ht extends x{constructor(t){super(),tt(this,t,ct,lt,j,{stores:10,page:11,constructors:1,components:0,form:2,data_0:3,data_1:4,data_2:5,data_3:6})}}const gt=[()=>u(()=>import(\"../nodes/0.QS2KVdeN.js\"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])),()=>u(()=>import(\"../nodes/1._sk0cofe.js\"),__vite__mapDeps([19,1,2,5,3,4])),()=>u(()=>import(\"../nodes/2.BoPl5Ykx.js\"),__vite__mapDeps([20,1,2,3,4,21,9,14,11])),()=>u(()=>import(\"../nodes/3.Df9P9oqk.js\"),__vite__mapDeps([22,1,2,13,3,4,5,9,16,23])),()=>u(()=>import(\"../nodes/4.C07P6gKY.js\"),__vite__mapDeps([24,3,1,4,25,2,6,26,5])),()=>u(()=>import(\"../nodes/5.BdfjAfgu.js\"),__vite__mapDeps([27,1,2])),()=>u(()=>import(\"../nodes/6.YukEGq_p.js\"),__vite__mapDeps([28,1,2,3,4,5,6,29,12,13,9,14,30,31,21,26,7,8,17,11,32,33,34,35,36,37,15,38,16,39,40,41,42,43,44])),()=>u(()=>import(\"../nodes/7.M1sVdhLQ.js\"),__vite__mapDeps([45,1,2,5,3,4,6,29,12,13,9,14,30,31,21,26,7,8,17,11,32,33,34,35,36,37,15,38,16,39,40,41,42,43,44])),()=>u(()=>import(\"../nodes/8.DNdwuxeJ.js\"),__vite__mapDeps([46,1,2,13,6,26,3,4,5,23,9,47,16,42,48,34,36,49,35,8,50])),()=>u(()=>import(\"../nodes/9.PVin43Ht.js\"),__vite__mapDeps([51,1,12,2,29,13,9,3,4,14,30,31,5,21,26,6,7,8,17,11,32,33,34,35,36,37,15,38,16,39,40,41,42,43,44,10])),()=>u(()=>import(\"../chunks/13.Wxvm8eoO.js\").then(r=>r.a),[]),()=>u(()=>import(\"../chunks/13.Wxvm8eoO.js\").then(r=>r.b),[]),()=>u(()=>import(\"../chunks/13.Wxvm8eoO.js\").then(r=>r.c),[]),()=>u(()=>import(\"../chunks/13.Wxvm8eoO.js\").then(r=>r.d),[]),()=>u(()=>import(\"../nodes/14.dNGlvTer.js\"),__vite__mapDeps([52,1,2,13,6,26,3,4,5,47,9,36,32,53])),()=>u(()=>import(\"../nodes/15.BacLtXqc.js\"),__vite__mapDeps([54,1,2,5,3,4,6,29,12,13,9,14,30,31,21,26,7,8,17,11,32,33,34,35,36,37,15,38,16,39,40,41,42,43,44])),()=>u(()=>import(\"../nodes/16.Cwfe4DO2.js\"),__vite__mapDeps([55,1,2,41])),()=>u(()=>import(\"../nodes/17.Cf_DhLe9.js\"),__vite__mapDeps([56,25,4])),()=>u(()=>import(\"../nodes/18.jgpUXYth.js\"),__vite__mapDeps([57,1,2,17,11,16,9,3,4,15,42,39,31,6])),()=>u(()=>import(\"../nodes/19.BV2zxeRw.js\"),__vite__mapDeps([58,3,1,4,25,2,5,6,9,37,59,12,42,60,61,43])),()=>u(()=>import(\"../nodes/20.a9jmr39U.js\"),__vite__mapDeps([62,3,1,4,25,2,13,39,5,6,9,38,15,63,17,11,60,61,36,37,35,12,64,43,50])),()=>u(()=>import(\"../nodes/21.BgAsWyA6.js\"),__vite__mapDeps([65,1,2,5,3,4,66,67,13,39,38,9,33,36,26,6,35,59,12,49,64,43,16])),()=>u(()=>import(\"../nodes/22.Duf-t3pJ.js\"),__vite__mapDeps([68,1,2,66,67,13,39,3,4,5,38,9,33,36,26,6,35,59,12,49,64,43,16])),()=>u(()=>import(\"../nodes/23.Bxpns_KZ.js\"),__vite__mapDeps([69,1,2,13,26,6,3,4,5,23,9,47,16,42,48,49,8,64,36,43,50])),()=>u(()=>import(\"../nodes/24.16wmcq5Q.js\"),__vite__mapDeps([70,1,2,3,4,5,17,11,64,9,36,43,6,50,63,39,37,38,15,60])),()=>u(()=>import(\"../nodes/25.CU9CAnp8.js\"),__vite__mapDeps([71,1,2,17,11,72,12,13,30,9,3,4,64,36,43,39])),()=>u(()=>import(\"../nodes/26.DyMX4vmu.js\"),__vite__mapDeps([73,1,2,17,11,72,12,13,30,9,3,4,64,36,43,39]))],wt=[0,2,5],Et={\"/\":[6],\"/assistants\":[-9],\"/assistant/[assistantId]\":[-8],\"/conversations\":[10],\"/conversation/[id]\":[-10],\"/login\":[11],\"/login/callback\":[-13],\"/logout\":[13],\"/models\":[14],\"/models/[...model]\":[-16],\"/privacy\":[16],\"/r/[id]\":[17],\"/settings/(nav)\":[18,[2,3]],\"/settings/(nav)/assistants/new\":[22,[2]],\"/settings/(nav)/assistants/[assistantId]\":[20,[2,3]],\"/settings/(nav)/assistants/[assistantId]/edit\":[21,[2]],\"/settings/(nav)/[...model]\":[19,[2,3]],\"/tools\":[-24,[4]],\"/tools/new\":[26,[4]],\"/tools/[toolId]\":[24,[4,5]],\"/tools/[toolId]/edit\":[25,[4,5]]},bt={handleError:({error:r})=>{console.error(r)},reroute:()=>{}};export{Et as dictionary,bt as hooks,dt as matchers,gt as nodes,ht as root,wt as server_loads};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.736Z",
        "time": 0.0720000098226592,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.060000005760230124,
          "receive": 0.01200000406242907,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"579-1731591007000\""
            },
            {
              "name": "age",
              "value": "1608762"
            },
            {
              "name": "via",
              "value": "1.1 8d674b0dbbb3efae2c2364b57d734a54.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "579"
            },
            {
              "name": "x-amz-cf-id",
              "value": "sPRR7hhJougwVLrp3jJ1aPsjosHGRJlqVxpoPdNqgc_TQpttJcNtlQ=="
            },
            {
              "name": "date",
              "value": "Thu, 14 Nov 2024 13:37:31 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Thu, 14 Nov 2024 13:30:07 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1422,
            "mimeType": "text/javascript",
            "text": "const m=\"modulepreload\",b=function(s){return\"/chat/\"+s},a={},h=function(u,l,y){let c=Promise.resolve();if(l&&l.length>0){document.getElementsByTagName(\"link\");const e=document.querySelector(\"meta[property=csp-nonce]\"),t=(e==null?void 0:e.nonce)||(e==null?void 0:e.getAttribute(\"nonce\"));c=Promise.allSettled(l.map(r=>{if(r=b(r),r in a)return;a[r]=!0;const n=r.endsWith(\".css\"),d=n?'[rel=\"stylesheet\"]':\"\";if(document.querySelector(`link[href=\"${r}\"]${d}`))return;const o=document.createElement(\"link\");if(o.rel=n?\"stylesheet\":m,n||(o.as=\"script\"),o.crossOrigin=\"\",o.href=r,t&&o.setAttribute(\"nonce\",t),document.head.appendChild(o),n)return new Promise((f,_)=>{o.addEventListener(\"load\",f),o.addEventListener(\"error\",()=>_(new Error(`Unable to preload CSS for ${r}`)))})}))}function i(e){const t=new Event(\"vite:preloadError\",{cancelable:!0});if(t.payload=e,window.dispatchEvent(t),!t.defaultPrevented)throw e}return c.then(e=>{for(const t of e||[])t.status===\"rejected\"&&i(t.reason);return u().catch(i)})},p=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:\"Module\"})),S=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:\"Module\"})),g=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:\"Module\"})),v=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:\"Module\"}));export{h as _,p as a,S as b,g as c,v as d};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.737Z",
        "time": 0.07000000914558768,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.05699999746866524,
          "receive": 0.01300001167692244,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"2420-1732708078000\""
            },
            {
              "name": "age",
              "value": "491927"
            },
            {
              "name": "via",
              "value": "1.1 8d674b0dbbb3efae2c2364b57d734a54.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "2420"
            },
            {
              "name": "x-amz-cf-id",
              "value": "8kSXIfgivzv_XHeTzxf71O44CDVmTlVc0tKxs7t474R_edAteGD8GQ=="
            },
            {
              "name": "date",
              "value": "Wed, 27 Nov 2024 11:51:26 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 27 Nov 2024 11:47:58 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 5217,
            "mimeType": "text/javascript",
            "text": "var J=Object.defineProperty;var K=(t,e,n)=>e in t?J(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var z=(t,e,n)=>K(t,typeof e!=\"symbol\"?e+\"\":e,n);import{n as v,aa as Q,f as F,ab as T,G as j,r as R,v as C,ac as W,$ as G,ad as B,b as Z,Y as tt,ae as et,af as nt,ag as it,X as D,ah as st,ai as rt,aj as at,ak as ot,al as ft}from\"./scheduler.CeakrPJD.js\";const L=typeof window<\"u\";let U=L?()=>window.performance.now():()=>Date.now(),N=L?t=>requestAnimationFrame(t):v;const x=new Set;function V(t){x.forEach(e=>{e.c(t)||(x.delete(e),e.f())}),x.size!==0&&N(V)}function X(t){let e;return x.size===0&&N(V),{promise:new Promise(n=>{x.add(e={c:t,f:n})}),abort(){x.delete(e)}}}const M=new Map;let P=0;function ut(t){let e=5381,n=t.length;for(;n--;)e=(e<<5)-e^t.charCodeAt(n);return e>>>0}function lt(t,e){const n={stylesheet:T(e),rules:{}};return M.set(t,n),n}function A(t,e,n,i,l,o,u,s=0){const c=16.666/i;let r=`{\n`;for(let _=0;_<=1;_+=c){const g=e+(n-e)*o(_);r+=_*100+`%{${u(g,1-g)}}\n`}const $=r+`100% {${u(n,1-n)}}\n}`,f=`__svelte_${ut($)}_${s}`,m=Q(t),{stylesheet:h,rules:a}=M.get(m)||lt(m,t);a[f]||(a[f]=!0,h.insertRule(`@keyframes ${f} ${$}`,h.cssRules.length));const d=t.style.animation||\"\";return t.style.animation=`${d?`${d}, `:\"\"}${f} ${i}ms linear ${l}ms 1 both`,P+=1,f}function I(t,e){const n=(t.style.animation||\"\").split(\", \"),i=n.filter(e?o=>o.indexOf(e)<0:o=>o.indexOf(\"__svelte\")===-1),l=n.length-i.length;l&&(t.style.animation=i.join(\", \"),P-=l,P||ct())}function ct(){N(()=>{P||(M.forEach(t=>{const{ownerNode:e}=t.stylesheet;e&&F(e)}),M.clear())})}let E;function Y(){return E||(E=Promise.resolve(),E.then(()=>{E=null})),E}function S(t,e,n){t.dispatchEvent(W(`${e?\"intro\":\"outro\"}${n}`))}const k=new Set;let p;function yt(){p={r:0,c:[],p}}function wt(){p.r||j(p.c),p=p.p}function dt(t,e){t&&t.i&&(k.delete(t),t.i(e))}function xt(t,e,n,i){if(t&&t.o){if(k.has(t))return;k.add(t),p.c.push(()=>{k.delete(t),i&&(n&&t.d(1),i())}),t.o(e)}else i&&i()}const q={duration:0};function vt(t,e,n){const i={direction:\"in\"};let l=e(t,n,i),o=!1,u,s,c=0;function r(){u&&I(t,u)}function $(){const{delay:m=0,duration:h=300,easing:a=G,tick:d=v,css:_}=l||q;_&&(u=A(t,0,1,h,m,a,_,c++)),d(0,1);const g=U()+m,b=g+h;s&&s.abort(),o=!0,C(()=>S(t,!0,\"start\")),s=X(y=>{if(o){if(y>=b)return d(1,0),S(t,!0,\"end\"),r(),o=!1;if(y>=g){const w=a((y-g)/h);d(w,1-w)}}return o})}let f=!1;return{start(){f||(f=!0,I(t),R(l)?(l=l(i),Y().then($)):$())},invalidate(){f=!1},end(){o&&(r(),o=!1)}}}function bt(t,e,n,i){let o=e(t,n,{direction:\"both\"}),u=i?0:1,s=null,c=null,r=null,$;function f(){r&&I(t,r)}function m(a,d){const _=a.b-u;return d*=Math.abs(_),{a:u,b:a.b,d:_,duration:d,start:a.start,end:a.start+d,group:a.group}}function h(a){const{delay:d=0,duration:_=300,easing:g=G,tick:b=v,css:y}=o||q,w={start:U()+d,b:a};a||(w.group=p,p.r+=1),\"inert\"in t&&(a?$!==void 0&&(t.inert=$):($=t.inert,t.inert=!0)),s||c?c=w:(y&&(f(),r=A(t,u,a,_,d,g,y)),a&&b(0,1),s=m(w,_),C(()=>S(t,a,\"start\")),X(O=>{if(c&&O>c.start&&(s=m(c,_),c=null,S(t,s.b,\"start\"),y&&(f(),r=A(t,u,s.b,s.duration,0,g,o.css))),s){if(O>=s.end)b(u=s.b,1-u),S(t,s.b,\"end\"),c||(s.b?f():--s.group.r||j(s.group.c)),s=null;else if(O>=s.start){const H=O-s.start;u=s.a+s.d*g(H/s.duration),b(u,1-u)}}return!!(s||c)}))}return{run(a){R(o)?Y().then(()=>{o=o({direction:a?\"in\":\"out\"}),h(a)}):h(a)},end(){f(),s=c=null}}}function Et(t,e,n){const i=t.$$.props[e];i!==void 0&&(t.$$.bound[i]=n,n(t.$$.ctx[i]))}function St(t){t&&t.c()}function jt(t,e){t&&t.l(e)}function _t(t,e,n){const{fragment:i,after_update:l}=t.$$;i&&i.m(e,n),C(()=>{const o=t.$$.on_mount.map(st).filter(R);t.$$.on_destroy?t.$$.on_destroy.push(...o):j(o),t.$$.on_mount=[]}),l.forEach(C)}function $t(t,e){const n=t.$$;n.fragment!==null&&(nt(n.after_update),j(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function ht(t,e){t.$$.dirty[0]===-1&&(rt.push(t),at(),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function Ot(t,e,n,i,l,o,u=null,s=[-1]){const c=it;D(t);const r=t.$$={fragment:null,ctx:[],props:o,update:v,not_equal:l,bound:B(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(c?c.$$.context:[])),callbacks:B(),dirty:s,skip_bound:!1,root:e.target||c.$$.root};u&&u(r.root);let $=!1;if(r.ctx=n?n(t,e.props||{},(f,m,...h)=>{const a=h.length?h[0]:m;return r.ctx&&l(r.ctx[f],r.ctx[f]=a)&&(!r.skip_bound&&r.bound[f]&&r.bound[f](a),$&&ht(t,f)),m}):[],r.update(),$=!0,j(r.before_update),r.fragment=i?i(r.ctx):!1,e.target){if(e.hydrate){ot();const f=Z(e.target);r.fragment&&r.fragment.l(f),f.forEach(F)}else r.fragment&&r.fragment.c();e.intro&&dt(t.$$.fragment),_t(t,e.target,e.anchor),ft(),tt()}D(c)}class kt{constructor(){z(this,\"$$\");z(this,\"$$set\")}$destroy(){$t(this,1),this.$destroy=v}$on(e,n){if(!R(n))return v;const i=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return i.push(n),()=>{const l=i.indexOf(n);l!==-1&&i.splice(l,1)}}$set(e){this.$$set&&!et(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}const mt=\"4\";typeof window<\"u\"&&(window.__svelte||(window.__svelte={v:new Set})).v.add(mt);export{kt as S,xt as a,St as b,wt as c,jt as d,$t as e,vt as f,yt as g,Et as h,Ot as i,bt as j,_t as m,N as r,dt as t};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.737Z",
        "time": 0.06900000153109431,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.057999990531243384,
          "receive": 0.011000010999850929,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/nodes/0.QS2KVdeN.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"12203-1733326797000\""
            },
            {
              "name": "age",
              "value": "30327"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "12203"
            },
            {
              "name": "x-amz-cf-id",
              "value": "qXqphFNKF8A2k6-AoHskC02rk3yWopbEk0W40E4sje4Ka4_i1GPclA=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:32 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 46613,
            "mimeType": "text/javascript",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.737Z",
        "time": 0.08600000001024455,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.07000000914558768,
          "receive": 0.015999990864656866,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/stores.BBDoy_q4.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"154-1733326797000\""
            },
            {
              "name": "age",
              "value": "30315"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "154"
            },
            {
              "name": "x-amz-cf-id",
              "value": "jz8nR__NLGbMdS1OT6JITrhXX9HZciN9Oc7siqiMfna2ESVB86_9PQ=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:44 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 293,
            "mimeType": "text/javascript",
            "text": "import{s as r}from\"./entry.CNbBV9gi.js\";const e=()=>{const s=r;return{page:{subscribe:s.page.subscribe},navigating:{subscribe:s.navigating.subscribe},updated:s.updated}},a={subscribe(s){return e().page.subscribe(s)}},i={subscribe(s){return e().navigating.subscribe(s)}};export{i as n,a as p};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.738Z",
        "time": 0.07399999594781548,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.062000006437301636,
          "receive": 0.011999989510513842,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/public.BItpSmwI.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"58-1733326797000\""
            },
            {
              "name": "age",
              "value": "30327"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "58"
            },
            {
              "name": "x-amz-cf-id",
              "value": "iNFvgaFeIGBPRYaV9KHrAFE_vVE6I3qHdOPR0M2MHHKoWDIwGw4Glw=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:32 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 54,
            "mimeType": "text/javascript",
            "text": "const e=globalThis.__sveltekit_1ng6dh3.env;export{e};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.738Z",
        "time": 0.06900000153109431,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.05800000508315861,
          "receive": 0.0109999964479357,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/cookiesAreEnabled.CmuqkX8M.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"3027-1733326797000\""
            },
            {
              "name": "age",
              "value": "30327"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "3027"
            },
            {
              "name": "x-amz-cf-id",
              "value": "acGH0_g7LWSJI_yPLF4Gepqy-SvU4p7fmQyXpurLjvtEMZltzLg_yw=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:32 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 8822,
            "mimeType": "text/javascript",
            "text": "import{w as F,b as Z}from\"./entry.CNbBV9gi.js\";import{i as y}from\"./isDesktop.Bkn--V8t.js\";import{s as P,A as B,i as M,n as b,f as l,l as L,e as N,c as U,h as t,I,K as n,M as h,b as u,j as m}from\"./scheduler.CeakrPJD.js\";import{S as x,i as A}from\"./index.Cljt5KuQ.js\";import{p as O}from\"./stores.BBDoy_q4.js\";import{e as k}from\"./public.BItpSmwI.js\";const R=!0,Q=R,X={default:\"Oops, something went wrong.\",authOnly:\"You have to be logged in.\",rateLimited:\"You are sending too many messages. Try again later.\"},$=F(null);async function e1(i,e,r=!1){const s=localStorage.getItem(\"leafId\");if(r&&s){const a=new URL(i);a.searchParams.append(\"leafId\",s),i=a.toString()}navigator.share&&!y(window)?navigator.share({url:i,title:e}):(await new Promise(a=>setTimeout(a,250)),await navigator.clipboard.writeText(i))}function T(i){let e,r;return{c(){e=N(\"img\"),this.h()},l(s){e=U(s,\"IMG\",{class:!0,alt:!0,src:!0}),this.h()},h(){t(e,\"class\",i[0]),t(e,\"alt\",k.PUBLIC_APP_NAME+\" logo\"),I(e.src,r=(k.PUBLIC_ORIGIN||i[1].url.origin)+Z+\"/\"+k.PUBLIC_APP_ASSETS+\"/logo.svg\")||t(e,\"src\",r)},m(s,a){M(s,e,a)},p(s,a){a&1&&t(e,\"class\",s[0]),a&2&&!I(e.src,r=(k.PUBLIC_ORIGIN||s[1].url.origin)+Z+\"/\"+k.PUBLIC_APP_ASSETS+\"/logo.svg\")&&t(e,\"src\",r)},d(s){s&&l(e)}}}function D(i){let e,r;return{c(){e=n(\"svg\"),r=n(\"path\"),this.h()},l(s){e=h(s,\"svg\",{height:!0,width:!0,viewBox:!0,xmlns:!0,class:!0});var a=u(e);r=h(a,\"path\",{d:!0,class:!0}),u(r).forEach(l),a.forEach(l),this.h()},h(){t(r,\"d\",\"M4.06151 14.1464C4.06151 11.8818 4.9611 9.71004 6.56237 8.10877C8.16364 6.5075 10.3354 5.60791 12.6 5.60791H16.5231C18.6254 5.60791 20.6416 6.44307 22.1282 7.92965C23.6148 9.41624 24.45 11.4325 24.45 13.5348C24.45 15.6372 23.6148 17.6534 22.1282 19.14C20.6416 20.6266 18.6254 21.4618 16.5231 21.4618H7.08459L4.63844 23.8387C4.59547 23.8942 4.53557 23.9343 4.4678 23.9527C4.40004 23.9712 4.32811 23.9671 4.2629 23.941C4.1977 23.9149 4.14276 23.8683 4.10643 23.8082C4.07009 23.7481 4.05432 23.6778 4.06151 23.6079V14.1464Z\"),t(r,\"class\",\"fill-primary-500\"),t(e,\"height\",\"30\"),t(e,\"width\",\"30\"),t(e,\"viewBox\",\"0 0 30 30\"),t(e,\"xmlns\",\"http://www.w3.org/2000/svg\"),t(e,\"class\",i[0])},m(s,a){M(s,e,a),m(e,r)},p(s,a){a&1&&t(e,\"class\",s[0])},d(s){s&&l(e)}}}function G(i){let e;function r(c,f){return k.PUBLIC_APP_ASSETS===\"chatui\"?D:T}let a=r()(i);return{c(){a.c(),e=B()},l(c){a.l(c),e=B()},m(c,f){a.m(c,f),M(c,e,f)},p(c,[f]){a.p(c,f)},i:b,o:b,d(c){c&&l(e),a.d(c)}}}function H(i,e,r){let s;L(i,O,c=>r(1,s=c));let{classNames:a=\"\"}=e;return i.$$set=c=>{\"classNames\"in c&&r(0,a=c.classNames)},[a,s]}class t1 extends x{constructor(e){super(),A(this,e,H,G,P,{classNames:0})}}function q(i){let e,r,s,a,c,f,d,g,_,v,w,E;return{c(){e=n(\"svg\"),r=n(\"path\"),s=n(\"path\"),a=n(\"path\"),c=n(\"mask\"),f=n(\"path\"),d=n(\"g\"),g=n(\"path\"),_=n(\"path\"),v=n(\"path\"),w=n(\"path\"),E=n(\"path\"),this.h()},l(p){e=h(p,\"svg\",{class:!0,xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0});var o=u(e);r=h(o,\"path\",{fill:!0,d:!0}),u(r).forEach(l),s=h(o,\"path\",{fill:!0,d:!0}),u(s).forEach(l),a=h(o,\"path\",{fill:!0,d:!0}),u(a).forEach(l),c=h(o,\"mask\",{id:!0,width:!0,height:!0,x:!0,y:!0,maskUnits:!0});var S=u(c);f=h(S,\"path\",{fill:!0,d:!0}),u(f).forEach(l),S.forEach(l),d=h(o,\"g\",{mask:!0});var C=u(d);g=h(C,\"path\",{fill:!0,d:!0}),u(g).forEach(l),C.forEach(l),_=h(o,\"path\",{fill:!0,d:!0}),u(_).forEach(l),v=h(o,\"path\",{fill:!0,d:!0}),u(v).forEach(l),w=h(o,\"path\",{fill:!0,d:!0}),u(w).forEach(l),E=h(o,\"path\",{fill:!0,d:!0}),u(E).forEach(l),o.forEach(l),this.h()},h(){t(r,\"fill\",\"#FFD21E\"),t(r,\"d\",\"M47.21 76.5a34.75 34.75 0 1 0 0-69.5 34.75 34.75 0 0 0 0 69.5Z\"),t(s,\"fill\",\"#FF9D0B\"),t(s,\"d\",\"M81.96 41.75a34.75 34.75 0 1 0-69.5 0 34.75 34.75 0 0 0 69.5 0Zm-73.5 0a38.75 38.75 0 1 1 77.5 0 38.75 38.75 0 0 1-77.5 0Z\"),t(a,\"fill\",\"#3A3B45\"),t(a,\"d\",\"M58.5 32.3c1.28.44 1.78 3.06 3.07 2.38a5 5 0 1 0-6.76-2.07c.61 1.15 2.55-.72 3.7-.32ZM34.95 32.3c-1.28.44-1.79 3.06-3.07 2.38a5 5 0 1 1 6.76-2.07c-.61 1.15-2.56-.72-3.7-.32ZM46.96 56.29c9.83 0 13-8.76 13-13.26 0-2.34-1.57-1.6-4.09-.36-2.33 1.15-5.46 2.74-8.9 2.74-7.19 0-13-6.88-13-2.38s3.16 13.26 13 13.26Z\"),t(f,\"fill\",\"#fff\"),t(f,\"d\",\"M46.96 56.29c9.83 0 13-8.76 13-13.26 0-2.34-1.57-1.6-4.09-.36-2.33 1.15-5.46 2.74-8.9 2.74-7.19 0-13-6.88-13-2.38s3.16 13.26 13 13.26Z\"),t(c,\"id\",\"a\"),t(c,\"width\",\"27\"),t(c,\"height\",\"16\"),t(c,\"x\",\"33\"),t(c,\"y\",\"41\"),t(c,\"maskUnits\",\"userSpaceOnUse\"),t(g,\"fill\",\"#F94040\"),t(g,\"d\",\"M47.21 66.5a8.67 8.67 0 0 0 2.65-16.94c-.84-.26-1.73 2.6-2.65 2.6-.86 0-1.7-2.88-2.48-2.65a8.68 8.68 0 0 0 2.48 16.99Z\"),t(d,\"mask\",\"url(#a)\"),t(_,\"fill\",\"#FF9D0B\"),t(_,\"d\",\"M70.71 37a3.25 3.25 0 1 0 0-6.5 3.25 3.25 0 0 0 0 6.5ZM24.21 37a3.25 3.25 0 1 0 0-6.5 3.25 3.25 0 0 0 0 6.5ZM17.52 48c-1.62 0-3.06.66-4.07 1.87a5.97 5.97 0 0 0-1.33 3.76 7.1 7.1 0 0 0-1.94-.3c-1.55 0-2.95.59-3.94 1.66a5.8 5.8 0 0 0-.8 7 5.3 5.3 0 0 0-1.79 2.82c-.24.9-.48 2.8.8 4.74a5.22 5.22 0 0 0-.37 5.02c1.02 2.32 3.57 4.14 8.52 6.1 3.07 1.22 5.89 2 5.91 2.01a44.33 44.33 0 0 0 10.93 1.6c5.86 0 10.05-1.8 12.46-5.34 3.88-5.69 3.33-10.9-1.7-15.92-2.77-2.78-4.62-6.87-5-7.77-.78-2.66-2.84-5.62-6.25-5.62a5.7 5.7 0 0 0-4.6 2.46c-1-1.26-1.98-2.25-2.86-2.82A7.4 7.4 0 0 0 17.52 48Zm0 4c.51 0 1.14.22 1.82.65 2.14 1.36 6.25 8.43 7.76 11.18.5.92 1.37 1.31 2.14 1.31 1.55 0 2.75-1.53.15-3.48-3.92-2.93-2.55-7.72-.68-8.01.08-.02.17-.02.24-.02 1.7 0 2.45 2.93 2.45 2.93s2.2 5.52 5.98 9.3c3.77 3.77 3.97 6.8 1.22 10.83-1.88 2.75-5.47 3.58-9.16 3.58-3.81 0-7.73-.9-9.92-1.46-.11-.03-13.45-3.8-11.76-7 .28-.54.75-.76 1.34-.76 2.38 0 6.7 3.54 8.57 3.54.41 0 .7-.17.83-.6.79-2.85-12.06-4.05-10.98-8.17.2-.73.71-1.02 1.44-1.02 3.14 0 10.2 5.53 11.68 5.53.11 0 .2-.03.24-.1.74-1.2.33-2.04-4.9-5.2-5.21-3.16-8.88-5.06-6.8-7.33.24-.26.58-.38 1-.38 3.17 0 10.66 6.82 10.66 6.82s2.02 2.1 3.25 2.1c.28 0 .52-.1.68-.38.86-1.46-8.06-8.22-8.56-11.01-.34-1.9.24-2.85 1.31-2.85Z\"),t(v,\"fill\",\"#FFD21E\"),t(v,\"d\",\"M38.6 76.69c2.75-4.04 2.55-7.07-1.22-10.84-3.78-3.77-5.98-9.3-5.98-9.3s-.82-3.2-2.69-2.9c-1.87.3-3.24 5.08.68 8.01 3.91 2.93-.78 4.92-2.29 2.17-1.5-2.75-5.62-9.82-7.76-11.18-2.13-1.35-3.63-.6-3.13 2.2.5 2.79 9.43 9.55 8.56 11-.87 1.47-3.93-1.71-3.93-1.71s-9.57-8.71-11.66-6.44c-2.08 2.27 1.59 4.17 6.8 7.33 5.23 3.16 5.64 4 4.9 5.2-.75 1.2-12.28-8.53-13.36-4.4-1.08 4.11 11.77 5.3 10.98 8.15-.8 2.85-9.06-5.38-10.74-2.18-1.7 3.21 11.65 6.98 11.76 7.01 4.3 1.12 15.25 3.49 19.08-2.12Z\"),t(w,\"fill\",\"#FF9D0B\"),t(w,\"d\",\"M77.4 48c1.62 0 3.07.66 4.07 1.87a5.97 5.97 0 0 1 1.33 3.76 7.1 7.1 0 0 1 1.95-.3c1.55 0 2.95.59 3.94 1.66a5.8 5.8 0 0 1 .8 7 5.3 5.3 0 0 1 1.78 2.82c.24.9.48 2.8-.8 4.74a5.22 5.22 0 0 1 .37 5.02c-1.02 2.32-3.57 4.14-8.51 6.1-3.08 1.22-5.9 2-5.92 2.01a44.33 44.33 0 0 1-10.93 1.6c-5.86 0-10.05-1.8-12.46-5.34-3.88-5.69-3.33-10.9 1.7-15.92 2.78-2.78 4.63-6.87 5.01-7.77.78-2.66 2.83-5.62 6.24-5.62a5.7 5.7 0 0 1 4.6 2.46c1-1.26 1.98-2.25 2.87-2.82A7.4 7.4 0 0 1 77.4 48Zm0 4c-.51 0-1.13.22-1.82.65-2.13 1.36-6.25 8.43-7.76 11.18a2.43 2.43 0 0 1-2.14 1.31c-1.54 0-2.75-1.53-.14-3.48 3.91-2.93 2.54-7.72.67-8.01a1.54 1.54 0 0 0-.24-.02c-1.7 0-2.45 2.93-2.45 2.93s-2.2 5.52-5.97 9.3c-3.78 3.77-3.98 6.8-1.22 10.83 1.87 2.75 5.47 3.58 9.15 3.58 3.82 0 7.73-.9 9.93-1.46.1-.03 13.45-3.8 11.76-7-.29-.54-.75-.76-1.34-.76-2.38 0-6.71 3.54-8.57 3.54-.42 0-.71-.17-.83-.6-.8-2.85 12.05-4.05 10.97-8.17-.19-.73-.7-1.02-1.44-1.02-3.14 0-10.2 5.53-11.68 5.53-.1 0-.19-.03-.23-.1-.74-1.2-.34-2.04 4.88-5.2 5.23-3.16 8.9-5.06 6.8-7.33-.23-.26-.57-.38-.98-.38-3.18 0-10.67 6.82-10.67 6.82s-2.02 2.1-3.24 2.1a.74.74 0 0 1-.68-.38c-.87-1.46 8.05-8.22 8.55-11.01.34-1.9-.24-2.85-1.31-2.85Z\"),t(E,\"fill\",\"#FFD21E\"),t(E,\"d\",\"M56.33 76.69c-2.75-4.04-2.56-7.07 1.22-10.84 3.77-3.77 5.97-9.3 5.97-9.3s.82-3.2 2.7-2.9c1.86.3 3.23 5.08-.68 8.01-3.92 2.93.78 4.92 2.28 2.17 1.51-2.75 5.63-9.82 7.76-11.18 2.13-1.35 3.64-.6 3.13 2.2-.5 2.79-9.42 9.55-8.55 11 .86 1.47 3.92-1.71 3.92-1.71s9.58-8.71 11.66-6.44c2.08 2.27-1.58 4.17-6.8 7.33-5.23 3.16-5.63 4-4.9 5.2.75 1.2 12.28-8.53 13.36-4.4 1.08 4.11-11.76 5.3-10.97 8.15.8 2.85 9.05-5.38 10.74-2.18 1.69 3.21-11.65 6.98-11.76 7.01-4.31 1.12-15.26 3.49-19.08-2.12Z\"),t(e,\"class\",i[0]),t(e,\"xmlns\",\"http://www.w3.org/2000/svg\"),t(e,\"width\",\"1em\"),t(e,\"height\",\"1em\"),t(e,\"fill\",\"none\"),t(e,\"viewBox\",\"0 0 95 88\")},m(p,o){M(p,e,o),m(e,r),m(e,s),m(e,a),m(e,c),m(c,f),m(e,d),m(d,g),m(e,_),m(e,v),m(e,w),m(e,E)},p(p,[o]){o&1&&t(e,\"class\",p[0])},i:b,o:b,d(p){p&&l(e)}}}function Y(i,e,r){let{classNames:s=\"\"}=e;return i.$$set=a=>{\"classNames\"in a&&r(0,s=a.classNames)},[s]}class a1 extends x{constructor(e){super(),A(this,e,Y,q,P,{classNames:0})}}function s1(){if(navigator.cookieEnabled)return navigator.cookieEnabled;document.cookie=\"cookietest=1\";const i=document.cookie.indexOf(\"cookietest=\")!=-1;return document.cookie=\"cookietest=1; expires=Thu, 01-Jan-1970 00:00:01 GMT\",i}export{X as E,t1 as L,a1 as a,Q as b,s1 as c,$ as e,e1 as s};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.738Z",
        "time": 0.06900000153109431,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.05699999746866524,
          "receive": 0.01200000406242907,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/isDesktop.Bkn--V8t.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"65-1723459050000\""
            },
            {
              "name": "age",
              "value": "9740728"
            },
            {
              "name": "via",
              "value": "1.1 8d674b0dbbb3efae2c2364b57d734a54.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "65"
            },
            {
              "name": "x-amz-cf-id",
              "value": "0Y_CzYqaE8ka929E3e6Kzc1i--GWVoNwnoEsNWv5y-ck-6qYUehaUw=="
            },
            {
              "name": "date",
              "value": "Mon, 12 Aug 2024 10:44:45 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Mon, 12 Aug 2024 10:37:30 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 65,
            "mimeType": "text/javascript",
            "text": "function t(T){const{innerWidth:n}=T;return n>768}export{t as i};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.738Z",
        "time": 0.06999999459367245,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.058999998145736754,
          "receive": 0.0109999964479357,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/settings.qWXPmYFi.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"521-1733326797000\""
            },
            {
              "name": "age",
              "value": "30327"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "521"
            },
            {
              "name": "x-amz-cf-id",
              "value": "IHe4vbDVTrQQNPlhYN7t18zolnW7k-dgCJL0vr9Ony2U-bbJbV74lQ=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:32 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1237,
            "mimeType": "text/javascript",
            "text": "import{w as y,b as p,d as f}from\"./entry.CNbBV9gi.js\";import{a5 as S,a6 as d,a7 as l}from\"./scheduler.CeakrPJD.js\";function b(o,n){const i={},r={},c={$$scope:1};let a=o.length;for(;a--;){const t=o[a],e=n[a];if(e){for(const s in t)s in e||(r[s]=1);for(const s in e)c[s]||(i[s]=e[s],c[s]=1);o[a]=e}else for(const s in t)c[s]=1}for(const t in r)t in i||(i[t]=void 0);return i}var u=(o=>(o.ConversationList=\"conversation:list\",o.Conversation=\"conversation\",o))(u||{});function m(){return S(\"settings\")}function C(o){const n=y({...o,recentlySaved:!1});let i;async function r(t){n.update(e=>({...e,...t})),clearTimeout(i),i=setTimeout(async()=>{await fetch(`${p}/settings`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({...d(n),...t})}),f(u.ConversationList),n.update(e=>({...e,recentlySaved:!0})),setTimeout(()=>{n.update(e=>({...e,recentlySaved:!1}))},3e3),f(u.ConversationList)},300)}async function c(t){n.update(e=>({...e,...t})),await fetch(`${p}/settings`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({...d(n),...t})}),f(u.ConversationList)}const a={subscribe:n.subscribe,set:r,instantSet:c,update:t=>{r(t(d(n)))}};return l(\"settings\",a),a}export{C as c,b as g,m as u};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.738Z",
        "time": 0.06800000846851617,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.05700001202058047,
          "receive": 0.0109999964479357,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/titleUpdate.CtC19nZI.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"417-1733326797000\""
            },
            {
              "name": "age",
              "value": "30315"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "417"
            },
            {
              "name": "x-amz-cf-id",
              "value": "PO_xnO-TzOQvLuji8QtbPEgFhMUfODs0UVPtDaKUn-4DHdczfmtHCA=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:44 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 811,
            "mimeType": "text/javascript",
            "text": "import{b as n,w as i}from\"./entry.CNbBV9gi.js\";import{s as a,e as o,E as l}from\"./cookiesAreEnabled.CmuqkX8M.js\";import{p as h}from\"./stores.BBDoy_q4.js\";import{a6 as f}from\"./scheduler.CeakrPJD.js\";import{e as s}from\"./public.BItpSmwI.js\";function p(e,t){return`${s.PUBLIC_SHARE_PREFIX||`${s.PUBLIC_ORIGIN||e.origin}${n}`}/r/${t}`}async function v(e,t){try{if(e.length===7){const r=f(h).url;await a(p(r,e),t,!0)}else{const r=await fetch(`${n}/conversation/${e}/share`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}});if(!r.ok){o.set(\"Error while sharing conversation, try again.\"),console.error(\"Error while sharing conversation: \"+await r.text());return}const{url:c}=await r.json();await a(c,t,!0)}}catch(r){o.set(l.default),console.error(r)}}const R=i(!1),S=i(null);export{R as i,v as s,S as t};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.738Z",
        "time": 0.08900000830180943,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.07600001117680222,
          "receive": 0.012999997125007212,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Bq3K2eeF.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"340-1732708078000\""
            },
            {
              "name": "age",
              "value": "491901"
            },
            {
              "name": "via",
              "value": "1.1 8d674b0dbbb3efae2c2364b57d734a54.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "340"
            },
            {
              "name": "x-amz-cf-id",
              "value": "MGjjKLwDzphk_VTafmNEIp-nnOVIusUdq8FL29hmbAXeqQcB1DpoVw=="
            },
            {
              "name": "date",
              "value": "Wed, 27 Nov 2024 11:51:52 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 27 Nov 2024 11:47:58 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 663,
            "mimeType": "text/javascript",
            "text": "import{$ as g,a0 as u}from\"./scheduler.CeakrPJD.js\";function C(t){return t<.5?4*t*t*t:.5*Math.pow(2*t-2,3)+1}function x(t){const n=t-1;return n*n*n+1}function O(t,{delay:n=0,duration:o=400,easing:s=g}={}){const c=+getComputedStyle(t).opacity;return{delay:n,duration:o,easing:s,css:a=>`opacity: ${a*c}`}}function S(t,{delay:n=0,duration:o=400,easing:s=x,x:c=0,y:a=0,opacity:f=0}={}){const r=getComputedStyle(t),e=+r.opacity,y=r.transform===\"none\"?\"\":r.transform,p=e*(1-f),[l,m]=u(c),[$,d]=u(a);return{delay:n,duration:o,easing:s,css:(i,b)=>`\n\t\t\ttransform: ${y} translate(${(1-i)*l}${m}, ${(1-i)*$}${d});\n\t\t\topacity: ${e-p*b}`}}export{O as a,C as b,x as c,S as f};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.738Z",
        "time": 0.07399999594781548,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.062000006437301636,
          "receive": 0.011999989510513842,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/await_block.B9GGS9dX.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"481-1732708078000\""
            },
            {
              "name": "age",
              "value": "491901"
            },
            {
              "name": "via",
              "value": "1.1 8d674b0dbbb3efae2c2364b57d734a54.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "481"
            },
            {
              "name": "x-amz-cf-id",
              "value": "tdNerEIWEVaYOu_COcLcpf-whk_TnzflTSgn-tUBST6K6LyOaIWTgA=="
            },
            {
              "name": "date",
              "value": "Wed, 27 Nov 2024 11:51:52 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 27 Nov 2024 11:47:58 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 925,
            "mimeType": "text/javascript",
            "text": "import{V as b,W as p,X as a,Y as m}from\"./scheduler.CeakrPJD.js\";import{g,a as v,c as x,t as w}from\"./index.Cljt5KuQ.js\";function V(e,t){const h=t.token={};function c(r,s,d,k){if(t.token!==h)return;t.resolved=k;let u=t.ctx;d!==void 0&&(u=u.slice(),u[d]=k);const l=r&&(t.current=r)(u);let o=!1;t.block&&(t.blocks?t.blocks.forEach((n,_)=>{_!==s&&n&&(g(),v(n,1,1,()=>{t.blocks[_]===n&&(t.blocks[_]=null)}),x())}):t.block.d(1),l.c(),w(l,1),l.m(t.mount(),t.anchor),o=!0),t.block=l,t.blocks&&(t.blocks[s]=l),o&&m()}if(b(e)){const r=p();if(e.then(s=>{a(r),c(t.then,1,t.value,s),a(null)},s=>{if(a(r),c(t.catch,2,t.error,s),a(null),!t.hasCatch)throw s}),t.current!==t.pending)return c(t.pending,0),!0}else{if(t.current!==t.then)return c(t.then,1,t.value,e),!0;t.resolved=e}}function W(e,t,h){const c=t.slice(),{resolved:r}=e;e.current===e.then&&(c[e.value]=r),e.current===e.catch&&(c[e.error]=r),e.block.p(c,h)}export{V as h,W as u};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.739Z",
        "time": 0.08800000068731606,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.07599999662488699,
          "receive": 0.01200000406242907,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/each.BIi1aKAa.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"504-1732708078000\""
            },
            {
              "name": "age",
              "value": "491901"
            },
            {
              "name": "via",
              "value": "1.1 8d674b0dbbb3efae2c2364b57d734a54.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "504"
            },
            {
              "name": "x-amz-cf-id",
              "value": "TC-xvElzZfv2UdTYjotNaY0BwmsSJMnzfamcFUmvcM2SQJ-bZ5ZmeQ=="
            },
            {
              "name": "date",
              "value": "Wed, 27 Nov 2024 11:51:52 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 27 Nov 2024 11:47:58 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 868,
            "mimeType": "text/javascript",
            "text": "import{a as q,t as z}from\"./index.Cljt5KuQ.js\";import{G as B}from\"./scheduler.CeakrPJD.js\";function F(n){return(n==null?void 0:n.length)!==void 0?n:Array.from(n)}function H(n,o){q(n,1,1,()=>{o.delete(n.key)})}function I(n,o,x,C,A,g,f,G,p,j,w,k){let i=n.length,d=g.length,c=i;const a={};for(;c--;)a[n[c].key]=c;const h=[],u=new Map,m=new Map,M=[];for(c=d;c--;){const e=k(A,g,c),s=x(e);let t=f.get(s);t?M.push(()=>t.p(e,o)):(t=j(s,e),t.c()),u.set(s,h[c]=t),s in a&&m.set(s,Math.abs(c-a[s]))}const v=new Set,S=new Set;function y(e){z(e,1),e.m(G,w),f.set(e.key,e),w=e.first,d--}for(;i&&d;){const e=h[d-1],s=n[i-1],t=e.key,l=s.key;e===s?(w=e.first,i--,d--):u.has(l)?!f.has(t)||v.has(t)?y(e):S.has(l)?i--:m.get(t)>m.get(l)?(S.add(t),y(e)):(v.add(l),i--):(p(s,f),i--)}for(;i--;){const e=n[i];u.has(e.key)||p(e,f)}for(;d;)y(h[d-1]);return B(M),h}export{F as e,H as o,I as u};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.739Z",
        "time": 0.07500000356230885,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.06299999949987978,
          "receive": 0.01200000406242907,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/checkmark.DA-eCoqi.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"504-1733326797000\""
            },
            {
              "name": "age",
              "value": "30338"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "504"
            },
            {
              "name": "x-amz-cf-id",
              "value": "j-NwqTzoozOAwQAZ_dt8VrmD-TT55F29dQgCAQ1GLWYszlDtILHeAA=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:21 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 877,
            "mimeType": "text/javascript",
            "text": "import{s as u,J as h,K as c,L as v,M as d,b as f,N as w,f as o,O as m,i as x,n as g,P as _}from\"./scheduler.CeakrPJD.js\";import{g as p}from\"./settings.qWXPmYFi.js\";import{S as C,i as L}from\"./index.Cljt5KuQ.js\";function B(i){let e,a,l='<path fill=\"currentColor\" d=\"m13 24l-9-9l1.414-1.414L13 21.171L26.586 7.586L28 9z\"/>',n=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},i[0]],r={};for(let t=0;t<n.length;t+=1)r=h(r,n[t]);return{c(){e=c(\"svg\"),a=new v(!0),this.h()},l(t){e=d(t,\"svg\",{viewBox:!0,width:!0,height:!0});var s=f(e);a=w(s,!0),s.forEach(o),this.h()},h(){a.a=null,m(e,r)},m(t,s){x(t,e,s),a.m(l,e)},p(t,[s]){m(e,r=p(n,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},s&1&&t[0]]))},i:g,o:g,d(t){t&&o(e)}}}function b(i,e,a){return i.$$set=l=>{a(0,e=h(h({},e),_(l)))},e=_(e),[e]}class S extends C{constructor(e){super(),L(this,e,b,B,u,{})}}export{S as C};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.739Z",
        "time": 0.0740000104997307,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.06299999949987978,
          "receive": 0.011000010999850929,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/trash-can.Co0XsrUS.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"534-1733326797000\""
            },
            {
              "name": "age",
              "value": "30327"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "534"
            },
            {
              "name": "x-amz-cf-id",
              "value": "7PLEV0JcOSnoqsVr1U0aOfwi4GIs8LLuptYIMZ_-5HfdkX9fkiNg1w=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:32 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 961,
            "mimeType": "text/javascript",
            "text": "import{s as g,J as l,K as u,L as c,M as d,b as f,N as w,f as o,O as m,i as p,n as v,P as _}from\"./scheduler.CeakrPJD.js\";import{g as x}from\"./settings.qWXPmYFi.js\";import{S as z,i as B}from\"./index.Cljt5KuQ.js\";function C(i){let t,a,h='<path fill=\"currentColor\" d=\"M12 12h2v12h-2zm6 0h2v12h-2z\"/><path fill=\"currentColor\" d=\"M4 6v2h2v20a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8h2V6zm4 22V8h16v20zm4-26h8v2h-8z\"/>',n=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},i[0]],r={};for(let e=0;e<n.length;e+=1)r=l(r,n[e]);return{c(){t=u(\"svg\"),a=new c(!0),this.h()},l(e){t=d(e,\"svg\",{viewBox:!0,width:!0,height:!0});var s=f(t);a=w(s,!0),s.forEach(o),this.h()},h(){a.a=null,m(t,r)},m(e,s){p(e,t,s),a.m(h,t)},p(e,[s]){m(t,r=x(n,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},s&1&&e[0]]))},i:v,o:v,d(e){e&&o(t)}}}function M(i,t,a){return i.$$set=h=>{a(0,t=l(l({},t),_(h)))},t=_(t),[t]}class y extends z{constructor(t){super(),B(this,t,M,C,g,{})}}export{y as T};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.739Z",
        "time": 0.07399999594781548,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.06199999188538641,
          "receive": 0.01200000406242907,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/close.CsMZUCB4.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"529-1733326797000\""
            },
            {
              "name": "age",
              "value": "30338"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "529"
            },
            {
              "name": "x-amz-cf-id",
              "value": "ZjDZS9jjz8A8UAqZCinjXkY1dB8r9niI9emMdxtrDvp_a0-uIfD2wQ=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:21 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 938,
            "mimeType": "text/javascript",
            "text": "import{s as u,J as o,K as v,L as c,M as d,b as f,N as L,f as h,O as m,i as w,n as g,P as _}from\"./scheduler.CeakrPJD.js\";import{g as x}from\"./settings.qWXPmYFi.js\";import{S as p,i as C}from\"./index.Cljt5KuQ.js\";function B(i){let e,a,n='<path fill=\"currentColor\" d=\"M17.414 16L24 9.414L22.586 8L16 14.586L9.414 8L8 9.414L14.586 16L8 22.586L9.414 24L16 17.414L22.586 24L24 22.586z\"/>',l=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},i[0]],r={};for(let t=0;t<l.length;t+=1)r=o(r,l[t]);return{c(){e=v(\"svg\"),a=new c(!0),this.h()},l(t){e=d(t,\"svg\",{viewBox:!0,width:!0,height:!0});var s=f(e);a=L(s,!0),s.forEach(h),this.h()},h(){a.a=null,m(e,r)},m(t,s){w(t,e,s),a.m(n,e)},p(t,[s]){m(e,r=x(l,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},s&1&&t[0]]))},i:g,o:g,d(t){t&&h(e)}}}function b(i,e,a){return i.$$set=n=>{a(0,e=o(o({},e),_(n)))},e=_(e),[e]}class S extends p{constructor(e){super(),C(this,e,b,B,u,{})}}export{S as C};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.739Z",
        "time": 0.07300000288523734,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.062000006437301636,
          "receive": 0.0109999964479357,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/Modal.BkbMR74H.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"1387-1732708078000\""
            },
            {
              "name": "age",
              "value": "491901"
            },
            {
              "name": "via",
              "value": "1.1 8d674b0dbbb3efae2c2364b57d734a54.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "1387"
            },
            {
              "name": "x-amz-cf-id",
              "value": "xk3Q0e8C44i7W2LOe_VzqEwErLM-ZyytaN-RbtgB3eMOZvXg5jELCg=="
            },
            {
              "name": "date",
              "value": "Wed, 27 Nov 2024 11:51:52 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 27 Nov 2024 11:47:58 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 3370,
            "mimeType": "text/javascript",
            "text": "import{s as S,m as C,e as h,c as b,b as g,f as p,h as c,i as j,u as q,p as A,q as B,z as M,Z as V,w as v,_ as G,j as K,E as y,R as O,v as P,G as R}from\"./scheduler.CeakrPJD.js\";import{S as z,i as N,t as w,a as $,b as Z,d as F,m as H,e as J,j as E}from\"./index.Cljt5KuQ.js\";import{c as D,a as I}from\"./index.Bq3K2eeF.js\";function L(o){let e,s;const i=o[2].default,n=C(i,o,o[1],null);return{c(){e=h(\"div\"),n&&n.c(),this.h()},l(t){e=b(t,\"DIV\",{class:!0});var r=g(e);n&&n.l(r),r.forEach(p),this.h()},h(){c(e,\"class\",\"contents\"),e.hidden=!0},m(t,r){j(t,e,r),n&&n.m(e,null),o[3](e),s=!0},p(t,[r]){n&&n.p&&(!s||r&2)&&q(n,i,t,t[1],s?B(i,t[1],r,null):A(t[1]),null)},i(t){s||(w(n,t),s=!0)},o(t){$(n,t),s=!1},d(t){t&&p(e),n&&n.d(t),o[3](null)}}}function Q(o,e,s){let{$$slots:i={},$$scope:n}=e,t;M(()=>{t.ownerDocument.body.appendChild(t)}),V(()=>{t!=null&&t.parentNode&&t.parentNode.removeChild(t)});function r(d){v[d?\"unshift\":\"push\"](()=>{t=d,s(0,t)})}return o.$$set=d=>{\"$$scope\"in d&&s(1,n=d.$$scope)},[t,n,i,r]}class T extends z{constructor(e){super(),N(this,e,Q,L,S,{})}}function U(o){let e,s,i,n,t,r,d;const m=o[5].default,u=C(m,o,o[8],null);return{c(){e=h(\"div\"),s=h(\"div\"),u&&u.c(),this.h()},l(a){e=b(a,\"DIV\",{role:!0,tabindex:!0,class:!0});var f=g(e);s=b(f,\"DIV\",{role:!0,tabindex:!0,class:!0});var _=g(s);u&&u.l(_),_.forEach(p),f.forEach(p),this.h()},h(){c(s,\"role\",\"dialog\"),c(s,\"tabindex\",\"-1\"),c(s,\"class\",i=\"max-h-[90dvh] overflow-y-auto overflow-x-hidden rounded-2xl bg-white shadow-2xl outline-none sm:-mt-10 \"+o[0]),c(e,\"role\",\"presentation\"),c(e,\"tabindex\",\"-1\"),c(e,\"class\",\"fixed inset-0 z-40 flex items-center justify-center bg-black/80 p-8 backdrop-blur-sm dark:bg-black/50\")},m(a,f){j(a,e,f),K(e,s),u&&u.m(s,null),o[6](s),o[7](e),t=!0,r||(d=[y(s,\"keydown\",o[3]),y(e,\"click\",O(o[4]))],r=!0)},p(a,f){u&&u.p&&(!t||f&256)&&q(u,m,a,a[8],t?B(m,a[8],f,null):A(a[8]),null),(!t||f&1&&i!==(i=\"max-h-[90dvh] overflow-y-auto overflow-x-hidden rounded-2xl bg-white shadow-2xl outline-none sm:-mt-10 \"+a[0]))&&c(s,\"class\",i)},i(a){t||(w(u,a),a&&P(()=>{t&&(n||(n=E(e,I,{easing:D,duration:300},!0)),n.run(1))}),t=!0)},o(a){$(u,a),a&&(n||(n=E(e,I,{easing:D,duration:300},!1)),n.run(0)),t=!1},d(a){a&&p(e),u&&u.d(a),o[6](null),o[7](null),a&&n&&n.end(),r=!1,R(d)}}}function W(o){let e,s;return e=new T({props:{$$slots:{default:[U]},$$scope:{ctx:o}}}),{c(){Z(e.$$.fragment)},l(i){F(e.$$.fragment,i)},m(i,n){H(e,i,n),s=!0},p(i,[n]){const t={};n&263&&(t.$$scope={dirty:n,ctx:i}),e.$set(t)},i(i){s||(w(e.$$.fragment,i),s=!0)},o(i){$(e.$$.fragment,i),s=!1},d(i){J(e,i)}}}function X(o,e,s){let{$$slots:i={},$$scope:n}=e,{width:t=\"max-w-sm\"}=e,r,d;const m=G();function u(l){l.key===\"Escape\"&&(l.preventDefault(),m(\"close\"))}function a(l){var k;(k=window==null?void 0:window.getSelection())!=null&&k.toString()||l.target===r&&m(\"close\")}M(()=>{var l;(l=document.getElementById(\"app\"))==null||l.setAttribute(\"inert\",\"true\"),d.focus()}),V(()=>{var l;document.querySelectorAll('[role=\"dialog\"]:not(#app *)').length===1&&((l=document.getElementById(\"app\"))==null||l.removeAttribute(\"inert\"))});function f(l){v[l?\"unshift\":\"push\"](()=>{d=l,s(2,d)})}function _(l){v[l?\"unshift\":\"push\"](()=>{r=l,s(1,r)})}return o.$$set=l=>{\"width\"in l&&s(0,t=l.width),\"$$scope\"in l&&s(8,n=l.$$scope)},[t,r,d,u,a,i,f,_,n]}class te extends z{constructor(e){super(),N(this,e,X,W,S,{width:0})}}export{te as M};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.740Z",
        "time": 0.06999999459367245,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.05800000508315861,
          "receive": 0.011999989510513842,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"1198-1733326797000\""
            },
            {
              "name": "age",
              "value": "30354"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "1198"
            },
            {
              "name": "x-amz-cf-id",
              "value": "MKqxMGCkafJcixAid6ksXI77M1ExYFEGFwoCg6hhtLiSJX3J9H78OA=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:27 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2572,
            "mimeType": "text/javascript",
            "text": "import{s as I,w as A,a as j,x as k,f as M,g as q,i as O,y as R,l as b,z}from\"../chunks/scheduler.CeakrPJD.js\";import{S as N,i as T,h as B,b as G,d as J,m as L,t as U,a as W,e as D}from\"../chunks/index.Cljt5KuQ.js\";import{b as v,g as F}from\"../chunks/entry.CNbBV9gi.js\";import{p as H}from\"../chunks/stores.BBDoy_q4.js\";import{e as K}from\"../chunks/public.BItpSmwI.js\";import{C as Q,p as V}from\"../chunks/pendingMessage.BH5nrwUr.js\";import{E as S,e as y}from\"../chunks/cookiesAreEnabled.CmuqkX8M.js\";import{u as X}from\"../chunks/settings.qWXPmYFi.js\";import{f as Y}from\"../chunks/models.BNqoyBuH.js\";function Z(a){let l,s,d,o;document.title=K.PUBLIC_APP_NAME;function m(e){a[7](e)}let i={loading:a[1],assistant:a[0].assistant,currentModel:a[3],models:a[0].models};return a[2]!==void 0&&(i.files=a[2]),s=new Q({props:i}),A.push(()=>B(s,\"files\",m)),s.$on(\"message\",a[8]),{c(){l=j(),G(s.$$.fragment)},l(e){k(\"svelte-1pfzvc7\",document.head).forEach(M),l=q(e),J(s.$$.fragment,e)},m(e,n){O(e,l,n),L(s,e,n),o=!0},p(e,[n]){const r={};n&2&&(r.loading=e[1]),n&1&&(r.assistant=e[0].assistant),n&8&&(r.currentModel=e[3]),n&1&&(r.models=e[0].models),!d&&n&4&&(d=!0,r.files=e[2],R(()=>d=!1)),s.$set(r)},i(e){o||(U(s.$$.fragment,e),o=!0)},o(e){W(s.$$.fragment,e),o=!1},d(e){e&&M(l),D(s,e)}}}function $(a,l,s){let d,o,m;b(a,H,t=>s(9,m=t));let{data:i}=l,e=!1,n=[];const r=X();b(a,r,t=>s(6,o=t));async function p(t){var _,h,w;try{s(1,e=!0);const c=i.models.map(u=>u.id);let f;c.includes(o.activeModel)?f=o.activeModel:c.includes((_=i.assistant)==null?void 0:_.modelId)?f=(h=i.assistant)==null?void 0:h.modelId:f=i.models[0].id;const g=await fetch(`${v}/conversation`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({model:f,preprompt:o.customPrompts[o.activeModel],assistantId:(w=i.assistant)==null?void 0:w._id})});if(!g.ok){const u=(await g.json()).message||S.default;y.set(u),console.error(\"Error while creating conversation: \",u);return}const{conversationId:P}=await g.json();V.set({content:t,files:n}),await F(`${v}/conversation/${P}`,{invalidateAll:!0})}catch(c){y.set(c.message||S.default),console.error(c)}finally{s(1,e=!1)}}z(()=>{const t=m.url.searchParams.get(\"q\");t&&p(t)});function C(t){n=t,s(2,n)}const E=t=>p(t.detail);return a.$$set=t=>{\"data\"in t&&s(0,i=t.data)},a.$$.update=()=>{var t;a.$$.dirty&65&&s(3,d=Y([...i.models,...i.oldModels],o.assistants.includes(o.activeModel)?(t=i.assistant)==null?void 0:t.modelId:o.activeModel))},[i,e,n,d,r,p,o,C,E]}class le extends N{constructor(l){super(),T(this,l,$,Z,I,{data:0})}}export{le as component};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.740Z",
        "time": 0.09800000407267362,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.0850000069476664,
          "receive": 0.012999997125007212,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"360751-1733326800000\""
            },
            {
              "name": "age",
              "value": "30308"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "360751"
            },
            {
              "name": "x-amz-cf-id",
              "value": "5RdrLKBHc-lPWQp1aQKEYv_Z5VIpWQHgDvqYOKX6mGUpPZ7Z3flE-w=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:51 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:40:00 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1471681,
            "mimeType": "text/javascript",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.760Z",
        "time": 0.2209999947808683,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.17600000137463212,
          "receive": 0.04499999340623617,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/Tool.aW5GZKd4.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"12910-1733326797000\""
            },
            {
              "name": "age",
              "value": "30308"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "12910"
            },
            {
              "name": "x-amz-cf-id",
              "value": "K_oe45FHdtV1NZ8pzRF6oTPxszhE1yRsH08mDGiKb0NpOrXCMo9xVg=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:51 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 58713,
            "mimeType": "text/javascript",
            "text": "import{s as We,J as ke,K as qe,L as He,M as Je,b as Ye,N as Ge,f as Ne,O as Oe,i as Xe,n as Ee,P as Re}from\"./scheduler.CeakrPJD.js\";import{g as Ke}from\"./settings.qWXPmYFi.js\";import{S as Qe,i as Fe}from\"./index.Cljt5KuQ.js\";function et(r){let e,t,s='<path fill=\"currentColor\" d=\"M17 22v-8h-4v2h2v6h-3v2h8v-2zM16 8a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 8\"/><path fill=\"currentColor\" d=\"M16 30a14 14 0 1 1 14-14a14 14 0 0 1-14 14m0-26a12 12 0 1 0 12 12A12 12 0 0 0 16 4\"/>',n=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},r[0]],a={};for(let i=0;i<n.length;i+=1)a=ke(a,n[i]);return{c(){e=qe(\"svg\"),t=new He(!0),this.h()},l(i){e=Je(i,\"svg\",{viewBox:!0,width:!0,height:!0});var o=Ye(e);t=Ge(o,!0),o.forEach(Ne),this.h()},h(){t.a=null,Oe(e,a)},m(i,o){Xe(i,e,o),t.m(s,e)},p(i,[o]){Oe(e,a=Ke(n,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},o&1&&i[0]]))},i:Ee,o:Ee,d(i){i&&Ne(e)}}}function tt(r,e,t){return r.$$set=s=>{t(0,e=ke(ke({},e),Re(s)))},e=Re(e),[e]}class dr extends Qe{constructor(e){super(),Fe(this,e,tt,et,We,{})}}var g;(function(r){r.assertEqual=n=>n;function e(n){}r.assertIs=e;function t(n){throw new Error}r.assertNever=t,r.arrayToEnum=n=>{const a={};for(const i of n)a[i]=i;return a},r.getValidEnumValues=n=>{const a=r.objectKeys(n).filter(o=>typeof n[n[o]]!=\"number\"),i={};for(const o of a)i[o]=n[o];return r.objectValues(i)},r.objectValues=n=>r.objectKeys(n).map(function(a){return n[a]}),r.objectKeys=typeof Object.keys==\"function\"?n=>Object.keys(n):n=>{const a=[];for(const i in n)Object.prototype.hasOwnProperty.call(n,i)&&a.push(i);return a},r.find=(n,a)=>{for(const i of n)if(a(i))return i},r.isInteger=typeof Number.isInteger==\"function\"?n=>Number.isInteger(n):n=>typeof n==\"number\"&&isFinite(n)&&Math.floor(n)===n;function s(n,a=\" | \"){return n.map(i=>typeof i==\"string\"?`'${i}'`:i).join(a)}r.joinValues=s,r.jsonStringifyReplacer=(n,a)=>typeof a==\"bigint\"?a.toString():a})(g||(g={}));var be;(function(r){r.mergeShapes=(e,t)=>({...e,...t})})(be||(be={}));const f=g.arrayToEnum([\"string\",\"nan\",\"number\",\"integer\",\"float\",\"boolean\",\"date\",\"bigint\",\"symbol\",\"function\",\"undefined\",\"null\",\"array\",\"object\",\"unknown\",\"promise\",\"void\",\"never\",\"map\",\"set\"]),A=r=>{switch(typeof r){case\"undefined\":return f.undefined;case\"string\":return f.string;case\"number\":return isNaN(r)?f.nan:f.number;case\"boolean\":return f.boolean;case\"function\":return f.function;case\"bigint\":return f.bigint;case\"symbol\":return f.symbol;case\"object\":return Array.isArray(r)?f.array:r===null?f.null:r.then&&typeof r.then==\"function\"&&r.catch&&typeof r.catch==\"function\"?f.promise:typeof Map<\"u\"&&r instanceof Map?f.map:typeof Set<\"u\"&&r instanceof Set?f.set:typeof Date<\"u\"&&r instanceof Date?f.date:f.object;default:return f.unknown}},d=g.arrayToEnum([\"invalid_type\",\"invalid_literal\",\"custom\",\"invalid_union\",\"invalid_union_discriminator\",\"invalid_enum_value\",\"unrecognized_keys\",\"invalid_arguments\",\"invalid_return_type\",\"invalid_date\",\"invalid_string\",\"too_small\",\"too_big\",\"invalid_intersection_types\",\"not_multiple_of\",\"not_finite\"]),rt=r=>JSON.stringify(r,null,2).replace(/\"([^\"]+)\":/g,\"$1:\");class T extends Error{constructor(e){super(),this.issues=[],this.addIssue=s=>{this.issues=[...this.issues,s]},this.addIssues=(s=[])=>{this.issues=[...this.issues,...s]};const t=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,t):this.__proto__=t,this.name=\"ZodError\",this.issues=e}get errors(){return this.issues}format(e){const t=e||function(a){return a.message},s={_errors:[]},n=a=>{for(const i of a.issues)if(i.code===\"invalid_union\")i.unionErrors.map(n);else if(i.code===\"invalid_return_type\")n(i.returnTypeError);else if(i.code===\"invalid_arguments\")n(i.argumentsError);else if(i.path.length===0)s._errors.push(t(i));else{let o=s,l=0;for(;l<i.path.length;){const c=i.path[l];l===i.path.length-1?(o[c]=o[c]||{_errors:[]},o[c]._errors.push(t(i))):o[c]=o[c]||{_errors:[]},o=o[c],l++}}};return n(this),s}static assert(e){if(!(e instanceof T))throw new Error(`Not a ZodError: ${e}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,g.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(e=t=>t.message){const t={},s=[];for(const n of this.issues)n.path.length>0?(t[n.path[0]]=t[n.path[0]]||[],t[n.path[0]].push(e(n))):s.push(e(n));return{formErrors:s,fieldErrors:t}}get formErrors(){return this.flatten()}}T.create=r=>new T(r);const q=(r,e)=>{let t;switch(r.code){case d.invalid_type:r.received===f.undefined?t=\"Required\":t=`Expected ${r.expected}, received ${r.received}`;break;case d.invalid_literal:t=`Invalid literal value, expected ${JSON.stringify(r.expected,g.jsonStringifyReplacer)}`;break;case d.unrecognized_keys:t=`Unrecognized key(s) in object: ${g.joinValues(r.keys,\", \")}`;break;case d.invalid_union:t=\"Invalid input\";break;case d.invalid_union_discriminator:t=`Invalid discriminator value. Expected ${g.joinValues(r.options)}`;break;case d.invalid_enum_value:t=`Invalid enum value. Expected ${g.joinValues(r.options)}, received '${r.received}'`;break;case d.invalid_arguments:t=\"Invalid function arguments\";break;case d.invalid_return_type:t=\"Invalid function return type\";break;case d.invalid_date:t=\"Invalid date\";break;case d.invalid_string:typeof r.validation==\"object\"?\"includes\"in r.validation?(t=`Invalid input: must include \"${r.validation.includes}\"`,typeof r.validation.position==\"number\"&&(t=`${t} at one or more positions greater than or equal to ${r.validation.position}`)):\"startsWith\"in r.validation?t=`Invalid input: must start with \"${r.validation.startsWith}\"`:\"endsWith\"in r.validation?t=`Invalid input: must end with \"${r.validation.endsWith}\"`:g.assertNever(r.validation):r.validation!==\"regex\"?t=`Invalid ${r.validation}`:t=\"Invalid\";break;case d.too_small:r.type===\"array\"?t=`Array must contain ${r.exact?\"exactly\":r.inclusive?\"at least\":\"more than\"} ${r.minimum} element(s)`:r.type===\"string\"?t=`String must contain ${r.exact?\"exactly\":r.inclusive?\"at least\":\"over\"} ${r.minimum} character(s)`:r.type===\"number\"?t=`Number must be ${r.exact?\"exactly equal to \":r.inclusive?\"greater than or equal to \":\"greater than \"}${r.minimum}`:r.type===\"date\"?t=`Date must be ${r.exact?\"exactly equal to \":r.inclusive?\"greater than or equal to \":\"greater than \"}${new Date(Number(r.minimum))}`:t=\"Invalid input\";break;case d.too_big:r.type===\"array\"?t=`Array must contain ${r.exact?\"exactly\":r.inclusive?\"at most\":\"less than\"} ${r.maximum} element(s)`:r.type===\"string\"?t=`String must contain ${r.exact?\"exactly\":r.inclusive?\"at most\":\"under\"} ${r.maximum} character(s)`:r.type===\"number\"?t=`Number must be ${r.exact?\"exactly\":r.inclusive?\"less than or equal to\":\"less than\"} ${r.maximum}`:r.type===\"bigint\"?t=`BigInt must be ${r.exact?\"exactly\":r.inclusive?\"less than or equal to\":\"less than\"} ${r.maximum}`:r.type===\"date\"?t=`Date must be ${r.exact?\"exactly\":r.inclusive?\"smaller than or equal to\":\"smaller than\"} ${new Date(Number(r.maximum))}`:t=\"Invalid input\";break;case d.custom:t=\"Invalid input\";break;case d.invalid_intersection_types:t=\"Intersection results could not be merged\";break;case d.not_multiple_of:t=`Number must be a multiple of ${r.multipleOf}`;break;case d.not_finite:t=\"Number must be finite\";break;default:t=e.defaultError,g.assertNever(r)}return{message:t}};let Ae=q;function st(r){Ae=r}function le(){return Ae}const fe=r=>{const{data:e,path:t,errorMaps:s,issueData:n}=r,a=[...t,...n.path||[]],i={...n,path:a};if(n.message!==void 0)return{...n,path:a,message:n.message};let o=\"\";const l=s.filter(c=>!!c).slice().reverse();for(const c of l)o=c(i,{data:e,defaultError:o}).message;return{...n,path:a,message:o}},nt=[];function u(r,e){const t=le(),s=fe({issueData:e,data:r.data,path:r.path,errorMaps:[r.common.contextualErrorMap,r.schemaErrorMap,t,t===q?void 0:q].filter(n=>!!n)});r.common.issues.push(s)}class b{constructor(){this.value=\"valid\"}dirty(){this.value===\"valid\"&&(this.value=\"dirty\")}abort(){this.value!==\"aborted\"&&(this.value=\"aborted\")}static mergeArray(e,t){const s=[];for(const n of t){if(n.status===\"aborted\")return m;n.status===\"dirty\"&&e.dirty(),s.push(n.value)}return{status:e.value,value:s}}static async mergeObjectAsync(e,t){const s=[];for(const n of t){const a=await n.key,i=await n.value;s.push({key:a,value:i})}return b.mergeObjectSync(e,s)}static mergeObjectSync(e,t){const s={};for(const n of t){const{key:a,value:i}=n;if(a.status===\"aborted\"||i.status===\"aborted\")return m;a.status===\"dirty\"&&e.dirty(),i.status===\"dirty\"&&e.dirty(),a.value!==\"__proto__\"&&(typeof i.value<\"u\"||n.alwaysSet)&&(s[a.value]=i.value)}return{status:e.value,value:s}}}const m=Object.freeze({status:\"aborted\"}),B=r=>({status:\"dirty\",value:r}),w=r=>({status:\"valid\",value:r}),we=r=>r.status===\"aborted\",Te=r=>r.status===\"dirty\",X=r=>r.status===\"valid\",K=r=>typeof Promise<\"u\"&&r instanceof Promise;function he(r,e,t,s){if(typeof e==\"function\"?r!==e||!s:!e.has(r))throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");return e.get(r)}function Me(r,e,t,s,n){if(typeof e==\"function\"?r!==e||!n:!e.has(r))throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");return e.set(r,t),t}var h;(function(r){r.errToObj=e=>typeof e==\"string\"?{message:e}:e||{},r.toString=e=>typeof e==\"string\"?e:e==null?void 0:e.message})(h||(h={}));var Y,G;class E{constructor(e,t,s,n){this._cachedPath=[],this.parent=e,this.data=t,this._path=s,this._key=n}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}}const Ie=(r,e)=>{if(X(e))return{success:!0,data:e.value};if(!r.common.issues.length)throw new Error(\"Validation failed but no issues detected.\");return{success:!1,get error(){if(this._error)return this._error;const t=new T(r.common.issues);return this._error=t,this._error}}};function _(r){if(!r)return{};const{errorMap:e,invalid_type_error:t,required_error:s,description:n}=r;if(e&&(t||s))throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);return e?{errorMap:e,description:n}:{errorMap:(i,o)=>{var l,c;const{message:v}=r;return i.code===\"invalid_enum_value\"?{message:v??o.defaultError}:typeof o.data>\"u\"?{message:(l=v??s)!==null&&l!==void 0?l:o.defaultError}:i.code!==\"invalid_type\"?{message:o.defaultError}:{message:(c=v??t)!==null&&c!==void 0?c:o.defaultError}},description:n}}class y{constructor(e){this.spa=this.safeParseAsync,this._def=e,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(e){return A(e.data)}_getOrReturnCtx(e,t){return t||{common:e.parent.common,data:e.data,parsedType:A(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}_processInputParams(e){return{status:new b,ctx:{common:e.parent.common,data:e.data,parsedType:A(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}}_parseSync(e){const t=this._parse(e);if(K(t))throw new Error(\"Synchronous parse encountered promise.\");return t}_parseAsync(e){const t=this._parse(e);return Promise.resolve(t)}parse(e,t){const s=this.safeParse(e,t);if(s.success)return s.data;throw s.error}safeParse(e,t){var s;const n={common:{issues:[],async:(s=t==null?void 0:t.async)!==null&&s!==void 0?s:!1,contextualErrorMap:t==null?void 0:t.errorMap},path:(t==null?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:A(e)},a=this._parseSync({data:e,path:n.path,parent:n});return Ie(n,a)}async parseAsync(e,t){const s=await this.safeParseAsync(e,t);if(s.success)return s.data;throw s.error}async safeParseAsync(e,t){const s={common:{issues:[],contextualErrorMap:t==null?void 0:t.errorMap,async:!0},path:(t==null?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:A(e)},n=this._parse({data:e,path:s.path,parent:s}),a=await(K(n)?n:Promise.resolve(n));return Ie(s,a)}refine(e,t){const s=n=>typeof t==\"string\"||typeof t>\"u\"?{message:t}:typeof t==\"function\"?t(n):t;return this._refinement((n,a)=>{const i=e(n),o=()=>a.addIssue({code:d.custom,...s(n)});return typeof Promise<\"u\"&&i instanceof Promise?i.then(l=>l?!0:(o(),!1)):i?!0:(o(),!1)})}refinement(e,t){return this._refinement((s,n)=>e(s)?!0:(n.addIssue(typeof t==\"function\"?t(s,n):t),!1))}_refinement(e){return new N({schema:this,typeName:p.ZodEffects,effect:{type:\"refinement\",refinement:e}})}superRefine(e){return this._refinement(e)}optional(){return O.create(this,this._def)}nullable(){return V.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return C.create(this,this._def)}promise(){return J.create(this,this._def)}or(e){return te.create([this,e],this._def)}and(e){return re.create(this,e,this._def)}transform(e){return new N({..._(this._def),schema:this,typeName:p.ZodEffects,effect:{type:\"transform\",transform:e}})}default(e){const t=typeof e==\"function\"?e:()=>e;return new oe({..._(this._def),innerType:this,defaultValue:t,typeName:p.ZodDefault})}brand(){return new Se({typeName:p.ZodBranded,type:this,..._(this._def)})}catch(e){const t=typeof e==\"function\"?e:()=>e;return new de({..._(this._def),innerType:this,catchValue:t,typeName:p.ZodCatch})}describe(e){const t=this.constructor;return new t({...this._def,description:e})}pipe(e){return ue.create(this,e)}readonly(){return ce.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}}const at=/^c[^\\s-]{8,}$/i,it=/^[0-9a-z]+$/,ot=/^[0-9A-HJKMNP-TV-Z]{26}$/,dt=/^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i,ct=/^[a-z0-9_-]{21}$/i,ut=/^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/,lt=/^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i,ft=\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\";let xe;const ht=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,pt=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,mt=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,Pe=\"((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))\",vt=new RegExp(`^${Pe}$`);function $e(r){let e=\"([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d\";return r.precision?e=`${e}\\\\.\\\\d{${r.precision}}`:r.precision==null&&(e=`${e}(\\\\.\\\\d+)?`),e}function _t(r){return new RegExp(`^${$e(r)}$`)}function Ve(r){let e=`${Pe}T${$e(r)}`;const t=[];return t.push(r.local?\"Z?\":\"Z\"),r.offset&&t.push(\"([+-]\\\\d{2}:?\\\\d{2})\"),e=`${e}(${t.join(\"|\")})`,new RegExp(`^${e}$`)}function yt(r,e){return!!((e===\"v4\"||!e)&&ht.test(r)||(e===\"v6\"||!e)&&pt.test(r))}class S extends y{_parse(e){if(this._def.coerce&&(e.data=String(e.data)),this._getType(e)!==f.string){const a=this._getOrReturnCtx(e);return u(a,{code:d.invalid_type,expected:f.string,received:a.parsedType}),m}const s=new b;let n;for(const a of this._def.checks)if(a.kind===\"min\")e.data.length<a.value&&(n=this._getOrReturnCtx(e,n),u(n,{code:d.too_small,minimum:a.value,type:\"string\",inclusive:!0,exact:!1,message:a.message}),s.dirty());else if(a.kind===\"max\")e.data.length>a.value&&(n=this._getOrReturnCtx(e,n),u(n,{code:d.too_big,maximum:a.value,type:\"string\",inclusive:!0,exact:!1,message:a.message}),s.dirty());else if(a.kind===\"length\"){const i=e.data.length>a.value,o=e.data.length<a.value;(i||o)&&(n=this._getOrReturnCtx(e,n),i?u(n,{code:d.too_big,maximum:a.value,type:\"string\",inclusive:!0,exact:!0,message:a.message}):o&&u(n,{code:d.too_small,minimum:a.value,type:\"string\",inclusive:!0,exact:!0,message:a.message}),s.dirty())}else if(a.kind===\"email\")lt.test(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{validation:\"email\",code:d.invalid_string,message:a.message}),s.dirty());else if(a.kind===\"emoji\")xe||(xe=new RegExp(ft,\"u\")),xe.test(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{validation:\"emoji\",code:d.invalid_string,message:a.message}),s.dirty());else if(a.kind===\"uuid\")dt.test(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{validation:\"uuid\",code:d.invalid_string,message:a.message}),s.dirty());else if(a.kind===\"nanoid\")ct.test(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{validation:\"nanoid\",code:d.invalid_string,message:a.message}),s.dirty());else if(a.kind===\"cuid\")at.test(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{validation:\"cuid\",code:d.invalid_string,message:a.message}),s.dirty());else if(a.kind===\"cuid2\")it.test(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{validation:\"cuid2\",code:d.invalid_string,message:a.message}),s.dirty());else if(a.kind===\"ulid\")ot.test(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{validation:\"ulid\",code:d.invalid_string,message:a.message}),s.dirty());else if(a.kind===\"url\")try{new URL(e.data)}catch{n=this._getOrReturnCtx(e,n),u(n,{validation:\"url\",code:d.invalid_string,message:a.message}),s.dirty()}else a.kind===\"regex\"?(a.regex.lastIndex=0,a.regex.test(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{validation:\"regex\",code:d.invalid_string,message:a.message}),s.dirty())):a.kind===\"trim\"?e.data=e.data.trim():a.kind===\"includes\"?e.data.includes(a.value,a.position)||(n=this._getOrReturnCtx(e,n),u(n,{code:d.invalid_string,validation:{includes:a.value,position:a.position},message:a.message}),s.dirty()):a.kind===\"toLowerCase\"?e.data=e.data.toLowerCase():a.kind===\"toUpperCase\"?e.data=e.data.toUpperCase():a.kind===\"startsWith\"?e.data.startsWith(a.value)||(n=this._getOrReturnCtx(e,n),u(n,{code:d.invalid_string,validation:{startsWith:a.value},message:a.message}),s.dirty()):a.kind===\"endsWith\"?e.data.endsWith(a.value)||(n=this._getOrReturnCtx(e,n),u(n,{code:d.invalid_string,validation:{endsWith:a.value},message:a.message}),s.dirty()):a.kind===\"datetime\"?Ve(a).test(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{code:d.invalid_string,validation:\"datetime\",message:a.message}),s.dirty()):a.kind===\"date\"?vt.test(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{code:d.invalid_string,validation:\"date\",message:a.message}),s.dirty()):a.kind===\"time\"?_t(a).test(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{code:d.invalid_string,validation:\"time\",message:a.message}),s.dirty()):a.kind===\"duration\"?ut.test(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{validation:\"duration\",code:d.invalid_string,message:a.message}),s.dirty()):a.kind===\"ip\"?yt(e.data,a.version)||(n=this._getOrReturnCtx(e,n),u(n,{validation:\"ip\",code:d.invalid_string,message:a.message}),s.dirty()):a.kind===\"base64\"?mt.test(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{validation:\"base64\",code:d.invalid_string,message:a.message}),s.dirty()):g.assertNever(a);return{status:s.value,value:e.data}}_regex(e,t,s){return this.refinement(n=>e.test(n),{validation:t,code:d.invalid_string,...h.errToObj(s)})}_addCheck(e){return new S({...this._def,checks:[...this._def.checks,e]})}email(e){return this._addCheck({kind:\"email\",...h.errToObj(e)})}url(e){return this._addCheck({kind:\"url\",...h.errToObj(e)})}emoji(e){return this._addCheck({kind:\"emoji\",...h.errToObj(e)})}uuid(e){return this._addCheck({kind:\"uuid\",...h.errToObj(e)})}nanoid(e){return this._addCheck({kind:\"nanoid\",...h.errToObj(e)})}cuid(e){return this._addCheck({kind:\"cuid\",...h.errToObj(e)})}cuid2(e){return this._addCheck({kind:\"cuid2\",...h.errToObj(e)})}ulid(e){return this._addCheck({kind:\"ulid\",...h.errToObj(e)})}base64(e){return this._addCheck({kind:\"base64\",...h.errToObj(e)})}ip(e){return this._addCheck({kind:\"ip\",...h.errToObj(e)})}datetime(e){var t,s;return typeof e==\"string\"?this._addCheck({kind:\"datetime\",precision:null,offset:!1,local:!1,message:e}):this._addCheck({kind:\"datetime\",precision:typeof(e==null?void 0:e.precision)>\"u\"?null:e==null?void 0:e.precision,offset:(t=e==null?void 0:e.offset)!==null&&t!==void 0?t:!1,local:(s=e==null?void 0:e.local)!==null&&s!==void 0?s:!1,...h.errToObj(e==null?void 0:e.message)})}date(e){return this._addCheck({kind:\"date\",message:e})}time(e){return typeof e==\"string\"?this._addCheck({kind:\"time\",precision:null,message:e}):this._addCheck({kind:\"time\",precision:typeof(e==null?void 0:e.precision)>\"u\"?null:e==null?void 0:e.precision,...h.errToObj(e==null?void 0:e.message)})}duration(e){return this._addCheck({kind:\"duration\",...h.errToObj(e)})}regex(e,t){return this._addCheck({kind:\"regex\",regex:e,...h.errToObj(t)})}includes(e,t){return this._addCheck({kind:\"includes\",value:e,position:t==null?void 0:t.position,...h.errToObj(t==null?void 0:t.message)})}startsWith(e,t){return this._addCheck({kind:\"startsWith\",value:e,...h.errToObj(t)})}endsWith(e,t){return this._addCheck({kind:\"endsWith\",value:e,...h.errToObj(t)})}min(e,t){return this._addCheck({kind:\"min\",value:e,...h.errToObj(t)})}max(e,t){return this._addCheck({kind:\"max\",value:e,...h.errToObj(t)})}length(e,t){return this._addCheck({kind:\"length\",value:e,...h.errToObj(t)})}nonempty(e){return this.min(1,h.errToObj(e))}trim(){return new S({...this._def,checks:[...this._def.checks,{kind:\"trim\"}]})}toLowerCase(){return new S({...this._def,checks:[...this._def.checks,{kind:\"toLowerCase\"}]})}toUpperCase(){return new S({...this._def,checks:[...this._def.checks,{kind:\"toUpperCase\"}]})}get isDatetime(){return!!this._def.checks.find(e=>e.kind===\"datetime\")}get isDate(){return!!this._def.checks.find(e=>e.kind===\"date\")}get isTime(){return!!this._def.checks.find(e=>e.kind===\"time\")}get isDuration(){return!!this._def.checks.find(e=>e.kind===\"duration\")}get isEmail(){return!!this._def.checks.find(e=>e.kind===\"email\")}get isURL(){return!!this._def.checks.find(e=>e.kind===\"url\")}get isEmoji(){return!!this._def.checks.find(e=>e.kind===\"emoji\")}get isUUID(){return!!this._def.checks.find(e=>e.kind===\"uuid\")}get isNANOID(){return!!this._def.checks.find(e=>e.kind===\"nanoid\")}get isCUID(){return!!this._def.checks.find(e=>e.kind===\"cuid\")}get isCUID2(){return!!this._def.checks.find(e=>e.kind===\"cuid2\")}get isULID(){return!!this._def.checks.find(e=>e.kind===\"ulid\")}get isIP(){return!!this._def.checks.find(e=>e.kind===\"ip\")}get isBase64(){return!!this._def.checks.find(e=>e.kind===\"base64\")}get minLength(){let e=null;for(const t of this._def.checks)t.kind===\"min\"&&(e===null||t.value>e)&&(e=t.value);return e}get maxLength(){let e=null;for(const t of this._def.checks)t.kind===\"max\"&&(e===null||t.value<e)&&(e=t.value);return e}}S.create=r=>{var e;return new S({checks:[],typeName:p.ZodString,coerce:(e=r==null?void 0:r.coerce)!==null&&e!==void 0?e:!1,..._(r)})};function gt(r,e){const t=(r.toString().split(\".\")[1]||\"\").length,s=(e.toString().split(\".\")[1]||\"\").length,n=t>s?t:s,a=parseInt(r.toFixed(n).replace(\".\",\"\")),i=parseInt(e.toFixed(n).replace(\".\",\"\"));return a%i/Math.pow(10,n)}class M extends y{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(e){if(this._def.coerce&&(e.data=Number(e.data)),this._getType(e)!==f.number){const a=this._getOrReturnCtx(e);return u(a,{code:d.invalid_type,expected:f.number,received:a.parsedType}),m}let s;const n=new b;for(const a of this._def.checks)a.kind===\"int\"?g.isInteger(e.data)||(s=this._getOrReturnCtx(e,s),u(s,{code:d.invalid_type,expected:\"integer\",received:\"float\",message:a.message}),n.dirty()):a.kind===\"min\"?(a.inclusive?e.data<a.value:e.data<=a.value)&&(s=this._getOrReturnCtx(e,s),u(s,{code:d.too_small,minimum:a.value,type:\"number\",inclusive:a.inclusive,exact:!1,message:a.message}),n.dirty()):a.kind===\"max\"?(a.inclusive?e.data>a.value:e.data>=a.value)&&(s=this._getOrReturnCtx(e,s),u(s,{code:d.too_big,maximum:a.value,type:\"number\",inclusive:a.inclusive,exact:!1,message:a.message}),n.dirty()):a.kind===\"multipleOf\"?gt(e.data,a.value)!==0&&(s=this._getOrReturnCtx(e,s),u(s,{code:d.not_multiple_of,multipleOf:a.value,message:a.message}),n.dirty()):a.kind===\"finite\"?Number.isFinite(e.data)||(s=this._getOrReturnCtx(e,s),u(s,{code:d.not_finite,message:a.message}),n.dirty()):g.assertNever(a);return{status:n.value,value:e.data}}gte(e,t){return this.setLimit(\"min\",e,!0,h.toString(t))}gt(e,t){return this.setLimit(\"min\",e,!1,h.toString(t))}lte(e,t){return this.setLimit(\"max\",e,!0,h.toString(t))}lt(e,t){return this.setLimit(\"max\",e,!1,h.toString(t))}setLimit(e,t,s,n){return new M({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:s,message:h.toString(n)}]})}_addCheck(e){return new M({...this._def,checks:[...this._def.checks,e]})}int(e){return this._addCheck({kind:\"int\",message:h.toString(e)})}positive(e){return this._addCheck({kind:\"min\",value:0,inclusive:!1,message:h.toString(e)})}negative(e){return this._addCheck({kind:\"max\",value:0,inclusive:!1,message:h.toString(e)})}nonpositive(e){return this._addCheck({kind:\"max\",value:0,inclusive:!0,message:h.toString(e)})}nonnegative(e){return this._addCheck({kind:\"min\",value:0,inclusive:!0,message:h.toString(e)})}multipleOf(e,t){return this._addCheck({kind:\"multipleOf\",value:e,message:h.toString(t)})}finite(e){return this._addCheck({kind:\"finite\",message:h.toString(e)})}safe(e){return this._addCheck({kind:\"min\",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:h.toString(e)})._addCheck({kind:\"max\",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:h.toString(e)})}get minValue(){let e=null;for(const t of this._def.checks)t.kind===\"min\"&&(e===null||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(const t of this._def.checks)t.kind===\"max\"&&(e===null||t.value<e)&&(e=t.value);return e}get isInt(){return!!this._def.checks.find(e=>e.kind===\"int\"||e.kind===\"multipleOf\"&&g.isInteger(e.value))}get isFinite(){let e=null,t=null;for(const s of this._def.checks){if(s.kind===\"finite\"||s.kind===\"int\"||s.kind===\"multipleOf\")return!0;s.kind===\"min\"?(t===null||s.value>t)&&(t=s.value):s.kind===\"max\"&&(e===null||s.value<e)&&(e=s.value)}return Number.isFinite(t)&&Number.isFinite(e)}}M.create=r=>new M({checks:[],typeName:p.ZodNumber,coerce:(r==null?void 0:r.coerce)||!1,..._(r)});class P extends y{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(e){if(this._def.coerce&&(e.data=BigInt(e.data)),this._getType(e)!==f.bigint){const a=this._getOrReturnCtx(e);return u(a,{code:d.invalid_type,expected:f.bigint,received:a.parsedType}),m}let s;const n=new b;for(const a of this._def.checks)a.kind===\"min\"?(a.inclusive?e.data<a.value:e.data<=a.value)&&(s=this._getOrReturnCtx(e,s),u(s,{code:d.too_small,type:\"bigint\",minimum:a.value,inclusive:a.inclusive,message:a.message}),n.dirty()):a.kind===\"max\"?(a.inclusive?e.data>a.value:e.data>=a.value)&&(s=this._getOrReturnCtx(e,s),u(s,{code:d.too_big,type:\"bigint\",maximum:a.value,inclusive:a.inclusive,message:a.message}),n.dirty()):a.kind===\"multipleOf\"?e.data%a.value!==BigInt(0)&&(s=this._getOrReturnCtx(e,s),u(s,{code:d.not_multiple_of,multipleOf:a.value,message:a.message}),n.dirty()):g.assertNever(a);return{status:n.value,value:e.data}}gte(e,t){return this.setLimit(\"min\",e,!0,h.toString(t))}gt(e,t){return this.setLimit(\"min\",e,!1,h.toString(t))}lte(e,t){return this.setLimit(\"max\",e,!0,h.toString(t))}lt(e,t){return this.setLimit(\"max\",e,!1,h.toString(t))}setLimit(e,t,s,n){return new P({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:s,message:h.toString(n)}]})}_addCheck(e){return new P({...this._def,checks:[...this._def.checks,e]})}positive(e){return this._addCheck({kind:\"min\",value:BigInt(0),inclusive:!1,message:h.toString(e)})}negative(e){return this._addCheck({kind:\"max\",value:BigInt(0),inclusive:!1,message:h.toString(e)})}nonpositive(e){return this._addCheck({kind:\"max\",value:BigInt(0),inclusive:!0,message:h.toString(e)})}nonnegative(e){return this._addCheck({kind:\"min\",value:BigInt(0),inclusive:!0,message:h.toString(e)})}multipleOf(e,t){return this._addCheck({kind:\"multipleOf\",value:e,message:h.toString(t)})}get minValue(){let e=null;for(const t of this._def.checks)t.kind===\"min\"&&(e===null||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(const t of this._def.checks)t.kind===\"max\"&&(e===null||t.value<e)&&(e=t.value);return e}}P.create=r=>{var e;return new P({checks:[],typeName:p.ZodBigInt,coerce:(e=r==null?void 0:r.coerce)!==null&&e!==void 0?e:!1,..._(r)})};class Q extends y{_parse(e){if(this._def.coerce&&(e.data=!!e.data),this._getType(e)!==f.boolean){const s=this._getOrReturnCtx(e);return u(s,{code:d.invalid_type,expected:f.boolean,received:s.parsedType}),m}return w(e.data)}}Q.create=r=>new Q({typeName:p.ZodBoolean,coerce:(r==null?void 0:r.coerce)||!1,..._(r)});class D extends y{_parse(e){if(this._def.coerce&&(e.data=new Date(e.data)),this._getType(e)!==f.date){const a=this._getOrReturnCtx(e);return u(a,{code:d.invalid_type,expected:f.date,received:a.parsedType}),m}if(isNaN(e.data.getTime())){const a=this._getOrReturnCtx(e);return u(a,{code:d.invalid_date}),m}const s=new b;let n;for(const a of this._def.checks)a.kind===\"min\"?e.data.getTime()<a.value&&(n=this._getOrReturnCtx(e,n),u(n,{code:d.too_small,message:a.message,inclusive:!0,exact:!1,minimum:a.value,type:\"date\"}),s.dirty()):a.kind===\"max\"?e.data.getTime()>a.value&&(n=this._getOrReturnCtx(e,n),u(n,{code:d.too_big,message:a.message,inclusive:!0,exact:!1,maximum:a.value,type:\"date\"}),s.dirty()):g.assertNever(a);return{status:s.value,value:new Date(e.data.getTime())}}_addCheck(e){return new D({...this._def,checks:[...this._def.checks,e]})}min(e,t){return this._addCheck({kind:\"min\",value:e.getTime(),message:h.toString(t)})}max(e,t){return this._addCheck({kind:\"max\",value:e.getTime(),message:h.toString(t)})}get minDate(){let e=null;for(const t of this._def.checks)t.kind===\"min\"&&(e===null||t.value>e)&&(e=t.value);return e!=null?new Date(e):null}get maxDate(){let e=null;for(const t of this._def.checks)t.kind===\"max\"&&(e===null||t.value<e)&&(e=t.value);return e!=null?new Date(e):null}}D.create=r=>new D({checks:[],coerce:(r==null?void 0:r.coerce)||!1,typeName:p.ZodDate,..._(r)});class pe extends y{_parse(e){if(this._getType(e)!==f.symbol){const s=this._getOrReturnCtx(e);return u(s,{code:d.invalid_type,expected:f.symbol,received:s.parsedType}),m}return w(e.data)}}pe.create=r=>new pe({typeName:p.ZodSymbol,..._(r)});class F extends y{_parse(e){if(this._getType(e)!==f.undefined){const s=this._getOrReturnCtx(e);return u(s,{code:d.invalid_type,expected:f.undefined,received:s.parsedType}),m}return w(e.data)}}F.create=r=>new F({typeName:p.ZodUndefined,..._(r)});class ee extends y{_parse(e){if(this._getType(e)!==f.null){const s=this._getOrReturnCtx(e);return u(s,{code:d.invalid_type,expected:f.null,received:s.parsedType}),m}return w(e.data)}}ee.create=r=>new ee({typeName:p.ZodNull,..._(r)});class H extends y{constructor(){super(...arguments),this._any=!0}_parse(e){return w(e.data)}}H.create=r=>new H({typeName:p.ZodAny,..._(r)});class L extends y{constructor(){super(...arguments),this._unknown=!0}_parse(e){return w(e.data)}}L.create=r=>new L({typeName:p.ZodUnknown,..._(r)});class j extends y{_parse(e){const t=this._getOrReturnCtx(e);return u(t,{code:d.invalid_type,expected:f.never,received:t.parsedType}),m}}j.create=r=>new j({typeName:p.ZodNever,..._(r)});class me extends y{_parse(e){if(this._getType(e)!==f.undefined){const s=this._getOrReturnCtx(e);return u(s,{code:d.invalid_type,expected:f.void,received:s.parsedType}),m}return w(e.data)}}me.create=r=>new me({typeName:p.ZodVoid,..._(r)});class C extends y{_parse(e){const{ctx:t,status:s}=this._processInputParams(e),n=this._def;if(t.parsedType!==f.array)return u(t,{code:d.invalid_type,expected:f.array,received:t.parsedType}),m;if(n.exactLength!==null){const i=t.data.length>n.exactLength.value,o=t.data.length<n.exactLength.value;(i||o)&&(u(t,{code:i?d.too_big:d.too_small,minimum:o?n.exactLength.value:void 0,maximum:i?n.exactLength.value:void 0,type:\"array\",inclusive:!0,exact:!0,message:n.exactLength.message}),s.dirty())}if(n.minLength!==null&&t.data.length<n.minLength.value&&(u(t,{code:d.too_small,minimum:n.minLength.value,type:\"array\",inclusive:!0,exact:!1,message:n.minLength.message}),s.dirty()),n.maxLength!==null&&t.data.length>n.maxLength.value&&(u(t,{code:d.too_big,maximum:n.maxLength.value,type:\"array\",inclusive:!0,exact:!1,message:n.maxLength.message}),s.dirty()),t.common.async)return Promise.all([...t.data].map((i,o)=>n.type._parseAsync(new E(t,i,t.path,o)))).then(i=>b.mergeArray(s,i));const a=[...t.data].map((i,o)=>n.type._parseSync(new E(t,i,t.path,o)));return b.mergeArray(s,a)}get element(){return this._def.type}min(e,t){return new C({...this._def,minLength:{value:e,message:h.toString(t)}})}max(e,t){return new C({...this._def,maxLength:{value:e,message:h.toString(t)}})}length(e,t){return new C({...this._def,exactLength:{value:e,message:h.toString(t)}})}nonempty(e){return this.min(1,e)}}C.create=(r,e)=>new C({type:r,minLength:null,maxLength:null,exactLength:null,typeName:p.ZodArray,..._(e)});function U(r){if(r instanceof k){const e={};for(const t in r.shape){const s=r.shape[t];e[t]=O.create(U(s))}return new k({...r._def,shape:()=>e})}else return r instanceof C?new C({...r._def,type:U(r.element)}):r instanceof O?O.create(U(r.unwrap())):r instanceof V?V.create(U(r.unwrap())):r instanceof R?R.create(r.items.map(e=>U(e))):r}class k extends y{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(this._cached!==null)return this._cached;const e=this._def.shape(),t=g.objectKeys(e);return this._cached={shape:e,keys:t}}_parse(e){if(this._getType(e)!==f.object){const c=this._getOrReturnCtx(e);return u(c,{code:d.invalid_type,expected:f.object,received:c.parsedType}),m}const{status:s,ctx:n}=this._processInputParams(e),{shape:a,keys:i}=this._getCached(),o=[];if(!(this._def.catchall instanceof j&&this._def.unknownKeys===\"strip\"))for(const c in n.data)i.includes(c)||o.push(c);const l=[];for(const c of i){const v=a[c],Z=n.data[c];l.push({key:{status:\"valid\",value:c},value:v._parse(new E(n,Z,n.path,c)),alwaysSet:c in n.data})}if(this._def.catchall instanceof j){const c=this._def.unknownKeys;if(c===\"passthrough\")for(const v of o)l.push({key:{status:\"valid\",value:v},value:{status:\"valid\",value:n.data[v]}});else if(c===\"strict\")o.length>0&&(u(n,{code:d.unrecognized_keys,keys:o}),s.dirty());else if(c!==\"strip\")throw new Error(\"Internal ZodObject error: invalid unknownKeys value.\")}else{const c=this._def.catchall;for(const v of o){const Z=n.data[v];l.push({key:{status:\"valid\",value:v},value:c._parse(new E(n,Z,n.path,v)),alwaysSet:v in n.data})}}return n.common.async?Promise.resolve().then(async()=>{const c=[];for(const v of l){const Z=await v.key,Ce=await v.value;c.push({key:Z,value:Ce,alwaysSet:v.alwaysSet})}return c}).then(c=>b.mergeObjectSync(s,c)):b.mergeObjectSync(s,l)}get shape(){return this._def.shape()}strict(e){return h.errToObj,new k({...this._def,unknownKeys:\"strict\",...e!==void 0?{errorMap:(t,s)=>{var n,a,i,o;const l=(i=(a=(n=this._def).errorMap)===null||a===void 0?void 0:a.call(n,t,s).message)!==null&&i!==void 0?i:s.defaultError;return t.code===\"unrecognized_keys\"?{message:(o=h.errToObj(e).message)!==null&&o!==void 0?o:l}:{message:l}}}:{}})}strip(){return new k({...this._def,unknownKeys:\"strip\"})}passthrough(){return new k({...this._def,unknownKeys:\"passthrough\"})}extend(e){return new k({...this._def,shape:()=>({...this._def.shape(),...e})})}merge(e){return new k({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:()=>({...this._def.shape(),...e._def.shape()}),typeName:p.ZodObject})}setKey(e,t){return this.augment({[e]:t})}catchall(e){return new k({...this._def,catchall:e})}pick(e){const t={};return g.objectKeys(e).forEach(s=>{e[s]&&this.shape[s]&&(t[s]=this.shape[s])}),new k({...this._def,shape:()=>t})}omit(e){const t={};return g.objectKeys(this.shape).forEach(s=>{e[s]||(t[s]=this.shape[s])}),new k({...this._def,shape:()=>t})}deepPartial(){return U(this)}partial(e){const t={};return g.objectKeys(this.shape).forEach(s=>{const n=this.shape[s];e&&!e[s]?t[s]=n:t[s]=n.optional()}),new k({...this._def,shape:()=>t})}required(e){const t={};return g.objectKeys(this.shape).forEach(s=>{if(e&&!e[s])t[s]=this.shape[s];else{let a=this.shape[s];for(;a instanceof O;)a=a._def.innerType;t[s]=a}}),new k({...this._def,shape:()=>t})}keyof(){return Le(g.objectKeys(this.shape))}}k.create=(r,e)=>new k({shape:()=>r,unknownKeys:\"strip\",catchall:j.create(),typeName:p.ZodObject,..._(e)});k.strictCreate=(r,e)=>new k({shape:()=>r,unknownKeys:\"strict\",catchall:j.create(),typeName:p.ZodObject,..._(e)});k.lazycreate=(r,e)=>new k({shape:r,unknownKeys:\"strip\",catchall:j.create(),typeName:p.ZodObject,..._(e)});class te extends y{_parse(e){const{ctx:t}=this._processInputParams(e),s=this._def.options;function n(a){for(const o of a)if(o.result.status===\"valid\")return o.result;for(const o of a)if(o.result.status===\"dirty\")return t.common.issues.push(...o.ctx.common.issues),o.result;const i=a.map(o=>new T(o.ctx.common.issues));return u(t,{code:d.invalid_union,unionErrors:i}),m}if(t.common.async)return Promise.all(s.map(async a=>{const i={...t,common:{...t.common,issues:[]},parent:null};return{result:await a._parseAsync({data:t.data,path:t.path,parent:i}),ctx:i}})).then(n);{let a;const i=[];for(const l of s){const c={...t,common:{...t.common,issues:[]},parent:null},v=l._parseSync({data:t.data,path:t.path,parent:c});if(v.status===\"valid\")return v;v.status===\"dirty\"&&!a&&(a={result:v,ctx:c}),c.common.issues.length&&i.push(c.common.issues)}if(a)return t.common.issues.push(...a.ctx.common.issues),a.result;const o=i.map(l=>new T(l));return u(t,{code:d.invalid_union,unionErrors:o}),m}}get options(){return this._def.options}}te.create=(r,e)=>new te({options:r,typeName:p.ZodUnion,..._(e)});const I=r=>r instanceof ne?I(r.schema):r instanceof N?I(r.innerType()):r instanceof ae?[r.value]:r instanceof $?r.options:r instanceof ie?g.objectValues(r.enum):r instanceof oe?I(r._def.innerType):r instanceof F?[void 0]:r instanceof ee?[null]:r instanceof O?[void 0,...I(r.unwrap())]:r instanceof V?[null,...I(r.unwrap())]:r instanceof Se||r instanceof ce?I(r.unwrap()):r instanceof de?I(r._def.innerType):[];class ye extends y{_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==f.object)return u(t,{code:d.invalid_type,expected:f.object,received:t.parsedType}),m;const s=this.discriminator,n=t.data[s],a=this.optionsMap.get(n);return a?t.common.async?a._parseAsync({data:t.data,path:t.path,parent:t}):a._parseSync({data:t.data,path:t.path,parent:t}):(u(t,{code:d.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[s]}),m)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(e,t,s){const n=new Map;for(const a of t){const i=I(a.shape[e]);if(!i.length)throw new Error(`A discriminator value for key \\`${e}\\` could not be extracted from all schema options`);for(const o of i){if(n.has(o))throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(o)}`);n.set(o,a)}}return new ye({typeName:p.ZodDiscriminatedUnion,discriminator:e,options:t,optionsMap:n,..._(s)})}}function Ze(r,e){const t=A(r),s=A(e);if(r===e)return{valid:!0,data:r};if(t===f.object&&s===f.object){const n=g.objectKeys(e),a=g.objectKeys(r).filter(o=>n.indexOf(o)!==-1),i={...r,...e};for(const o of a){const l=Ze(r[o],e[o]);if(!l.valid)return{valid:!1};i[o]=l.data}return{valid:!0,data:i}}else if(t===f.array&&s===f.array){if(r.length!==e.length)return{valid:!1};const n=[];for(let a=0;a<r.length;a++){const i=r[a],o=e[a],l=Ze(i,o);if(!l.valid)return{valid:!1};n.push(l.data)}return{valid:!0,data:n}}else return t===f.date&&s===f.date&&+r==+e?{valid:!0,data:r}:{valid:!1}}class re extends y{_parse(e){const{status:t,ctx:s}=this._processInputParams(e),n=(a,i)=>{if(we(a)||we(i))return m;const o=Ze(a.value,i.value);return o.valid?((Te(a)||Te(i))&&t.dirty(),{status:t.value,value:o.data}):(u(s,{code:d.invalid_intersection_types}),m)};return s.common.async?Promise.all([this._def.left._parseAsync({data:s.data,path:s.path,parent:s}),this._def.right._parseAsync({data:s.data,path:s.path,parent:s})]).then(([a,i])=>n(a,i)):n(this._def.left._parseSync({data:s.data,path:s.path,parent:s}),this._def.right._parseSync({data:s.data,path:s.path,parent:s}))}}re.create=(r,e,t)=>new re({left:r,right:e,typeName:p.ZodIntersection,..._(t)});class R extends y{_parse(e){const{status:t,ctx:s}=this._processInputParams(e);if(s.parsedType!==f.array)return u(s,{code:d.invalid_type,expected:f.array,received:s.parsedType}),m;if(s.data.length<this._def.items.length)return u(s,{code:d.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:\"array\"}),m;!this._def.rest&&s.data.length>this._def.items.length&&(u(s,{code:d.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:\"array\"}),t.dirty());const a=[...s.data].map((i,o)=>{const l=this._def.items[o]||this._def.rest;return l?l._parse(new E(s,i,s.path,o)):null}).filter(i=>!!i);return s.common.async?Promise.all(a).then(i=>b.mergeArray(t,i)):b.mergeArray(t,a)}get items(){return this._def.items}rest(e){return new R({...this._def,rest:e})}}R.create=(r,e)=>{if(!Array.isArray(r))throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");return new R({items:r,typeName:p.ZodTuple,rest:null,..._(e)})};class se extends y{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:t,ctx:s}=this._processInputParams(e);if(s.parsedType!==f.object)return u(s,{code:d.invalid_type,expected:f.object,received:s.parsedType}),m;const n=[],a=this._def.keyType,i=this._def.valueType;for(const o in s.data)n.push({key:a._parse(new E(s,o,s.path,o)),value:i._parse(new E(s,s.data[o],s.path,o)),alwaysSet:o in s.data});return s.common.async?b.mergeObjectAsync(t,n):b.mergeObjectSync(t,n)}get element(){return this._def.valueType}static create(e,t,s){return t instanceof y?new se({keyType:e,valueType:t,typeName:p.ZodRecord,..._(s)}):new se({keyType:S.create(),valueType:e,typeName:p.ZodRecord,..._(t)})}}class ve extends y{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:t,ctx:s}=this._processInputParams(e);if(s.parsedType!==f.map)return u(s,{code:d.invalid_type,expected:f.map,received:s.parsedType}),m;const n=this._def.keyType,a=this._def.valueType,i=[...s.data.entries()].map(([o,l],c)=>({key:n._parse(new E(s,o,s.path,[c,\"key\"])),value:a._parse(new E(s,l,s.path,[c,\"value\"]))}));if(s.common.async){const o=new Map;return Promise.resolve().then(async()=>{for(const l of i){const c=await l.key,v=await l.value;if(c.status===\"aborted\"||v.status===\"aborted\")return m;(c.status===\"dirty\"||v.status===\"dirty\")&&t.dirty(),o.set(c.value,v.value)}return{status:t.value,value:o}})}else{const o=new Map;for(const l of i){const c=l.key,v=l.value;if(c.status===\"aborted\"||v.status===\"aborted\")return m;(c.status===\"dirty\"||v.status===\"dirty\")&&t.dirty(),o.set(c.value,v.value)}return{status:t.value,value:o}}}}ve.create=(r,e,t)=>new ve({valueType:e,keyType:r,typeName:p.ZodMap,..._(t)});class z extends y{_parse(e){const{status:t,ctx:s}=this._processInputParams(e);if(s.parsedType!==f.set)return u(s,{code:d.invalid_type,expected:f.set,received:s.parsedType}),m;const n=this._def;n.minSize!==null&&s.data.size<n.minSize.value&&(u(s,{code:d.too_small,minimum:n.minSize.value,type:\"set\",inclusive:!0,exact:!1,message:n.minSize.message}),t.dirty()),n.maxSize!==null&&s.data.size>n.maxSize.value&&(u(s,{code:d.too_big,maximum:n.maxSize.value,type:\"set\",inclusive:!0,exact:!1,message:n.maxSize.message}),t.dirty());const a=this._def.valueType;function i(l){const c=new Set;for(const v of l){if(v.status===\"aborted\")return m;v.status===\"dirty\"&&t.dirty(),c.add(v.value)}return{status:t.value,value:c}}const o=[...s.data.values()].map((l,c)=>a._parse(new E(s,l,s.path,c)));return s.common.async?Promise.all(o).then(l=>i(l)):i(o)}min(e,t){return new z({...this._def,minSize:{value:e,message:h.toString(t)}})}max(e,t){return new z({...this._def,maxSize:{value:e,message:h.toString(t)}})}size(e,t){return this.min(e,t).max(e,t)}nonempty(e){return this.min(1,e)}}z.create=(r,e)=>new z({valueType:r,minSize:null,maxSize:null,typeName:p.ZodSet,..._(e)});class W extends y{constructor(){super(...arguments),this.validate=this.implement}_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==f.function)return u(t,{code:d.invalid_type,expected:f.function,received:t.parsedType}),m;function s(o,l){return fe({data:o,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,le(),q].filter(c=>!!c),issueData:{code:d.invalid_arguments,argumentsError:l}})}function n(o,l){return fe({data:o,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,le(),q].filter(c=>!!c),issueData:{code:d.invalid_return_type,returnTypeError:l}})}const a={errorMap:t.common.contextualErrorMap},i=t.data;if(this._def.returns instanceof J){const o=this;return w(async function(...l){const c=new T([]),v=await o._def.args.parseAsync(l,a).catch(ge=>{throw c.addIssue(s(l,ge)),c}),Z=await Reflect.apply(i,this,v);return await o._def.returns._def.type.parseAsync(Z,a).catch(ge=>{throw c.addIssue(n(Z,ge)),c})})}else{const o=this;return w(function(...l){const c=o._def.args.safeParse(l,a);if(!c.success)throw new T([s(l,c.error)]);const v=Reflect.apply(i,this,c.data),Z=o._def.returns.safeParse(v,a);if(!Z.success)throw new T([n(v,Z.error)]);return Z.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...e){return new W({...this._def,args:R.create(e).rest(L.create())})}returns(e){return new W({...this._def,returns:e})}implement(e){return this.parse(e)}strictImplement(e){return this.parse(e)}static create(e,t,s){return new W({args:e||R.create([]).rest(L.create()),returns:t||L.create(),typeName:p.ZodFunction,..._(s)})}}class ne extends y{get schema(){return this._def.getter()}_parse(e){const{ctx:t}=this._processInputParams(e);return this._def.getter()._parse({data:t.data,path:t.path,parent:t})}}ne.create=(r,e)=>new ne({getter:r,typeName:p.ZodLazy,..._(e)});class ae extends y{_parse(e){if(e.data!==this._def.value){const t=this._getOrReturnCtx(e);return u(t,{received:t.data,code:d.invalid_literal,expected:this._def.value}),m}return{status:\"valid\",value:e.data}}get value(){return this._def.value}}ae.create=(r,e)=>new ae({value:r,typeName:p.ZodLiteral,..._(e)});function Le(r,e){return new $({values:r,typeName:p.ZodEnum,..._(e)})}class $ extends y{constructor(){super(...arguments),Y.set(this,void 0)}_parse(e){if(typeof e.data!=\"string\"){const t=this._getOrReturnCtx(e),s=this._def.values;return u(t,{expected:g.joinValues(s),received:t.parsedType,code:d.invalid_type}),m}if(he(this,Y)||Me(this,Y,new Set(this._def.values)),!he(this,Y).has(e.data)){const t=this._getOrReturnCtx(e),s=this._def.values;return u(t,{received:t.data,code:d.invalid_enum_value,options:s}),m}return w(e.data)}get options(){return this._def.values}get enum(){const e={};for(const t of this._def.values)e[t]=t;return e}get Values(){const e={};for(const t of this._def.values)e[t]=t;return e}get Enum(){const e={};for(const t of this._def.values)e[t]=t;return e}extract(e,t=this._def){return $.create(e,{...this._def,...t})}exclude(e,t=this._def){return $.create(this.options.filter(s=>!e.includes(s)),{...this._def,...t})}}Y=new WeakMap;$.create=Le;class ie extends y{constructor(){super(...arguments),G.set(this,void 0)}_parse(e){const t=g.getValidEnumValues(this._def.values),s=this._getOrReturnCtx(e);if(s.parsedType!==f.string&&s.parsedType!==f.number){const n=g.objectValues(t);return u(s,{expected:g.joinValues(n),received:s.parsedType,code:d.invalid_type}),m}if(he(this,G)||Me(this,G,new Set(g.getValidEnumValues(this._def.values))),!he(this,G).has(e.data)){const n=g.objectValues(t);return u(s,{received:s.data,code:d.invalid_enum_value,options:n}),m}return w(e.data)}get enum(){return this._def.values}}G=new WeakMap;ie.create=(r,e)=>new ie({values:r,typeName:p.ZodNativeEnum,..._(e)});class J extends y{unwrap(){return this._def.type}_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==f.promise&&t.common.async===!1)return u(t,{code:d.invalid_type,expected:f.promise,received:t.parsedType}),m;const s=t.parsedType===f.promise?t.data:Promise.resolve(t.data);return w(s.then(n=>this._def.type.parseAsync(n,{path:t.path,errorMap:t.common.contextualErrorMap})))}}J.create=(r,e)=>new J({type:r,typeName:p.ZodPromise,..._(e)});class N extends y{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===p.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(e){const{status:t,ctx:s}=this._processInputParams(e),n=this._def.effect||null,a={addIssue:i=>{u(s,i),i.fatal?t.abort():t.dirty()},get path(){return s.path}};if(a.addIssue=a.addIssue.bind(a),n.type===\"preprocess\"){const i=n.transform(s.data,a);if(s.common.async)return Promise.resolve(i).then(async o=>{if(t.value===\"aborted\")return m;const l=await this._def.schema._parseAsync({data:o,path:s.path,parent:s});return l.status===\"aborted\"?m:l.status===\"dirty\"||t.value===\"dirty\"?B(l.value):l});{if(t.value===\"aborted\")return m;const o=this._def.schema._parseSync({data:i,path:s.path,parent:s});return o.status===\"aborted\"?m:o.status===\"dirty\"||t.value===\"dirty\"?B(o.value):o}}if(n.type===\"refinement\"){const i=o=>{const l=n.refinement(o,a);if(s.common.async)return Promise.resolve(l);if(l instanceof Promise)throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");return o};if(s.common.async===!1){const o=this._def.schema._parseSync({data:s.data,path:s.path,parent:s});return o.status===\"aborted\"?m:(o.status===\"dirty\"&&t.dirty(),i(o.value),{status:t.value,value:o.value})}else return this._def.schema._parseAsync({data:s.data,path:s.path,parent:s}).then(o=>o.status===\"aborted\"?m:(o.status===\"dirty\"&&t.dirty(),i(o.value).then(()=>({status:t.value,value:o.value}))))}if(n.type===\"transform\")if(s.common.async===!1){const i=this._def.schema._parseSync({data:s.data,path:s.path,parent:s});if(!X(i))return i;const o=n.transform(i.value,a);if(o instanceof Promise)throw new Error(\"Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.\");return{status:t.value,value:o}}else return this._def.schema._parseAsync({data:s.data,path:s.path,parent:s}).then(i=>X(i)?Promise.resolve(n.transform(i.value,a)).then(o=>({status:t.value,value:o})):i);g.assertNever(n)}}N.create=(r,e,t)=>new N({schema:r,typeName:p.ZodEffects,effect:e,..._(t)});N.createWithPreprocess=(r,e,t)=>new N({schema:e,effect:{type:\"preprocess\",transform:r},typeName:p.ZodEffects,..._(t)});class O extends y{_parse(e){return this._getType(e)===f.undefined?w(void 0):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}O.create=(r,e)=>new O({innerType:r,typeName:p.ZodOptional,..._(e)});class V extends y{_parse(e){return this._getType(e)===f.null?w(null):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}V.create=(r,e)=>new V({innerType:r,typeName:p.ZodNullable,..._(e)});class oe extends y{_parse(e){const{ctx:t}=this._processInputParams(e);let s=t.data;return t.parsedType===f.undefined&&(s=this._def.defaultValue()),this._def.innerType._parse({data:s,path:t.path,parent:t})}removeDefault(){return this._def.innerType}}oe.create=(r,e)=>new oe({innerType:r,typeName:p.ZodDefault,defaultValue:typeof e.default==\"function\"?e.default:()=>e.default,..._(e)});class de extends y{_parse(e){const{ctx:t}=this._processInputParams(e),s={...t,common:{...t.common,issues:[]}},n=this._def.innerType._parse({data:s.data,path:s.path,parent:{...s}});return K(n)?n.then(a=>({status:\"valid\",value:a.status===\"valid\"?a.value:this._def.catchValue({get error(){return new T(s.common.issues)},input:s.data})})):{status:\"valid\",value:n.status===\"valid\"?n.value:this._def.catchValue({get error(){return new T(s.common.issues)},input:s.data})}}removeCatch(){return this._def.innerType}}de.create=(r,e)=>new de({innerType:r,typeName:p.ZodCatch,catchValue:typeof e.catch==\"function\"?e.catch:()=>e.catch,..._(e)});class _e extends y{_parse(e){if(this._getType(e)!==f.nan){const s=this._getOrReturnCtx(e);return u(s,{code:d.invalid_type,expected:f.nan,received:s.parsedType}),m}return{status:\"valid\",value:e.data}}}_e.create=r=>new _e({typeName:p.ZodNaN,..._(r)});const xt=Symbol(\"zod_brand\");class Se extends y{_parse(e){const{ctx:t}=this._processInputParams(e),s=t.data;return this._def.type._parse({data:s,path:t.path,parent:t})}unwrap(){return this._def.type}}class ue extends y{_parse(e){const{status:t,ctx:s}=this._processInputParams(e);if(s.common.async)return(async()=>{const a=await this._def.in._parseAsync({data:s.data,path:s.path,parent:s});return a.status===\"aborted\"?m:a.status===\"dirty\"?(t.dirty(),B(a.value)):this._def.out._parseAsync({data:a.value,path:s.path,parent:s})})();{const n=this._def.in._parseSync({data:s.data,path:s.path,parent:s});return n.status===\"aborted\"?m:n.status===\"dirty\"?(t.dirty(),{status:\"dirty\",value:n.value}):this._def.out._parseSync({data:n.value,path:s.path,parent:s})}}static create(e,t){return new ue({in:e,out:t,typeName:p.ZodPipeline})}}class ce extends y{_parse(e){const t=this._def.innerType._parse(e),s=n=>(X(n)&&(n.value=Object.freeze(n.value)),n);return K(t)?t.then(n=>s(n)):s(t)}unwrap(){return this._def.innerType}}ce.create=(r,e)=>new ce({innerType:r,typeName:p.ZodReadonly,..._(e)});function De(r,e={},t){return r?H.create().superRefine((s,n)=>{var a,i;if(!r(s)){const o=typeof e==\"function\"?e(s):typeof e==\"string\"?{message:e}:e,l=(i=(a=o.fatal)!==null&&a!==void 0?a:t)!==null&&i!==void 0?i:!0,c=typeof o==\"string\"?{message:o}:o;n.addIssue({code:\"custom\",...c,fatal:l})}}):H.create()}const kt={object:k.lazycreate};var p;(function(r){r.ZodString=\"ZodString\",r.ZodNumber=\"ZodNumber\",r.ZodNaN=\"ZodNaN\",r.ZodBigInt=\"ZodBigInt\",r.ZodBoolean=\"ZodBoolean\",r.ZodDate=\"ZodDate\",r.ZodSymbol=\"ZodSymbol\",r.ZodUndefined=\"ZodUndefined\",r.ZodNull=\"ZodNull\",r.ZodAny=\"ZodAny\",r.ZodUnknown=\"ZodUnknown\",r.ZodNever=\"ZodNever\",r.ZodVoid=\"ZodVoid\",r.ZodArray=\"ZodArray\",r.ZodObject=\"ZodObject\",r.ZodUnion=\"ZodUnion\",r.ZodDiscriminatedUnion=\"ZodDiscriminatedUnion\",r.ZodIntersection=\"ZodIntersection\",r.ZodTuple=\"ZodTuple\",r.ZodRecord=\"ZodRecord\",r.ZodMap=\"ZodMap\",r.ZodSet=\"ZodSet\",r.ZodFunction=\"ZodFunction\",r.ZodLazy=\"ZodLazy\",r.ZodLiteral=\"ZodLiteral\",r.ZodEnum=\"ZodEnum\",r.ZodEffects=\"ZodEffects\",r.ZodNativeEnum=\"ZodNativeEnum\",r.ZodOptional=\"ZodOptional\",r.ZodNullable=\"ZodNullable\",r.ZodDefault=\"ZodDefault\",r.ZodCatch=\"ZodCatch\",r.ZodPromise=\"ZodPromise\",r.ZodBranded=\"ZodBranded\",r.ZodPipeline=\"ZodPipeline\",r.ZodReadonly=\"ZodReadonly\"})(p||(p={}));const bt=(r,e={message:`Input not instance of ${r.name}`})=>De(t=>t instanceof r,e),ze=S.create,Ue=M.create,wt=_e.create,Tt=P.create,Be=Q.create,Zt=D.create,St=pe.create,Ct=F.create,Nt=ee.create,Ot=H.create,Et=L.create,Rt=j.create,It=me.create,jt=C.create,At=k.create,Mt=k.strictCreate,Pt=te.create,$t=ye.create,Vt=re.create,Lt=R.create,Dt=se.create,zt=ve.create,Ut=z.create,Bt=W.create,Wt=ne.create,qt=ae.create,Ht=$.create,Jt=ie.create,Yt=J.create,je=N.create,Gt=O.create,Xt=V.create,Kt=N.createWithPreprocess,Qt=ue.create,Ft=()=>ze().optional(),er=()=>Ue().optional(),tr=()=>Be().optional(),rr={string:r=>S.create({...r,coerce:!0}),number:r=>M.create({...r,coerce:!0}),boolean:r=>Q.create({...r,coerce:!0}),bigint:r=>P.create({...r,coerce:!0}),date:r=>D.create({...r,coerce:!0})},sr=m;var x=Object.freeze({__proto__:null,defaultErrorMap:q,setErrorMap:st,getErrorMap:le,makeIssue:fe,EMPTY_PATH:nt,addIssueToContext:u,ParseStatus:b,INVALID:m,DIRTY:B,OK:w,isAborted:we,isDirty:Te,isValid:X,isAsync:K,get util(){return g},get objectUtil(){return be},ZodParsedType:f,getParsedType:A,ZodType:y,datetimeRegex:Ve,ZodString:S,ZodNumber:M,ZodBigInt:P,ZodBoolean:Q,ZodDate:D,ZodSymbol:pe,ZodUndefined:F,ZodNull:ee,ZodAny:H,ZodUnknown:L,ZodNever:j,ZodVoid:me,ZodArray:C,ZodObject:k,ZodUnion:te,ZodDiscriminatedUnion:ye,ZodIntersection:re,ZodTuple:R,ZodRecord:se,ZodMap:ve,ZodSet:z,ZodFunction:W,ZodLazy:ne,ZodLiteral:ae,ZodEnum:$,ZodNativeEnum:ie,ZodPromise:J,ZodEffects:N,ZodTransformer:N,ZodOptional:O,ZodNullable:V,ZodDefault:oe,ZodCatch:de,ZodNaN:_e,BRAND:xt,ZodBranded:Se,ZodPipeline:ue,ZodReadonly:ce,custom:De,Schema:y,ZodSchema:y,late:kt,get ZodFirstPartyTypeKind(){return p},coerce:rr,any:Ot,array:jt,bigint:Tt,boolean:Be,date:Zt,discriminatedUnion:$t,effect:je,enum:Ht,function:Bt,instanceof:bt,intersection:Vt,lazy:Wt,literal:qt,map:zt,nan:wt,nativeEnum:Jt,never:Rt,null:Nt,nullable:Xt,number:Ue,object:At,oboolean:tr,onumber:er,optional:Gt,ostring:Ft,pipeline:Qt,preprocess:Kt,promise:Yt,record:Dt,set:Ut,strictObject:Mt,string:ze,symbol:St,transformer:je,tuple:Lt,undefined:Ct,union:Pt,unknown:Et,void:It,NEVER:sr,ZodIssueCode:d,quotelessJson:rt,ZodError:T});x.union([x.literal(\"purple\"),x.literal(\"blue\"),x.literal(\"green\"),x.literal(\"yellow\"),x.literal(\"red\")]);x.union([x.literal(\"wikis\"),x.literal(\"tools\"),x.literal(\"camera\"),x.literal(\"code\"),x.literal(\"email\"),x.literal(\"cloud\"),x.literal(\"terminal\"),x.literal(\"game\"),x.literal(\"chat\"),x.literal(\"speaker\"),x.literal(\"video\")]);const cr=x.string().toLowerCase().pipe(x.union([x.literal(\"textbox\"),x.literal(\"markdown\"),x.literal(\"image\"),x.literal(\"gallery\"),x.literal(\"number\"),x.literal(\"audio\"),x.literal(\"video\"),x.literal(\"file\"),x.literal(\"json\")]));var nr=(r=>(r.Success=\"success\",r.Error=\"error\",r))(nr||{});export{dr as I,cr as T,nr as a};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.761Z",
        "time": 0.19700000120792538,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.1669999910518527,
          "receive": 0.030000010156072676,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/Switch.DLwPPHY0.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"750-1732708078000\""
            },
            {
              "name": "age",
              "value": "491890"
            },
            {
              "name": "via",
              "value": "1.1 8d674b0dbbb3efae2c2364b57d734a54.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "750"
            },
            {
              "name": "x-amz-cf-id",
              "value": "gWubEAgVoYQIHJySXWFYwxF7SZ2N4h7Fd3E0y-K0Ke9-TuJxZOSLbQ=="
            },
            {
              "name": "date",
              "value": "Wed, 27 Nov 2024 11:52:03 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 27 Nov 2024 11:47:58 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1577,
            "mimeType": "text/javascript",
            "text": "import{s as b,e as d,a as k,c as u,g,b as m,f as o,h as t,i as f,j as v,E as _,n as p}from\"./scheduler.CeakrPJD.js\";import{S as w,i as y}from\"./index.Cljt5KuQ.js\";function S(c){let a,n,e,s,h,l;return{c(){a=d(\"input\"),n=k(),e=d(\"div\"),s=d(\"div\"),this.h()},l(i){a=u(i,\"INPUT\",{type:!0,name:!0,class:!0}),n=g(i),e=u(i,\"DIV\",{\"aria-checked\":!0,\"aria-roledescription\":!0,\"aria-label\":!0,role:!0,tabindex:!0,class:!0});var r=m(e);s=u(r,\"DIV\",{class:!0}),m(s).forEach(o),r.forEach(o),this.h()},h(){t(a,\"type\",\"checkbox\"),t(a,\"name\",c[1]),t(a,\"class\",\"peer pointer-events-none absolute opacity-0\"),t(s,\"class\",\"h-3.5 w-3.5 rounded-full bg-white shadow-sm transition-all\"),t(e,\"aria-checked\",c[0]),t(e,\"aria-roledescription\",\"switch\"),t(e,\"aria-label\",\"switch\"),t(e,\"role\",\"switch\"),t(e,\"tabindex\",\"0\"),t(e,\"class\",\"relative inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full bg-gray-300 p-1 shadow-inner ring-gray-400 transition-all peer-checked:bg-blue-600 peer-focus-visible:ring peer-focus-visible:ring-offset-1 hover:bg-gray-400 dark:bg-gray-600 peer-checked:[&>div]:translate-x-3.5\")},m(i,r){f(i,a,r),a.checked=c[0],f(i,n,r),f(i,e,r),v(e,s),h||(l=_(a,\"change\",c[2]),h=!0)},p(i,[r]){r&2&&t(a,\"name\",i[1]),r&1&&(a.checked=i[0]),r&1&&t(e,\"aria-checked\",i[0])},i:p,o:p,d(i){i&&(o(a),o(n),o(e)),h=!1,l()}}}function E(c,a,n){let{checked:e}=a,{name:s}=a;function h(){e=this.checked,n(0,e)}return c.$$set=l=>{\"checked\"in l&&n(0,e=l.checked),\"name\"in l&&n(1,s=l.name)},[e,s,h]}class D extends w{constructor(a){super(),y(this,a,E,S,b,{checked:0,name:1})}}export{D as S};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.761Z",
        "time": 0.20899999071843922,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.14999999257270247,
          "receive": 0.058999998145736754,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/clickOutside.D-5j4fJ8.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"100-1723041305000\""
            },
            {
              "name": "age",
              "value": "10158627"
            },
            {
              "name": "via",
              "value": "1.1 8d674b0dbbb3efae2c2364b57d734a54.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "100"
            },
            {
              "name": "x-amz-cf-id",
              "value": "UgFpiOz9hqW-LtT-wqwwSdNZsaxf2Rz9yBLfGEm0rss8tNCcaUidUA=="
            },
            {
              "name": "date",
              "value": "Wed, 07 Aug 2024 14:39:46 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 07 Aug 2024 14:35:05 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 194,
            "mimeType": "text/javascript",
            "text": "function i(c,t){function n(e){c.contains(e.target)||t()}return document.body.addEventListener(\"click\",n),{update(e){t=e},destroy(){document.body.removeEventListener(\"click\",n)}}}export{i as c};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.762Z",
        "time": 0.19099999917671084,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.16399999731220305,
          "receive": 0.027000001864507794,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/isHuggingChat.DRo1Q1X0.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"105-1733326797000\""
            },
            {
              "name": "age",
              "value": "30332"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "105"
            },
            {
              "name": "x-amz-cf-id",
              "value": "9Qki-h1MpZL337jM4SqdVYpAGcYGZP97W6IpdKhrdA89Ubo6PXl5Yg=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:27 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 101,
            "mimeType": "text/javascript",
            "text": "import{e as g}from\"./public.BItpSmwI.js\";const t=g.PUBLIC_APP_ASSETS===\"huggingchat\";export{t as i};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.763Z",
        "time": 0.20400001085363328,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.1770000089891255,
          "receive": 0.027000001864507794,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/image.BBvJllls.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"610-1733326797000\""
            },
            {
              "name": "age",
              "value": "30308"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "610"
            },
            {
              "name": "x-amz-cf-id",
              "value": "si9LHAZBcCc5Ri-nDCTofGhwctfbBC0hHatohSPkp8B806Pb1MfBuQ=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:51 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1127,
            "mimeType": "text/javascript",
            "text": "import{s as u,J as h,K as v,L as c,M as d,b as f,N as w,f as o,O as m,i as p,n as g,P as _}from\"./scheduler.CeakrPJD.js\";import{g as x}from\"./settings.qWXPmYFi.js\";import{S as H,i as L}from\"./index.Cljt5KuQ.js\";function B(l){let e,a,r='<path fill=\"currentColor\" d=\"M19 14a3 3 0 1 0-3-3a3 3 0 0 0 3 3m0-4a1 1 0 1 1-1 1a1 1 0 0 1 1-1\"/><path fill=\"currentColor\" d=\"M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2m0 22H6v-6l5-5l5.59 5.59a2 2 0 0 0 2.82 0L21 19l5 5Zm0-4.83l-3.59-3.59a2 2 0 0 0-2.82 0L18 19.17l-5.59-5.59a2 2 0 0 0-2.82 0L6 17.17V6h20Z\"/>',n=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},l[0]],i={};for(let t=0;t<n.length;t+=1)i=h(i,n[t]);return{c(){e=v(\"svg\"),a=new c(!0),this.h()},l(t){e=d(t,\"svg\",{viewBox:!0,width:!0,height:!0});var s=f(e);a=w(s,!0),s.forEach(o),this.h()},h(){a.a=null,m(e,i)},m(t,s){p(t,e,s),a.m(r,e)},p(t,[s]){m(e,i=x(n,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},s&1&&t[0]]))},i:g,o:g,d(t){t&&o(e)}}}function C(l,e,a){return l.$$set=r=>{a(0,e=h(h({},e),_(r)))},e=_(e),[e]}class I extends H{constructor(e){super(),L(this,e,C,B,u,{})}}export{I};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.763Z",
        "time": 0.11900000390596688,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.10000000474974513,
          "receive": 0.018999999156221747,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/models.BNqoyBuH.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"571-1733326797000\""
            },
            {
              "name": "age",
              "value": "30318"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "571"
            },
            {
              "name": "x-amz-cf-id",
              "value": "z-wAVHdtw__tPsdaRlu9GFgMJkrA_Ch16O0LVO604dfTmVBJCwqZKg=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:41 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 978,
            "mimeType": "text/javascript",
            "text": "import{s as d,J as h,K as u,L as v,M as c,b as f,N as w,f as o,O as m,i as p,n as g,P as _}from\"./scheduler.CeakrPJD.js\";import{g as x}from\"./settings.qWXPmYFi.js\";import{S as L,i as V}from\"./index.Cljt5KuQ.js\";function B(s){let t,a,r='<path fill=\"currentColor\" d=\"m6 18l1.41 1.41L15 11.83V30h2V11.83l7.59 7.58L26 18L16 8zM6 8V4h20v4h2V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4z\"/>',l=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},s[0]],n={};for(let e=0;e<l.length;e+=1)n=h(n,l[e]);return{c(){t=u(\"svg\"),a=new v(!0),this.h()},l(e){t=c(e,\"svg\",{viewBox:!0,width:!0,height:!0});var i=f(t);a=w(i,!0),i.forEach(o),this.h()},h(){a.a=null,m(t,n)},m(e,i){p(e,t,i),a.m(r,t)},p(e,[i]){m(t,n=x(l,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},i&1&&e[0]]))},i:g,o:g,d(e){e&&o(t)}}}function C(s,t,a){return s.$$set=r=>{a(0,t=h(h({},t),_(r)))},t=_(t),[t]}class y extends L{constructor(t){super(),V(this,t,C,B,d,{})}}const z=(s,t)=>s.find(a=>a.id===t)??s[0];export{y as U,z as f};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.763Z",
        "time": 0.15799999528098851,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.1360000023851171,
          "receive": 0.0219999928958714,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/user-multiple.Mj9PndoY.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"828-1733326797000\""
            },
            {
              "name": "age",
              "value": "30308"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "828"
            },
            {
              "name": "x-amz-cf-id",
              "value": "0MndSjCtwLVCd3XJLJtZW3bHanY7HANBjJI2puvMCjRngbv1P0G9Qw=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:51 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2168,
            "mimeType": "text/javascript",
            "text": "import{s as u,J as r,K as v,L as k,M as g,b as _,N as c,f as x,O as b,i as f,n as o,P as h}from\"./scheduler.CeakrPJD.js\";import{g as d}from\"./settings.qWXPmYFi.js\";import{S as w,i as p}from\"./index.Cljt5KuQ.js\";function U(m){const l=[{min:0,max:1,label:\"1\"},{min:2,max:9,label:\"1-10\"},{min:10,max:49,label:\"10+\"},{min:50,max:99,label:\"50+\"},{min:100,max:299,label:\"100+\"},{min:300,max:499,label:\"300+\"},{min:500,max:999,label:\"500+\"},{min:1e3,max:2999,label:\"1k+\"},{min:3e3,max:4999,label:\"3k+\"},{min:5e3,max:9999,label:\"5k+\"},{min:1e4,max:19999,label:\"10k+\"},{min:2e4,max:29999,label:\"20k+\"},{min:3e4,max:39999,label:\"30k+\"},{min:4e4,max:49999,label:\"40k+\"},{min:5e4,max:59999,label:\"50k+\"},{min:6e4,max:69999,label:\"60k+\"},{min:7e4,max:79999,label:\"70k+\"},{min:8e4,max:89999,label:\"80k+\"},{min:9e4,max:99999,label:\"90k+\"},{min:1e5,max:109999,label:\"100k+\"},{min:11e4,max:119999,label:\"110k+\"},{min:12e4,max:129999,label:\"120k+\"},{min:13e4,max:139999,label:\"130k+\"},{min:14e4,max:149999,label:\"140k+\"},{min:15e4,max:199999,label:\"150k+\"},{min:2e5,max:299999,label:\"200k+\"},{min:3e5,max:499999,label:\"300k+\"},{min:5e5,max:749999,label:\"500k+\"},{min:75e4,max:999999,label:\"750k+\"},{min:1e6,max:1/0,label:\"1M+\"}].find(({min:i,max:t})=>m>=i&&m<=t);return(l==null?void 0:l.label)??\"\"}function C(m){let e,l,i='<path fill=\"currentColor\" d=\"M30 30h-2v-5a5.006 5.006 0 0 0-5-5v-2a7.01 7.01 0 0 1 7 7zm-8 0h-2v-5a5.006 5.006 0 0 0-5-5H9a5.006 5.006 0 0 0-5 5v5H2v-5a7.01 7.01 0 0 1 7-7h6a7.01 7.01 0 0 1 7 7zM20 2v2a5 5 0 0 1 0 10v2a7 7 0 0 0 0-14m-8 2a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7\"/>',t=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},m[0]],s={};for(let a=0;a<t.length;a+=1)s=r(s,t[a]);return{c(){e=v(\"svg\"),l=new k(!0),this.h()},l(a){e=g(a,\"svg\",{viewBox:!0,width:!0,height:!0});var n=_(e);l=c(n,!0),n.forEach(x),this.h()},h(){l.a=null,b(e,s)},m(a,n){f(a,e,n),l.m(i,e)},p(a,[n]){b(e,s=d(t,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},n&1&&a[0]]))},i:o,o,d(a){a&&x(e)}}}function H(m,e,l){return m.$$set=i=>{l(0,e=r(r({},e),h(i)))},e=h(e),[e]}class z extends w{constructor(e){super(),p(this,e,H,C,u,{})}}export{z as U,U as f};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.764Z",
        "time": 0.12599999899975955,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.10599999222904444,
          "receive": 0.020000006770715117,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/IconInternet.BkJSosd-.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"949-1732708078000\""
            },
            {
              "name": "age",
              "value": "491901"
            },
            {
              "name": "via",
              "value": "1.1 8d674b0dbbb3efae2c2364b57d734a54.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "949"
            },
            {
              "name": "x-amz-cf-id",
              "value": "uxwXCnoEnSWxcXd_1qavUbjUlj3h0C0QmoG9XiInQK1qkSINh3Q09w=="
            },
            {
              "name": "date",
              "value": "Wed, 27 Nov 2024 11:51:52 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 27 Nov 2024 11:47:58 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2087,
            "mimeType": "text/javascript",
            "text": "import{s as f,K as u,t as v,M as h,b as d,d as g,f as n,h as t,i as _,j as m,n as p}from\"./scheduler.CeakrPJD.js\";import{S as x,i as w}from\"./index.Cljt5KuQ.js\";function M(o){let e,c,a,s,i;return{c(){e=u(\"svg\"),c=v(\">\"),a=u(\"path\"),s=u(\"path\"),i=u(\"path\"),this.h()},l(l){e=h(l,\"svg\",{class:!0,xmlns:!0,\"aria-hidden\":!0,focusable:!0,role:!0,width:!0,height:!0,fill:!0,preserveAspectRatio:!0,viewBox:!0});var r=d(e);c=g(r,\">\"),a=h(r,\"path\",{\"fill-rule\":!0,d:!0,\"clip-rule\":!0}),d(a).forEach(n),s=h(r,\"path\",{\"fill-rule\":!0,d:!0,\"clip-rule\":!0}),d(s).forEach(n),i=h(r,\"path\",{d:!0}),d(i).forEach(n),r.forEach(n),this.h()},h(){t(a,\"fill-rule\",\"evenodd\"),t(a,\"d\",\"M1.5 10a8.5 8.5 0 1 0 17 0a8.5 8.5 0 0 0-17 0m16 0a7.5 7.5 0 1 1-15 0a7.5 7.5 0 0 1 15 0\"),t(a,\"clip-rule\",\"evenodd\"),t(s,\"fill-rule\",\"evenodd\"),t(s,\"d\",\"M6.5 10c0 4.396 1.442 8 3.5 8s3.5-3.604 3.5-8s-1.442-8-3.5-8s-3.5 3.604-3.5 8m6 0c0 3.889-1.245 7-2.5 7s-2.5-3.111-2.5-7S8.745 3 10 3s2.5 3.111 2.5 7\"),t(s,\"clip-rule\",\"evenodd\"),t(i,\"d\",\"m3.735 5.312l.67-.742c.107.096.221.19.343.281c1.318.988 3.398 1.59 5.665 1.59c1.933 0 3.737-.437 5.055-1.19a5.59 5.59 0 0 0 .857-.597l.65.76c-.298.255-.636.49-1.01.704c-1.477.845-3.452 1.323-5.552 1.323c-2.47 0-4.762-.663-6.265-1.79a5.81 5.81 0 0 1-.413-.34m0 9.389l.67.74c.107-.096.221-.19.343-.28c1.318-.988 3.398-1.59 5.665-1.59c1.933 0 3.737.436 5.055 1.19c.321.184.608.384.857.596l.65-.76a6.583 6.583 0 0 0-1.01-.704c-1.477-.844-3.452-1.322-5.552-1.322c-2.47 0-4.762.663-6.265 1.789c-.146.11-.284.223-.413.34M2 10.5v-1h16v1z\"),t(e,\"class\",o[0]),t(e,\"xmlns\",\"http://www.w3.org/2000/svg\"),t(e,\"aria-hidden\",\"true\"),t(e,\"focusable\",\"false\"),t(e,\"role\",\"img\"),t(e,\"width\",\"1em\"),t(e,\"height\",\"1em\"),t(e,\"fill\",\"currentColor\"),t(e,\"preserveAspectRatio\",\"xMidYMid meet\"),t(e,\"viewBox\",\"0 0 20 20\")},m(l,r){_(l,e,r),m(e,c),m(e,a),m(e,s),m(e,i)},p(l,[r]){r&1&&t(e,\"class\",l[0])},i:p,o:p,d(l){l&&n(e)}}}function E(o,e,c){let{classNames:a=\"\"}=e;return o.$$set=s=>{\"classNames\"in s&&c(0,a=s.classNames)},[a]}class I extends x{constructor(e){super(),w(this,e,E,M,f,{classNames:0})}}export{I};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.764Z",
        "time": 0.12000001152046025,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.1010000123642385,
          "receive": 0.018999999156221747,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/tools.DNRAFGSA.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"727-1733326797000\""
            },
            {
              "name": "age",
              "value": "30297"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "727"
            },
            {
              "name": "x-amz-cf-id",
              "value": "cHrH6S4r5JZim4kVOuHpdOOCsn9j_5bN3J1-e0hua6rhFTa-srbBtQ=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:44:02 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1401,
            "mimeType": "text/javascript",
            "text": "import{s as u,J as o,K as v,L as c,M as d,b as f,N as w,f as h,O as m,i as x,n as g,P as _}from\"./scheduler.CeakrPJD.js\";import{g as p}from\"./settings.qWXPmYFi.js\";import{S as A,i as B}from\"./index.Cljt5KuQ.js\";function L(l){let a,t,r='<path fill=\"currentColor\" d=\"M12.1 2a9.8 9.8 0 0 0-5.4 1.6l6.4 6.4a2.1 2.1 0 0 1 .2 3a2.1 2.1 0 0 1-3-.2L3.7 6.4A9.84 9.84 0 0 0 2 12.1a10.14 10.14 0 0 0 10.1 10.1a11 11 0 0 0 2.6-.3l6.7 6.7a5 5 0 0 0 7.1-7.1l-6.7-6.7a11 11 0 0 0 .3-2.6A10 10 0 0 0 12.1 2m8 10.1a7.6 7.6 0 0 1-.3 2.1l-.3 1.1l.8.8l6.7 6.7a2.88 2.88 0 0 1 .9 2.1A2.72 2.72 0 0 1 27 27a2.9 2.9 0 0 1-4.2 0l-6.7-6.7l-.8-.8l-1.1.3a7.6 7.6 0 0 1-2.1.3a8.27 8.27 0 0 1-5.7-2.3A7.63 7.63 0 0 1 4 12.1a8.3 8.3 0 0 1 .3-2.2l4.4 4.4a4.14 4.14 0 0 0 5.9.2a4.14 4.14 0 0 0-.2-5.9L10 4.2a6.5 6.5 0 0 1 2-.3a8.27 8.27 0 0 1 5.7 2.3a8.5 8.5 0 0 1 2.4 5.9\"/>',n=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},l[0]],i={};for(let e=0;e<n.length;e+=1)i=o(i,n[e]);return{c(){a=v(\"svg\"),t=new c(!0),this.h()},l(e){a=d(e,\"svg\",{viewBox:!0,width:!0,height:!0});var s=f(a);t=w(s,!0),s.forEach(h),this.h()},h(){t.a=null,m(a,i)},m(e,s){x(e,a,s),t.m(r,a)},p(e,[s]){m(a,i=p(n,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},s&1&&e[0]]))},i:g,o:g,d(e){e&&h(a)}}}function T(l,a,t){return l.$$set=r=>{t(0,a=o(o({},a),_(r)))},a=_(a),[a]}class H extends A{constructor(a){super(),B(this,a,T,L,u,{})}}export{H as T};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.764Z",
        "time": 0.11500000255182385,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.09600000339560211,
          "receive": 0.018999999156221747,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/CopyToClipBoardBtn.BlbrNBhY.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"1641-1732708078000\""
            },
            {
              "name": "age",
              "value": "491890"
            },
            {
              "name": "via",
              "value": "1.1 8d674b0dbbb3efae2c2364b57d734a54.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "1641"
            },
            {
              "name": "x-amz-cf-id",
              "value": "K7sePxggL_7qZ_YEip1bD_dcS3GmgmOxLCzjU2U0esTo7HQMOODWyg=="
            },
            {
              "name": "date",
              "value": "Wed, 27 Nov 2024 11:52:03 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 27 Nov 2024 11:47:58 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 4371,
            "mimeType": "text/javascript",
            "text": "import{s as E,K as v,M as w,b as d,f,h as o,i as T,j as p,n as b,e as y,a as D,t as q,c as N,g as I,d as R,a2 as B,k as j,m as G,E as M,u as K,p as O,q as U,G as Y,Z as z,T as F}from\"./scheduler.CeakrPJD.js\";import{S as V,i as H,b as x,d as A,m as S,t as k,a as C,e as Z}from\"./index.Cljt5KuQ.js\";function J(i){let t,e,s,l;return{c(){t=v(\"svg\"),e=v(\"path\"),s=v(\"path\"),l=v(\"rect\"),this.h()},l(n){t=w(n,\"svg\",{class:!0,xmlns:!0,\"aria-hidden\":!0,fill:!0,focusable:!0,role:!0,width:!0,height:!0,preserveAspectRatio:!0,viewBox:!0});var a=d(t);e=w(a,\"path\",{d:!0,transform:!0}),d(e).forEach(f),s=w(a,\"path\",{d:!0,transform:!0}),d(s).forEach(f),l=w(a,\"rect\",{fill:!0,width:!0,height:!0}),d(l).forEach(f),a.forEach(f),this.h()},h(){o(e,\"d\",\"M28,10V28H10V10H28m0-2H10a2,2,0,0,0-2,2V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V10a2,2,0,0,0-2-2Z\"),o(e,\"transform\",\"translate(0)\"),o(s,\"d\",\"M4,18H2V4A2,2,0,0,1,4,2H18V4H4Z\"),o(s,\"transform\",\"translate(0)\"),o(l,\"fill\",\"none\"),o(l,\"width\",\"32\"),o(l,\"height\",\"32\"),o(t,\"class\",i[0]),o(t,\"xmlns\",\"http://www.w3.org/2000/svg\"),o(t,\"aria-hidden\",\"true\"),o(t,\"fill\",\"currentColor\"),o(t,\"focusable\",\"false\"),o(t,\"role\",\"img\"),o(t,\"width\",\"1em\"),o(t,\"height\",\"1em\"),o(t,\"preserveAspectRatio\",\"xMidYMid meet\"),o(t,\"viewBox\",\"0 0 32 32\")},m(n,a){T(n,t,a),p(t,e),p(t,s),p(t,l)},p(n,[a]){a&1&&o(t,\"class\",n[0])},i:b,o:b,d(n){n&&f(t)}}}function L(i,t,e){let{classNames:s=\"\"}=t;return i.$$set=l=>{\"classNames\"in l&&e(0,s=l.classNames)},[s]}class P extends V{constructor(t){super(),H(this,t,L,J,E,{classNames:0})}}function Q(i){let t,e,s,l,n;return{c(){t=y(\"div\"),e=y(\"div\"),s=D(),l=q(i[1]),this.h()},l(a){t=N(a,\"DIV\",{class:!0});var c=d(t);e=N(c,\"DIV\",{class:!0,style:!0}),d(e).forEach(f),s=I(c),l=R(c,i[1]),c.forEach(f),this.h()},h(){o(e,\"class\",\"absolute bottom-full left-1/2 h-0 w-0 -translate-x-1/2 transform border-4 border-t-0 border-black\"),B(e,\"border-left-color\",\"transparent\"),B(e,\"border-right-color\",\"transparent\"),o(t,\"class\",n=\"pointer-events-none absolute rounded bg-black px-2 py-1 font-normal leading-tight text-white shadow transition-opacity \"+i[2]+\" \"+i[0])},m(a,c){T(a,t,c),p(t,e),p(t,s),p(t,l)},p(a,[c]){c&2&&j(l,a[1]),c&5&&n!==(n=\"pointer-events-none absolute rounded bg-black px-2 py-1 font-normal leading-tight text-white shadow transition-opacity \"+a[2]+\" \"+a[0])&&o(t,\"class\",n)},i:b,o:b,d(a){a&&f(t)}}}function W(i,t,e){let{classNames:s=\"\"}=t,{label:l=\"Copied\"}=t,{position:n=\"left-1/2 top-full transform -translate-x-1/2 translate-y-2\"}=t;return i.$$set=a=>{\"classNames\"in a&&e(0,s=a.classNames),\"label\"in a&&e(1,l=a.label),\"position\"in a&&e(2,n=a.position)},[s,l,n]}class X extends V{constructor(t){super(),H(this,t,W,Q,E,{classNames:0,label:1,position:2})}}function $(i){let t,e;return t=new P({props:{classNames:\"h-[1.14em] w-[1.14em]\"}}),{c(){x(t.$$.fragment)},l(s){A(t.$$.fragment,s)},m(s,l){S(t,s,l),e=!0},p:b,i(s){e||(k(t.$$.fragment,s),e=!0)},o(s){C(t.$$.fragment,s),e=!1},d(s){Z(t,s)}}}function tt(i){let t,e,s,l,n,a,c;const m=i[5].default,g=G(m,i,i[4],null),u=g||$();return l=new X({props:{classNames:i[1]?\"opacity-100\":\"opacity-0\"}}),{c(){t=y(\"button\"),e=y(\"div\"),u&&u.c(),s=D(),x(l.$$.fragment),this.h()},l(r){t=N(r,\"BUTTON\",{class:!0,title:!0,type:!0});var h=d(t);e=N(h,\"DIV\",{class:!0});var _=d(e);u&&u.l(_),s=I(_),A(l.$$.fragment,_),_.forEach(f),h.forEach(f),this.h()},h(){o(e,\"class\",\"relative\"),o(t,\"class\",i[0]),o(t,\"title\",\"Copy to clipboard\"),o(t,\"type\",\"button\")},m(r,h){T(r,t,h),p(t,e),u&&u.m(e,null),p(e,s),S(l,e,null),n=!0,a||(c=[M(t,\"click\",i[6]),M(t,\"click\",i[2])],a=!0)},p(r,[h]){g&&g.p&&(!n||h&16)&&K(g,m,r,r[4],n?U(m,r[4],h,null):O(r[4]),null);const _={};h&2&&(_.classNames=r[1]?\"opacity-100\":\"opacity-0\"),l.$set(_),(!n||h&1)&&o(t,\"class\",r[0])},i(r){n||(k(u,r),k(l.$$.fragment,r),n=!0)},o(r){C(u,r),C(l.$$.fragment,r),n=!1},d(r){r&&f(t),u&&u.d(r),Z(l),a=!1,Y(c)}}}function et(i,t,e){let{$$slots:s={},$$scope:l}=t,{classNames:n=\"\"}=t,{value:a}=t,c=!1,m;const g=async()=>{try{await navigator.clipboard.writeText(a),e(1,c=!0),m&&clearTimeout(m),m=setTimeout(()=>{e(1,c=!1)},1e3)}catch(r){console.error(r)}};z(()=>{m&&clearTimeout(m)});function u(r){F.call(this,i,r)}return i.$$set=r=>{\"classNames\"in r&&e(0,n=r.classNames),\"value\"in r&&e(3,a=r.value),\"$$scope\"in r&&e(4,l=r.$$scope)},[n,c,g,a,l,s,u]}class lt extends V{constructor(t){super(),H(this,t,et,tt,E,{classNames:0,value:3})}}export{lt as C};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.764Z",
        "time": 0.11400000948924571,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.09699999645818025,
          "receive": 0.017000013031065464,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/pen.Dy7UR-Ba.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"595-1733326797000\""
            },
            {
              "name": "age",
              "value": "30332"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "595"
            },
            {
              "name": "x-amz-cf-id",
              "value": "3y7NWY2-ZOEKQgEYxdLiqdfxWYuBjR_MXeuYYOnzUbdg2J_RsW8cbg=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:27 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1014,
            "mimeType": "text/javascript",
            "text": "import{s as u,J as h,K as v,L as c,M as d,b as f,N as L,f as o,O as m,i as w,n as g,P as _}from\"./scheduler.CeakrPJD.js\";import{g as x}from\"./settings.qWXPmYFi.js\";import{S as p,i as M}from\"./index.Cljt5KuQ.js\";function B(i){let e,a,n='<path fill=\"currentColor\" d=\"M27.307 6.107L30 3.414L28.586 2l-2.693 2.693L24.8 3.6a1.933 1.933 0 0 0-2.8 0l-18 18V28h6.4l18-18a1.933 1.933 0 0 0 0-2.8ZM9.6 26H6v-3.6L23.4 5L27 8.6ZM9 11.586L16.586 4L18 5.414L10.414 13z\"/>',r=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},i[0]],l={};for(let t=0;t<r.length;t+=1)l=h(l,r[t]);return{c(){e=v(\"svg\"),a=new c(!0),this.h()},l(t){e=d(t,\"svg\",{viewBox:!0,width:!0,height:!0});var s=f(e);a=L(s,!0),s.forEach(o),this.h()},h(){a.a=null,m(e,l)},m(t,s){w(t,e,s),a.m(n,e)},p(t,[s]){m(e,l=x(r,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},s&1&&t[0]]))},i:g,o:g,d(t){t&&o(e)}}}function H(i,e,a){return i.$$set=n=>{a(0,e=h(h({},e),_(n)))},e=_(e),[e]}class C extends p{constructor(e){super(),M(this,e,H,B,u,{})}}export{C as P};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.765Z",
        "time": 0.12700000661425292,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.10900000052060932,
          "receive": 0.018000006093643606,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/forms.J3xl8G-J.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"812-1733326797000\""
            },
            {
              "name": "age",
              "value": "30332"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "812"
            },
            {
              "name": "x-amz-cf-id",
              "value": "eyC0h6cZpGYqE4VEGxnQziM23eRb9MoC2Btxpip_HVmrbOYDk_-how=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:27 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1956,
            "mimeType": "text/javascript",
            "text": "import{p as x,i as T,c as H}from\"./entry.CNbBV9gi.js\";function M(e){const r=JSON.parse(e);return r.data&&(r.data=x(r.data)),r}function l(e){return HTMLElement.prototype.cloneNode.call(e)}function F(e,r=()=>{}){const u=async({action:a,result:c,reset:i=!0,invalidateAll:n=!0})=>{c.type===\"success\"&&(i&&HTMLFormElement.prototype.reset.call(e),n&&await T()),(location.origin+location.pathname===a.origin+a.pathname||c.type===\"redirect\"||c.type===\"error\")&&H(c)};async function m(a){var b,y,h,w,A;if(((b=a.submitter)!=null&&b.hasAttribute(\"formmethod\")?a.submitter.formMethod:l(e).method)!==\"post\")return;a.preventDefault();const i=new URL((y=a.submitter)!=null&&y.hasAttribute(\"formaction\")?a.submitter.formAction:l(e).action),n=(h=a.submitter)!=null&&h.hasAttribute(\"formenctype\")?a.submitter.formEnctype:l(e).enctype,s=new FormData(e),p=(w=a.submitter)==null?void 0:w.getAttribute(\"name\");p&&s.append(p,((A=a.submitter)==null?void 0:A.getAttribute(\"value\"))??\"\");const d=new AbortController;let f=!1;const L=await r({action:i,cancel:()=>f=!0,controller:d,formData:s,formElement:e,submitter:a.submitter})??u;if(f)return;let o;try{const t=new Headers({accept:\"application/json\",\"x-sveltekit-action\":\"true\"});n!==\"multipart/form-data\"&&t.set(\"Content-Type\",/^(:?application\\/x-www-form-urlencoded|text\\/plain)$/.test(n)?n:\"application/x-www-form-urlencoded\");const g=n===\"multipart/form-data\"?s:new URLSearchParams(s),E=await fetch(i,{method:\"POST\",headers:t,cache:\"no-store\",body:g,signal:d.signal});o=M(await E.text()),o.type===\"error\"&&(o.status=E.status)}catch(t){if((t==null?void 0:t.name)===\"AbortError\")return;o={type:\"error\",error:t}}L({action:i,formData:s,formElement:e,update:t=>u({action:i,result:o,reset:t==null?void 0:t.reset,invalidateAll:t==null?void 0:t.invalidateAll}),result:o})}return HTMLFormElement.prototype.addEventListener.call(e,\"submit\",m),{destroy(){HTMLFormElement.prototype.removeEventListener.call(e,\"submit\",m)}}}export{F as e};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.765Z",
        "time": 0.11500000255182385,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.09800000407267362,
          "receive": 0.016999998479150236,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/_commonjsHelpers.Cpj98o6Y.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"144-1723795999000\""
            },
            {
              "name": "age",
              "value": "9403912"
            },
            {
              "name": "via",
              "value": "1.1 8d674b0dbbb3efae2c2364b57d734a54.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "144"
            },
            {
              "name": "x-amz-cf-id",
              "value": "oPaGhO7IV7oXfD-Yhu-g-RHKCWCeBU7K0D70LjGUhTdEMddbdKiTag=="
            },
            {
              "name": "date",
              "value": "Fri, 16 Aug 2024 08:18:21 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Fri, 16 Aug 2024 08:13:19 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 236,
            "mimeType": "text/javascript",
            "text": "var o=typeof globalThis<\"u\"?globalThis:typeof window<\"u\"?window:typeof global<\"u\"?global:typeof self<\"u\"?self:{};function l(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}export{o as c,l as g};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.765Z",
        "time": 0.11700000322889537,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.10000000474974513,
          "receive": 0.016999998479150236,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/marked.esm.LTwExiil.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"10208-1733240213000\""
            },
            {
              "name": "age",
              "value": "116825"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "10208"
            },
            {
              "name": "x-amz-cf-id",
              "value": "so7z3U5Ht8YzAJnsay7o2d3iVIfErx4JxCXXo2oYBfU8BGE9uI9IoA=="
            },
            {
              "name": "date",
              "value": "Tue, 03 Dec 2024 15:41:53 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Tue, 03 Dec 2024 15:36:53 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 35458,
            "mimeType": "text/javascript",
            "text": "var de=Object.defineProperty;var V=a=>{throw TypeError(a)};var xe=(a,t,e)=>t in a?de(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var d=(a,t,e)=>xe(a,typeof t!=\"symbol\"?t+\"\":t,e),be=(a,t,e)=>t.has(a)||V(\"Cannot \"+e);var Y=(a,t,e)=>t.has(a)?V(\"Cannot add the same private member more than once\"):t instanceof WeakSet?t.add(a):t.set(a,e);var C=(a,t,e)=>(be(a,t,\"access private method\"),e);function j(){return{async:!1,breaks:!1,extensions:null,gfm:!0,hooks:null,pedantic:!1,renderer:null,silent:!1,tokenizer:null,walkTokens:null}}let R=j();function re(a){R=a}const le=/[&<>\"']/,me=new RegExp(le.source,\"g\"),oe=/[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/,we=new RegExp(oe.source,\"g\"),ye={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"},ee=a=>ye[a];function x(a,t){if(t){if(le.test(a))return a.replace(me,ee)}else if(oe.test(a))return a.replace(we,ee);return a}const $e=/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;function Te(a){return a.replace($e,(t,e)=>(e=e.toLowerCase(),e===\"colon\"?\":\":e.charAt(0)===\"#\"?e.charAt(1)===\"x\"?String.fromCharCode(parseInt(e.substring(2),16)):String.fromCharCode(+e.substring(1)):\"\"))}const ze=/(^|[^\\[])\\^/g;function k(a,t){let e=typeof a==\"string\"?a:a.source;t=t||\"\";const n={replace:(i,r)=>{let s=typeof r==\"string\"?r:r.source;return s=s.replace(ze,\"$1\"),e=e.replace(i,s),n},getRegex:()=>new RegExp(e,t)};return n}function te(a){try{a=encodeURI(a).replace(/%25/g,\"%\")}catch{return null}return a}const S={exec:()=>null};function ne(a,t){const e=a.replace(/\\|/g,(r,s,l)=>{let o=!1,p=s;for(;--p>=0&&l[p]===\"\\\\\";)o=!o;return o?\"|\":\" |\"}),n=e.split(/ \\|/);let i=0;if(n[0].trim()||n.shift(),n.length>0&&!n[n.length-1].trim()&&n.pop(),t)if(n.length>t)n.splice(t);else for(;n.length<t;)n.push(\"\");for(;i<n.length;i++)n[i]=n[i].trim().replace(/\\\\\\|/g,\"|\");return n}function L(a,t,e){const n=a.length;if(n===0)return\"\";let i=0;for(;i<n;){const r=a.charAt(n-i-1);if(r===t&&!e)i++;else if(r!==t&&e)i++;else break}return a.slice(0,n-i)}function Re(a,t){if(a.indexOf(t[1])===-1)return-1;let e=0;for(let n=0;n<a.length;n++)if(a[n]===\"\\\\\")n++;else if(a[n]===t[0])e++;else if(a[n]===t[1]&&(e--,e<0))return n;return-1}function se(a,t,e,n){const i=t.href,r=t.title?x(t.title):null,s=a[1].replace(/\\\\([\\[\\]])/g,\"$1\");if(a[0].charAt(0)!==\"!\"){n.state.inLink=!0;const l={type:\"link\",raw:e,href:i,title:r,text:s,tokens:n.inlineTokens(s)};return n.state.inLink=!1,l}return{type:\"image\",raw:e,href:i,title:r,text:x(s)}}function _e(a,t){const e=a.match(/^(\\s+)(?:```)/);if(e===null)return t;const n=e[1];return t.split(`\n`).map(i=>{const r=i.match(/^\\s+/);if(r===null)return i;const[s]=r;return s.length>=n.length?i.slice(n.length):i}).join(`\n`)}class Z{constructor(t){d(this,\"options\");d(this,\"rules\");d(this,\"lexer\");this.options=t||R}space(t){const e=this.rules.block.newline.exec(t);if(e&&e[0].length>0)return{type:\"space\",raw:e[0]}}code(t){const e=this.rules.block.code.exec(t);if(e){const n=e[0].replace(/^ {1,4}/gm,\"\");return{type:\"code\",raw:e[0],codeBlockStyle:\"indented\",text:this.options.pedantic?n:L(n,`\n`)}}}fences(t){const e=this.rules.block.fences.exec(t);if(e){const n=e[0],i=_e(n,e[3]||\"\");return{type:\"code\",raw:n,lang:e[2]?e[2].trim().replace(this.rules.inline.anyPunctuation,\"$1\"):e[2],text:i}}}heading(t){const e=this.rules.block.heading.exec(t);if(e){let n=e[2].trim();if(/#$/.test(n)){const i=L(n,\"#\");(this.options.pedantic||!i||/ $/.test(i))&&(n=i.trim())}return{type:\"heading\",raw:e[0],depth:e[1].length,text:n,tokens:this.lexer.inline(n)}}}hr(t){const e=this.rules.block.hr.exec(t);if(e)return{type:\"hr\",raw:e[0]}}blockquote(t){const e=this.rules.block.blockquote.exec(t);if(e){let n=e[0].replace(/\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g,`\n    $1`);n=L(n.replace(/^ *>[ \\t]?/gm,\"\"),`\n`);const i=this.lexer.state.top;this.lexer.state.top=!0;const r=this.lexer.blockTokens(n);return this.lexer.state.top=i,{type:\"blockquote\",raw:e[0],tokens:r,text:n}}}list(t){let e=this.rules.block.list.exec(t);if(e){let n=e[1].trim();const i=n.length>1,r={type:\"list\",raw:\"\",ordered:i,start:i?+n.slice(0,-1):\"\",loose:!1,items:[]};n=i?`\\\\d{1,9}\\\\${n.slice(-1)}`:`\\\\${n}`,this.options.pedantic&&(n=i?n:\"[*+-]\");const s=new RegExp(`^( {0,3}${n})((?:[\t ][^\\\\n]*)?(?:\\\\n|$))`);let l=\"\",o=\"\",p=!1;for(;t;){let c=!1;if(!(e=s.exec(t))||this.rules.block.hr.test(t))break;l=e[0],t=t.substring(l.length);let u=e[2].split(`\n`,1)[0].replace(/^\\t+/,M=>\" \".repeat(3*M.length)),h=t.split(`\n`,1)[0],f=0;this.options.pedantic?(f=2,o=u.trimStart()):(f=e[2].search(/[^ ]/),f=f>4?1:f,o=u.slice(f),f+=e[1].length);let y=!1;if(!u&&/^ *$/.test(h)&&(l+=h+`\n`,t=t.substring(h.length+1),c=!0),!c){const M=new RegExp(`^ {0,${Math.min(3,f-1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \t][^\\\\n]*)?(?:\\\\n|$))`),W=new RegExp(`^ {0,${Math.min(3,f-1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`),J=new RegExp(`^ {0,${Math.min(3,f-1)}}(?:\\`\\`\\`|~~~)`),K=new RegExp(`^ {0,${Math.min(3,f-1)}}#`);for(;t;){const Q=t.split(`\n`,1)[0];if(h=Q,this.options.pedantic&&(h=h.replace(/^ {1,4}(?=( {4})*[^ ])/g,\"  \")),J.test(h)||K.test(h)||M.test(h)||W.test(t))break;if(h.search(/[^ ]/)>=f||!h.trim())o+=`\n`+h.slice(f);else{if(y||u.search(/[^ ]/)>=4||J.test(u)||K.test(u)||W.test(u))break;o+=`\n`+h}!y&&!h.trim()&&(y=!0),l+=Q+`\n`,t=t.substring(Q.length+1),u=h.slice(f)}}r.loose||(p?r.loose=!0:/\\n *\\n *$/.test(l)&&(p=!0));let b=null,$;this.options.gfm&&(b=/^\\[[ xX]\\] /.exec(o),b&&($=b[0]!==\"[ ] \",o=o.replace(/^\\[[ xX]\\] +/,\"\"))),r.items.push({type:\"list_item\",raw:l,task:!!b,checked:$,loose:!1,text:o,tokens:[]}),r.raw+=l}r.items[r.items.length-1].raw=l.trimEnd(),r.items[r.items.length-1].text=o.trimEnd(),r.raw=r.raw.trimEnd();for(let c=0;c<r.items.length;c++)if(this.lexer.state.top=!1,r.items[c].tokens=this.lexer.blockTokens(r.items[c].text,[]),!r.loose){const u=r.items[c].tokens.filter(f=>f.type===\"space\"),h=u.length>0&&u.some(f=>/\\n.*\\n/.test(f.raw));r.loose=h}if(r.loose)for(let c=0;c<r.items.length;c++)r.items[c].loose=!0;return r}}html(t){const e=this.rules.block.html.exec(t);if(e)return{type:\"html\",block:!0,raw:e[0],pre:e[1]===\"pre\"||e[1]===\"script\"||e[1]===\"style\",text:e[0]}}def(t){const e=this.rules.block.def.exec(t);if(e){const n=e[1].toLowerCase().replace(/\\s+/g,\" \"),i=e[2]?e[2].replace(/^<(.*)>$/,\"$1\").replace(this.rules.inline.anyPunctuation,\"$1\"):\"\",r=e[3]?e[3].substring(1,e[3].length-1).replace(this.rules.inline.anyPunctuation,\"$1\"):e[3];return{type:\"def\",tag:n,raw:e[0],href:i,title:r}}}table(t){const e=this.rules.block.table.exec(t);if(!e||!/[:|]/.test(e[2]))return;const n=ne(e[1]),i=e[2].replace(/^\\||\\| *$/g,\"\").split(\"|\"),r=e[3]&&e[3].trim()?e[3].replace(/\\n[ \\t]*$/,\"\").split(`\n`):[],s={type:\"table\",raw:e[0],header:[],align:[],rows:[]};if(n.length===i.length){for(const l of i)/^ *-+: *$/.test(l)?s.align.push(\"right\"):/^ *:-+: *$/.test(l)?s.align.push(\"center\"):/^ *:-+ *$/.test(l)?s.align.push(\"left\"):s.align.push(null);for(const l of n)s.header.push({text:l,tokens:this.lexer.inline(l)});for(const l of r)s.rows.push(ne(l,s.header.length).map(o=>({text:o,tokens:this.lexer.inline(o)})));return s}}lheading(t){const e=this.rules.block.lheading.exec(t);if(e)return{type:\"heading\",raw:e[0],depth:e[2].charAt(0)===\"=\"?1:2,text:e[1],tokens:this.lexer.inline(e[1])}}paragraph(t){const e=this.rules.block.paragraph.exec(t);if(e){const n=e[1].charAt(e[1].length-1)===`\n`?e[1].slice(0,-1):e[1];return{type:\"paragraph\",raw:e[0],text:n,tokens:this.lexer.inline(n)}}}text(t){const e=this.rules.block.text.exec(t);if(e)return{type:\"text\",raw:e[0],text:e[0],tokens:this.lexer.inline(e[0])}}escape(t){const e=this.rules.inline.escape.exec(t);if(e)return{type:\"escape\",raw:e[0],text:x(e[1])}}tag(t){const e=this.rules.inline.tag.exec(t);if(e)return!this.lexer.state.inLink&&/^<a /i.test(e[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&/^<\\/a>/i.test(e[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&/^<(pre|code|kbd|script)(\\s|>)/i.test(e[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&/^<\\/(pre|code|kbd|script)(\\s|>)/i.test(e[0])&&(this.lexer.state.inRawBlock=!1),{type:\"html\",raw:e[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,block:!1,text:e[0]}}link(t){const e=this.rules.inline.link.exec(t);if(e){const n=e[2].trim();if(!this.options.pedantic&&/^</.test(n)){if(!/>$/.test(n))return;const s=L(n.slice(0,-1),\"\\\\\");if((n.length-s.length)%2===0)return}else{const s=Re(e[2],\"()\");if(s>-1){const o=(e[0].indexOf(\"!\")===0?5:4)+e[1].length+s;e[2]=e[2].substring(0,s),e[0]=e[0].substring(0,o).trim(),e[3]=\"\"}}let i=e[2],r=\"\";if(this.options.pedantic){const s=/^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(i);s&&(i=s[1],r=s[3])}else r=e[3]?e[3].slice(1,-1):\"\";return i=i.trim(),/^</.test(i)&&(this.options.pedantic&&!/>$/.test(n)?i=i.slice(1):i=i.slice(1,-1)),se(e,{href:i&&i.replace(this.rules.inline.anyPunctuation,\"$1\"),title:r&&r.replace(this.rules.inline.anyPunctuation,\"$1\")},e[0],this.lexer)}}reflink(t,e){let n;if((n=this.rules.inline.reflink.exec(t))||(n=this.rules.inline.nolink.exec(t))){const i=(n[2]||n[1]).replace(/\\s+/g,\" \"),r=e[i.toLowerCase()];if(!r){const s=n[0].charAt(0);return{type:\"text\",raw:s,text:s}}return se(n,r,n[0],this.lexer)}}emStrong(t,e,n=\"\"){let i=this.rules.inline.emStrongLDelim.exec(t);if(!i||i[3]&&n.match(/[\\p{L}\\p{N}]/u))return;if(!(i[1]||i[2]||\"\")||!n||this.rules.inline.punctuation.exec(n)){const s=[...i[0]].length-1;let l,o,p=s,c=0;const u=i[0][0]===\"*\"?this.rules.inline.emStrongRDelimAst:this.rules.inline.emStrongRDelimUnd;for(u.lastIndex=0,e=e.slice(-1*t.length+s);(i=u.exec(e))!=null;){if(l=i[1]||i[2]||i[3]||i[4]||i[5]||i[6],!l)continue;if(o=[...l].length,i[3]||i[4]){p+=o;continue}else if((i[5]||i[6])&&s%3&&!((s+o)%3)){c+=o;continue}if(p-=o,p>0)continue;o=Math.min(o,o+p+c);const h=[...i[0]][0].length,f=t.slice(0,s+i.index+h+o);if(Math.min(s,o)%2){const b=f.slice(1,-1);return{type:\"em\",raw:f,text:b,tokens:this.lexer.inlineTokens(b)}}const y=f.slice(2,-2);return{type:\"strong\",raw:f,text:y,tokens:this.lexer.inlineTokens(y)}}}}codespan(t){const e=this.rules.inline.code.exec(t);if(e){let n=e[2].replace(/\\n/g,\" \");const i=/[^ ]/.test(n),r=/^ /.test(n)&&/ $/.test(n);return i&&r&&(n=n.substring(1,n.length-1)),n=x(n,!0),{type:\"codespan\",raw:e[0],text:n}}}br(t){const e=this.rules.inline.br.exec(t);if(e)return{type:\"br\",raw:e[0]}}del(t){const e=this.rules.inline.del.exec(t);if(e)return{type:\"del\",raw:e[0],text:e[2],tokens:this.lexer.inlineTokens(e[2])}}autolink(t){const e=this.rules.inline.autolink.exec(t);if(e){let n,i;return e[2]===\"@\"?(n=x(e[1]),i=\"mailto:\"+n):(n=x(e[1]),i=n),{type:\"link\",raw:e[0],text:n,href:i,tokens:[{type:\"text\",raw:n,text:n}]}}}url(t){var n;let e;if(e=this.rules.inline.url.exec(t)){let i,r;if(e[2]===\"@\")i=x(e[0]),r=\"mailto:\"+i;else{let s;do s=e[0],e[0]=((n=this.rules.inline._backpedal.exec(e[0]))==null?void 0:n[0])??\"\";while(s!==e[0]);i=x(e[0]),e[1]===\"www.\"?r=\"http://\"+e[0]:r=e[0]}return{type:\"link\",raw:e[0],text:i,href:r,tokens:[{type:\"text\",raw:i,text:i}]}}}inlineText(t){const e=this.rules.inline.text.exec(t);if(e){let n;return this.lexer.state.inRawBlock?n=e[0]:n=x(e[0]),{type:\"text\",raw:e[0],text:n}}}}const Se=/^(?: *(?:\\n|$))+/,Ie=/^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,Ae=/^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,A=/^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,Ee=/^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,ae=/(?:[*+-]|\\d{1,9}[.)])/,ce=k(/^(?!bull |blockCode|fences|blockquote|heading|html)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/).replace(/bull/g,ae).replace(/blockCode/g,/ {4}/).replace(/fences/g,/ {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g,/ {0,3}>/).replace(/heading/g,/ {0,3}#{1,6}/).replace(/html/g,/ {0,3}<[^\\n>]+>\\n/).getRegex(),N=/^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,Ce=/^[^\\n]+/,H=/(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/,Le=k(/^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/).replace(\"label\",H).replace(\"title\",/(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/).getRegex(),qe=k(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/).replace(/bull/g,ae).getRegex(),v=\"address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul\",F=/<!--(?:-?>|[\\s\\S]*?(?:-->|$))/,Ze=k(\"^ {0,3}(?:<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)|comment[^\\\\n]*(\\\\n+|$)|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$))\",\"i\").replace(\"comment\",F).replace(\"tag\",v).replace(\"attribute\",/ +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex(),he=k(N).replace(\"hr\",A).replace(\"heading\",\" {0,3}#{1,6}(?:\\\\s|$)\").replace(\"|lheading\",\"\").replace(\"|table\",\"\").replace(\"blockquote\",\" {0,3}>\").replace(\"fences\",\" {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n\").replace(\"list\",\" {0,3}(?:[*+-]|1[.)]) \").replace(\"html\",\"</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)\").replace(\"tag\",v).getRegex(),Pe=k(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/).replace(\"paragraph\",he).getRegex(),U={blockquote:Pe,code:Ie,def:Le,fences:Ae,heading:Ee,hr:A,html:Ze,lheading:ce,list:qe,newline:Se,paragraph:he,table:S,text:Ce},ie=k(\"^ *([^\\\\n ].*)\\\\n {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)\").replace(\"hr\",A).replace(\"heading\",\" {0,3}#{1,6}(?:\\\\s|$)\").replace(\"blockquote\",\" {0,3}>\").replace(\"code\",\" {4}[^\\\\n]\").replace(\"fences\",\" {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n\").replace(\"list\",\" {0,3}(?:[*+-]|1[.)]) \").replace(\"html\",\"</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)\").replace(\"tag\",v).getRegex(),Be={...U,table:ie,paragraph:k(N).replace(\"hr\",A).replace(\"heading\",\" {0,3}#{1,6}(?:\\\\s|$)\").replace(\"|lheading\",\"\").replace(\"table\",ie).replace(\"blockquote\",\" {0,3}>\").replace(\"fences\",\" {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n\").replace(\"list\",\" {0,3}(?:[*+-]|1[.)]) \").replace(\"html\",\"</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)\").replace(\"tag\",v).getRegex()},ve={...U,html:k(`^ *(?:comment *(?:\\\\n|\\\\s*$)|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\\\s[^'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))`).replace(\"comment\",F).replace(/tag/g,\"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b\").getRegex(),def:/^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,heading:/^(#{1,6})(.*)(?:\\n+|$)/,fences:S,lheading:/^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,paragraph:k(N).replace(\"hr\",A).replace(\"heading\",` *#{1,6} *[^\n]`).replace(\"lheading\",ce).replace(\"|table\",\"\").replace(\"blockquote\",\" {0,3}>\").replace(\"|fences\",\"\").replace(\"|list\",\"\").replace(\"|html\",\"\").replace(\"|tag\",\"\").getRegex()},pe=/^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,Me=/^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,ue=/^( {2,}|\\\\)\\n(?!\\s*$)/,Qe=/^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,E=\"\\\\p{P}\\\\p{S}\",De=k(/^((?![*_])[\\spunctuation])/,\"u\").replace(/punctuation/g,E).getRegex(),Oe=/\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g,je=k(/^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/,\"u\").replace(/punct/g,E).getRegex(),Ne=k(\"^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\\\*)[punct](\\\\*+)(?=[\\\\s]|$)|[^punct\\\\s](\\\\*+)(?!\\\\*)(?=[punct\\\\s]|$)|(?!\\\\*)[punct\\\\s](\\\\*+)(?=[^punct\\\\s])|[\\\\s](\\\\*+)(?!\\\\*)(?=[punct])|(?!\\\\*)[punct](\\\\*+)(?!\\\\*)(?=[punct])|[^punct\\\\s](\\\\*+)(?=[^punct\\\\s])\",\"gu\").replace(/punct/g,E).getRegex(),He=k(\"^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)|[^_]+(?=[^_])|(?!_)[punct](_+)(?=[\\\\s]|$)|[^punct\\\\s](_+)(?!_)(?=[punct\\\\s]|$)|(?!_)[punct\\\\s](_+)(?=[^punct\\\\s])|[\\\\s](_+)(?!_)(?=[punct])|(?!_)[punct](_+)(?!_)(?=[punct])\",\"gu\").replace(/punct/g,E).getRegex(),Fe=k(/\\\\([punct])/,\"gu\").replace(/punct/g,E).getRegex(),Ue=k(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/).replace(\"scheme\",/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/).replace(\"email\",/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/).getRegex(),Xe=k(F).replace(\"(?:-->|$)\",\"-->\").getRegex(),Ge=k(\"^comment|^</[a-zA-Z][\\\\w:-]*\\\\s*>|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>|^<\\\\?[\\\\s\\\\S]*?\\\\?>|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\").replace(\"comment\",Xe).replace(\"attribute\",/\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/).getRegex(),P=/(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/,We=k(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/).replace(\"label\",P).replace(\"href\",/<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/).replace(\"title\",/\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/).getRegex(),fe=k(/^!?\\[(label)\\]\\[(ref)\\]/).replace(\"label\",P).replace(\"ref\",H).getRegex(),ge=k(/^!?\\[(ref)\\](?:\\[\\])?/).replace(\"ref\",H).getRegex(),Je=k(\"reflink|nolink(?!\\\\()\",\"g\").replace(\"reflink\",fe).replace(\"nolink\",ge).getRegex(),X={_backpedal:S,anyPunctuation:Fe,autolink:Ue,blockSkip:Oe,br:ue,code:Me,del:S,emStrongLDelim:je,emStrongRDelimAst:Ne,emStrongRDelimUnd:He,escape:pe,link:We,nolink:ge,punctuation:De,reflink:fe,reflinkSearch:Je,tag:Ge,text:Qe,url:S},Ke={...X,link:k(/^!?\\[(label)\\]\\((.*?)\\)/).replace(\"label\",P).getRegex(),reflink:k(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace(\"label\",P).getRegex()},D={...X,escape:k(pe).replace(\"])\",\"~|])\").getRegex(),url:k(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\"i\").replace(\"email\",/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/).getRegex(),_backpedal:/(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,del:/^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/},Ve={...D,br:k(ue).replace(\"{2,}\",\"*\").getRegex(),text:k(D.text).replace(\"\\\\b_\",\"\\\\b_| {2,}\\\\n\").replace(/\\{2,\\}/g,\"*\").getRegex()},q={normal:U,gfm:Be,pedantic:ve},_={normal:X,gfm:D,breaks:Ve,pedantic:Ke};class m{constructor(t){d(this,\"tokens\");d(this,\"options\");d(this,\"state\");d(this,\"tokenizer\");d(this,\"inlineQueue\");this.tokens=[],this.tokens.links=Object.create(null),this.options=t||R,this.options.tokenizer=this.options.tokenizer||new Z,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};const e={block:q.normal,inline:_.normal};this.options.pedantic?(e.block=q.pedantic,e.inline=_.pedantic):this.options.gfm&&(e.block=q.gfm,this.options.breaks?e.inline=_.breaks:e.inline=_.gfm),this.tokenizer.rules=e}static get rules(){return{block:q,inline:_}}static lex(t,e){return new m(e).lex(t)}static lexInline(t,e){return new m(e).inlineTokens(t)}lex(t){t=t.replace(/\\r\\n|\\r/g,`\n`),this.blockTokens(t,this.tokens);for(let e=0;e<this.inlineQueue.length;e++){const n=this.inlineQueue[e];this.inlineTokens(n.src,n.tokens)}return this.inlineQueue=[],this.tokens}blockTokens(t,e=[]){this.options.pedantic?t=t.replace(/\\t/g,\"    \").replace(/^ +$/gm,\"\"):t=t.replace(/^( *)(\\t+)/gm,(l,o,p)=>o+\"    \".repeat(p.length));let n,i,r,s;for(;t;)if(!(this.options.extensions&&this.options.extensions.block&&this.options.extensions.block.some(l=>(n=l.call({lexer:this},t,e))?(t=t.substring(n.raw.length),e.push(n),!0):!1))){if(n=this.tokenizer.space(t)){t=t.substring(n.raw.length),n.raw.length===1&&e.length>0?e[e.length-1].raw+=`\n`:e.push(n);continue}if(n=this.tokenizer.code(t)){t=t.substring(n.raw.length),i=e[e.length-1],i&&(i.type===\"paragraph\"||i.type===\"text\")?(i.raw+=`\n`+n.raw,i.text+=`\n`+n.text,this.inlineQueue[this.inlineQueue.length-1].src=i.text):e.push(n);continue}if(n=this.tokenizer.fences(t)){t=t.substring(n.raw.length),e.push(n);continue}if(n=this.tokenizer.heading(t)){t=t.substring(n.raw.length),e.push(n);continue}if(n=this.tokenizer.hr(t)){t=t.substring(n.raw.length),e.push(n);continue}if(n=this.tokenizer.blockquote(t)){t=t.substring(n.raw.length),e.push(n);continue}if(n=this.tokenizer.list(t)){t=t.substring(n.raw.length),e.push(n);continue}if(n=this.tokenizer.html(t)){t=t.substring(n.raw.length),e.push(n);continue}if(n=this.tokenizer.def(t)){t=t.substring(n.raw.length),i=e[e.length-1],i&&(i.type===\"paragraph\"||i.type===\"text\")?(i.raw+=`\n`+n.raw,i.text+=`\n`+n.raw,this.inlineQueue[this.inlineQueue.length-1].src=i.text):this.tokens.links[n.tag]||(this.tokens.links[n.tag]={href:n.href,title:n.title});continue}if(n=this.tokenizer.table(t)){t=t.substring(n.raw.length),e.push(n);continue}if(n=this.tokenizer.lheading(t)){t=t.substring(n.raw.length),e.push(n);continue}if(r=t,this.options.extensions&&this.options.extensions.startBlock){let l=1/0;const o=t.slice(1);let p;this.options.extensions.startBlock.forEach(c=>{p=c.call({lexer:this},o),typeof p==\"number\"&&p>=0&&(l=Math.min(l,p))}),l<1/0&&l>=0&&(r=t.substring(0,l+1))}if(this.state.top&&(n=this.tokenizer.paragraph(r))){i=e[e.length-1],s&&i.type===\"paragraph\"?(i.raw+=`\n`+n.raw,i.text+=`\n`+n.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=i.text):e.push(n),s=r.length!==t.length,t=t.substring(n.raw.length);continue}if(n=this.tokenizer.text(t)){t=t.substring(n.raw.length),i=e[e.length-1],i&&i.type===\"text\"?(i.raw+=`\n`+n.raw,i.text+=`\n`+n.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=i.text):e.push(n);continue}if(t){const l=\"Infinite loop on byte: \"+t.charCodeAt(0);if(this.options.silent){console.error(l);break}else throw new Error(l)}}return this.state.top=!0,e}inline(t,e=[]){return this.inlineQueue.push({src:t,tokens:e}),e}inlineTokens(t,e=[]){let n,i,r,s=t,l,o,p;if(this.tokens.links){const c=Object.keys(this.tokens.links);if(c.length>0)for(;(l=this.tokenizer.rules.inline.reflinkSearch.exec(s))!=null;)c.includes(l[0].slice(l[0].lastIndexOf(\"[\")+1,-1))&&(s=s.slice(0,l.index)+\"[\"+\"a\".repeat(l[0].length-2)+\"]\"+s.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;(l=this.tokenizer.rules.inline.blockSkip.exec(s))!=null;)s=s.slice(0,l.index)+\"[\"+\"a\".repeat(l[0].length-2)+\"]\"+s.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);for(;(l=this.tokenizer.rules.inline.anyPunctuation.exec(s))!=null;)s=s.slice(0,l.index)+\"++\"+s.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);for(;t;)if(o||(p=\"\"),o=!1,!(this.options.extensions&&this.options.extensions.inline&&this.options.extensions.inline.some(c=>(n=c.call({lexer:this},t,e))?(t=t.substring(n.raw.length),e.push(n),!0):!1))){if(n=this.tokenizer.escape(t)){t=t.substring(n.raw.length),e.push(n);continue}if(n=this.tokenizer.tag(t)){t=t.substring(n.raw.length),i=e[e.length-1],i&&n.type===\"text\"&&i.type===\"text\"?(i.raw+=n.raw,i.text+=n.text):e.push(n);continue}if(n=this.tokenizer.link(t)){t=t.substring(n.raw.length),e.push(n);continue}if(n=this.tokenizer.reflink(t,this.tokens.links)){t=t.substring(n.raw.length),i=e[e.length-1],i&&n.type===\"text\"&&i.type===\"text\"?(i.raw+=n.raw,i.text+=n.text):e.push(n);continue}if(n=this.tokenizer.emStrong(t,s,p)){t=t.substring(n.raw.length),e.push(n);continue}if(n=this.tokenizer.codespan(t)){t=t.substring(n.raw.length),e.push(n);continue}if(n=this.tokenizer.br(t)){t=t.substring(n.raw.length),e.push(n);continue}if(n=this.tokenizer.del(t)){t=t.substring(n.raw.length),e.push(n);continue}if(n=this.tokenizer.autolink(t)){t=t.substring(n.raw.length),e.push(n);continue}if(!this.state.inLink&&(n=this.tokenizer.url(t))){t=t.substring(n.raw.length),e.push(n);continue}if(r=t,this.options.extensions&&this.options.extensions.startInline){let c=1/0;const u=t.slice(1);let h;this.options.extensions.startInline.forEach(f=>{h=f.call({lexer:this},u),typeof h==\"number\"&&h>=0&&(c=Math.min(c,h))}),c<1/0&&c>=0&&(r=t.substring(0,c+1))}if(n=this.tokenizer.inlineText(r)){t=t.substring(n.raw.length),n.raw.slice(-1)!==\"_\"&&(p=n.raw.slice(-1)),o=!0,i=e[e.length-1],i&&i.type===\"text\"?(i.raw+=n.raw,i.text+=n.text):e.push(n);continue}if(t){const c=\"Infinite loop on byte: \"+t.charCodeAt(0);if(this.options.silent){console.error(c);break}else throw new Error(c)}}return e}}class B{constructor(t){d(this,\"options\");this.options=t||R}code(t,e,n){var r;const i=(r=(e||\"\").match(/^\\S*/))==null?void 0:r[0];return t=t.replace(/\\n$/,\"\")+`\n`,i?'<pre><code class=\"language-'+x(i)+'\">'+(n?t:x(t,!0))+`</code></pre>\n`:\"<pre><code>\"+(n?t:x(t,!0))+`</code></pre>\n`}blockquote(t){return`<blockquote>\n${t}</blockquote>\n`}html(t,e){return t}heading(t,e,n){return`<h${e}>${t}</h${e}>\n`}hr(){return`<hr>\n`}list(t,e,n){const i=e?\"ol\":\"ul\",r=e&&n!==1?' start=\"'+n+'\"':\"\";return\"<\"+i+r+`>\n`+t+\"</\"+i+`>\n`}listitem(t,e,n){return`<li>${t}</li>\n`}checkbox(t){return\"<input \"+(t?'checked=\"\" ':\"\")+'disabled=\"\" type=\"checkbox\">'}paragraph(t){return`<p>${t}</p>\n`}table(t,e){return e&&(e=`<tbody>${e}</tbody>`),`<table>\n<thead>\n`+t+`</thead>\n`+e+`</table>\n`}tablerow(t){return`<tr>\n${t}</tr>\n`}tablecell(t,e){const n=e.header?\"th\":\"td\";return(e.align?`<${n} align=\"${e.align}\">`:`<${n}>`)+t+`</${n}>\n`}strong(t){return`<strong>${t}</strong>`}em(t){return`<em>${t}</em>`}codespan(t){return`<code>${t}</code>`}br(){return\"<br>\"}del(t){return`<del>${t}</del>`}link(t,e,n){const i=te(t);if(i===null)return n;t=i;let r='<a href=\"'+t+'\"';return e&&(r+=' title=\"'+e+'\"'),r+=\">\"+n+\"</a>\",r}image(t,e,n){const i=te(t);if(i===null)return n;t=i;let r=`<img src=\"${t}\" alt=\"${n}\"`;return e&&(r+=` title=\"${e}\"`),r+=\">\",r}text(t){return t}}class G{strong(t){return t}em(t){return t}codespan(t){return t}del(t){return t}html(t){return t}text(t){return t}link(t,e,n){return\"\"+n}image(t,e,n){return\"\"+n}br(){return\"\"}}class w{constructor(t){d(this,\"options\");d(this,\"renderer\");d(this,\"textRenderer\");this.options=t||R,this.options.renderer=this.options.renderer||new B,this.renderer=this.options.renderer,this.renderer.options=this.options,this.textRenderer=new G}static parse(t,e){return new w(e).parse(t)}static parseInline(t,e){return new w(e).parseInline(t)}parse(t,e=!0){let n=\"\";for(let i=0;i<t.length;i++){const r=t[i];if(this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[r.type]){const s=r,l=this.options.extensions.renderers[s.type].call({parser:this},s);if(l!==!1||![\"space\",\"hr\",\"heading\",\"code\",\"table\",\"blockquote\",\"list\",\"html\",\"paragraph\",\"text\"].includes(s.type)){n+=l||\"\";continue}}switch(r.type){case\"space\":continue;case\"hr\":{n+=this.renderer.hr();continue}case\"heading\":{const s=r;n+=this.renderer.heading(this.parseInline(s.tokens),s.depth,Te(this.parseInline(s.tokens,this.textRenderer)));continue}case\"code\":{const s=r;n+=this.renderer.code(s.text,s.lang,!!s.escaped);continue}case\"table\":{const s=r;let l=\"\",o=\"\";for(let c=0;c<s.header.length;c++)o+=this.renderer.tablecell(this.parseInline(s.header[c].tokens),{header:!0,align:s.align[c]});l+=this.renderer.tablerow(o);let p=\"\";for(let c=0;c<s.rows.length;c++){const u=s.rows[c];o=\"\";for(let h=0;h<u.length;h++)o+=this.renderer.tablecell(this.parseInline(u[h].tokens),{header:!1,align:s.align[h]});p+=this.renderer.tablerow(o)}n+=this.renderer.table(l,p);continue}case\"blockquote\":{const s=r,l=this.parse(s.tokens);n+=this.renderer.blockquote(l);continue}case\"list\":{const s=r,l=s.ordered,o=s.start,p=s.loose;let c=\"\";for(let u=0;u<s.items.length;u++){const h=s.items[u],f=h.checked,y=h.task;let b=\"\";if(h.task){const $=this.renderer.checkbox(!!f);p?h.tokens.length>0&&h.tokens[0].type===\"paragraph\"?(h.tokens[0].text=$+\" \"+h.tokens[0].text,h.tokens[0].tokens&&h.tokens[0].tokens.length>0&&h.tokens[0].tokens[0].type===\"text\"&&(h.tokens[0].tokens[0].text=$+\" \"+h.tokens[0].tokens[0].text)):h.tokens.unshift({type:\"text\",text:$+\" \"}):b+=$+\" \"}b+=this.parse(h.tokens,p),c+=this.renderer.listitem(b,y,!!f)}n+=this.renderer.list(c,l,o);continue}case\"html\":{const s=r;n+=this.renderer.html(s.text,s.block);continue}case\"paragraph\":{const s=r;n+=this.renderer.paragraph(this.parseInline(s.tokens));continue}case\"text\":{let s=r,l=s.tokens?this.parseInline(s.tokens):s.text;for(;i+1<t.length&&t[i+1].type===\"text\";)s=t[++i],l+=`\n`+(s.tokens?this.parseInline(s.tokens):s.text);n+=e?this.renderer.paragraph(l):l;continue}default:{const s='Token with \"'+r.type+'\" type was not found.';if(this.options.silent)return console.error(s),\"\";throw new Error(s)}}}return n}parseInline(t,e){e=e||this.renderer;let n=\"\";for(let i=0;i<t.length;i++){const r=t[i];if(this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[r.type]){const s=this.options.extensions.renderers[r.type].call({parser:this},r);if(s!==!1||![\"escape\",\"html\",\"link\",\"image\",\"strong\",\"em\",\"codespan\",\"br\",\"del\",\"text\"].includes(r.type)){n+=s||\"\";continue}}switch(r.type){case\"escape\":{const s=r;n+=e.text(s.text);break}case\"html\":{const s=r;n+=e.html(s.text);break}case\"link\":{const s=r;n+=e.link(s.href,s.title,this.parseInline(s.tokens,e));break}case\"image\":{const s=r;n+=e.image(s.href,s.title,s.text);break}case\"strong\":{const s=r;n+=e.strong(this.parseInline(s.tokens,e));break}case\"em\":{const s=r;n+=e.em(this.parseInline(s.tokens,e));break}case\"codespan\":{const s=r;n+=e.codespan(s.text);break}case\"br\":{n+=e.br();break}case\"del\":{const s=r;n+=e.del(this.parseInline(s.tokens,e));break}case\"text\":{const s=r;n+=e.text(s.text);break}default:{const s='Token with \"'+r.type+'\" type was not found.';if(this.options.silent)return console.error(s),\"\";throw new Error(s)}}}return n}}class I{constructor(t){d(this,\"options\");this.options=t||R}preprocess(t){return t}postprocess(t){return t}processAllTokens(t){return t}}d(I,\"passThroughHooks\",new Set([\"preprocess\",\"postprocess\",\"processAllTokens\"]));var z,O,ke;class Ye{constructor(...t){Y(this,z);d(this,\"defaults\",j());d(this,\"options\",this.setOptions);d(this,\"parse\",C(this,z,O).call(this,m.lex,w.parse));d(this,\"parseInline\",C(this,z,O).call(this,m.lexInline,w.parseInline));d(this,\"Parser\",w);d(this,\"Renderer\",B);d(this,\"TextRenderer\",G);d(this,\"Lexer\",m);d(this,\"Tokenizer\",Z);d(this,\"Hooks\",I);this.use(...t)}walkTokens(t,e){var i,r;let n=[];for(const s of t)switch(n=n.concat(e.call(this,s)),s.type){case\"table\":{const l=s;for(const o of l.header)n=n.concat(this.walkTokens(o.tokens,e));for(const o of l.rows)for(const p of o)n=n.concat(this.walkTokens(p.tokens,e));break}case\"list\":{const l=s;n=n.concat(this.walkTokens(l.items,e));break}default:{const l=s;(r=(i=this.defaults.extensions)==null?void 0:i.childTokens)!=null&&r[l.type]?this.defaults.extensions.childTokens[l.type].forEach(o=>{const p=l[o].flat(1/0);n=n.concat(this.walkTokens(p,e))}):l.tokens&&(n=n.concat(this.walkTokens(l.tokens,e)))}}return n}use(...t){const e=this.defaults.extensions||{renderers:{},childTokens:{}};return t.forEach(n=>{const i={...n};if(i.async=this.defaults.async||i.async||!1,n.extensions&&(n.extensions.forEach(r=>{if(!r.name)throw new Error(\"extension name required\");if(\"renderer\"in r){const s=e.renderers[r.name];s?e.renderers[r.name]=function(...l){let o=r.renderer.apply(this,l);return o===!1&&(o=s.apply(this,l)),o}:e.renderers[r.name]=r.renderer}if(\"tokenizer\"in r){if(!r.level||r.level!==\"block\"&&r.level!==\"inline\")throw new Error(\"extension level must be 'block' or 'inline'\");const s=e[r.level];s?s.unshift(r.tokenizer):e[r.level]=[r.tokenizer],r.start&&(r.level===\"block\"?e.startBlock?e.startBlock.push(r.start):e.startBlock=[r.start]:r.level===\"inline\"&&(e.startInline?e.startInline.push(r.start):e.startInline=[r.start]))}\"childTokens\"in r&&r.childTokens&&(e.childTokens[r.name]=r.childTokens)}),i.extensions=e),n.renderer){const r=this.defaults.renderer||new B(this.defaults);for(const s in n.renderer){if(!(s in r))throw new Error(`renderer '${s}' does not exist`);if(s===\"options\")continue;const l=s,o=n.renderer[l],p=r[l];r[l]=(...c)=>{let u=o.apply(r,c);return u===!1&&(u=p.apply(r,c)),u||\"\"}}i.renderer=r}if(n.tokenizer){const r=this.defaults.tokenizer||new Z(this.defaults);for(const s in n.tokenizer){if(!(s in r))throw new Error(`tokenizer '${s}' does not exist`);if([\"options\",\"rules\",\"lexer\"].includes(s))continue;const l=s,o=n.tokenizer[l],p=r[l];r[l]=(...c)=>{let u=o.apply(r,c);return u===!1&&(u=p.apply(r,c)),u}}i.tokenizer=r}if(n.hooks){const r=this.defaults.hooks||new I;for(const s in n.hooks){if(!(s in r))throw new Error(`hook '${s}' does not exist`);if(s===\"options\")continue;const l=s,o=n.hooks[l],p=r[l];I.passThroughHooks.has(s)?r[l]=c=>{if(this.defaults.async)return Promise.resolve(o.call(r,c)).then(h=>p.call(r,h));const u=o.call(r,c);return p.call(r,u)}:r[l]=(...c)=>{let u=o.apply(r,c);return u===!1&&(u=p.apply(r,c)),u}}i.hooks=r}if(n.walkTokens){const r=this.defaults.walkTokens,s=n.walkTokens;i.walkTokens=function(l){let o=[];return o.push(s.call(this,l)),r&&(o=o.concat(r.call(this,l))),o}}this.defaults={...this.defaults,...i}}),this}setOptions(t){return this.defaults={...this.defaults,...t},this}lexer(t,e){return m.lex(t,e??this.defaults)}parser(t,e){return w.parse(t,e??this.defaults)}}z=new WeakSet,O=function(t,e){return(n,i)=>{const r={...i},s={...this.defaults,...r};this.defaults.async===!0&&r.async===!1&&(s.silent||console.warn(\"marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored.\"),s.async=!0);const l=C(this,z,ke).call(this,!!s.silent,!!s.async);if(typeof n>\"u\"||n===null)return l(new Error(\"marked(): input parameter is undefined or null\"));if(typeof n!=\"string\")return l(new Error(\"marked(): input parameter is of type \"+Object.prototype.toString.call(n)+\", string expected\"));if(s.hooks&&(s.hooks.options=s),s.async)return Promise.resolve(s.hooks?s.hooks.preprocess(n):n).then(o=>t(o,s)).then(o=>s.hooks?s.hooks.processAllTokens(o):o).then(o=>s.walkTokens?Promise.all(this.walkTokens(o,s.walkTokens)).then(()=>o):o).then(o=>e(o,s)).then(o=>s.hooks?s.hooks.postprocess(o):o).catch(l);try{s.hooks&&(n=s.hooks.preprocess(n));let o=t(n,s);s.hooks&&(o=s.hooks.processAllTokens(o)),s.walkTokens&&this.walkTokens(o,s.walkTokens);let p=e(o,s);return s.hooks&&(p=s.hooks.postprocess(p)),p}catch(o){return l(o)}}},ke=function(t,e){return n=>{if(n.message+=`\nPlease report this to https://github.com/markedjs/marked.`,t){const i=\"<p>An error occurred:</p><pre>\"+x(n.message+\"\",!0)+\"</pre>\";return e?Promise.resolve(i):i}if(e)return Promise.reject(n);throw n}};const T=new Ye;function g(a,t){return T.parse(a,t)}g.options=g.setOptions=function(a){return T.setOptions(a),g.defaults=T.defaults,re(g.defaults),g};g.getDefaults=j;g.defaults=R;g.use=function(...a){return T.use(...a),g.defaults=T.defaults,re(g.defaults),g};g.walkTokens=function(a,t){return T.walkTokens(a,t)};g.parseInline=T.parseInline;g.Parser=w;g.parser=w.parse;g.Renderer=B;g.TextRenderer=G;g.Lexer=m;g.lexer=m.lex;g.Tokenizer=Z;g.Hooks=I;g.parse=g;g.options;g.setOptions;g.use;g.walkTokens;g.parseInline;w.parse;m.lex;export{Ye as M,g as m};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.766Z",
        "time": 0.14200000441633165,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.12100000458303839,
          "receive": 0.02099999983329326,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/arrow-up-right.Dl9l-gxp.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"505-1733326797000\""
            },
            {
              "name": "age",
              "value": "30308"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "505"
            },
            {
              "name": "x-amz-cf-id",
              "value": "wXP8V-ZufBMSIjQGxpFZy4rx338Yr-V-T_DLOAv4IPUSbGcC4-yIAQ=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:51 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 870,
            "mimeType": "text/javascript",
            "text": "import{s as u,J as h,K as v,L as c,M as d,b as f,N as w,f as o,O as _,i as p,n as g,P as m}from\"./scheduler.CeakrPJD.js\";import{g as x}from\"./settings.qWXPmYFi.js\";import{S as L,i as B}from\"./index.Cljt5KuQ.js\";function b(i){let t,a,n='<path fill=\"currentColor\" d=\"M10 6v2h12.59L6 24.59L7.41 26L24 9.41V22h2V6z\"/>',l=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},i[0]],r={};for(let e=0;e<l.length;e+=1)r=h(r,l[e]);return{c(){t=v(\"svg\"),a=new c(!0),this.h()},l(e){t=d(e,\"svg\",{viewBox:!0,width:!0,height:!0});var s=f(t);a=w(s,!0),s.forEach(o),this.h()},h(){a.a=null,_(t,r)},m(e,s){p(e,t,s),a.m(n,t)},p(e,[s]){_(t,r=x(l,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},s&1&&e[0]]))},i:g,o:g,d(e){e&&o(t)}}}function y(i,t,a){return i.$$set=n=>{a(0,t=h(h({},t),m(n)))},t=m(t),[t]}class M extends L{constructor(t){super(),B(this,t,y,b,u,{})}}export{M as A};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.766Z",
        "time": 0.13899999612476677,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.11999999696854502,
          "receive": 0.018999999156221747,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/code.Dqet6oxH.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"558-1733326797000\""
            },
            {
              "name": "age",
              "value": "30332"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "558"
            },
            {
              "name": "x-amz-cf-id",
              "value": "WIEf7DBY4tbYXCIwJDTE7UzGpQj4Lu6lI5hxH_TGTCECx8fhMnyO6A=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:27 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 957,
            "mimeType": "text/javascript",
            "text": "import{s as u,J as o,K as d,L as v,M as c,b as f,N as w,f as h,O as m,i as L,n as g,P as _}from\"./scheduler.CeakrPJD.js\";import{g as x}from\"./settings.qWXPmYFi.js\";import{S as p,i as C}from\"./index.Cljt5KuQ.js\";function z(l){let e,a,r='<path fill=\"currentColor\" d=\"m31 16l-7 7l-1.41-1.41L28.17 16l-5.58-5.59L24 9zM1 16l7-7l1.41 1.41L3.83 16l5.58 5.59L8 23zm11.42 9.484L17.64 6l1.932.517L14.352 26z\"/>',n=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},l[0]],i={};for(let t=0;t<n.length;t+=1)i=o(i,n[t]);return{c(){e=d(\"svg\"),a=new v(!0),this.h()},l(t){e=c(t,\"svg\",{viewBox:!0,width:!0,height:!0});var s=f(e);a=w(s,!0),s.forEach(h),this.h()},h(){a.a=null,m(e,i)},m(t,s){L(t,e,s),a.m(r,e)},p(t,[s]){m(e,i=x(n,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},s&1&&t[0]]))},i:g,o:g,d(t){t&&h(e)}}}function B(l,e,a){return l.$$set=r=>{a(0,e=o(o({},e),_(r)))},e=_(e),[e]}class M extends p{constructor(e){super(),C(this,e,B,z,u,{})}}export{M as C};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.767Z",
        "time": 0.16599999798927456,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.1449999981559813,
          "receive": 0.02099999983329326,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://huggingface.co/chat/",
          "lineNumber": 22
        },
        "_priority": "Low",
        "_resourceType": "script",
        "cache": {},
        "connection": "2628",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/js/script.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": "https://huggingface.co/chat/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cdn-status",
              "value": "200"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-cache",
              "value": "Miss from cloudfront"
            },
            {
              "name": "x-amz-cf-id",
              "value": "-csB_6_12DvwGr5RigVsAPuteRaTPBjFTVyh9KfqQyYTm40OW_fhmg=="
            },
            {
              "name": "date",
              "value": "Thu, 05 Dec 2024 00:08:59 GMT"
            },
            {
              "name": "content-type",
              "value": "application/javascript"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "cdn-cachedat",
              "value": "12/04/2024 12:04:25"
            },
            {
              "name": "cdn-cache",
              "value": "HIT"
            },
            {
              "name": "cdn-requestpullcode",
              "value": "200"
            },
            {
              "name": "cache-control",
              "value": "public, must-revalidate, max-age=86400"
            },
            {
              "name": "cdn-requestpullsuccess",
              "value": "True"
            },
            {
              "name": "cdn-requesttime",
              "value": "1"
            },
            {
              "name": "cdn-uid",
              "value": "153cb5b1-399a-48ef-b5bf-098c03770254"
            },
            {
              "name": "cdn-requestid",
              "value": "a147f57459df080d6f6ccba636f18ec4"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "cdn-pullzone",
              "value": "682664"
            },
            {
              "name": "cdn-proxyver",
              "value": "1.06"
            },
            {
              "name": "application",
              "value": "127.0.0.1"
            },
            {
              "name": "permissions-policy",
              "value": "interest-cohort=()"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "content-length",
              "value": "1407"
            },
            {
              "name": "cdn-edgestorageid",
              "value": "925"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "server",
              "value": "BunnyCDN-ASB1-925"
            },
            {
              "name": "cdn-requestcountrycode",
              "value": "US"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1407,
            "mimeType": "application/javascript",
            "text": "!function(){\"use strict\";var a=window.location,o=window.document,t=o.currentScript,r=t.getAttribute(\"data-api\")||new URL(t.src).origin+\"/api/event\",l=t.getAttribute(\"data-domain\");function s(t,e){t&&console.warn(\"Ignoring Event: \"+t),e&&e.callback&&e.callback()}function e(t,e){if(/^localhost$|^127(\\.[0-9]+){0,2}\\.[0-9]+$|^\\[::1?\\]$/.test(a.hostname)||\"file:\"===a.protocol)return s(\"localhost\",e);if((window._phantom||window.__nightmare||window.navigator.webdriver||window.Cypress)&&!window.__plausible)return s(null,e);try{if(\"true\"===window.localStorage.plausible_ignore)return s(\"localStorage flag\",e)}catch(t){}var n={},i=(n.n=t,n.u=a.href,n.d=l,n.r=o.referrer||null,e&&e.meta&&(n.m=JSON.stringify(e.meta)),e&&e.props&&(n.p=e.props),new XMLHttpRequest);i.open(\"POST\",r,!0),i.setRequestHeader(\"Content-Type\",\"text/plain\"),i.send(JSON.stringify(n)),i.onreadystatechange=function(){4===i.readyState&&e&&e.callback&&e.callback({status:i.status})}}var n=window.plausible&&window.plausible.q||[];window.plausible=e;for(var i,p=0;p<n.length;p++)e.apply(this,n[p]);function c(){i!==a.pathname&&(i=a.pathname,e(\"pageview\"))}function u(){c()}var w,t=window.history;t.pushState&&(w=t.pushState,t.pushState=function(){w.apply(this,arguments),u()},window.addEventListener(\"popstate\",u)),\"prerender\"===o.visibilityState?o.addEventListener(\"visibilitychange\",function(){i||\"visible\"!==o.visibilityState||c()}):c()}();"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.768Z",
        "time": 0.16400001186411828,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.14000000373926014,
          "receive": 0.02400000812485814,
          "_blocked_queueing": -1
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://huggingface.co/chat/",
          "lineNumber": 25
        },
        "_priority": "High",
        "_resourceType": "image",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/huggingchat/logo.svg",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/chat/huggingchat/logo.svg"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "if-modified-since",
              "value": "Tue, 03 Dec 2024 16:37:24 GMT"
            },
            {
              "name": "if-none-match",
              "value": "W/\"397-1733243844000\""
            },
            {
              "name": "priority",
              "value": "u=2, i"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/chat/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "image"
            },
            {
              "name": "sec-fetch-mode",
              "value": "no-cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 304,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "age",
              "value": "48419"
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 10:49:00 GMT"
            },
            {
              "name": "etag",
              "value": "W/\"397-1733243844000\""
            },
            {
              "name": "last-modified",
              "value": "Tue, 03 Dec 2024 16:37:24 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "vb4sHzreod-RIT1UaoaMyLkxRNhimqKZbCLsOKxjyuUnrb_DGnOFCg=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 810,
            "mimeType": "image/svg+xml",
            "text": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"none\">\n\t<path\n\t\tfill=\"#FFD21E\"\n\t\td=\"M4 15.55C4 9.72 8.72 5 14.55 5h4.11a9.34 9.34 0 1 1 0 18.68H7.58l-2.89 2.8a.41.41 0 0 1-.69-.3V15.55Z\"\n\t/>\n\t<path\n\t\tfill=\"#32343D\"\n\t\td=\"M19.63 12.48c.37.14.52.9.9.7.71-.38.98-1.27.6-1.98a1.46 1.46 0 0 0-1.98-.61 1.47 1.47 0 0 0-.6 1.99c.17.34.74-.21 1.08-.1ZM12.72 12.48c-.37.14-.52.9-.9.7a1.47 1.47 0 0 1-.6-1.98 1.46 1.46 0 0 1 1.98-.61c.71.38.98 1.27.6 1.99-.18.34-.74-.21-1.08-.1ZM16.24 19.55c2.89 0 3.82-2.58 3.82-3.9 0-1.33-1.71.7-3.82.7-2.1 0-3.8-2.03-3.8-.7 0 1.32.92 3.9 3.8 3.9Z\"\n\t/>\n\t<path\n\t\tfill=\"#FF323D\"\n\t\td=\"M18.56 18.8c-.57.44-1.33.75-2.32.75-.92 0-1.65-.27-2.2-.68.3-.63.87-1.11 1.55-1.32.12-.03.24.17.36.38.12.2.24.4.37.4s.26-.2.39-.4.26-.4.38-.36a2.56 2.56 0 0 1 1.47 1.23Z\"\n\t/>\n</svg>\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 273,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.768Z",
        "time": 24.103999996441416,
        "timings": {
          "blocked": 2.562999996581115,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.33699999999999997,
          "wait": 19.13500000519771,
          "receive": 2.0689999946625903,
          "_blocked_queueing": 1.1289999965811148,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://huggingface.co/chat/",
          "lineNumber": 29
        },
        "_priority": "High",
        "_resourceType": "image",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/datasets/huggingchat/models-logo/resolve/main/cohere-logo.png",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/datasets/huggingchat/models-logo/resolve/main/cohere-logo.png"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "priority",
              "value": "u=2, i"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/chat/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "image"
            },
            {
              "name": "sec-fetch-mode",
              "value": "no-cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 302,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "access-control-expose-headers",
              "value": "X-Repo-Commit,X-Request-Id,X-Error-Code,X-Error-Message,X-Total-Count,ETag,Link,Accept-Ranges,Content-Range"
            },
            {
              "name": "content-length",
              "value": "1180"
            },
            {
              "name": "content-type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "name": "cross-origin-opener-policy",
              "value": "same-origin"
            },
            {
              "name": "date",
              "value": "Thu, 05 Dec 2024 00:16:00 GMT"
            },
            {
              "name": "location",
              "value": "https://cdn-lfs-us-1.hf.co/repos/d2/51/d251d195255c6435ac50cf800b186498fd9450ca023f5056e1962092168415bb/2e36278090fb5df67671fae3cb1a881de08e984c1431c3050058625f7d5961ee?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27cohere-logo.png%3B+filename%3D%22cohere-logo.png%22%3B&response-content-type=image%2Fpng&Expires=1733616960&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTczMzYxNjk2MH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy11cy0xLmhmLmNvL3JlcG9zL2QyLzUxL2QyNTFkMTk1MjU1YzY0MzVhYzUwY2Y4MDBiMTg2NDk4ZmQ5NDUwY2EwMjNmNTA1NmUxOTYyMDkyMTY4NDE1YmIvMmUzNjI3ODA5MGZiNWRmNjc2NzFmYWUzY2IxYTg4MWRlMDhlOTg0YzE0MzFjMzA1MDA1ODYyNWY3ZDU5NjFlZT9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSomcmVzcG9uc2UtY29udGVudC10eXBlPSoifV19&Signature=S12XGchLpz%7EFdkUdUcwAEQMEpEjrv0SS4tjEZms2rFUnKDsqxqIYnYDNjt6Wpw9uEtC4VpPpL9pSr8f7-iZDbNHz1CYlq4NvM0LRm5Tyq2MH5ybjx9OvnQaASTKKX%7Ey9uXMguDpJc5h%7EeHpLruNA8SBBqAo9Zbvd8-ZEwj7GsyvPUpVTC39jP%7ExywNhPx6eEfSW7vtMGk%7EUUouposJsP2xQQfG5Bpg4an1oyEfzhZAnK0esmrFoOamQR5-G3T5r9QQTzV2kHWkxNH1g-BGohNof4KhONr8kQ1e4flCh72rFZZKXwIKIj7cX2LbVLEEdAHj4IO8YkpdL%7Ecg%7EZYjnVOw__&Key-Pair-Id=K24J24Z295AEI9"
            },
            {
              "name": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "name": "vary",
              "value": "Origin, Accept"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "wywmCm5BlUyydzZWecHgNbrT-nQkk2fv1cjnWbfKmIVJiV91RA2jkw=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Miss from cloudfront"
            },
            {
              "name": "x-linked-etag",
              "value": "\"2e36278090fb5df67671fae3cb1a881de08e984c1431c3050058625f7d5961ee-inline\""
            },
            {
              "name": "x-linked-size",
              "value": "8660"
            },
            {
              "name": "x-powered-by",
              "value": "huggingface-moon"
            },
            {
              "name": "x-repo-commit",
              "value": "3ad1b544339766b92fec4c57c378784423688177"
            },
            {
              "name": "x-request-id",
              "value": "Root=1-6750f0c0-65c4a22a64d9b30068e9b306"
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "text/plain"
          },
          "redirectURL": "https://cdn-lfs-us-1.hf.co/repos/d2/51/d251d195255c6435ac50cf800b186498fd9450ca023f5056e1962092168415bb/2e36278090fb5df67671fae3cb1a881de08e984c1431c3050058625f7d5961ee?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27cohere-logo.png%3B+filename%3D%22cohere-logo.png%22%3B&response-content-type=image%2Fpng&Expires=1733616960&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTczMzYxNjk2MH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy11cy0xLmhmLmNvL3JlcG9zL2QyLzUxL2QyNTFkMTk1MjU1YzY0MzVhYzUwY2Y4MDBiMTg2NDk4ZmQ5NDUwY2EwMjNmNTA1NmUxOTYyMDkyMTY4NDE1YmIvMmUzNjI3ODA5MGZiNWRmNjc2NzFmYWUzY2IxYTg4MWRlMDhlOTg0YzE0MzFjMzA1MDA1ODYyNWY3ZDU5NjFlZT9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSomcmVzcG9uc2UtY29udGVudC10eXBlPSoifV19&Signature=S12XGchLpz%7EFdkUdUcwAEQMEpEjrv0SS4tjEZms2rFUnKDsqxqIYnYDNjt6Wpw9uEtC4VpPpL9pSr8f7-iZDbNHz1CYlq4NvM0LRm5Tyq2MH5ybjx9OvnQaASTKKX%7Ey9uXMguDpJc5h%7EeHpLruNA8SBBqAo9Zbvd8-ZEwj7GsyvPUpVTC39jP%7ExywNhPx6eEfSW7vtMGk%7EUUouposJsP2xQQfG5Bpg4an1oyEfzhZAnK0esmrFoOamQR5-G3T5r9QQTzV2kHWkxNH1g-BGohNof4KhONr8kQ1e4flCh72rFZZKXwIKIj7cX2LbVLEEdAHj4IO8YkpdL%7Ecg%7EZYjnVOw__&Key-Pair-Id=K24J24Z295AEI9",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 2753,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.769Z",
        "time": 480.05100000591483,
        "timings": {
          "blocked": 2.783999996894039,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.2899999999999998,
          "wait": 474.35600000210945,
          "receive": 2.621000006911345,
          "_blocked_queueing": 0.9149999968940392,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "e",
                "scriptId": "646",
                "url": "https://huggingface.co/js/script.js",
                "lineNumber": 0,
                "columnNumber": 828
              },
              {
                "functionName": "c",
                "scriptId": "646",
                "url": "https://huggingface.co/js/script.js",
                "lineNumber": 0,
                "columnNumber": 1105
              },
              {
                "functionName": "",
                "scriptId": "646",
                "url": "https://huggingface.co/js/script.js",
                "lineNumber": 0,
                "columnNumber": 1400
              },
              {
                "functionName": "",
                "scriptId": "646",
                "url": "https://huggingface.co/js/script.js",
                "lineNumber": 0,
                "columnNumber": 1404
              }
            ]
          }
        },
        "_priority": "High",
        "_resourceType": "xhr",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "POST",
          "url": "https://huggingface.co/api/event",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/event"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "content-length",
              "value": "107"
            },
            {
              "name": "content-type",
              "value": "text/plain"
            },
            {
              "name": "origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/chat/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 107,
          "postData": {
            "mimeType": "text/plain",
            "text": "{\"n\":\"pageview\",\"u\":\"https://huggingface.co/chat/\",\"d\":\"huggingface.co\",\"r\":\"https://huggingface.co/chat/\"}"
          }
        },
        "response": {
          "status": 202,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "application",
              "value": "127.0.0.1"
            },
            {
              "name": "cache-control",
              "value": "must-revalidate, max-age=0, private"
            },
            {
              "name": "cdn-cachedat",
              "value": "12/05/2024 00:16:00"
            },
            {
              "name": "cdn-edgestorageid",
              "value": "925"
            },
            {
              "name": "cdn-proxyver",
              "value": "1.06"
            },
            {
              "name": "cdn-pullzone",
              "value": "682664"
            },
            {
              "name": "cdn-requestcountrycode",
              "value": "US"
            },
            {
              "name": "cdn-requestid",
              "value": "5017af963bc55bcc84652615bc95eba4"
            },
            {
              "name": "cdn-requestpullcode",
              "value": "202"
            },
            {
              "name": "cdn-requestpullsuccess",
              "value": "True"
            },
            {
              "name": "cdn-requesttime",
              "value": "0"
            },
            {
              "name": "cdn-uid",
              "value": "153cb5b1-399a-48ef-b5bf-098c03770254"
            },
            {
              "name": "content-length",
              "value": "2"
            },
            {
              "name": "content-type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Thu, 05 Dec 2024 00:16:00 GMT"
            },
            {
              "name": "permissions-policy",
              "value": "interest-cohort=()"
            },
            {
              "name": "server",
              "value": "BunnyCDN-ASB1-925"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "jJ0KPqBMQKWr_CWClS_DkNAErMyTuANGVrVZszWA5D6ZU7kywwB-1g=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Miss from cloudfront"
            },
            {
              "name": "x-request-id",
              "value": "GA4fsvUlQVue56YpI5kf"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2,
            "mimeType": "text/plain",
            "text": "ok"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 649,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:15:58.819Z",
        "time": 383.9790000056382,
        "timings": {
          "blocked": 1.905999996737577,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.32100000000000006,
          "wait": 379.71099999461325,
          "receive": 2.0410000142874196,
          "_blocked_queueing": 1.021999996737577,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "script",
          "lineNumber": 0,
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 616
              },
              {
                "functionName": "h",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 310
              },
              {
                "functionName": "",
                "scriptId": "607",
                "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
                "lineNumber": 1,
                "columnNumber": 8040
              },
              {
                "functionName": "pn",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 10940
              },
              {
                "functionName": "",
                "scriptId": "643",
                "url": "https://huggingface.co/chat/",
                "lineNumber": 69,
                "columnNumber": 10
              }
            ],
            "parent": {
              "description": "Promise.then",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "643",
                  "url": "https://huggingface.co/chat/",
                  "lineNumber": 68,
                  "columnNumber": 8
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/nodes/1._sk0cofe.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"926-1733326797000\""
            },
            {
              "name": "age",
              "value": "30314"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "926"
            },
            {
              "name": "x-amz-cf-id",
              "value": "YNZVaeLMI4jl0jCbZpxprOZbTdjWDgcYtWNL0m1THjIdURLCfusxJw=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:45 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2201,
            "mimeType": "text/javascript",
            "text": "import{s as R,e as h,t as V,a as k,c as u,b as g,d as j,f as c,g as E,h as _,i as I,j as f,k as $,n as C,l as z}from\"../chunks/scheduler.CeakrPJD.js\";import{S as A,i as B}from\"../chunks/index.Cljt5KuQ.js\";import{p as F}from\"../chunks/stores.BBDoy_q4.js\";function P(d){let r,e,t,o=d[0].error.errorId+\"\",m;return{c(){r=h(\"div\"),e=k(),t=h(\"pre\"),m=V(o),this.h()},l(s){r=u(s,\"DIV\",{class:!0}),g(r).forEach(c),e=E(s),t=u(s,\"PRE\",{class:!0});var l=g(t);m=j(l,o),l.forEach(c),this.h()},h(){_(r,\"class\",\"-mx-8 my-2 h-px bg-gray-200 dark:bg-gray-700\"),_(t,\"class\",\"max-w-sm whitespace-pre-wrap text-left font-mono text-xs\")},m(s,l){I(s,r,l),I(s,e,l),I(s,t,l),f(t,m)},p(s,l){l&1&&o!==(o=s[0].error.errorId+\"\")&&$(m,o)},d(s){s&&(c(r),c(e),c(t))}}}function G(d){var H,S;let r,e,t,o=d[0].status+\"\",m,s,l,w,v,b=((H=d[0].error)==null?void 0:H.message)+\"\",y,D,a=((S=d[0].error)==null?void 0:S.errorId)&&P(d);return{c(){r=h(\"div\"),e=h(\"div\"),t=h(\"h1\"),m=V(o),s=k(),l=h(\"div\"),w=k(),v=h(\"h2\"),y=V(b),D=k(),a&&a.c(),this.h()},l(i){r=u(i,\"DIV\",{class:!0});var p=g(r);e=u(p,\"DIV\",{class:!0});var n=g(e);t=u(n,\"H1\",{class:!0});var x=g(t);m=j(x,o),x.forEach(c),s=E(n),l=u(n,\"DIV\",{class:!0}),g(l).forEach(c),w=E(n),v=u(n,\"H2\",{class:!0});var q=g(v);y=j(q,b),q.forEach(c),D=E(n),a&&a.l(n),n.forEach(c),p.forEach(c),this.h()},h(){_(t,\"class\",\"mb-2 text-5xl font-semibold\"),_(l,\"class\",\"-mx-8 my-2 h-px bg-gray-200 dark:bg-gray-700\"),_(v,\"class\",\"max-w-sm text-lg\"),_(e,\"class\",\"align-center -mt-24 flex flex-col justify-center rounded-xl border bg-white px-8 pb-2 pt-4 text-center dark:border-gray-700 dark:bg-gray-800\"),_(r,\"class\",\"flex items-center justify-center bg-gradient-to-t from-gray-200 text-gray-800 dark:from-gray-700 dark:text-gray-300\")},m(i,p){I(i,r,p),f(r,e),f(e,t),f(t,m),f(e,s),f(e,l),f(e,w),f(e,v),f(v,y),f(e,D),a&&a.m(e,null)},p(i,[p]){var n,x;p&1&&o!==(o=i[0].status+\"\")&&$(m,o),p&1&&b!==(b=((n=i[0].error)==null?void 0:n.message)+\"\")&&$(y,b),(x=i[0].error)!=null&&x.errorId?a?a.p(i,p):(a=P(i),a.c(),a.m(e,null)):a&&(a.d(1),a=null)},i:C,o:C,d(i){i&&c(r),a&&a.d()}}}function J(d,r,e){let t;return z(d,F,o=>e(0,t=o)),[t]}class N extends A{constructor(r){super(),B(this,r,J,G,R,{})}}export{N as component};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:58.828Z",
        "time": 0.25200001255143434,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.22200000239536166,
          "receive": 0.030000010156072676,
          "_blocked_queueing": -1
        }
      },
      {
        "_initiator": {
          "type": "parser",
          "url": "https://huggingface.co/chat/",
          "lineNumber": 29
        },
        "_priority": "High",
        "_resourceType": "image",
        "cache": {},
        "connection": "4909",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://cdn-lfs-us-1.hf.co/repos/d2/51/d251d195255c6435ac50cf800b186498fd9450ca023f5056e1962092168415bb/2e36278090fb5df67671fae3cb1a881de08e984c1431c3050058625f7d5961ee?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27cohere-logo.png%3B+filename%3D%22cohere-logo.png%22%3B&response-content-type=image%2Fpng&Expires=1733616960&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTczMzYxNjk2MH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy11cy0xLmhmLmNvL3JlcG9zL2QyLzUxL2QyNTFkMTk1MjU1YzY0MzVhYzUwY2Y4MDBiMTg2NDk4ZmQ5NDUwY2EwMjNmNTA1NmUxOTYyMDkyMTY4NDE1YmIvMmUzNjI3ODA5MGZiNWRmNjc2NzFmYWUzY2IxYTg4MWRlMDhlOTg0YzE0MzFjMzA1MDA1ODYyNWY3ZDU5NjFlZT9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSomcmVzcG9uc2UtY29udGVudC10eXBlPSoifV19&Signature=S12XGchLpz%7EFdkUdUcwAEQMEpEjrv0SS4tjEZms2rFUnKDsqxqIYnYDNjt6Wpw9uEtC4VpPpL9pSr8f7-iZDbNHz1CYlq4NvM0LRm5Tyq2MH5ybjx9OvnQaASTKKX%7Ey9uXMguDpJc5h%7EeHpLruNA8SBBqAo9Zbvd8-ZEwj7GsyvPUpVTC39jP%7ExywNhPx6eEfSW7vtMGk%7EUUouposJsP2xQQfG5Bpg4an1oyEfzhZAnK0esmrFoOamQR5-G3T5r9QQTzV2kHWkxNH1g-BGohNof4KhONr8kQ1e4flCh72rFZZKXwIKIj7cX2LbVLEEdAHj4IO8YkpdL%7Ecg%7EZYjnVOw__&Key-Pair-Id=K24J24Z295AEI9",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "cdn-lfs-us-1.hf.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/repos/d2/51/d251d195255c6435ac50cf800b186498fd9450ca023f5056e1962092168415bb/2e36278090fb5df67671fae3cb1a881de08e984c1431c3050058625f7d5961ee?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27cohere-logo.png%3B+filename%3D%22cohere-logo.png%22%3B&response-content-type=image%2Fpng&Expires=1733616960&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTczMzYxNjk2MH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy11cy0xLmhmLmNvL3JlcG9zL2QyLzUxL2QyNTFkMTk1MjU1YzY0MzVhYzUwY2Y4MDBiMTg2NDk4ZmQ5NDUwY2EwMjNmNTA1NmUxOTYyMDkyMTY4NDE1YmIvMmUzNjI3ODA5MGZiNWRmNjc2NzFmYWUzY2IxYTg4MWRlMDhlOTg0YzE0MzFjMzA1MDA1ODYyNWY3ZDU5NjFlZT9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSomcmVzcG9uc2UtY29udGVudC10eXBlPSoifV19&Signature=S12XGchLpz%7EFdkUdUcwAEQMEpEjrv0SS4tjEZms2rFUnKDsqxqIYnYDNjt6Wpw9uEtC4VpPpL9pSr8f7-iZDbNHz1CYlq4NvM0LRm5Tyq2MH5ybjx9OvnQaASTKKX%7Ey9uXMguDpJc5h%7EeHpLruNA8SBBqAo9Zbvd8-ZEwj7GsyvPUpVTC39jP%7ExywNhPx6eEfSW7vtMGk%7EUUouposJsP2xQQfG5Bpg4an1oyEfzhZAnK0esmrFoOamQR5-G3T5r9QQTzV2kHWkxNH1g-BGohNof4KhONr8kQ1e4flCh72rFZZKXwIKIj7cX2LbVLEEdAHj4IO8YkpdL%7Ecg%7EZYjnVOw__&Key-Pair-Id=K24J24Z295AEI9"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "image"
            },
            {
              "name": "sec-fetch-mode",
              "value": "no-cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [
            {
              "name": "response-content-disposition",
              "value": "inline%3B+filename*%3DUTF-8%27%27cohere-logo.png%3B+filename%3D%22cohere-logo.png%22%3B"
            },
            {
              "name": "response-content-type",
              "value": "image%2Fpng"
            },
            {
              "name": "Expires",
              "value": "1733616960"
            },
            {
              "name": "Policy",
              "value": "eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTczMzYxNjk2MH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy11cy0xLmhmLmNvL3JlcG9zL2QyLzUxL2QyNTFkMTk1MjU1YzY0MzVhYzUwY2Y4MDBiMTg2NDk4ZmQ5NDUwY2EwMjNmNTA1NmUxOTYyMDkyMTY4NDE1YmIvMmUzNjI3ODA5MGZiNWRmNjc2NzFmYWUzY2IxYTg4MWRlMDhlOTg0YzE0MzFjMzA1MDA1ODYyNWY3ZDU5NjFlZT9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSomcmVzcG9uc2UtY29udGVudC10eXBlPSoifV19"
            },
            {
              "name": "Signature",
              "value": "S12XGchLpz%7EFdkUdUcwAEQMEpEjrv0SS4tjEZms2rFUnKDsqxqIYnYDNjt6Wpw9uEtC4VpPpL9pSr8f7-iZDbNHz1CYlq4NvM0LRm5Tyq2MH5ybjx9OvnQaASTKKX%7Ey9uXMguDpJc5h%7EeHpLruNA8SBBqAo9Zbvd8-ZEwj7GsyvPUpVTC39jP%7ExywNhPx6eEfSW7vtMGk%7EUUouposJsP2xQQfG5Bpg4an1oyEfzhZAnK0esmrFoOamQR5-G3T5r9QQTzV2kHWkxNH1g-BGohNof4KhONr8kQ1e4flCh72rFZZKXwIKIj7cX2LbVLEEdAHj4IO8YkpdL%7Ecg%7EZYjnVOw__"
            },
            {
              "name": "Key-Pair-Id",
              "value": "K24J24Z295AEI9"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "age",
              "value": "857"
            },
            {
              "name": "content-disposition",
              "value": "inline; filename*=UTF-8''cohere-logo.png; filename=\"cohere-logo.png\";"
            },
            {
              "name": "content-length",
              "value": "8660"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'none'; sandbox"
            },
            {
              "name": "content-type",
              "value": "image/png"
            },
            {
              "name": "date",
              "value": "Thu, 05 Dec 2024 00:01:48 GMT"
            },
            {
              "name": "etag",
              "value": "\"9ba68803dd67124c687ab9cc2e993095\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 03 Apr 2024 13:59:48 GMT"
            },
            {
              "name": "server",
              "value": "AmazonS3"
            },
            {
              "name": "vary",
              "value": "Origin"
            },
            {
              "name": "via",
              "value": "1.1 80814d3806accb83cfb901833749383e.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "ST2B4QpeM0OIp0gDZeIAXhdfX-bub_tu1GnA5i7YX8wFZzpbWOFNUg=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT57-P4"
            },
            {
              "name": "x-amz-server-side-encryption",
              "value": "AES256"
            },
            {
              "name": "x-amz-storage-class",
              "value": "INTELLIGENT_TIERING"
            },
            {
              "name": "x-amz-version-id",
              "value": "null"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 8660,
            "mimeType": "image/png",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 9196,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "18.65.216.70",
        "startedDateTime": "2024-12-05T00:15:59.249Z",
        "time": 24.806000001262873,
        "timings": {
          "blocked": 1.808999994029291,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.18499999999999994,
          "wait": 20.820999995321035,
          "receive": 1.991000011912547,
          "_blocked_queueing": 1.013999994029291,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "other"
        },
        "_priority": "Medium",
        "_resourceType": "manifest",
        "cache": {},
        "connection": "4918",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/huggingchat/manifest.json",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/chat/huggingchat/manifest.json"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "if-modified-since",
              "value": "Tue, 03 Dec 2024 16:37:24 GMT"
            },
            {
              "name": "if-none-match",
              "value": "W/\"216-1733243844000\""
            },
            {
              "name": "priority",
              "value": "u=2"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/chat/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "manifest"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 304,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "age",
              "value": "44831"
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 11:48:49 GMT"
            },
            {
              "name": "etag",
              "value": "W/\"216-1733243844000\""
            },
            {
              "name": "last-modified",
              "value": "Tue, 03 Dec 2024 16:37:24 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "via",
              "value": "1.1 f8fa8a86fddb455ef2c0b061077f6a6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "J6Eec5WLh99VKCCGHqudE711whszGQ7kGKa0ZOGSeMF8AZTKmJw_Kg=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1064,
            "mimeType": "application/json",
            "text": "{\n\t\"background_color\": \"#ffffff\",\n\t\"name\": \"HuggingChat\",\n\t\"short_name\": \"HuggingChat\",\n\t\"display\": \"standalone\",\n\t\"start_url\": \"/chat\",\n\t\"icons\": [\n\t\t{\n\t\t\t\"src\": \"/chat/huggingchat/icon-36x36.png\",\n\t\t\t\"sizes\": \"36x36\",\n\t\t\t\"type\": \"image/png\"\n\t\t},\n\t\t{\n\t\t\t\"src\": \"/chat/huggingchat/icon-48x48.png\",\n\t\t\t\"sizes\": \"48x48\",\n\t\t\t\"type\": \"image/png\"\n\t\t},\n\t\t{\n\t\t\t\"src\": \"/chat/huggingchat/icon-72x72.png\",\n\t\t\t\"sizes\": \"72x72\",\n\t\t\t\"type\": \"image/png\"\n\t\t},\n\t\t{\n\t\t\t\"src\": \"/chat/huggingchat/icon-96x96.png\",\n\t\t\t\"sizes\": \"96x96\",\n\t\t\t\"type\": \"image/png\"\n\t\t},\n\t\t{\n\t\t\t\"src\": \"/chat/huggingchat/icon-128x128.png\",\n\t\t\t\"sizes\": \"128x128\",\n\t\t\t\"type\": \"image/png\"\n\t\t},\n\t\t{\n\t\t\t\"src\": \"/chat/huggingchat/icon-144x144.png\",\n\t\t\t\"sizes\": \"144x144\",\n\t\t\t\"type\": \"image/png\"\n\t\t},\n\t\t{\n\t\t\t\"src\": \"/chat/huggingchat/icon-192x192.png\",\n\t\t\t\"sizes\": \"192x192\",\n\t\t\t\"type\": \"image/png\"\n\t\t},\n\t\t{\n\t\t\t\"src\": \"/chat/huggingchat/icon-256x256.png\",\n\t\t\t\"sizes\": \"256x256\",\n\t\t\t\"type\": \"image/png\"\n\t\t},\n\t\t{\n\t\t\t\"src\": \"/chat/huggingchat/icon-512x512.png\",\n\t\t\t\"sizes\": \"512x512\",\n\t\t\t\"type\": \"image/png\"\n\t\t}\n\t]\n}\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 273,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:59.279Z",
        "time": 25.080999999772757,
        "timings": {
          "blocked": 3.451999997078441,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.21600000000000008,
          "wait": 19.215000000740403,
          "receive": 2.1980000019539148,
          "_blocked_queueing": 2.462999997078441,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "other",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/huggingchat/icon-144x144.png",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/chat/huggingchat/icon-144x144.png"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "if-modified-since",
              "value": "Wed, 04 Dec 2024 15:39:56 GMT"
            },
            {
              "name": "if-none-match",
              "value": "W/\"4450-1733326796000\""
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/chat/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "image"
            },
            {
              "name": "sec-fetch-mode",
              "value": "no-cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 304,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "age",
              "value": "20801"
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 18:29:19 GMT"
            },
            {
              "name": "etag",
              "value": "W/\"4450-1733326796000\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:56 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "Sh7BI467-GQDj52Q2sUyOIliDTrUZIIxP67c-inC666IJbh92l90fw=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 4450,
            "mimeType": "image/png",
            "text": "iVBORw0KGgoAAAANSUhEUgAAAJAAAACQCAYAAADnRuK4AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH6AcFDSsCI5sQewAAEFFJREFUeNrtnXtwXNV5wH/n3H1I1su2bMsPbGGD8AvbYIgNBkNpAy4QMkBbICEtZRpaKJOSF9PJNLQMnWnyR3llMmmbZpo0MwkJpSEFDK2BgAOYyobiB8YGP/D7KduyrMeudu/5+se5K61smYeu995d6fxmsIxG3nt370/feX3nO6pxYovgcAyNVh33HTgqGyeQIxROIEconECOUDiBHKFwAjlC4QRyhMIJ5AiFE8gRCieQIxROIEconECOUDiBHKFwAjlC4QRyhMIJ5AiFE8gRCieQIxROIEconECOUDiBHKFwAjlC4QRyhMIJ5AiFE8gRCieQIxROIEconECOUDiBHKFwAjlC4QRyhCIR9w1EhcRYBUmpuN996Ri2AomAAGLsVwCtwdNCKgkJD0rxXEUg50NvDoxRGAMo0KpfpOEk1LASSASM2K8JTxhTB1PGC9MnC80ThSnjYcJYob4GqlKCLkEDbgx0ZxTHTsD+NsWuA4ptexU79isOHoWejLVH6+EhUsULVIg0xkA6KTRPhItmGy4537CgRZjaZIVJJMU+MEV/SColwXXEKHoycPgYvL9L0/qu4o31mk0fKo53qb7IVKkyqUqtkSjSL8/40cKS+YbrLzNcOs8wsdEKA4Dpe6sx3CSgpP/yyt5zxwnF2g8Uy9/wWNGq2X1QYWRgM1chtFakQIVmasp44fNLDTdf5TPvXCGdLnR8IBZhPjECGvy8Yvtexa9Xap58yWPbnv7mrUKoLIFEbFPV2CDcdJXhjut8Zs8QPE9spBFV3t4MeDPY6KTsX7ft0vxkuccvX9S0tatK6SNVjkDG2I7xFRcKf3VrnkvnC8lkBYpzMkUi5X3FqnWKR59I8NpahRHbRypjyl+gQtSZMFa4+2afP/2cz5iGYSDOKW8UK5KGw0cVP3jK49+e8ejoVnjl26S1eqNqGx+M+y5OR2FYfuEswz9+Jc8tVxtGVQmYwtAl7js8g6jgD6OoGSVctkCYMkFYv0XT3lm2kWhv2QokYh25bonPI/f5LJxj7LrLcIo6g6Hse/S0MPdcYe50Ye0HisPtyg7kyuu97y3L4CgCWglfXObz2NfznDPNgB+Mg8vrAywNgURK4MqLDd+/P8/8cw2mDDsbZSeQCGgt/Mn1hof+Is+40WLlGQniFBNIhIGL5hge+Wqe2c0G34/7xgZSVgLZZku4fZnhgS/nGV1X6O/EfWcxUdQvumiO4R/uzXNWk+CbsC985igbgQozyzcsDeSpHeHyFCOAgd+5yPA3d+apHyVl05yVjUDGwOK5hgfvytPY4OQZQKE5E/iD3zXceYOPVhJrikqBshDIGDhrgvC3d+VpnuzkGZRAomRCuOcPfZbME5sqEjOxCyQCqaRw3215Ljnf2AlCJ8/gKMAomhqFr92ep3F0/E1Z7AIZA9cuMdx2jbHeiLPnI1GAgaUXCLf8nm9TRmKUKFaBjIEpE4Sv3OJTWyPDf5LwTCGKhCfc8TnD9Mnx9oViE6gw03z7Mp8LZ7qm61MRJKvNnGb4o8/aiaG4JIpNICPQMs3whWW+nZ53TdenI4jWN15pmNoUXxSKRSAJsu9u/azh7MlBElhJMtyDP7QEKRNFf0fOTGpr4RpqkOucqWsMRhCFzpsqXL0ovmWOWHKijcCMKcLnrwjGoSXp+9jUiPYTHqvfq2LTzhS9OcW0pjyL5/TQPCmHUiH7XUEKRt5XvLcjxdubqzjU7tFQY7iwJcuClgxV6RJOS4hCJ4TrLvN58iVNV0ZFvtgaT1K9wLJLDDNKFX0E0LB5Z4rHnxzD25uryObsRTwNZ03I8eUbjnPdki4Seog3EMjTldH8+/P1PPVKHcdOeJigb1dbbbhmURd333ScCWPypZEoGJFdcJ4ws1l4a5PC887wNT6GyJswEWioE65b4qM8OfN9HwG0sO9wgu/8tJFVG6rJ+4qEZ/eCAew6mOThJ8ay8p3qoT9UJfhG8bP/qefHyxs4dsJDKXsNT0N3RvOrlXX84D9Hk8nq/uT6EjC2XliywPR9vlESuUC+gfNnCPPPldKMvJSNastX1bJ+axrvpNxipezmwvZOzc9X1NPR6TGkjoqCbXuSPPVqHXlfobWcch2tYMXqUazeVFW6T1oUaLh0nlBdFX1HKFKBCkP3yy8w1NeWqucMPVnNmk1Vfc3Jqdg00a17Uuw8kBjabShYvz1NW7sXXOPUF1EKujKatzen+zvbZ5rCkL7ZMGHMCIhAtdVilyxKuMEvm1N0dOuP7VBmc4oT3XrIHh/r8D7R6Od4p4cxJezdCkwYA82Tol/aiFQgI3bmeWZzCYfu2B2qDTVmwG+jiG0+fd9+FbE/V1djhizy2HofHWzL8X37n13gHPiCY+p8tC7tk62pEs6ZEn0TFukoTIJ5i8YGSrq9uDptuHhWhtXvVfVJpJSwaFaWOdOzbPwwzaYdKWY199LclB/avQjMPyfLpHF5MlnFgpYsUyfkeX19Ndv3JtFaEFHUVBkWzsz2p2SU5INV4AnNk2R4D+MVMOtsIZUsweirgCjQwvVLOnltXTXrtqYBuHhWlofuamNiY57Obs3WPSkaan3qa3yGOoyfPjnHd+8+TDIhTJ+UJ11luGphFd/653Hsa0ugFVy9qJuLZ2eKtliX6INVMKlR8AJxoxIpsl0ZIuB5wpeuNZzfUkKBgt/0ulrDrOYc+9sSVKeFr3/hGC3TekEUqaQwcXyeMXVm6BOJYkdeTY0+40b7JDzbLDc15hlVJWzdk+Lqz3Rz783HaKgNcZ1P8b73HtI8+7rG9yMTaG+kEag6BZPHlXB6v0DQQZ99dpbv3NNGd0bRNNYfWGjBFP3sUK9R2JdcIMjpvuHyTj4zO8O40T7VaRNZglxNlZDwIFv6S/URmUACVKWx/Z9IsJI01Pg01AY3EEEUQBRJT5jalAtymaNLUUkmoi/MEF0EEqipssP4SOrzwKlRIooHGcc1AxIeke9gjcxXG4FseTnH8CG6gCf960SO4UOkj9PzgjY6ltyVID/nTOYCFb90KV//E5L3Gd4z0fFh50aOHPc4dDSBb9SZSfgqSlgT4NgJjwNtweuXcPX9dPTmiXyrT8UX2fyktHdqHvjXcew7kmDxnAy/v7iLuTOypFJDqDVUVMvHCOzal2TF6hpefaea3rzioT87wpwZ2cijUFePIp+P9pojQyAFRzs8Nu9McaTDY8f+JCtaR3H5gh5uuqKTuTOytr5i4bd3MJmKC2Z64PuK7XuSvPBmDS+uqWHP4URfqu6ugwnmnBOxQAqOdtgoFCUjQyAgmbAl8QqVUNu7PJ59vZbX1lWzaE6GZYu6WdCSYWy9QXvBkz9pKC4CnV2aTTvS/ObtUaxcW82BI/YjLJTqTXhCOhVx6Ala4/1HFL6JtqLZyBBIbIrp6FrDwaNBOV0AT+jo8ljRWsNv146iuSnH/HOzzJ2R5azxeeprDDrI6dl/xEawdVvTbN2T4kS37iv4pIoEq04L4xr8iKOPIL5i536FGCLt2Y4MgYD6UYapE/Js3pkq+q5dM/I86M0p3t+dYvOuFImVtVSl7KKvUpDPK3qyily+vwzvYDWdRaCxwbfLJhHT1YMtEzxcJxLjJpEUFrRk8PTgWXs21dXOVYkoerKa450e7Sc8Onu0bRo8K9vpKssbgZnTehlbH3UEss3Xjv3R11IcIQLZT3XR7AyNDf5HPtu+GuVFRxAUjkj4yH8XJKhdNq8nqJIf4ZNUsGmHoq09+hqKI0QgQGDG5ByLZmcGzRosfMcAVQKJoikiwf5/QsA/zb80wesvnpuJePhuR49vblBkeqPf3TuCBFIkk8JNV56gsd7HFOUjCVaMOoGbBB4W+GMgSPEhLXCPwN8LXCFCEhmQHybBCvyNV3QyfswQMxyHioLD7Yo3N/R36qNkxHSiCzlCF56X5cYrO/nJ8gbbFwqaplkC9wpcAiQFZgPvKlgFXA/cBlQLXA48B/wIaAsmtI2BJfMyXHtpVzRpIwWCDZRvbdJs2aViOWNj5EQgsPWXPeH2azq4bH4PJihkPkvgQYGlYuVBwWiBPxe4VeAusfKgoEYUtwh8S6BRhLzA2ZNy/OXN7TTU+tGWqFFCLqd49rV4tjXDSIpA0Ffhq7HB5/4vHqU338i2jVV8DZhV2LRW9LMLBRZgm7I+KRQoFFcJ7DOKpyfl+MaXjjJnerakO01OQQAPNn6geOUtHVsl+5ElEPRJNG1ijm/f2caWX41mYWsN9Nodnna5wj4NpWzHeYAUhUV3BTfOyrD0lmNMa8lG23Rh79PPK/7jZc2Bo/EdhTDyBII+iaaOzzP1jqMwJwOv1MGuFGRU/88U6DuDDNvGNeVhSSe1SzupHeNHL08QfTZsUfx6pRfrEQgjUyDok4i0gaWdcEEPbE3D5jTsScExz0YlAZJAvQ+TcjAzC+dloDHf/xqFozQju3chm1X86L889rXFexDLyBUIivKXBWp9WNgNF3RDr4asKhJI7Fg+Lf1j+4gT5vsIos+LrZpnfqtjPyZzZAvUR/AEfGwfKGUg1f/tAfM6xed2xCGPFnbuUzz6hMeJrujrAZ2ME6iYk6tsyOl+JgaCfKTujOLRnyd4531dFmerlsEtOD6WQB4jip8u9/jlS7psjgp3ApU7hUxIBc+9pnn4Zx7Z3ngmDQfDCVTOFMnz8mrNA/+SoO14PEsWp6OMbsUxgEAeUfDSas03H0+y62D5HcDrOtHlSCCPL4pnXtX83Q8T7D5UfvKAE6i8KCybaKGrR/HjZzwe+4XHkY7ylAecQOVD0V6zD/fYzvJTv9H05spXHnACxU9BHA+6exQvrNI89oTHxu12qF5OHebBcALFRZE4uZxi7XuKHz7t8cKbNrcn7iWKT4oTKHIk6OdAJqNYt0XxixUez6/SHDpqh+jl3GSdjBOo5ATrIYEUfl6xvw1Wrdc897pm1XrNkeP9+9MqjfIWqKhjWXGH0QUr9r05RUcn7D6o2LBN0fquZs0mu4s0m7MRR+vKaK4Go3wFClaeDx9TvPO+Jh/9Zs9PhcJmhfTm7S7RI8cVB44odh+CnfsV+w4r2jshH1RQ1ar/8JdKpjwFCuTZ36b49j8leH6VLosz0j8JxoBvFCL9xZ4UoIITFYaDNMWUn0CBPLsPKP76+wn++3+9imu9IMinrqDO8FApL4EE8IQdexX3fy/Jy2vKJ23BMTjlI1CRPN98PMnLb8Wfrun4eMpHIE/YtttGnlffdvJUCuUhkBY2bdfc/70Eb6x38lQS8QukhQ1bNN94PMGajbqi50RGIvEKFMjz1UcS/N9mJ08lEulAc8CmBy2sfd/JU+lEJpBS0NFlp/XxYM1GzX0PO3kqHdU4sSWSOV4Re9z2NYsNc88Rnn7FY8ueyklbcAxKa2QCAf3T+0F1i3JPlnJ8LK3RnpmqwHPRZljhYoAjFE4gRyicQI5QOIEcoXACOULhBHKEwgnkCIUTyBEKJ5AjFE4gRyicQI5QOIEcoXACOULhBHKEwgnkCIUTyBEKJ5AjFE4gRyicQI5QOIEcoXACOULhBHKEwgnkCIUTyBEKJ5AjFE4gRyicQI5QOIEcofh/TV4stPYUlp8AAAAldEVYdGRhdGU6Y3JlYXRlADIwMjQtMDctMDVUMTM6NDA6MDUrMDA6MDCifnIyAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDI0LTA3LTA1VDEzOjQwOjA1KzAwOjAw0yPKjgAAAABJRU5ErkJggg==",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 273,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:15:59.308Z",
        "time": 23.59400001296308,
        "timings": {
          "blocked": 5.245999999473803,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.3210000000000002,
          "wait": 15.845000002400019,
          "receive": 2.182000011089258,
          "_blocked_queueing": 2.6849999994738027,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "script",
          "lineNumber": 0,
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 616
              },
              {
                "functionName": "h",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 310
              },
              {
                "functionName": "",
                "scriptId": "607",
                "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
                "lineNumber": 1,
                "columnNumber": 8116
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16170
              },
              {
                "functionName": "xe",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16140
              },
              {
                "functionName": "an",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 12166
              },
              {
                "functionName": "a",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21809
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21294
              }
            ],
            "parent": {
              "description": "setTimeout",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "604",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                  "lineNumber": 0,
                  "columnNumber": 21278
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/nodes/2.BoPl5Ykx.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/chat/_app/immutable/nodes/2.BoPl5Ykx.js"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "priority",
              "value": "u=1"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "script"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "age",
              "value": "30709"
            },
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "content-length",
              "value": "1240"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:44:13 GMT"
            },
            {
              "name": "etag",
              "value": "W/\"1240-1733326797000\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "Giu3EzDhSrOIwi2O7dPwauEFLekIGQR7qEUEokko4YgY8AaFGFMpqw=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2617,
            "mimeType": "text/javascript",
            "text": "import{s as D,m as E,e as v,a as I,c as k,b as y,g as j,f as p,h as S,i as C,j as $,o as q,u as L,p as V,q as z,r as A,v as w,l as G,t as N,d as P}from\"../chunks/scheduler.CeakrPJD.js\";import{S as B,i as F,t as m,a as h,c as H,b as J,d as K,m as M,e as Q,g as R,f as x}from\"../chunks/index.Cljt5KuQ.js\";import{a as T,b as U,g as W}from\"../chunks/entry.CNbBV9gi.js\";import{c as X}from\"../chunks/clickOutside.D-5j4fJ8.js\";import{u as Y}from\"../chunks/settings.qWXPmYFi.js\";import{C as Z}from\"../chunks/checkmark.DA-eCoqi.js\";import{f as tt,a as et}from\"../chunks/index.Bq3K2eeF.js\";function O(c){let e,t,u,r;return t=new Z({props:{class:\"text-green-500\"}}),{c(){e=v(\"div\"),J(t.$$.fragment),u=N(`\n\t\t\t\tSaved`),this.h()},l(i){e=k(i,\"DIV\",{class:!0});var l=y(e);K(t.$$.fragment,l),u=P(l,`\n\t\t\t\tSaved`),l.forEach(p),this.h()},h(){S(e,\"class\",\"absolute bottom-4 right-4 m-2 flex items-center gap-1.5 rounded-full border border-gray-300 bg-gray-200 px-3 py-1 text-black\")},m(i,l){C(i,e,l),M(t,e,null),$(e,u),r=!0},i(i){r||(m(t.$$.fragment,i),r=!0)},o(i){h(t.$$.fragment,i),r=!1},d(i){i&&p(e),Q(t)}}}function st(c){let e,t,u,r,i,l,d,_,n;const b=c[4].default,o=E(b,c,c[3],null);let s=c[1].recentlySaved&&O();return{c(){e=v(\"div\"),t=v(\"dialog\"),o&&o.c(),u=I(),s&&s.c(),this.h()},l(a){e=k(a,\"DIV\",{class:!0});var f=y(e);t=k(f,\"DIALOG\",{class:!0});var g=y(t);o&&o.l(g),u=j(g),s&&s.l(g),g.forEach(p),f.forEach(p),this.h()},h(){t.open=!0,S(t,\"class\",\"h-[95dvh] w-[90dvw] overflow-hidden rounded-2xl bg-white shadow-2xl outline-none sm:h-[85dvh] xl:w-[1200px] 2xl:h-[75dvh]\"),S(e,\"class\",\"fixed inset-0 z-20 flex items-center justify-center bg-black/80 backdrop-blur-sm dark:bg-black/50\")},m(a,f){C(a,e,f),$(e,t),o&&o.m(t,null),$(t,u),s&&s.m(t,null),d=!0,_||(n=q(r=X.call(null,t,c[5])),_=!0)},p(a,[f]){o&&o.p&&(!d||f&8)&&L(o,b,a,a[3],d?z(b,a[3],f,null):V(a[3]),null),a[1].recentlySaved?s?f&2&&m(s,1):(s=O(),s.c(),m(s,1),s.m(t,null)):s&&(R(),h(s,1,1,()=>{s=null}),H()),r&&A(r.update)&&f&1&&r.update.call(null,a[5])},i(a){d||(m(o,a),m(s),a&&(i||w(()=>{i=x(t,tt,{y:100}),i.start()})),a&&(l||w(()=>{l=x(e,et,{}),l.start()})),d=!0)},o(a){h(o,a),h(s),d=!1},d(a){a&&p(e),o&&o.d(a),s&&s.d(),_=!1,n()}}}function at(c,e,t){let u,{$$slots:r={},$$scope:i}=e,l=U;T(({from:n})=>{n!=null&&n.url.pathname.includes(\"settings\")||t(0,l=(n==null?void 0:n.url.toString())||l)});const d=Y();G(c,d,n=>t(1,u=n));const _=()=>{var n;(n=window==null?void 0:window.getSelection())!=null&&n.toString()||W(l)};return c.$$set=n=>{\"$$scope\"in n&&t(3,i=n.$$scope)},[l,u,d,i,r,_]}class dt extends B{constructor(e){super(),F(this,e,at,st,D,{})}}export{dt as component};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 1594,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:16:01.729Z",
        "time": 30.599999998230487,
        "timings": {
          "blocked": 5.423000005798414,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.41800000000000015,
          "wait": 22.658000001488254,
          "receive": 2.1009999909438193,
          "_blocked_queueing": 1.8010000057984143,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "script",
          "lineNumber": 0,
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 616
              },
              {
                "functionName": "h",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 310
              },
              {
                "functionName": "",
                "scriptId": "607",
                "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
                "lineNumber": 1,
                "columnNumber": 8201
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16170
              },
              {
                "functionName": "xe",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16140
              },
              {
                "functionName": "an",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 12166
              },
              {
                "functionName": "a",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21809
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21294
              }
            ],
            "parent": {
              "description": "setTimeout",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "604",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                  "lineNumber": 0,
                  "columnNumber": 21278
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/nodes/3.Df9P9oqk.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/chat/_app/immutable/nodes/3.Df9P9oqk.js"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "priority",
              "value": "u=1"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "script"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "age",
              "value": "30709"
            },
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "content-length",
              "value": "4343"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:44:13 GMT"
            },
            {
              "name": "etag",
              "value": "W/\"4343-1733326797000\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "0LKlLERKTm542avgas1GJfVwsjJIhtXkoT-qX9uPBSrXjy5Fbo1XCg=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 17562,
            "mimeType": "text/javascript",
            "text": "import{s as fe,J as K,K as _e,L as ve,M as pe,b as j,N as be,f as _,O as Q,i as A,n as W,P as X,m as qe,e as w,a as D,t as Y,c as k,B as J,g as z,d as Z,h as m,j as x,E as Pe,u as Te,p as Oe,q as Ue,F as me,l as we,z as Ge,k as re,w as Fe,I as ne}from\"../chunks/scheduler.CeakrPJD.js\";import{S as ue,i as ce,b as te,d as le,m as se,t as N,c as ie,a as q,e as ae,g as oe}from\"../chunks/index.Cljt5KuQ.js\";import{e as R}from\"../chunks/each.BIi1aKAa.js\";import{b as L,a as Je,g as Ke}from\"../chunks/entry.CNbBV9gi.js\";import{p as Re}from\"../chunks/stores.BBDoy_q4.js\";import{g as xe,u as Qe}from\"../chunks/settings.qWXPmYFi.js\";import{C as We}from\"../chunks/close.CsMZUCB4.js\";import{A as Xe}from\"../chunks/add.ClnZnXDL.js\";function Ye(s){let e,l,t='<path fill=\"currentColor\" d=\"M10 6v2h12.59L6 24.59L7.41 26L24 9.41V22h2V6z\"/>',a=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},s[0]],c={};for(let n=0;n<a.length;n+=1)c=K(c,a[n]);return{c(){e=_e(\"svg\"),l=new ve(!0),this.h()},l(n){e=pe(n,\"svg\",{viewBox:!0,width:!0,height:!0});var f=j(e);l=be(f,!0),f.forEach(_),this.h()},h(){l.a=null,Q(e,c)},m(n,f){A(n,e,f),l.m(t,e)},p(n,[f]){Q(e,c=xe(a,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},f&1&&n[0]]))},i:W,o:W,d(n){n&&_(e)}}}function Ze(s,e,l){return s.$$set=t=>{l(0,e=K(K({},e),X(t)))},e=X(e),[e]}class et extends ue{constructor(e){super(),ce(this,e,Ze,Ye,fe,{})}}function tt(s){let e,l,t='<path fill=\"currentColor\" d=\"M6 24h14v2H6zm0-6h20v2H6zm0-6h20v2H6zm0-6h20v2H6z\"/>',a=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},s[0]],c={};for(let n=0;n<a.length;n+=1)c=K(c,a[n]);return{c(){e=_e(\"svg\"),l=new ve(!0),this.h()},l(n){e=pe(n,\"svg\",{viewBox:!0,width:!0,height:!0});var f=j(e);l=be(f,!0),f.forEach(_),this.h()},h(){l.a=null,Q(e,c)},m(n,f){A(n,e,f),l.m(t,e)},p(n,[f]){Q(e,c=xe(a,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},f&1&&n[0]]))},i:W,o:W,d(n){n&&_(e)}}}function lt(s,e,l){return s.$$set=t=>{l(0,e=K(K({},e),X(t)))},e=X(e),[e]}class st extends ue{constructor(e){super(),ce(this,e,lt,tt,fe,{})}}function at(s){let e,l,t='<path fill=\"currentColor\" d=\"M16 4a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7m10 28h-2v-5a5 5 0 0 0-5-5h-6a5 5 0 0 0-5 5v5H6v-5a7 7 0 0 1 7-7h6a7 7 0 0 1 7 7z\"/>',a=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},s[0]],c={};for(let n=0;n<a.length;n+=1)c=K(c,a[n]);return{c(){e=_e(\"svg\"),l=new ve(!0),this.h()},l(n){e=pe(n,\"svg\",{viewBox:!0,width:!0,height:!0});var f=j(e);l=be(f,!0),f.forEach(_),this.h()},h(){l.a=null,Q(e,c)},m(n,f){A(n,e,f),l.m(t,e)},p(n,[f]){Q(e,c=xe(a,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},f&1&&n[0]]))},i:W,o:W,d(n){n&&_(e)}}}function rt(s,e,l){return s.$$set=t=>{l(0,e=K(K({},e),X(t)))},e=X(e),[e]}class nt extends ue{constructor(e){super(),ce(this,e,rt,at,fe,{})}}function ke(s,e,l){const t=s.slice();return t[10]=e[l],t}function Ce(s,e,l){const t=s.slice();return t[10]=e[l],t}function Ee(s,e,l){const t=s.slice();return t[15]=e[l],t}function Se(s){let e,l;return e=new st({props:{class:\"size-6 rounded-md border border-gray-300 p-1 text-gray-800\"}}),{c(){te(e.$$.fragment)},l(t){le(e.$$.fragment,t)},m(t,a){se(e,t,a),l=!0},i(t){l||(N(e.$$.fragment,t),l=!0)},o(t){q(e.$$.fragment,t),l=!1},d(t){ae(e,t)}}}function Ie(s){let e,l=\"Active\";return{c(){e=w(\"div\"),e.textContent=l,this.h()},l(t){e=k(t,\"DIV\",{class:!0,\"data-svelte-h\":!0}),J(e)!==\"svelte-18y95j0\"&&(e.textContent=l),this.h()},h(){m(e,\"class\",\"rounded-lg bg-black px-2 py-1.5 text-xs font-semibold leading-none text-white\")},m(t,a){A(t,e,a)},d(t){t&&_(e)}}}function Ae(s){var r;let e,l,t=s[15].displayName+\"\",a,c,n,f,v,h,E,p=((r=s[4].customPrompts)==null?void 0:r[s[15].id])&&Se(),g=s[15].id===s[4].activeModel&&Ie();return{c(){e=w(\"a\"),l=w(\"div\"),a=Y(t),c=D(),p&&p.c(),n=D(),g&&g.c(),f=D(),this.h()},l(o){e=k(o,\"A\",{href:!0,class:!0});var u=j(e);l=k(u,\"DIV\",{class:!0});var M=j(l);a=Z(M,t),M.forEach(_),c=z(u),p&&p.l(u),n=z(u),g&&g.l(u),f=z(u),u.forEach(_),this.h()},h(){m(l,\"class\",\"mr-auto truncate\"),m(e,\"href\",v=L+\"/settings/\"+s[15].id),m(e,\"class\",h=\"group flex h-10 flex-none items-center gap-2 pl-3 pr-2 text-sm text-gray-500 hover:bg-gray-100 md:rounded-xl \"+(s[15].id===s[3].params.model?\"!bg-gray-100 !text-gray-800\":\"\"))},m(o,u){A(o,e,u),x(e,l),x(l,a),x(e,c),p&&p.m(e,null),x(e,n),g&&g.m(e,null),x(e,f),E=!0},p(o,u){var M;(!E||u&1)&&t!==(t=o[15].displayName+\"\")&&re(a,t),(M=o[4].customPrompts)!=null&&M[o[15].id]?p?u&17&&N(p,1):(p=Se(),p.c(),N(p,1),p.m(e,n)):p&&(oe(),q(p,1,1,()=>{p=null}),ie()),o[15].id===o[4].activeModel?g||(g=Ie(),g.c(),g.m(e,f)):g&&(g.d(1),g=null),(!E||u&1&&v!==(v=L+\"/settings/\"+o[15].id))&&m(e,\"href\",v),(!E||u&9&&h!==(h=\"group flex h-10 flex-none items-center gap-2 pl-3 pr-2 text-sm text-gray-500 hover:bg-gray-100 md:rounded-xl \"+(o[15].id===o[3].params.model?\"!bg-gray-100 !text-gray-800\":\"\")))&&m(e,\"class\",h)},i(o){E||(N(p),E=!0)},o(o){q(p),E=!1},d(o){o&&_(e),p&&p.d(),g&&g.d()}}}function $e(s){let e,l=\"Assistants\",t,a,c=\"My Assistants\",n,f,v,h,E=\"Other Assistants\",p,g,r,o,u,M,O=\"Browse Assistants\",U,G=R(s[0].assistants.filter(je)),B=[];for(let i=0;i<G.length;i+=1)B[i]=Me(Ce(s,G,i));let $=(!s[0].loginEnabled||s[0].loginEnabled&&!!s[0].user)&&Be(s),P=R(s[0].assistants.filter(Ne)),S=[];for(let i=0;i<P.length;i+=1)S[i]=ze(ke(s,P,i));return o=new et({props:{class:\"mr-1.5 shrink-0 text-xs \"}}),{c(){e=w(\"h3\"),e.textContent=l,t=D(),a=w(\"h4\"),a.textContent=c,n=D();for(let i=0;i<B.length;i+=1)B[i].c();f=D(),$&&$.c(),v=D(),h=w(\"h4\"),h.textContent=E,p=D();for(let i=0;i<S.length;i+=1)S[i].c();g=D(),r=w(\"a\"),te(o.$$.fragment),u=D(),M=w(\"div\"),M.textContent=O,this.h()},l(i){e=k(i,\"H3\",{class:!0,\"data-svelte-h\":!0}),J(e)!==\"svelte-1lagsur\"&&(e.textContent=l),t=z(i),a=k(i,\"H4\",{class:!0,\"data-svelte-h\":!0}),J(a)!==\"svelte-18wv1vn\"&&(a.textContent=c),n=z(i);for(let d=0;d<B.length;d+=1)B[d].l(i);f=z(i),$&&$.l(i),v=z(i),h=k(i,\"H4\",{class:!0,\"data-svelte-h\":!0}),J(h)!==\"svelte-haz19z\"&&(h.textContent=E),p=z(i);for(let d=0;d<S.length;d+=1)S[d].l(i);g=z(i),r=k(i,\"A\",{href:!0,class:!0});var C=j(r);le(o.$$.fragment,C),u=z(C),M=k(C,\"DIV\",{class:!0,\"data-svelte-h\":!0}),J(M)!==\"svelte-3higaq\"&&(M.textContent=O),C.forEach(_),this.h()},h(){m(e,\"class\",\"pl-3 pt-5 text-[.8rem] text-gray-800 sm:pl-1\"),m(a,\"class\",\"py-2 pl-5 text-[.7rem] text-gray-600 sm:pl-1\"),m(h,\"class\",\"pl-3 pt-3 text-[.7rem] text-gray-600 sm:pl-1\"),m(M,\"class\",\"truncate\"),m(r,\"href\",L+\"/assistants\"),m(r,\"class\",\"group flex h-10 flex-none items-center gap-2 pl-3 pr-2 text-sm text-gray-500 hover:bg-gray-100 md:rounded-xl\")},m(i,C){A(i,e,C),s[9](e),A(i,t,C),A(i,a,C),A(i,n,C);for(let d=0;d<B.length;d+=1)B[d]&&B[d].m(i,C);A(i,f,C),$&&$.m(i,C),A(i,v,C),A(i,h,C),A(i,p,C);for(let d=0;d<S.length;d+=1)S[d]&&S[d].m(i,C);A(i,g,C),A(i,r,C),se(o,r,null),x(r,u),x(r,M),U=!0},p(i,C){if(C&25){G=R(i[0].assistants.filter(je));let d;for(d=0;d<G.length;d+=1){const y=Ce(i,G,d);B[d]?B[d].p(y,C):(B[d]=Me(y),B[d].c(),B[d].m(f.parentNode,f))}for(;d<B.length;d+=1)B[d].d(1);B.length=G.length}if(!i[0].loginEnabled||i[0].loginEnabled&&i[0].user?$?($.p(i,C),C&1&&N($,1)):($=Be(i),$.c(),N($,1),$.m(v.parentNode,v)):$&&(oe(),q($,1,1,()=>{$=null}),ie()),C&25){P=R(i[0].assistants.filter(Ne));let d;for(d=0;d<P.length;d+=1){const y=ke(i,P,d);S[d]?S[d].p(y,C):(S[d]=ze(y),S[d].c(),S[d].m(g.parentNode,g))}for(;d<S.length;d+=1)S[d].d(1);S.length=P.length}},i(i){U||(N($),N(o.$$.fragment,i),U=!0)},o(i){q($),q(o.$$.fragment,i),U=!1},d(i){i&&(_(e),_(t),_(a),_(n),_(f),_(v),_(h),_(p),_(g),_(r)),s[9](null),me(B,i),$&&$.d(i),me(S,i),ae(o)}}}function it(s){let e,l=s[10].name[0]+\"\",t;return{c(){e=w(\"div\"),t=Y(l),this.h()},l(a){e=k(a,\"DIV\",{class:!0});var c=j(e);t=Z(c,l),c.forEach(_),this.h()},h(){m(e,\"class\",\"flex size-6 items-center justify-center rounded-full bg-gray-300 font-bold uppercase text-gray-500\")},m(a,c){A(a,e,c),x(e,t)},p(a,c){c&1&&l!==(l=a[10].name[0]+\"\")&&re(t,l)},d(a){a&&_(e)}}}function ot(s){let e,l;return{c(){e=w(\"img\"),this.h()},l(t){e=k(t,\"IMG\",{src:!0,alt:!0,class:!0}),this.h()},h(){ne(e.src,l=L+\"/settings/assistants/\"+s[10]._id.toString()+\"/avatar.jpg?hash=\"+s[10].avatar)||m(e,\"src\",l),m(e,\"alt\",\"Avatar\"),m(e,\"class\",\"h-6 w-6 rounded-full\")},m(t,a){A(t,e,a)},p(t,a){a&1&&!ne(e.src,l=L+\"/settings/assistants/\"+t[10]._id.toString()+\"/avatar.jpg?hash=\"+t[10].avatar)&&m(e,\"src\",l)},d(t){t&&_(e)}}}function Ve(s){let e,l=\"Active\";return{c(){e=w(\"div\"),e.textContent=l,this.h()},l(t){e=k(t,\"DIV\",{class:!0,\"data-svelte-h\":!0}),J(e)!==\"svelte-w9dxal\"&&(e.textContent=l),this.h()},h(){m(e,\"class\",\"ml-auto rounded-lg bg-black px-2 py-1.5 text-xs font-semibold leading-none text-white\")},m(t,a){A(t,e,a)},d(t){t&&_(e)}}}function Me(s){let e,l,t,a=s[10].name+\"\",c,n,f=s[10]._id.toString()===s[4].activeModel,v,h;function E(o,u){return o[10].avatar?ot:it}let p=E(s),g=p(s),r=f&&Ve();return{c(){e=w(\"a\"),g.c(),l=D(),t=w(\"div\"),c=Y(a),n=D(),r&&r.c(),this.h()},l(o){e=k(o,\"A\",{href:!0,class:!0});var u=j(e);g.l(u),l=z(u),t=k(u,\"DIV\",{class:!0});var M=j(t);c=Z(M,a),M.forEach(_),n=z(u),r&&r.l(u),u.forEach(_),this.h()},h(){m(t,\"class\",\"truncate text-gray-900\"),m(e,\"href\",v=L+\"/settings/assistants/\"+s[10]._id.toString()),m(e,\"class\",h=\"group flex h-10 flex-none items-center gap-2 pl-2 pr-2 text-sm text-gray-500 hover:bg-gray-100 md:rounded-xl \"+(s[10]._id.toString()===s[3].params.assistantId?\"!bg-gray-100 !text-gray-800\":\"\"))},m(o,u){A(o,e,u),g.m(e,null),x(e,l),x(e,t),x(t,c),x(e,n),r&&r.m(e,null)},p(o,u){p===(p=E(o))&&g?g.p(o,u):(g.d(1),g=p(o),g&&(g.c(),g.m(e,l))),u&1&&a!==(a=o[10].name+\"\")&&re(c,a),u&17&&(f=o[10]._id.toString()===o[4].activeModel),f?r||(r=Ve(),r.c(),r.m(e,null)):r&&(r.d(1),r=null),u&1&&v!==(v=L+\"/settings/assistants/\"+o[10]._id.toString())&&m(e,\"href\",v),u&9&&h!==(h=\"group flex h-10 flex-none items-center gap-2 pl-2 pr-2 text-sm text-gray-500 hover:bg-gray-100 md:rounded-xl \"+(o[10]._id.toString()===o[3].params.assistantId?\"!bg-gray-100 !text-gray-800\":\"\"))&&m(e,\"class\",h)},d(o){o&&_(e),g.d(),r&&r.d()}}}function Be(s){let e,l,t,a,c=\"Create new assistant\",n,f;return l=new Xe({}),{c(){e=w(\"a\"),te(l.$$.fragment),t=D(),a=w(\"div\"),a.textContent=c,this.h()},l(v){e=k(v,\"A\",{href:!0,class:!0});var h=j(e);le(l.$$.fragment,h),t=z(h),a=k(h,\"DIV\",{class:!0,\"data-svelte-h\":!0}),J(a)!==\"svelte-1d46d2z\"&&(a.textContent=c),h.forEach(_),this.h()},h(){m(a,\"class\",\"truncate\"),m(e,\"href\",L+\"/settings/assistants/new\"),m(e,\"class\",n=\"group flex h-10 flex-none items-center gap-2 pl-3 pr-2 text-sm text-gray-500 hover:bg-gray-100 md:rounded-xl \"+(s[3].url.pathname===`${L}/settings/assistants/new`?\"!bg-gray-100 !text-gray-800\":\"\"))},m(v,h){A(v,e,h),se(l,e,null),x(e,t),x(e,a),f=!0},p(v,h){(!f||h&8&&n!==(n=\"group flex h-10 flex-none items-center gap-2 pl-3 pr-2 text-sm text-gray-500 hover:bg-gray-100 md:rounded-xl \"+(v[3].url.pathname===`${L}/settings/assistants/new`?\"!bg-gray-100 !text-gray-800\":\"\")))&&m(e,\"class\",n)},i(v){f||(N(l.$$.fragment,v),f=!0)},o(v){q(l.$$.fragment,v),f=!1},d(v){v&&_(e),ae(l)}}}function ft(s){let e,l=s[10].name[0]+\"\",t;return{c(){e=w(\"div\"),t=Y(l),this.h()},l(a){e=k(a,\"DIV\",{class:!0});var c=j(e);t=Z(c,l),c.forEach(_),this.h()},h(){m(e,\"class\",\"flex size-6 items-center justify-center rounded-full bg-gray-300 font-bold uppercase text-gray-500\")},m(a,c){A(a,e,c),x(e,t)},p(a,c){c&1&&l!==(l=a[10].name[0]+\"\")&&re(t,l)},d(a){a&&_(e)}}}function ut(s){let e,l;return{c(){e=w(\"img\"),this.h()},l(t){e=k(t,\"IMG\",{src:!0,alt:!0,class:!0}),this.h()},h(){ne(e.src,l=L+\"/settings/assistants/\"+s[10]._id.toString()+\"/avatar.jpg?hash=\"+s[10].avatar)||m(e,\"src\",l),m(e,\"alt\",\"Avatar\"),m(e,\"class\",\"h-6 w-6 rounded-full\")},m(t,a){A(t,e,a)},p(t,a){a&1&&!ne(e.src,l=L+\"/settings/assistants/\"+t[10]._id.toString()+\"/avatar.jpg?hash=\"+t[10].avatar)&&m(e,\"src\",l)},d(t){t&&_(e)}}}function De(s){let e,l=\"Active\";return{c(){e=w(\"div\"),e.textContent=l,this.h()},l(t){e=k(t,\"DIV\",{class:!0,\"data-svelte-h\":!0}),J(e)!==\"svelte-w9dxal\"&&(e.textContent=l),this.h()},h(){m(e,\"class\",\"ml-auto rounded-lg bg-black px-2 py-1.5 text-xs font-semibold leading-none text-white\")},m(t,a){A(t,e,a)},d(t){t&&_(e)}}}function ze(s){let e,l,t,a=s[10].name+\"\",c,n,f=s[10]._id.toString()===s[4].activeModel,v,h;function E(o,u){return o[10].avatar?ut:ft}let p=E(s),g=p(s),r=f&&De();return{c(){e=w(\"a\"),g.c(),l=D(),t=w(\"div\"),c=Y(a),n=D(),r&&r.c(),this.h()},l(o){e=k(o,\"A\",{href:!0,class:!0});var u=j(e);g.l(u),l=z(u),t=k(u,\"DIV\",{class:!0});var M=j(t);c=Z(M,a),M.forEach(_),n=z(u),r&&r.l(u),u.forEach(_),this.h()},h(){m(t,\"class\",\"truncate\"),m(e,\"href\",v=L+\"/settings/assistants/\"+s[10]._id.toString()),m(e,\"class\",h=\"group flex h-10 flex-none items-center gap-2 pl-2 pr-2 text-sm text-gray-500 hover:bg-gray-100 md:rounded-xl \"+(s[10]._id.toString()===s[3].params.assistantId?\"!bg-gray-100 !text-gray-800\":\"\"))},m(o,u){A(o,e,u),g.m(e,null),x(e,l),x(e,t),x(t,c),x(e,n),r&&r.m(e,null)},p(o,u){p===(p=E(o))&&g?g.p(o,u):(g.d(1),g=p(o),g&&(g.c(),g.m(e,l))),u&1&&a!==(a=o[10].name+\"\")&&re(c,a),u&17&&(f=o[10]._id.toString()===o[4].activeModel),f?r||(r=De(),r.c(),r.m(e,null)):r&&(r.d(1),r=null),u&1&&v!==(v=L+\"/settings/assistants/\"+o[10]._id.toString())&&m(e,\"href\",v),u&9&&h!==(h=\"group flex h-10 flex-none items-center gap-2 pl-2 pr-2 text-sm text-gray-500 hover:bg-gray-100 md:rounded-xl \"+(o[10]._id.toString()===o[3].params.assistantId?\"!bg-gray-100 !text-gray-800\":\"\"))&&m(e,\"class\",h)},d(o){o&&_(e),g.d(),r&&r.d()}}}function ct(s){let e,l,t,a=\"Settings\",c,n,f,v,h,E,p=\"Models\",g,r,o,u,M,O,U,G,B,$,P,S,i,C;f=new We({props:{class:\"text-xl text-gray-900 hover:text-black\"}});let d=R(s[0].models.filter(He)),y=[];for(let b=0;b<d.length;b+=1)y[b]=Ae(Ee(s,d,b));const Le=b=>q(y[b],1,1,()=>{y[b]=null});let H=s[0].enableAssistants&&$e(s);U=new nt({props:{class:\"text-sm\"}});const he=s[7].default,T=qe(he,s,s[6],null);return{c(){e=w(\"div\"),l=w(\"div\"),t=w(\"h2\"),t.textContent=a,c=D(),n=w(\"button\"),te(f.$$.fragment),v=D(),h=w(\"div\"),E=w(\"h3\"),E.textContent=p,g=D();for(let b=0;b<y.length;b+=1)y[b].c();r=D(),H&&H.c(),o=D(),u=w(\"div\"),M=D(),O=w(\"a\"),te(U.$$.fragment),G=Y(`\n\t\t\tApplication Settings`),$=D(),P=w(\"div\"),T&&T.c(),this.h()},l(b){e=k(b,\"DIV\",{class:!0});var V=j(e);l=k(V,\"DIV\",{class:!0});var I=j(l);t=k(I,\"H2\",{class:!0,\"data-svelte-h\":!0}),J(t)!==\"svelte-n7oby1\"&&(t.textContent=a),c=z(I),n=k(I,\"BUTTON\",{class:!0,\"aria-label\":!0});var ee=j(n);le(f.$$.fragment,ee),ee.forEach(_),I.forEach(_),v=z(V),h=k(V,\"DIV\",{class:!0});var F=j(h);E=k(F,\"H3\",{class:!0,\"data-svelte-h\":!0}),J(E)!==\"svelte-165v8hs\"&&(E.textContent=p),g=z(F);for(let de=0;de<y.length;de+=1)y[de].l(F);r=z(F),H&&H.l(F),o=z(F),u=k(F,\"DIV\",{class:!0}),j(u).forEach(_),M=z(F),O=k(F,\"A\",{href:!0,class:!0});var ge=j(O);le(U.$$.fragment,ge),G=Z(ge,`\n\t\t\tApplication Settings`),ge.forEach(_),F.forEach(_),$=z(V),P=k(V,\"DIV\",{class:!0});var ye=j(P);T&&T.l(ye),ye.forEach(_),V.forEach(_),this.h()},h(){m(t,\"class\",\"text-xl font-bold\"),m(n,\"class\",\"btn rounded-lg\"),m(n,\"aria-label\",\"Close settings\"),m(l,\"class\",\"col-span-1 mb-4 flex items-center justify-between md:col-span-3\"),m(E,\"class\",\"pb-3 pl-3 pt-2 text-[.8rem] text-gray-800 sm:pl-1\"),m(u,\"class\",\"my-2 mt-auto w-full border-b border-gray-200\"),m(O,\"href\",L+\"/settings\"),m(O,\"class\",B=\"group flex h-10 flex-none items-center gap-2 pl-3 pr-2 text-sm text-gray-500 hover:bg-gray-100 max-md:order-first md:rounded-xl \"+(s[3].url.pathname===`${L}/settings`?\"!bg-gray-100 !text-gray-800\":\"\")),m(h,\"class\",\"col-span-1 flex flex-col overflow-y-auto whitespace-nowrap max-md:-mx-4 max-md:h-[245px] max-md:border max-md:border-b-2 md:pr-6\"),m(P,\"class\",\"col-span-1 w-full overflow-y-auto overflow-x-clip px-1 max-md:pt-4 md:col-span-2 md:row-span-2\"),m(e,\"class\",\"grid h-full w-full grid-cols-1 grid-rows-[auto,1fr] content-start gap-x-4 overflow-hidden p-4 md:grid-cols-3 md:grid-rows-[auto,1fr] md:p-8\")},m(b,V){A(b,e,V),x(e,l),x(l,t),x(l,c),x(l,n),se(f,n,null),x(e,v),x(e,h),x(h,E),x(h,g);for(let I=0;I<y.length;I+=1)y[I]&&y[I].m(h,null);x(h,r),H&&H.m(h,null),x(h,o),x(h,u),x(h,M),x(h,O),se(U,O,null),x(O,G),x(e,$),x(e,P),T&&T.m(P,null),S=!0,i||(C=Pe(n,\"click\",s[8]),i=!0)},p(b,[V]){if(V&25){d=R(b[0].models.filter(He));let I;for(I=0;I<d.length;I+=1){const ee=Ee(b,d,I);y[I]?(y[I].p(ee,V),N(y[I],1)):(y[I]=Ae(ee),y[I].c(),N(y[I],1),y[I].m(h,r))}for(oe(),I=d.length;I<y.length;I+=1)Le(I);ie()}b[0].enableAssistants?H?(H.p(b,V),V&1&&N(H,1)):(H=$e(b),H.c(),N(H,1),H.m(h,o)):H&&(oe(),q(H,1,1,()=>{H=null}),ie()),(!S||V&8&&B!==(B=\"group flex h-10 flex-none items-center gap-2 pl-3 pr-2 text-sm text-gray-500 hover:bg-gray-100 max-md:order-first md:rounded-xl \"+(b[3].url.pathname===`${L}/settings`?\"!bg-gray-100 !text-gray-800\":\"\")))&&m(O,\"class\",B),T&&T.p&&(!S||V&64)&&Te(T,he,b,b[6],S?Ue(he,b[6],V,null):Oe(b[6]),null)},i(b){if(!S){N(f.$$.fragment,b);for(let V=0;V<d.length;V+=1)N(y[V]);N(H),N(U.$$.fragment,b),N(T,b),S=!0}},o(b){q(f.$$.fragment,b),y=y.filter(Boolean);for(let V=0;V<y.length;V+=1)q(y[V]);q(H),q(U.$$.fragment,b),q(T,b),S=!1},d(b){b&&_(e),ae(f),me(y,b),H&&H.d(),ae(U),T&&T.d(b),i=!1,C()}}}const He=s=>!s.unlisted,je=s=>s.createdByMe,Ne=s=>!s.createdByMe;function ht(s,e,l){let t,a;we(s,Re,r=>l(3,t=r));let{$$slots:c={},$$scope:n}=e,{data:f}=e,v=L,h;Ge(()=>{var r;(r=t.params)!=null&&r.assistantId&&h.scrollIntoView()}),Je(({from:r})=>{r!=null&&r.url.pathname.includes(\"settings\")||l(1,v=(r==null?void 0:r.url.toString())||v)});const E=Qe();we(s,E,r=>l(4,a=r));const p=()=>{Ke(v)};function g(r){Fe[r?\"unshift\":\"push\"](()=>{h=r,l(2,h)})}return s.$$set=r=>{\"data\"in r&&l(0,f=r.data),\"$$scope\"in r&&l(6,n=r.$$scope)},[f,v,h,t,a,E,n,c,p,g]}class yt extends ue{constructor(e){super(),ce(this,e,ht,ct,fe,{data:0})}}export{yt as component};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 4696,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:16:01.730Z",
        "time": 31.984000001102686,
        "timings": {
          "blocked": 6.202000009622425,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.8479999999999999,
          "wait": 20.58400000314508,
          "receive": 4.349999988335185,
          "_blocked_queueing": 1.2320000096224248,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "script",
          "lineNumber": 0,
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 616
              },
              {
                "functionName": "h",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 310
              },
              {
                "functionName": "",
                "scriptId": "607",
                "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
                "lineNumber": 1,
                "columnNumber": 8201
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16170
              },
              {
                "functionName": "xe",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16140
              },
              {
                "functionName": "an",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 12166
              },
              {
                "functionName": "a",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21809
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21294
              }
            ],
            "parent": {
              "description": "setTimeout",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "604",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                  "lineNumber": 0,
                  "columnNumber": 21278
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/add.ClnZnXDL.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"495-1733326797000\""
            },
            {
              "name": "age",
              "value": "30314"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "495"
            },
            {
              "name": "x-amz-cf-id",
              "value": "vAA7cX_YvjYJdZ7nC84Mgge59w3Oa2V3MUckKI7NF60oadWV_SP-1w=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:44:13 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 857,
            "mimeType": "text/javascript",
            "text": "import{s as _,J as h,K as u,L as d,M as c,b as f,N as w,f as o,O as m,i as x,n as v,P as g}from\"./scheduler.CeakrPJD.js\";import{g as p}from\"./settings.qWXPmYFi.js\";import{S as B,i as H}from\"./index.Cljt5KuQ.js\";function b(i){let e,a,n='<path fill=\"currentColor\" d=\"M17 15V8h-2v7H8v2h7v7h2v-7h7v-2z\"/>',l=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},i[0]],r={};for(let t=0;t<l.length;t+=1)r=h(r,l[t]);return{c(){e=u(\"svg\"),a=new d(!0),this.h()},l(t){e=c(t,\"svg\",{viewBox:!0,width:!0,height:!0});var s=f(e);a=w(s,!0),s.forEach(o),this.h()},h(){a.a=null,m(e,r)},m(t,s){x(t,e,s),a.m(n,e)},p(t,[s]){m(e,r=p(l,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},s&1&&t[0]]))},i:v,o:v,d(t){t&&o(e)}}}function y(i,e,a){return i.$$set=n=>{a(0,e=h(h({},e),g(n)))},e=g(e),[e]}class S extends B{constructor(e){super(),H(this,e,y,b,_,{})}}export{S as A};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:16:01.730Z",
        "time": 14.371000012033619,
        "timings": {
          "blocked": 6.111000005393289,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 1.8650000026635825,
          "receive": 6.395000003976747,
          "_blocked_queueing": 1.241000005393289,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "script",
          "lineNumber": 0,
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 616
              },
              {
                "functionName": "h",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 310
              },
              {
                "functionName": "",
                "scriptId": "607",
                "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
                "lineNumber": 1,
                "columnNumber": 9793
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16170
              },
              {
                "functionName": "xe",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16140
              },
              {
                "functionName": "an",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 12166
              },
              {
                "functionName": "a",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21809
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21294
              }
            ],
            "parent": {
              "description": "setTimeout",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "604",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                  "lineNumber": 0,
                  "columnNumber": 21278
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/nodes/19.BV2zxeRw.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/chat/_app/immutable/nodes/19.BV2zxeRw.js"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "priority",
              "value": "u=1"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "script"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "age",
              "value": "30709"
            },
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "content-length",
              "value": "3101"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:44:13 GMT"
            },
            {
              "name": "etag",
              "value": "W/\"3101-1733326797000\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "b0rtfgwDKQd5GIshWfhAV5-DI0BSDXd4jUdri9ISerQ9GHuBfjJPag=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 10325,
            "mimeType": "text/javascript",
            "text": "import{b as x,g as Ae}from\"../chunks/entry.CNbBV9gi.js\";import{r as Ne}from\"../chunks/index.De_1-CT6.js\";import{s as Te,e as P,t as O,a as N,c as C,b as E,d as V,f as d,g as T,B as Ce,h as f,i as H,j as u,C as pe,E as ie,R as Ie,k as Ee,G as ye,l as de,U as he,n as Ue}from\"../chunks/scheduler.CeakrPJD.js\";import{S as ze,i as De,b as R,d as L,m as j,t as p,a as v,c as W,e as G,g as Y}from\"../chunks/index.Cljt5KuQ.js\";import{p as Se}from\"../chunks/stores.BBDoy_q4.js\";import{e as ge}from\"../chunks/public.BItpSmwI.js\";import{u as Be}from\"../chunks/settings.qWXPmYFi.js\";import{C as Me}from\"../chunks/CopyToClipBoardBtn.BlbrNBhY.js\";import{T as Oe}from\"../chunks/TokensCounter.HOKCEa2r.js\";import{A as fe}from\"../chunks/arrow-up-right.Dl9l-gxp.js\";import{L as Ve}from\"../chunks/link.Bltj-XWc.js\";import{C as Re}from\"../chunks/chat.DHlj6XQ7.js\";import{C as Le}from\"../chunks/code.Dqet6oxH.js\";async function je({parent:l,params:e}){const a=await l(),o=a.models.find(s=>s.id===e.model);return(!o||o.unlisted)&&Ne(302,`${x}/settings`),a}const lt=Object.freeze(Object.defineProperty({__proto__:null,load:je},Symbol.toStringTag,{value:\"Module\"}));function _e(l){let e,a=l[2].description+\"\",o;return{c(){e=P(\"p\"),o=O(a),this.h()},l(s){e=C(s,\"P\",{class:!0});var t=E(e);o=V(t,a),t.forEach(d),this.h()},h(){f(e,\"class\",\"whitespace-pre-wrap text-gray-600\")},m(s,t){H(s,e,t),u(e,o)},p(s,t){t&4&&a!==(a=s[2].description+\"\")&&Ee(o,a)},d(s){s&&d(e)}}}function $e(l){let e,a,o,s,t;return a=new fe({props:{class:\"mr-1.5 shrink-0 text-xs \"}}),{c(){e=P(\"a\"),R(a.$$.fragment),o=O(`\n\t\t\t\tModel page`),this.h()},l(r){e=C(r,\"A\",{href:!0,target:!0,rel:!0,class:!0});var n=E(e);L(a.$$.fragment,n),o=V(n,`\n\t\t\t\tModel page`),n.forEach(d),this.h()},h(){f(e,\"href\",s=l[2].modelUrl||\"https://huggingface.co/\"+l[2].name),f(e,\"target\",\"_blank\"),f(e,\"rel\",\"noreferrer\"),f(e,\"class\",\"flex items-center truncate underline underline-offset-2\")},m(r,n){H(r,e,n),j(a,e,null),u(e,o),t=!0},p(r,n){(!t||n&4&&s!==(s=r[2].modelUrl||\"https://huggingface.co/\"+r[2].name))&&f(e,\"href\",s)},i(r){t||(p(a.$$.fragment,r),t=!0)},o(r){v(a.$$.fragment,r),t=!1},d(r){r&&d(e),G(a)}}}function be(l){let e,a,o,s,t;return a=new fe({props:{class:\"mr-1.5 shrink-0 text-xs \"}}),{c(){e=P(\"a\"),R(a.$$.fragment),o=O(`\n\t\t\t\tDataset page`),this.h()},l(r){e=C(r,\"A\",{href:!0,target:!0,rel:!0,class:!0});var n=E(e);L(a.$$.fragment,n),o=V(n,`\n\t\t\t\tDataset page`),n.forEach(d),this.h()},h(){f(e,\"href\",s=l[2].datasetUrl||\"https://huggingface.co/datasets/\"+l[2].datasetName),f(e,\"target\",\"_blank\"),f(e,\"rel\",\"noreferrer\"),f(e,\"class\",\"flex items-center truncate underline underline-offset-2\")},m(r,n){H(r,e,n),j(a,e,null),u(e,o),t=!0},p(r,n){(!t||n&4&&s!==(s=r[2].datasetUrl||\"https://huggingface.co/datasets/\"+r[2].datasetName))&&f(e,\"href\",s)},i(r){t||(p(a.$$.fragment,r),t=!0)},o(r){v(a.$$.fragment,r),t=!1},d(r){r&&d(e),G(a)}}}function ve(l){let e,a,o,s,t;return a=new fe({props:{class:\"mr-1.5 shrink-0 text-xs \"}}),{c(){e=P(\"a\"),R(a.$$.fragment),o=O(`\n\t\t\t\tModel website`),this.h()},l(r){e=C(r,\"A\",{href:!0,target:!0,class:!0,rel:!0});var n=E(e);L(a.$$.fragment,n),o=V(n,`\n\t\t\t\tModel website`),n.forEach(d),this.h()},h(){f(e,\"href\",s=l[2].websiteUrl),f(e,\"target\",\"_blank\"),f(e,\"class\",\"flex items-center truncate underline underline-offset-2\"),f(e,\"rel\",\"noreferrer\")},m(r,n){H(r,e,n),j(a,e,null),u(e,o),t=!0},p(r,n){(!t||n&4&&s!==(s=r[2].websiteUrl))&&f(e,\"href\",s)},i(r){t||(p(a.$$.fragment,r),t=!0)},o(r){v(a.$$.fragment,r),t=!1},d(r){r&&d(e),G(a)}}}function ke(l){let e,a,o,s,t;return a=new Le({props:{class:\"mr-1.5 shrink-0 text-xs \"}}),{c(){e=P(\"a\"),R(a.$$.fragment),o=O(`\n\t\t\t\tAPI Playground`),this.h()},l(r){e=C(r,\"A\",{href:!0,target:!0,rel:!0,class:!0});var n=E(e);L(a.$$.fragment,n),o=V(n,`\n\t\t\t\tAPI Playground`),n.forEach(d),this.h()},h(){f(e,\"href\",s=\"https://huggingface.co/playground?modelId=\"+l[2].name),f(e,\"target\",\"_blank\"),f(e,\"rel\",\"noreferrer\"),f(e,\"class\",\"flex items-center truncate underline underline-offset-2\")},m(r,n){H(r,e,n),j(a,e,null),u(e,o),t=!0},p(r,n){(!t||n&4&&s!==(s=\"https://huggingface.co/playground?modelId=\"+r[2].name))&&f(e,\"href\",s)},i(r){t||(p(a.$$.fragment,r),t=!0)},o(r){v(a.$$.fragment,r),t=!1},d(r){r&&d(e),G(a)}}}function Ge(l){let e,a,o,s;return a=new Ve({}),{c(){e=P(\"div\"),R(a.$$.fragment),o=O(\"Copy direct link to model\"),this.h()},l(t){e=C(t,\"DIV\",{class:!0});var r=E(e);L(a.$$.fragment,r),o=V(r,\"Copy direct link to model\"),r.forEach(d),this.h()},h(){f(e,\"class\",\"flex items-center gap-1.5 hover:underline\")},m(t,r){H(t,e,r),j(a,e,null),u(e,o),s=!0},p:Ue,i(t){s||(p(a.$$.fragment,t),s=!0)},o(t){v(a.$$.fragment,t),s=!1},d(t){t&&d(e),G(a)}}}function we(l){let e,a=\"Reset\",o,s;return{c(){e=P(\"button\"),e.textContent=a,this.h()},l(t){e=C(t,\"BUTTON\",{class:!0,\"data-svelte-h\":!0}),Ce(e)!==\"svelte-1ehlk8p\"&&(e.textContent=a),this.h()},h(){f(e,\"class\",\"ml-auto underline decoration-gray-300 hover:decoration-gray-700\")},m(t,r){H(t,e,r),o||(s=ie(e,\"click\",Ie(l[6])),o=!0)},p:Ue,d(t){t&&d(e),o=!1,s()}}}function Pe(l){var o,s;let e,a;return e=new Oe({props:{classNames:\"absolute bottom-2 right-2\",prompt:l[1].customPrompts[l[0].params.model],modelTokenizer:l[2].tokenizer,truncate:(s=(o=l[2])==null?void 0:o.parameters)==null?void 0:s.truncate}}),{c(){R(e.$$.fragment)},l(t){L(e.$$.fragment,t)},m(t,r){j(e,t,r),a=!0},p(t,r){var c,D;const n={};r&3&&(n.prompt=t[1].customPrompts[t[0].params.model]),r&4&&(n.modelTokenizer=t[2].tokenizer),r&4&&(n.truncate=(D=(c=t[2])==null?void 0:c.parameters)==null?void 0:D.truncate),e.$set(n)},i(t){a||(p(e.$$.fragment,t),a=!0)},o(t){v(e.$$.fragment,t),a=!1},d(t){G(e,t)}}}function He(l){let e,a,o,s=l[0].params.model+\"\",t,r,n,c,D,J,U,q,I,ee,S,X,te,re,A,B,F,me=\"System Prompt\",ae,le,y,se,Q,ne,ue,k=l[2].description&&_e(l),h=l[2].modelUrl&&$e(l),g=(l[2].datasetName||l[2].datasetUrl)&&be(l),_=l[2].websiteUrl&&ve(l),$=l[2].hasInferenceAPI&&ke(l);I=new Me({props:{value:(ge.PUBLIC_ORIGIN||l[0].url.origin)+x+\"/models/\"+l[2].id,classNames:\"!border-none !shadow-none !py-0 !px-1 !rounded-md\",$$slots:{default:[Ge]},$$scope:{ctx:l}}}),X=new Re({props:{class:\"mr-1.5 text-sm\"}});let w=l[3]&&we(l),b=l[2].tokenizer&&l[1].customPrompts[l[0].params.model]&&Pe(l);return{c(){e=P(\"div\"),a=P(\"div\"),o=P(\"h2\"),t=O(s),r=N(),k&&k.c(),n=N(),c=P(\"div\"),h&&h.c(),D=N(),g&&g.c(),J=N(),_&&_.c(),U=N(),$&&$.c(),q=N(),R(I.$$.fragment),ee=N(),S=P(\"button\"),R(X.$$.fragment),te=O(`\n\t\tNew chat`),re=N(),A=P(\"div\"),B=P(\"div\"),F=P(\"h3\"),F.textContent=me,ae=N(),w&&w.c(),le=N(),y=P(\"textarea\"),se=N(),b&&b.c(),this.h()},l(i){e=C(i,\"DIV\",{class:!0});var m=E(e);a=C(m,\"DIV\",{class:!0});var M=E(a);o=C(M,\"H2\",{class:!0});var ce=E(o);t=V(ce,s),ce.forEach(d),r=T(M),k&&k.l(M),M.forEach(d),n=T(m),c=C(m,\"DIV\",{class:!0});var z=E(c);h&&h.l(z),D=T(z),g&&g.l(z),J=T(z),_&&_.l(z),U=T(z),$&&$.l(z),q=T(z),L(I.$$.fragment,z),z.forEach(d),ee=T(m),S=C(m,\"BUTTON\",{class:!0,name:!0});var oe=E(S);L(X.$$.fragment,oe),te=V(oe,`\n\t\tNew chat`),oe.forEach(d),re=T(m),A=C(m,\"DIV\",{class:!0});var K=E(A);B=C(K,\"DIV\",{class:!0});var Z=E(B);F=C(Z,\"H3\",{class:!0,\"data-svelte-h\":!0}),Ce(F)!==\"svelte-164tosc\"&&(F.textContent=me),ae=T(Z),w&&w.l(Z),Z.forEach(d),le=T(K),y=C(K,\"TEXTAREA\",{\"aria-label\":!0,rows:!0,class:!0}),E(y).forEach(d),se=T(K),b&&b.l(K),K.forEach(d),m.forEach(d),this.h()},h(){f(o,\"class\",\"text-lg font-semibold md:text-xl\"),f(a,\"class\",\"mb-5 flex flex-col gap-1.5\"),f(c,\"class\",\"flex flex-wrap items-center gap-2 md:gap-4\"),f(S,\"class\",\"my-2 flex w-fit items-center rounded-full bg-black px-3 py-1 text-base !text-white\"),f(S,\"name\",\"Activate model\"),f(F,\"class\",\"mb-1.5 text-lg font-semibold text-gray-800\"),f(B,\"class\",\"flex w-full flex-row content-between\"),f(y,\"aria-label\",\"Custom system prompt\"),f(y,\"rows\",\"10\"),f(y,\"class\",\"w-full resize-none rounded-md border-2 bg-gray-100 p-2\"),f(A,\"class\",\"relative flex w-full flex-col gap-2\"),f(e,\"class\",\"flex flex-col items-start\")},m(i,m){H(i,e,m),u(e,a),u(a,o),u(o,t),u(a,r),k&&k.m(a,null),u(e,n),u(e,c),h&&h.m(c,null),u(c,D),g&&g.m(c,null),u(c,J),_&&_.m(c,null),u(c,U),$&&$.m(c,null),u(c,q),j(I,c,null),u(e,ee),u(e,S),j(X,S,null),u(S,te),u(e,re),u(e,A),u(A,B),u(B,F),u(B,ae),w&&w.m(B,null),u(A,le),u(A,y),pe(y,l[1].customPrompts[l[0].params.model]),u(A,se),b&&b.m(A,null),Q=!0,ne||(ue=[ie(S,\"click\",Ie(l[5])),ie(y,\"input\",l[7])],ne=!0)},p(i,[m]){(!Q||m&1)&&s!==(s=i[0].params.model+\"\")&&Ee(t,s),i[2].description?k?k.p(i,m):(k=_e(i),k.c(),k.m(a,null)):k&&(k.d(1),k=null),i[2].modelUrl?h?(h.p(i,m),m&4&&p(h,1)):(h=$e(i),h.c(),p(h,1),h.m(c,D)):h&&(Y(),v(h,1,1,()=>{h=null}),W()),i[2].datasetName||i[2].datasetUrl?g?(g.p(i,m),m&4&&p(g,1)):(g=be(i),g.c(),p(g,1),g.m(c,J)):g&&(Y(),v(g,1,1,()=>{g=null}),W()),i[2].websiteUrl?_?(_.p(i,m),m&4&&p(_,1)):(_=ve(i),_.c(),p(_,1),_.m(c,U)):_&&(Y(),v(_,1,1,()=>{_=null}),W()),i[2].hasInferenceAPI?$?($.p(i,m),m&4&&p($,1)):($=ke(i),$.c(),p($,1),$.m(c,q)):$&&(Y(),v($,1,1,()=>{$=null}),W());const M={};m&5&&(M.value=(ge.PUBLIC_ORIGIN||i[0].url.origin)+x+\"/models/\"+i[2].id),m&256&&(M.$$scope={dirty:m,ctx:i}),I.$set(M),i[3]?w?w.p(i,m):(w=we(i),w.c(),w.m(B,null)):w&&(w.d(1),w=null),m&3&&pe(y,i[1].customPrompts[i[0].params.model]),i[2].tokenizer&&i[1].customPrompts[i[0].params.model]?b?(b.p(i,m),m&7&&p(b,1)):(b=Pe(i),b.c(),p(b,1),b.m(A,null)):b&&(Y(),v(b,1,1,()=>{b=null}),W())},i(i){Q||(p(h),p(g),p(_),p($),p(I.$$.fragment,i),p(X.$$.fragment,i),p(b),Q=!0)},o(i){v(h),v(g),v(_),v($),v(I.$$.fragment,i),v(X.$$.fragment,i),v(b),Q=!1},d(i){i&&d(e),k&&k.d(),h&&h.d(),g&&g.d(),_&&_.d(),$&&$.d(),G(I),G(X),w&&w.d(),b&&b.d(),ne=!1,ye(ue)}}}function qe(l,e,a){let o,s,t,r;de(l,Se,U=>a(0,t=U));const n=Be();de(l,n,U=>a(1,r=U));const c=()=>{n.instantSet({activeModel:t.params.model}),Ae(`${x}/`)},D=()=>he(n,r.customPrompts[t.params.model]=s.preprompt,r);function J(){r.customPrompts[t.params.model]=this.value,n.set(r)}return l.$$.update=()=>{var U,q;l.$$.dirty&3&&r.customPrompts[t.params.model]===void 0&&he(n,r.customPrompts={...r.customPrompts,[t.params.model]:((U=t.data.models.find(I=>I.id===t.params.model))==null?void 0:U.preprompt)||\"\"},r),l.$$.dirty&3&&a(3,o=r.customPrompts[t.params.model]!==((q=t.data.models.find(I=>I.id===t.params.model))==null?void 0:q.preprompt)),l.$$.dirty&1&&a(2,s=t.data.models.find(I=>I.id===t.params.model))},[t,r,s,o,n,c,D,J]}class st extends ze{constructor(e){super(),De(this,e,qe,He,Te,{})}}export{st as component,lt as universal};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 3454,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:16:01.731Z",
        "time": 43.967999998130836,
        "timings": {
          "blocked": 6.850000007934868,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.49599999999999955,
          "wait": 23.831999996794387,
          "receive": 12.78999999340158,
          "_blocked_queueing": 1.2700000079348683,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "script",
          "lineNumber": 0,
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 616
              },
              {
                "functionName": "h",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 310
              },
              {
                "functionName": "",
                "scriptId": "607",
                "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
                "lineNumber": 1,
                "columnNumber": 9793
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16170
              },
              {
                "functionName": "xe",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16140
              },
              {
                "functionName": "an",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 12166
              },
              {
                "functionName": "a",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21809
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21294
              }
            ],
            "parent": {
              "description": "setTimeout",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "604",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                  "lineNumber": 0,
                  "columnNumber": 21278
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/index.De_1-CT6.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"118-1726226548000\""
            },
            {
              "name": "age",
              "value": "7127004"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "118"
            },
            {
              "name": "x-amz-cf-id",
              "value": "Z3UYJarH2B0Bv_jc_5ghVDTRehgaW0C9_YgrHIGJH5GekZWsSzUKyg=="
            },
            {
              "name": "date",
              "value": "Fri, 13 Sep 2024 12:26:03 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Fri, 13 Sep 2024 11:22:28 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 118,
            "mimeType": "text/javascript",
            "text": "import{R as t}from\"./control.CYgJF_JY.js\";function n(r,e){throw new t(r,e.toString())}new TextEncoder;export{n as r};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:16:01.731Z",
        "time": 13.728000005357899,
        "timings": {
          "blocked": 5.781999998401851,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 1.2939999960111455,
          "receive": 6.652000010944903,
          "_blocked_queueing": 2.2089999984018505,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "script",
          "lineNumber": 0,
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 616
              },
              {
                "functionName": "h",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 310
              },
              {
                "functionName": "",
                "scriptId": "607",
                "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
                "lineNumber": 1,
                "columnNumber": 9793
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16170
              },
              {
                "functionName": "xe",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16140
              },
              {
                "functionName": "an",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 12166
              },
              {
                "functionName": "a",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21809
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21294
              }
            ],
            "parent": {
              "description": "setTimeout",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "604",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                  "lineNumber": 0,
                  "columnNumber": 21278
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/TokensCounter.HOKCEa2r.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/chat/_app/immutable/chunks/TokensCounter.HOKCEa2r.js"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "priority",
              "value": "u=1"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "script"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "age",
              "value": "649412"
            },
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "content-length",
              "value": "162722"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "date",
              "value": "Wed, 27 Nov 2024 11:52:30 GMT"
            },
            {
              "name": "etag",
              "value": "W/\"162722-1732708079000\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 27 Nov 2024 11:47:59 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "wKd0AOBXhin61qjUu2tzN-uGG06x5tkJQ0a-YPVTgRPrCx8P2ft6iA=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 717933,
            "mimeType": "text/javascript",
            "text": "var c_=Object.defineProperty;var p_=(nt,fe,I)=>fe in nt?c_(nt,fe,{enumerable:!0,configurable:!0,writable:!0,value:I}):nt[fe]=I;var Te=(nt,fe,I)=>p_(nt,typeof fe!=\"symbol\"?fe+\"\":fe,I);import{s as h_,A as Xd,i as Lc,n as Kn,f as Yu,e as Oc,t as bf,a as f_,c as zc,b as Mf,d as vf,g as m_,B as __,h as Hu,j as Ku,k as xf}from\"./scheduler.CeakrPJD.js\";import{h as Tf,u as g_}from\"./await_block.B9GGS9dX.js\";import{S as w_,i as y_}from\"./index.Cljt5KuQ.js\";var Ms={},Ef={\"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm\":(nt,fe,I)=>{nt.exports=I.p+\"ort-wasm-simd-threaded.jsep.wasm\"},\"?2ce3\":()=>{},\"?7a2c\":()=>{},\"?a42a\":()=>{},\"?2b25\":()=>{},\"?569f\":()=>{},\"?3f59\":()=>{},\"?154a\":()=>{},\"./node_modules/@huggingface/jinja/dist/index.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{Environment:()=>Qe,Interpreter:()=>ut,Template:()=>Ct,parse:()=>Ce,tokenize:()=>P});var E=Object.freeze({Text:\"Text\",NumericLiteral:\"NumericLiteral\",BooleanLiteral:\"BooleanLiteral\",StringLiteral:\"StringLiteral\",Identifier:\"Identifier\",Equals:\"Equals\",OpenParen:\"OpenParen\",CloseParen:\"CloseParen\",OpenStatement:\"OpenStatement\",CloseStatement:\"CloseStatement\",OpenExpression:\"OpenExpression\",CloseExpression:\"CloseExpression\",OpenSquareBracket:\"OpenSquareBracket\",CloseSquareBracket:\"CloseSquareBracket\",OpenCurlyBracket:\"OpenCurlyBracket\",CloseCurlyBracket:\"CloseCurlyBracket\",Comma:\"Comma\",Dot:\"Dot\",Colon:\"Colon\",Pipe:\"Pipe\",CallOperator:\"CallOperator\",AdditiveBinaryOperator:\"AdditiveBinaryOperator\",MultiplicativeBinaryOperator:\"MultiplicativeBinaryOperator\",ComparisonBinaryOperator:\"ComparisonBinaryOperator\",UnaryOperator:\"UnaryOperator\",Set:\"Set\",If:\"If\",For:\"For\",In:\"In\",Is:\"Is\",NotIn:\"NotIn\",Else:\"Else\",EndIf:\"EndIf\",ElseIf:\"ElseIf\",EndFor:\"EndFor\",And:\"And\",Or:\"Or\",Not:\"UnaryOperator\",Macro:\"Macro\",EndMacro:\"EndMacro\"}),ie=Object.freeze({set:E.Set,for:E.For,in:E.In,is:E.Is,if:E.If,else:E.Else,endif:E.EndIf,elif:E.ElseIf,endfor:E.EndFor,and:E.And,or:E.Or,not:E.Not,\"not in\":E.NotIn,macro:E.Macro,endmacro:E.EndMacro,true:E.BooleanLiteral,false:E.BooleanLiteral,True:E.BooleanLiteral,False:E.BooleanLiteral}),we=class{constructor(M,G){this.value=M,this.type=G}};function ve(M){return/\\w/.test(M)}function xe(M){return/[0-9]/.test(M)}var N=[[\"{%\",E.OpenStatement],[\"%}\",E.CloseStatement],[\"{{\",E.OpenExpression],[\"}}\",E.CloseExpression],[\"(\",E.OpenParen],[\")\",E.CloseParen],[\"{\",E.OpenCurlyBracket],[\"}\",E.CloseCurlyBracket],[\"[\",E.OpenSquareBracket],[\"]\",E.CloseSquareBracket],[\",\",E.Comma],[\".\",E.Dot],[\":\",E.Colon],[\"|\",E.Pipe],[\"<=\",E.ComparisonBinaryOperator],[\">=\",E.ComparisonBinaryOperator],[\"==\",E.ComparisonBinaryOperator],[\"!=\",E.ComparisonBinaryOperator],[\"<\",E.ComparisonBinaryOperator],[\">\",E.ComparisonBinaryOperator],[\"+\",E.AdditiveBinaryOperator],[\"-\",E.AdditiveBinaryOperator],[\"*\",E.MultiplicativeBinaryOperator],[\"/\",E.MultiplicativeBinaryOperator],[\"%\",E.MultiplicativeBinaryOperator],[\"=\",E.Equals]],T=new Map([[\"n\",`\n`],[\"t\",\"\t\"],[\"r\",\"\\r\"],[\"b\",\"\\b\"],[\"f\",\"\\f\"],[\"v\",\"\\v\"],[\"'\",\"'\"],['\"','\"'],[\"\\\\\",\"\\\\\"]]);function V(M,G={}){return M.endsWith(`\n`)&&(M=M.slice(0,-1)),M=M.replace(/{#.*?#}/gs,\"{##}\"),G.lstrip_blocks&&(M=M.replace(/^[ \\t]*({[#%])/gm,\"$1\")),G.trim_blocks&&(M=M.replace(/([#%]})\\n/g,\"$1\")),M.replace(/{##}/g,\"\").replace(/-%}\\s*/g,\"%}\").replace(/\\s*{%-/g,\"{%\").replace(/-}}\\s*/g,\"}}\").replace(/\\s*{{-/g,\"{{\")}function P(M,G={}){var tt,zt,yt;const k=[],Q=V(M,G);let ge=0;const Ze=Tt=>{let bt=\"\";for(;Tt(Q[ge]);){if(Q[ge]===\"\\\\\"){if(++ge,ge>=Q.length)throw new SyntaxError(\"Unexpected end of input\");const Ae=Q[ge++],D=T.get(Ae);if(D===void 0)throw new SyntaxError(`Unexpected escaped character: ${Ae}`);bt+=D;continue}if(bt+=Q[ge++],ge>=Q.length)throw new SyntaxError(\"Unexpected end of input\")}return bt};e:for(;ge<Q.length;){const Tt=(tt=k.at(-1))==null?void 0:tt.type;if(Tt===void 0||Tt===E.CloseStatement||Tt===E.CloseExpression){let Ae=\"\";for(;ge<Q.length&&!(Q[ge]===\"{\"&&(Q[ge+1]===\"%\"||Q[ge+1]===\"{\"));)Ae+=Q[ge++];if(Ae.length>0){k.push(new we(Ae,E.Text));continue}}Ze(Ae=>/\\s/.test(Ae));const bt=Q[ge];if(bt===\"-\"||bt===\"+\"){const Ae=(zt=k.at(-1))==null?void 0:zt.type;if(Ae===E.Text||Ae===void 0)throw new SyntaxError(`Unexpected character: ${bt}`);switch(Ae){case E.Identifier:case E.NumericLiteral:case E.BooleanLiteral:case E.StringLiteral:case E.CloseParen:case E.CloseSquareBracket:break;default:{++ge;const D=Ze(xe);k.push(new we(`${bt}${D}`,D.length>0?E.NumericLiteral:E.UnaryOperator));continue}}}for(const[Ae,D]of N)if(Q.slice(ge,ge+Ae.length)===Ae){k.push(new we(Ae,D)),ge+=Ae.length;continue e}if(bt===\"'\"||bt==='\"'){++ge;const Ae=Ze(D=>D!==bt);k.push(new we(Ae,E.StringLiteral)),++ge;continue}if(xe(bt)){const Ae=Ze(xe);k.push(new we(Ae,E.NumericLiteral));continue}if(ve(bt)){const Ae=Ze(ve),D=Object.hasOwn(ie,Ae)?ie[Ae]:E.Identifier;D===E.In&&((yt=k.at(-1))==null?void 0:yt.type)===E.Not?(k.pop(),k.push(new we(\"not in\",E.NotIn))):k.push(new we(Ae,D));continue}throw new SyntaxError(`Unexpected character: ${bt}`)}return k}var K=class{constructor(){Te(this,\"type\",\"Statement\")}},ee=class extends K{constructor(G){super();Te(this,\"type\",\"Program\");this.body=G}},ne=class extends K{constructor(G,k,Q){super();Te(this,\"type\",\"If\");this.test=G,this.body=k,this.alternate=Q}},me=class extends K{constructor(G,k,Q,ge){super();Te(this,\"type\",\"For\");this.loopvar=G,this.iterable=k,this.body=Q,this.defaultBlock=ge}},F=class extends K{constructor(G,k){super();Te(this,\"type\",\"Set\");this.assignee=G,this.value=k}},J=class extends K{constructor(G,k,Q){super();Te(this,\"type\",\"Macro\");this.name=G,this.args=k,this.body=Q}},re=class extends K{constructor(){super(...arguments);Te(this,\"type\",\"Expression\")}},le=class extends re{constructor(G,k,Q){super();Te(this,\"type\",\"MemberExpression\");this.object=G,this.property=k,this.computed=Q}},ae=class extends re{constructor(G,k){super();Te(this,\"type\",\"CallExpression\");this.callee=G,this.args=k}},j=class extends re{constructor(G){super();Te(this,\"type\",\"Identifier\");this.value=G}},O=class extends re{constructor(G){super();Te(this,\"type\",\"Literal\");this.value=G}},R=class extends O{constructor(){super(...arguments);Te(this,\"type\",\"NumericLiteral\")}},A=class extends O{constructor(){super(...arguments);Te(this,\"type\",\"StringLiteral\")}},_e=class extends O{constructor(){super(...arguments);Te(this,\"type\",\"BooleanLiteral\")}},Me=class extends O{constructor(){super(...arguments);Te(this,\"type\",\"ArrayLiteral\")}},ke=class extends O{constructor(){super(...arguments);Te(this,\"type\",\"TupleLiteral\")}},Oe=class extends O{constructor(){super(...arguments);Te(this,\"type\",\"ObjectLiteral\")}},Pe=class extends re{constructor(G,k,Q){super();Te(this,\"type\",\"BinaryExpression\");this.operator=G,this.left=k,this.right=Q}},st=class extends re{constructor(G,k){super();Te(this,\"type\",\"FilterExpression\");this.operand=G,this.filter=k}},Ye=class extends re{constructor(G,k){super();Te(this,\"type\",\"SelectExpression\");this.iterable=G,this.test=k}},pt=class extends re{constructor(G,k,Q){super();Te(this,\"type\",\"TestExpression\");this.operand=G,this.negate=k,this.test=Q}},ye=class extends re{constructor(G,k){super();Te(this,\"type\",\"UnaryExpression\");this.operator=G,this.argument=k}},W=class extends re{constructor(G=void 0,k=void 0,Q=void 0){super();Te(this,\"type\",\"SliceExpression\");this.start=G,this.stop=k,this.step=Q}},he=class extends re{constructor(G,k){super();Te(this,\"type\",\"KeywordArgumentExpression\");this.key=G,this.value=k}};function Ce(M){const G=new ee([]);let k=0;function Q(Je,wt){const Dt=M[k++];if(!Dt||Dt.type!==Je)throw new Error(`Parser Error: ${wt}. ${Dt.type} !== ${Je}.`);return Dt}function ge(){switch(M[k].type){case E.Text:return zt();case E.OpenStatement:return yt();case E.OpenExpression:return Tt();default:throw new SyntaxError(`Unexpected token type: ${M[k].type}`)}}function Ze(...Je){return k+Je.length<=M.length&&Je.some((wt,Dt)=>wt!==M[k+Dt].type)}function tt(...Je){return k+Je.length<=M.length&&Je.every((wt,Dt)=>wt===M[k+Dt].type)}function zt(){return new A(Q(E.Text,\"Expected text token\").value)}function yt(){Q(E.OpenStatement,\"Expected opening statement token\");let Je;switch(M[k].type){case E.Set:++k,Je=bt(),Q(E.CloseStatement,\"Expected closing statement token\");break;case E.If:++k,Je=Ae(),Q(E.OpenStatement,\"Expected {% token\"),Q(E.EndIf,\"Expected endif token\"),Q(E.CloseStatement,\"Expected %} token\");break;case E.Macro:++k,Je=D(),Q(E.OpenStatement,\"Expected {% token\"),Q(E.EndMacro,\"Expected endmacro token\"),Q(E.CloseStatement,\"Expected %} token\");break;case E.For:++k,Je=Se(),Q(E.OpenStatement,\"Expected {% token\"),Q(E.EndFor,\"Expected endfor token\"),Q(E.CloseStatement,\"Expected %} token\");break;default:throw new SyntaxError(`Unknown statement type: ${M[k].type}`)}return Je}function Tt(){Q(E.OpenExpression,\"Expected opening expression token\");const Je=Ge();return Q(E.CloseExpression,\"Expected closing expression token\"),Je}function bt(){const Je=Ge();if(tt(E.Equals)){++k;const wt=bt();return new F(Je,wt)}return Je}function Ae(){var Kr,In,Rn,Vr,sn,Ur,Fn,Or;const Je=Ge();Q(E.CloseStatement,\"Expected closing statement token\");const wt=[],Dt=[];for(;!(((Kr=M[k])==null?void 0:Kr.type)===E.OpenStatement&&(((In=M[k+1])==null?void 0:In.type)===E.ElseIf||((Rn=M[k+1])==null?void 0:Rn.type)===E.Else||((Vr=M[k+1])==null?void 0:Vr.type)===E.EndIf));)wt.push(ge());if(((sn=M[k])==null?void 0:sn.type)===E.OpenStatement&&((Ur=M[k+1])==null?void 0:Ur.type)!==E.EndIf)if(++k,tt(E.ElseIf))Q(E.ElseIf,\"Expected elseif token\"),Dt.push(Ae());else for(Q(E.Else,\"Expected else token\"),Q(E.CloseStatement,\"Expected closing statement token\");!(((Fn=M[k])==null?void 0:Fn.type)===E.OpenStatement&&((Or=M[k+1])==null?void 0:Or.type)===E.EndIf);)Dt.push(ge());return new ne(Je,wt,Dt)}function D(){const Je=yr();if(Je.type!==\"Identifier\")throw new SyntaxError(\"Expected identifier following macro statement\");const wt=Lt();Q(E.CloseStatement,\"Expected closing statement token\");const Dt=[];for(;Ze(E.OpenStatement,E.EndMacro);)Dt.push(ge());return new J(Je,wt,Dt)}function ce(Je=!1){const wt=Je?yr:Ge,Dt=[wt()],Kr=tt(E.Comma);for(;Kr&&(++k,Dt.push(wt()),!!tt(E.Comma)););return Kr?new ke(Dt):Dt[0]}function Se(){const Je=ce(!0);if(!(Je instanceof j||Je instanceof ke))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Je.type} instead`);Q(E.In,\"Expected `in` keyword following loop variable\");const wt=Ge();Q(E.CloseStatement,\"Expected closing statement token\");const Dt=[];for(;Ze(E.OpenStatement,E.EndFor)&&Ze(E.OpenStatement,E.Else);)Dt.push(ge());const Kr=[];if(tt(E.OpenStatement,E.Else))for(++k,++k,Q(E.CloseStatement,\"Expected closing statement token\");Ze(E.OpenStatement,E.EndFor);)Kr.push(ge());return new me(Je,wt,Dt,Kr)}function Ge(){return Fe()}function Fe(){const Je=et();if(tt(E.If)){++k;const wt=et();if(tt(E.Else)){++k;const Dt=et();return new ne(wt,[Je],[Dt])}else return new Ye(Je,wt)}return Je}function et(){let Je=mt();for(;tt(E.Or);){const wt=M[k];++k;const Dt=mt();Je=new Pe(wt,Je,Dt)}return Je}function mt(){let Je=ct();for(;tt(E.And);){const wt=M[k];++k;const Dt=ct();Je=new Pe(wt,Je,Dt)}return Je}function ct(){let Je;for(;tt(E.Not);){const wt=M[k];++k;const Dt=ct();Je=new ye(wt,Dt)}return Je??$t()}function $t(){let Je=_t();for(;tt(E.ComparisonBinaryOperator)||tt(E.In)||tt(E.NotIn);){const wt=M[k];++k;const Dt=_t();Je=new Pe(wt,Je,Dt)}return Je}function _t(){let Je=Xt();for(;tt(E.AdditiveBinaryOperator);){const wt=M[k];++k;const Dt=Xt();Je=new Pe(wt,Je,Dt)}return Je}function Re(){const Je=Wt();return tt(E.OpenParen)?Nt(Je):Je}function Nt(Je){let wt=new ae(Je,Lt());return tt(E.OpenParen)&&(wt=Nt(wt)),wt}function Lt(){Q(E.OpenParen,\"Expected opening parenthesis for arguments list\");const Je=Ht();return Q(E.CloseParen,\"Expected closing parenthesis for arguments list\"),Je}function Ht(){const Je=[];for(;!tt(E.CloseParen);){let wt=Ge();if(tt(E.Equals)){if(++k,!(wt instanceof j))throw new SyntaxError(\"Expected identifier for keyword argument\");const Dt=Ge();wt=new he(wt,Dt)}Je.push(wt),tt(E.Comma)&&++k}return Je}function Rt(){const Je=[];let wt=!1;for(;!tt(E.CloseSquareBracket);)tt(E.Colon)?(Je.push(void 0),++k,wt=!0):(Je.push(Ge()),tt(E.Colon)&&(++k,wt=!0));if(Je.length===0)throw new SyntaxError(\"Expected at least one argument for member/slice expression\");if(wt){if(Je.length>3)throw new SyntaxError(\"Expected 0-3 arguments for slice expression\");return new W(...Je)}return Je[0]}function Wt(){let Je=yr();for(;tt(E.Dot)||tt(E.OpenSquareBracket);){const wt=M[k];++k;let Dt;const Kr=wt.type!==E.Dot;if(Kr)Dt=Rt(),Q(E.CloseSquareBracket,\"Expected closing square bracket\");else if(Dt=yr(),Dt.type!==\"Identifier\")throw new SyntaxError(\"Expected identifier following dot operator\");Je=new le(Je,Dt,Kr)}return Je}function Xt(){let Je=cr();for(;tt(E.MultiplicativeBinaryOperator);){const wt=M[k];++k;const Dt=cr();Je=new Pe(wt,Je,Dt)}return Je}function cr(){let Je=sr();for(;tt(E.Is);){++k;const wt=tt(E.Not);wt&&++k;let Dt=yr();if(Dt instanceof _e&&(Dt=new j(Dt.value.toString())),!(Dt instanceof j))throw new SyntaxError(\"Expected identifier for the test\");Je=new pt(Je,wt,Dt)}return Je}function sr(){let Je=Re();for(;tt(E.Pipe);){++k;let wt=yr();if(!(wt instanceof j))throw new SyntaxError(\"Expected identifier for the filter\");tt(E.OpenParen)&&(wt=Nt(wt)),Je=new st(Je,wt)}return Je}function yr(){const Je=M[k];switch(Je.type){case E.NumericLiteral:return++k,new R(Number(Je.value));case E.StringLiteral:return++k,new A(Je.value);case E.BooleanLiteral:return++k,new _e(Je.value.toLowerCase()===\"true\");case E.Identifier:return++k,new j(Je.value);case E.OpenParen:{++k;const wt=ce();if(M[k].type!==E.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${M[k].type} instead`);return++k,wt}case E.OpenSquareBracket:{++k;const wt=[];for(;!tt(E.CloseSquareBracket);)wt.push(Ge()),tt(E.Comma)&&++k;return++k,new Me(wt)}case E.OpenCurlyBracket:{++k;const wt=new Map;for(;!tt(E.CloseCurlyBracket);){const Dt=Ge();Q(E.Colon,\"Expected colon between key and value in object literal\");const Kr=Ge();wt.set(Dt,Kr),tt(E.Comma)&&++k}return++k,new Oe(wt)}default:throw new SyntaxError(`Unexpected token: ${Je.type}`)}}for(;k<M.length;)G.body.push(ge());return G}function Z(M,G,k=1){G===void 0&&(G=M,M=0);const Q=[];for(let ge=M;ge<G;ge+=k)Q.push(ge);return Q}function Xe(M,G,k,Q=1){const ge=Math.sign(Q);ge>=0?(G=(G??(G=0))<0?Math.max(M.length+G,0):Math.min(G,M.length),k=(k??(k=M.length))<0?Math.max(M.length+k,0):Math.min(k,M.length)):(G=(G??(G=M.length-1))<0?Math.max(M.length+G,-1):Math.min(G,M.length-1),k=(k??(k=-1))<-1?Math.max(M.length+k,-1):Math.min(k,M.length-1));const Ze=[];for(let tt=G;ge*tt<ge*k;tt+=Q)Ze.push(M[tt]);return Ze}function ht(M){return M.replace(/\\b\\w/g,G=>G.toUpperCase())}var it=class{constructor(M=void 0){Te(this,\"type\",\"RuntimeValue\");Te(this,\"value\");Te(this,\"builtins\",new Map);this.value=M}__bool__(){return new at(!!this.value)}},dt=class extends it{constructor(){super(...arguments);Te(this,\"type\",\"NumericValue\")}},Ne=class extends it{constructor(){super(...arguments);Te(this,\"type\",\"StringValue\");Te(this,\"builtins\",new Map([[\"upper\",new Ue(()=>new Ne(this.value.toUpperCase()))],[\"lower\",new Ue(()=>new Ne(this.value.toLowerCase()))],[\"strip\",new Ue(()=>new Ne(this.value.trim()))],[\"title\",new Ue(()=>new Ne(ht(this.value)))],[\"length\",new dt(this.value.length)]]))}},at=class extends it{constructor(){super(...arguments);Te(this,\"type\",\"BooleanValue\")}},Et=class extends it{constructor(){super(...arguments);Te(this,\"type\",\"ObjectValue\");Te(this,\"builtins\",new Map([[\"get\",new Ue(([G,k])=>{if(!(G instanceof Ne))throw new Error(`Object key must be a string: got ${G.type}`);return this.value.get(G.value)??k??new He})],[\"items\",new Ue(()=>new te(Array.from(this.value.entries()).map(([G,k])=>new te([new Ne(G),k]))))]]))}__bool__(){return new at(this.value.size>0)}},Be=class extends Et{constructor(){super(...arguments);Te(this,\"type\",\"KeywordArgumentsValue\")}},te=class extends it{constructor(){super(...arguments);Te(this,\"type\",\"ArrayValue\");Te(this,\"builtins\",new Map([[\"length\",new dt(this.value.length)]]))}__bool__(){return new at(this.value.length>0)}},Ee=class extends te{constructor(){super(...arguments);Te(this,\"type\",\"TupleValue\")}},Ue=class extends it{constructor(){super(...arguments);Te(this,\"type\",\"FunctionValue\")}},He=class extends it{constructor(){super(...arguments);Te(this,\"type\",\"NullValue\")}},We=class extends it{constructor(){super(...arguments);Te(this,\"type\",\"UndefinedValue\")}},Qe=class{constructor(M){Te(this,\"variables\",new Map([[\"namespace\",new Ue(M=>{if(M.length===0)return new Et(new Map);if(M.length!==1||!(M[0]instanceof Et))throw new Error(\"`namespace` expects either zero arguments or a single object argument\");return M[0]})]]));Te(this,\"tests\",new Map([[\"boolean\",M=>M.type===\"BooleanValue\"],[\"callable\",M=>M instanceof Ue],[\"odd\",M=>{if(M.type!==\"NumericValue\")throw new Error(`Cannot apply test \"odd\" to type: ${M.type}`);return M.value%2!==0}],[\"even\",M=>{if(M.type!==\"NumericValue\")throw new Error(`Cannot apply test \"even\" to type: ${M.type}`);return M.value%2===0}],[\"false\",M=>M.type===\"BooleanValue\"&&!M.value],[\"true\",M=>M.type===\"BooleanValue\"&&M.value],[\"string\",M=>M.type===\"StringValue\"],[\"number\",M=>M.type===\"NumericValue\"],[\"integer\",M=>M.type===\"NumericValue\"&&Number.isInteger(M.value)],[\"iterable\",M=>M instanceof te||M instanceof Ne],[\"lower\",M=>{const G=M.value;return M.type===\"StringValue\"&&G===G.toLowerCase()}],[\"upper\",M=>{const G=M.value;return M.type===\"StringValue\"&&G===G.toUpperCase()}],[\"none\",M=>M.type===\"NullValue\"],[\"defined\",M=>M.type!==\"UndefinedValue\"],[\"undefined\",M=>M.type===\"UndefinedValue\"],[\"equalto\",(M,G)=>M.value===G.value],[\"eq\",(M,G)=>M.value===G.value]]));this.parent=M}set(M,G){return this.declareVariable(M,gt(G))}declareVariable(M,G){if(this.variables.has(M))throw new SyntaxError(`Variable already declared: ${M}`);return this.variables.set(M,G),G}setVariable(M,G){return this.variables.set(M,G),G}resolve(M){if(this.variables.has(M))return this;if(this.parent)return this.parent.resolve(M);throw new Error(`Unknown variable: ${M}`)}lookupVariable(M){try{return this.resolve(M).variables.get(M)??new We}catch{return new We}}},ut=class{constructor(M){Te(this,\"global\");this.global=M??new Qe}run(M){return this.evaluate(M,this.global)}evaluateBinaryExpression(M,G){const k=this.evaluate(M.left,G);switch(M.operator.value){case\"and\":return k.__bool__().value?this.evaluate(M.right,G):k;case\"or\":return k.__bool__().value?k:this.evaluate(M.right,G)}const Q=this.evaluate(M.right,G);switch(M.operator.value){case\"==\":return new at(k.value==Q.value);case\"!=\":return new at(k.value!=Q.value)}if(k instanceof We||Q instanceof We)throw new Error(\"Cannot perform operation on undefined values\");if(k instanceof He||Q instanceof He)throw new Error(\"Cannot perform operation on null values\");if(k instanceof dt&&Q instanceof dt)switch(M.operator.value){case\"+\":return new dt(k.value+Q.value);case\"-\":return new dt(k.value-Q.value);case\"*\":return new dt(k.value*Q.value);case\"/\":return new dt(k.value/Q.value);case\"%\":return new dt(k.value%Q.value);case\"<\":return new at(k.value<Q.value);case\">\":return new at(k.value>Q.value);case\">=\":return new at(k.value>=Q.value);case\"<=\":return new at(k.value<=Q.value)}else if(k instanceof te&&Q instanceof te)switch(M.operator.value){case\"+\":return new te(k.value.concat(Q.value))}else if(Q instanceof te){const ge=Q.value.find(Ze=>Ze.value===k.value)!==void 0;switch(M.operator.value){case\"in\":return new at(ge);case\"not in\":return new at(!ge)}}if(k instanceof Ne||Q instanceof Ne)switch(M.operator.value){case\"+\":return new Ne(k.value.toString()+Q.value.toString())}if(k instanceof Ne&&Q instanceof Ne)switch(M.operator.value){case\"in\":return new at(Q.value.includes(k.value));case\"not in\":return new at(!Q.value.includes(k.value))}if(k instanceof Ne&&Q instanceof Et)switch(M.operator.value){case\"in\":return new at(Q.value.has(k.value));case\"not in\":return new at(!Q.value.has(k.value))}throw new SyntaxError(`Unknown operator \"${M.operator.value}\" between ${k.type} and ${Q.type}`)}evaluateArguments(M,G){const k=[],Q=new Map;for(const ge of M)if(ge.type===\"KeywordArgumentExpression\"){const Ze=ge;Q.set(Ze.key.value,this.evaluate(Ze.value,G))}else{if(Q.size>0)throw new Error(\"Positional arguments must come before keyword arguments\");k.push(this.evaluate(ge,G))}return[k,Q]}evaluateFilterExpression(M,G){const k=this.evaluate(M.operand,G);if(M.filter.type===\"Identifier\"){const Q=M.filter;if(Q.value===\"tojson\")return new Ne(vt(k));if(k instanceof te)switch(Q.value){case\"list\":return k;case\"first\":return k.value[0];case\"last\":return k.value[k.value.length-1];case\"length\":return new dt(k.value.length);case\"reverse\":return new te(k.value.reverse());case\"sort\":return new te(k.value.sort((ge,Ze)=>{if(ge.type!==Ze.type)throw new Error(`Cannot compare different types: ${ge.type} and ${Ze.type}`);switch(ge.type){case\"NumericValue\":return ge.value-Ze.value;case\"StringValue\":return ge.value.localeCompare(Ze.value);default:throw new Error(`Cannot compare type: ${ge.type}`)}}));default:throw new Error(`Unknown ArrayValue filter: ${Q.value}`)}else if(k instanceof Ne)switch(Q.value){case\"length\":return new dt(k.value.length);case\"upper\":return new Ne(k.value.toUpperCase());case\"lower\":return new Ne(k.value.toLowerCase());case\"title\":return new Ne(ht(k.value));case\"capitalize\":return new Ne(k.value.charAt(0).toUpperCase()+k.value.slice(1));case\"trim\":return new Ne(k.value.trim());case\"indent\":return new Ne(k.value.split(`\n`).map((ge,Ze)=>Ze===0||ge.length===0?ge:\"    \"+ge).join(`\n`));case\"string\":return k;default:throw new Error(`Unknown StringValue filter: ${Q.value}`)}else if(k instanceof dt)switch(Q.value){case\"abs\":return new dt(Math.abs(k.value));default:throw new Error(`Unknown NumericValue filter: ${Q.value}`)}else if(k instanceof Et)switch(Q.value){case\"items\":return new te(Array.from(k.value.entries()).map(([ge,Ze])=>new te([new Ne(ge),Ze])));case\"length\":return new dt(k.value.size);default:throw new Error(`Unknown ObjectValue filter: ${Q.value}`)}throw new Error(`Cannot apply filter \"${Q.value}\" to type: ${k.type}`)}else if(M.filter.type===\"CallExpression\"){const Q=M.filter;if(Q.callee.type!==\"Identifier\")throw new Error(`Unknown filter: ${Q.callee.type}`);const ge=Q.callee.value;if(ge===\"tojson\"){const[,Ze]=this.evaluateArguments(Q.args,G),tt=Ze.get(\"indent\")??new He;if(!(tt instanceof dt||tt instanceof He))throw new Error(\"If set, indent must be a number\");return new Ne(vt(k,tt.value))}if(k instanceof te){switch(ge){case\"selectattr\":{if(k.value.some(bt=>!(bt instanceof Et)))throw new Error(\"`selectattr` can only be applied to array of objects\");if(Q.args.some(bt=>bt.type!==\"StringLiteral\"))throw new Error(\"arguments of `selectattr` must be strings\");const[Ze,tt,zt]=Q.args.map(bt=>this.evaluate(bt,G));let yt;if(tt){const bt=G.tests.get(tt.value);if(!bt)throw new Error(`Unknown test: ${tt.value}`);yt=bt}else yt=(...bt)=>bt[0].__bool__().value;const Tt=k.value.filter(bt=>{const Ae=bt.value.get(Ze.value);return Ae?yt(Ae,zt):!1});return new te(Tt)}case\"map\":{const[,Ze]=this.evaluateArguments(Q.args,G);if(Ze.has(\"attribute\")){const tt=Ze.get(\"attribute\");if(!(tt instanceof Ne))throw new Error(\"attribute must be a string\");const zt=Ze.get(\"default\"),yt=k.value.map(Tt=>{if(!(Tt instanceof Et))throw new Error(\"items in map must be an object\");return Tt.value.get(tt.value)??zt??new We});return new te(yt)}else throw new Error(\"`map` expressions without `attribute` set are not currently supported.\")}}throw new Error(`Unknown ArrayValue filter: ${ge}`)}else if(k instanceof Ne){switch(ge){case\"indent\":{const[Ze,tt]=this.evaluateArguments(Q.args,G),zt=Ze.at(0)??tt.get(\"width\")??new dt(4);if(!(zt instanceof dt))throw new Error(\"width must be a number\");const yt=Ze.at(1)??tt.get(\"first\")??new at(!1),Tt=Ze.at(2)??tt.get(\"blank\")??new at(!1),bt=k.value.split(`\n`),Ae=\" \".repeat(zt.value),D=bt.map((ce,Se)=>!yt.value&&Se===0||!Tt.value&&ce.length===0?ce:Ae+ce);return new Ne(D.join(`\n`))}}throw new Error(`Unknown StringValue filter: ${ge}`)}else throw new Error(`Cannot apply filter \"${ge}\" to type: ${k.type}`)}throw new Error(`Unknown filter: ${M.filter.type}`)}evaluateTestExpression(M,G){const k=this.evaluate(M.operand,G),Q=G.tests.get(M.test.value);if(!Q)throw new Error(`Unknown test: ${M.test.value}`);const ge=Q(k);return new at(M.negate?!ge:ge)}evaluateUnaryExpression(M,G){const k=this.evaluate(M.argument,G);switch(M.operator.value){case\"not\":return new at(!k.value);default:throw new SyntaxError(`Unknown operator: ${M.operator.value}`)}}evalProgram(M,G){return this.evaluateBlock(M.body,G)}evaluateBlock(M,G){let k=\"\";for(const Q of M){const ge=this.evaluate(Q,G);ge.type!==\"NullValue\"&&ge.type!==\"UndefinedValue\"&&(k+=ge.value)}return new Ne(k)}evaluateIdentifier(M,G){return G.lookupVariable(M.value)}evaluateCallExpression(M,G){const[k,Q]=this.evaluateArguments(M.args,G);Q.size>0&&k.push(new Be(Q));const ge=this.evaluate(M.callee,G);if(ge.type!==\"FunctionValue\")throw new Error(`Cannot call something that is not a function: got ${ge.type}`);return ge.value(k,G)}evaluateSliceExpression(M,G,k){if(!(M instanceof te||M instanceof Ne))throw new Error(\"Slice object must be an array or string\");const Q=this.evaluate(G.start,k),ge=this.evaluate(G.stop,k),Ze=this.evaluate(G.step,k);if(!(Q instanceof dt||Q instanceof We))throw new Error(\"Slice start must be numeric or undefined\");if(!(ge instanceof dt||ge instanceof We))throw new Error(\"Slice stop must be numeric or undefined\");if(!(Ze instanceof dt||Ze instanceof We))throw new Error(\"Slice step must be numeric or undefined\");return M instanceof te?new te(Xe(M.value,Q.value,ge.value,Ze.value)):new Ne(Xe(Array.from(M.value),Q.value,ge.value,Ze.value).join(\"\"))}evaluateMemberExpression(M,G){const k=this.evaluate(M.object,G);let Q;if(M.computed){if(M.property.type===\"SliceExpression\")return this.evaluateSliceExpression(k,M.property,G);Q=this.evaluate(M.property,G)}else Q=new Ne(M.property.value);let ge;if(k instanceof Et){if(!(Q instanceof Ne))throw new Error(`Cannot access property with non-string: got ${Q.type}`);ge=k.value.get(Q.value)??k.builtins.get(Q.value)}else if(k instanceof te||k instanceof Ne)if(Q instanceof dt)ge=k.value.at(Q.value),k instanceof Ne&&(ge=new Ne(k.value.at(Q.value)));else if(Q instanceof Ne)ge=k.builtins.get(Q.value);else throw new Error(`Cannot access property with non-string/non-number: got ${Q.type}`);else{if(!(Q instanceof Ne))throw new Error(`Cannot access property with non-string: got ${Q.type}`);ge=k.builtins.get(Q.value)}return ge instanceof it?ge:new We}evaluateSet(M,G){const k=this.evaluate(M.value,G);if(M.assignee.type===\"Identifier\"){const Q=M.assignee.value;G.setVariable(Q,k)}else if(M.assignee.type===\"MemberExpression\"){const Q=M.assignee,ge=this.evaluate(Q.object,G);if(!(ge instanceof Et))throw new Error(\"Cannot assign to member of non-object\");if(Q.property.type!==\"Identifier\")throw new Error(\"Cannot assign to member with non-identifier property\");ge.value.set(Q.property.value,k)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(M.assignee)}`);return new He}evaluateIf(M,G){const k=this.evaluate(M.test,G);return this.evaluateBlock(k.__bool__().value?M.body:M.alternate,G)}evaluateFor(M,G){const k=new Qe(G);let Q,ge;if(M.iterable.type===\"SelectExpression\"){const Tt=M.iterable;ge=this.evaluate(Tt.iterable,k),Q=Tt.test}else ge=this.evaluate(M.iterable,k);if(!(ge instanceof te))throw new Error(`Expected iterable type in for loop: got ${ge.type}`);const Ze=[],tt=[];for(let Tt=0;Tt<ge.value.length;++Tt){const bt=new Qe(k),Ae=ge.value[Tt];let D;if(M.loopvar.type===\"Identifier\")D=ce=>ce.setVariable(M.loopvar.value,Ae);else if(M.loopvar.type===\"TupleLiteral\"){const ce=M.loopvar;if(Ae.type!==\"ArrayValue\")throw new Error(`Cannot unpack non-iterable type: ${Ae.type}`);const Se=Ae;if(ce.value.length!==Se.value.length)throw new Error(`Too ${ce.value.length>Se.value.length?\"few\":\"many\"} items to unpack`);D=Ge=>{for(let Fe=0;Fe<ce.value.length;++Fe){if(ce.value[Fe].type!==\"Identifier\")throw new Error(`Cannot unpack non-identifier type: ${ce.value[Fe].type}`);Ge.setVariable(ce.value[Fe].value,Se.value[Fe])}}}else throw new Error(`Invalid loop variable(s): ${M.loopvar.type}`);Q&&(D(bt),!this.evaluate(Q,bt).__bool__().value)||(Ze.push(Ae),tt.push(D))}let zt=\"\",yt=!0;for(let Tt=0;Tt<Ze.length;++Tt){const bt=new Map([[\"index\",new dt(Tt+1)],[\"index0\",new dt(Tt)],[\"revindex\",new dt(Ze.length-Tt)],[\"revindex0\",new dt(Ze.length-Tt-1)],[\"first\",new at(Tt===0)],[\"last\",new at(Tt===Ze.length-1)],[\"length\",new dt(Ze.length)],[\"previtem\",Tt>0?Ze[Tt-1]:new We],[\"nextitem\",Tt<Ze.length-1?Ze[Tt+1]:new We]]);k.setVariable(\"loop\",new Et(bt)),tt[Tt](k);const Ae=this.evaluateBlock(M.body,k);zt+=Ae.value,yt=!1}if(yt){const Tt=this.evaluateBlock(M.defaultBlock,k);zt+=Tt.value}return new Ne(zt)}evaluateMacro(M,G){return G.setVariable(M.name.value,new Ue((k,Q)=>{var tt;const ge=new Qe(Q);k=k.slice();let Ze;((tt=k.at(-1))==null?void 0:tt.type)===\"KeywordArgumentsValue\"&&(Ze=k.pop());for(let zt=0;zt<M.args.length;++zt){const yt=M.args[zt],Tt=k[zt];if(yt.type===\"Identifier\"){const bt=yt;if(!Tt)throw new Error(`Missing positional argument: ${bt.value}`);ge.setVariable(bt.value,Tt)}else if(yt.type===\"KeywordArgumentExpression\"){const bt=yt,Ae=Tt??(Ze==null?void 0:Ze.value.get(bt.key.value))??this.evaluate(bt.value,ge);ge.setVariable(bt.key.value,Ae)}else throw new Error(`Unknown argument type: ${yt.type}`)}return this.evaluateBlock(M.body,ge)})),new He}evaluate(M,G){if(M===void 0)return new We;switch(M.type){case\"Program\":return this.evalProgram(M,G);case\"Set\":return this.evaluateSet(M,G);case\"If\":return this.evaluateIf(M,G);case\"For\":return this.evaluateFor(M,G);case\"Macro\":return this.evaluateMacro(M,G);case\"NumericLiteral\":return new dt(Number(M.value));case\"StringLiteral\":return new Ne(M.value);case\"BooleanLiteral\":return new at(M.value);case\"ArrayLiteral\":return new te(M.value.map(k=>this.evaluate(k,G)));case\"TupleLiteral\":return new Ee(M.value.map(k=>this.evaluate(k,G)));case\"ObjectLiteral\":{const k=new Map;for(const[Q,ge]of M.value){const Ze=this.evaluate(Q,G);if(!(Ze instanceof Ne))throw new Error(`Object keys must be strings: got ${Ze.type}`);k.set(Ze.value,this.evaluate(ge,G))}return new Et(k)}case\"Identifier\":return this.evaluateIdentifier(M,G);case\"CallExpression\":return this.evaluateCallExpression(M,G);case\"MemberExpression\":return this.evaluateMemberExpression(M,G);case\"UnaryExpression\":return this.evaluateUnaryExpression(M,G);case\"BinaryExpression\":return this.evaluateBinaryExpression(M,G);case\"FilterExpression\":return this.evaluateFilterExpression(M,G);case\"TestExpression\":return this.evaluateTestExpression(M,G);default:throw new SyntaxError(`Unknown node type: ${M.type}`)}}};function gt(M){switch(typeof M){case\"number\":return new dt(M);case\"string\":return new Ne(M);case\"boolean\":return new at(M);case\"undefined\":return new We;case\"object\":return M===null?new He:Array.isArray(M)?new te(M.map(gt)):new Et(new Map(Object.entries(M).map(([G,k])=>[G,gt(k)])));case\"function\":return new Ue((G,k)=>{const Q=M(...G.map(ge=>ge.value))??null;return gt(Q)});default:throw new Error(`Cannot convert to runtime value: ${M}`)}}function vt(M,G,k){const Q=k??0;switch(M.type){case\"NullValue\":case\"UndefinedValue\":return\"null\";case\"NumericValue\":case\"StringValue\":case\"BooleanValue\":return JSON.stringify(M.value);case\"ArrayValue\":case\"ObjectValue\":{const ge=G?\" \".repeat(G):\"\",Ze=`\n`+ge.repeat(Q),tt=Ze+ge;if(M.type===\"ArrayValue\"){const zt=M.value.map(yt=>vt(yt,G,Q+1));return G?`[${tt}${zt.join(`,${tt}`)}${Ze}]`:`[${zt.join(\", \")}]`}else{const zt=Array.from(M.value.entries()).map(([yt,Tt])=>{const bt=`\"${yt}\": ${vt(Tt,G,Q+1)}`;return G?`${tt}${bt}`:bt});return G?`{${zt.join(\",\")}${Ze}}`:`{${zt.join(\", \")}}`}}default:throw new Error(`Cannot convert to JSON: ${M.type}`)}}var Ct=class{constructor(M){Te(this,\"parsed\");const G=P(M,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=Ce(G)}render(M){const G=new Qe;G.set(\"false\",!1),G.set(\"true\",!0),G.set(\"raise_exception\",ge=>{throw new Error(ge)}),G.set(\"range\",Z);for(const[ge,Ze]of Object.entries(M))G.set(ge,Ze);return new ut(G).run(this.parsed).value}}},\"./node_modules/onnxruntime-common/dist/esm/backend-impl.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{registerBackend:()=>we,resolveBackendAndExecutionProviders:()=>xe});const E=new Map,ie=[],we=(N,T,V)=>{if(T&&typeof T.init==\"function\"&&typeof T.createInferenceSessionHandler==\"function\"){const P=E.get(N);if(P===void 0)E.set(N,{backend:T,priority:V});else{if(P.priority>V)return;if(P.priority===V&&P.backend!==T)throw new Error(`cannot register backend \"${N}\" using priority ${V}`)}if(V>=0){const K=ie.indexOf(N);K!==-1&&ie.splice(K,1);for(let ee=0;ee<ie.length;ee++)if(E.get(ie[ee]).priority<=V){ie.splice(ee,0,N);return}ie.push(N)}return}throw new TypeError(\"not a valid backend\")},ve=async N=>{const T=E.get(N);if(!T)return\"backend not found.\";if(T.initialized)return T.backend;if(T.aborted)return T.error;{const V=!!T.initPromise;try{return V||(T.initPromise=T.backend.init(N)),await T.initPromise,T.initialized=!0,T.backend}catch(P){return V||(T.error=`${P}`,T.aborted=!0),T.error}finally{delete T.initPromise}}},xe=async N=>{const T=N.executionProviders||[],V=T.map(F=>typeof F==\"string\"?F:F.name),P=V.length===0?ie:V;let K;const ee=[],ne=new Set;for(const F of P){const J=await ve(F);typeof J==\"string\"?ee.push({name:F,err:J}):(K||(K=J),K===J&&ne.add(F))}if(!K)throw new Error(`no available backend found. ERR: ${ee.map(F=>`[${F.name}] ${F.err}`).join(\", \")}`);for(const{name:F,err:J}of ee)V.includes(F)&&console.warn(`removing requested execution provider \"${F}\" from session options because it is not available: ${J}`);const me=T.filter(F=>ne.has(typeof F==\"string\"?F:F.name));return[K,new Proxy(N,{get:(F,J)=>J===\"executionProviders\"?me:Reflect.get(F,J)})]}},\"./node_modules/onnxruntime-common/dist/esm/backend.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{registerBackend:()=>E.registerBackend});var E=I(\"./node_modules/onnxruntime-common/dist/esm/backend-impl.js\")},\"./node_modules/onnxruntime-common/dist/esm/env-impl.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{env:()=>we});var E=I(\"./node_modules/onnxruntime-common/dist/esm/version.js\");let ie=\"warning\";const we={wasm:{},webgl:{},webgpu:{},versions:{common:E.version},set logLevel(ve){if(ve!==void 0){if(typeof ve!=\"string\"||[\"verbose\",\"info\",\"warning\",\"error\",\"fatal\"].indexOf(ve)===-1)throw new Error(`Unsupported logging level: ${ve}`);ie=ve}},get logLevel(){return ie}};Object.defineProperty(we,\"logLevel\",{enumerable:!0})},\"./node_modules/onnxruntime-common/dist/esm/env.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{env:()=>ie});var E=I(\"./node_modules/onnxruntime-common/dist/esm/env-impl.js\");const ie=E.env},\"./node_modules/onnxruntime-common/dist/esm/index.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{InferenceSession:()=>we.InferenceSession,TRACE:()=>xe.TRACE,TRACE_FUNC_BEGIN:()=>xe.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>xe.TRACE_FUNC_END,Tensor:()=>ve.Tensor,TrainingSession:()=>N.TrainingSession,env:()=>ie.env,registerBackend:()=>E.registerBackend});var E=I(\"./node_modules/onnxruntime-common/dist/esm/backend.js\"),ie=I(\"./node_modules/onnxruntime-common/dist/esm/env.js\"),we=I(\"./node_modules/onnxruntime-common/dist/esm/inference-session.js\"),ve=I(\"./node_modules/onnxruntime-common/dist/esm/tensor.js\");I(\"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js\"),I(\"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js\");var xe=I(\"./node_modules/onnxruntime-common/dist/esm/trace.js\");I(\"./node_modules/onnxruntime-common/dist/esm/onnx-model.js\"),I(\"./node_modules/onnxruntime-common/dist/esm/onnx-value.js\");var N=I(\"./node_modules/onnxruntime-common/dist/esm/training-session.js\")},\"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{InferenceSession:()=>ve});var E=I(\"./node_modules/onnxruntime-common/dist/esm/backend-impl.js\"),ie=I(\"./node_modules/onnxruntime-common/dist/esm/tensor.js\"),we=I(\"./node_modules/onnxruntime-common/dist/esm/trace.js\");class ve{constructor(N){this.handler=N}async run(N,T,V){(0,we.TRACE_FUNC_BEGIN)();const P={};let K={};if(typeof N!=\"object\"||N===null||N instanceof ie.Tensor||Array.isArray(N))throw new TypeError(\"'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.\");let ee=!0;if(typeof T==\"object\"){if(T===null)throw new TypeError(\"Unexpected argument[1]: cannot be null.\");if(T instanceof ie.Tensor)throw new TypeError(\"'fetches' cannot be a Tensor\");if(Array.isArray(T)){if(T.length===0)throw new TypeError(\"'fetches' cannot be an empty array.\");ee=!1;for(const F of T){if(typeof F!=\"string\")throw new TypeError(\"'fetches' must be a string array or an object.\");if(this.outputNames.indexOf(F)===-1)throw new RangeError(`'fetches' contains invalid output name: ${F}.`);P[F]=null}if(typeof V==\"object\"&&V!==null)K=V;else if(typeof V<\"u\")throw new TypeError(\"'options' must be an object.\")}else{let F=!1;const J=Object.getOwnPropertyNames(T);for(const re of this.outputNames)if(J.indexOf(re)!==-1){const le=T[re];(le===null||le instanceof ie.Tensor)&&(F=!0,ee=!1,P[re]=le)}if(F){if(typeof V==\"object\"&&V!==null)K=V;else if(typeof V<\"u\")throw new TypeError(\"'options' must be an object.\")}else K=T}}else if(typeof T<\"u\")throw new TypeError(\"Unexpected argument[1]: must be 'fetches' or 'options'.\");for(const F of this.inputNames)if(typeof N[F]>\"u\")throw new Error(`input '${F}' is missing in 'feeds'.`);if(ee)for(const F of this.outputNames)P[F]=null;const ne=await this.handler.run(N,P,K),me={};for(const F in ne)if(Object.hasOwnProperty.call(ne,F)){const J=ne[F];J instanceof ie.Tensor?me[F]=J:me[F]=new ie.Tensor(J.type,J.data,J.dims)}return(0,we.TRACE_FUNC_END)(),me}async release(){return this.handler.dispose()}static async create(N,T,V,P){(0,we.TRACE_FUNC_BEGIN)();let K,ee={};if(typeof N==\"string\"){if(K=N,typeof T==\"object\"&&T!==null)ee=T;else if(typeof T<\"u\")throw new TypeError(\"'options' must be an object.\")}else if(N instanceof Uint8Array){if(K=N,typeof T==\"object\"&&T!==null)ee=T;else if(typeof T<\"u\")throw new TypeError(\"'options' must be an object.\")}else if(N instanceof ArrayBuffer||typeof SharedArrayBuffer<\"u\"&&N instanceof SharedArrayBuffer){const J=N;let re=0,le=N.byteLength;if(typeof T==\"object\"&&T!==null)ee=T;else if(typeof T==\"number\"){if(re=T,!Number.isSafeInteger(re))throw new RangeError(\"'byteOffset' must be an integer.\");if(re<0||re>=J.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${J.byteLength}).`);if(le=N.byteLength-re,typeof V==\"number\"){if(le=V,!Number.isSafeInteger(le))throw new RangeError(\"'byteLength' must be an integer.\");if(le<=0||re+le>J.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${J.byteLength-re}].`);if(typeof P==\"object\"&&P!==null)ee=P;else if(typeof P<\"u\")throw new TypeError(\"'options' must be an object.\")}else if(typeof V<\"u\")throw new TypeError(\"'byteLength' must be a number.\")}else if(typeof T<\"u\")throw new TypeError(\"'options' must be an object.\");K=new Uint8Array(J,re,le)}else throw new TypeError(\"Unexpected argument[0]: must be 'path' or 'buffer'.\");const[ne,me]=await(0,E.resolveBackendAndExecutionProviders)(ee),F=await ne.createInferenceSessionHandler(K,me);return(0,we.TRACE_FUNC_END)(),new ve(F)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},\"./node_modules/onnxruntime-common/dist/esm/inference-session.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{InferenceSession:()=>ie});var E=I(\"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js\");const ie=E.InferenceSession},\"./node_modules/onnxruntime-common/dist/esm/onnx-model.js\":(nt,fe,I)=>{I.r(fe)},\"./node_modules/onnxruntime-common/dist/esm/onnx-value.js\":(nt,fe,I)=>{I.r(fe)},\"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{tensorToDataURL:()=>E,tensorToImageData:()=>ie});const E=(we,ve)=>{const xe=typeof document<\"u\"?document.createElement(\"canvas\"):new OffscreenCanvas(1,1);xe.width=we.dims[3],xe.height=we.dims[2];const N=xe.getContext(\"2d\");if(N!=null){let T,V;(ve==null?void 0:ve.tensorLayout)!==void 0&&ve.tensorLayout===\"NHWC\"?(T=we.dims[2],V=we.dims[3]):(T=we.dims[3],V=we.dims[2]);const P=(ve==null?void 0:ve.format)!==void 0?ve.format:\"RGB\",K=ve==null?void 0:ve.norm;let ee,ne;K===void 0||K.mean===void 0?ee=[255,255,255,255]:typeof K.mean==\"number\"?ee=[K.mean,K.mean,K.mean,K.mean]:(ee=[K.mean[0],K.mean[1],K.mean[2],0],K.mean[3]!==void 0&&(ee[3]=K.mean[3])),K===void 0||K.bias===void 0?ne=[0,0,0,0]:typeof K.bias==\"number\"?ne=[K.bias,K.bias,K.bias,K.bias]:(ne=[K.bias[0],K.bias[1],K.bias[2],0],K.bias[3]!==void 0&&(ne[3]=K.bias[3]));const me=V*T;let F=0,J=me,re=me*2,le=-1;P===\"RGBA\"?(F=0,J=me,re=me*2,le=me*3):P===\"RGB\"?(F=0,J=me,re=me*2):P===\"RBG\"&&(F=0,re=me,J=me*2);for(let ae=0;ae<V;ae++)for(let j=0;j<T;j++){const O=(we.data[F++]-ne[0])*ee[0],R=(we.data[J++]-ne[1])*ee[1],A=(we.data[re++]-ne[2])*ee[2],_e=le===-1?255:(we.data[le++]-ne[3])*ee[3];N.fillStyle=\"rgba(\"+O+\",\"+R+\",\"+A+\",\"+_e+\")\",N.fillRect(j,ae,1,1)}if(\"toDataURL\"in xe)return xe.toDataURL();throw new Error(\"toDataURL is not supported\")}else throw new Error(\"Can not access image data\")},ie=(we,ve)=>{const xe=typeof document<\"u\"?document.createElement(\"canvas\").getContext(\"2d\"):new OffscreenCanvas(1,1).getContext(\"2d\");let N;if(xe!=null){let T,V,P;(ve==null?void 0:ve.tensorLayout)!==void 0&&ve.tensorLayout===\"NHWC\"?(T=we.dims[2],V=we.dims[1],P=we.dims[3]):(T=we.dims[3],V=we.dims[2],P=we.dims[1]);const K=ve!==void 0&&ve.format!==void 0?ve.format:\"RGB\",ee=ve==null?void 0:ve.norm;let ne,me;ee===void 0||ee.mean===void 0?ne=[255,255,255,255]:typeof ee.mean==\"number\"?ne=[ee.mean,ee.mean,ee.mean,ee.mean]:(ne=[ee.mean[0],ee.mean[1],ee.mean[2],255],ee.mean[3]!==void 0&&(ne[3]=ee.mean[3])),ee===void 0||ee.bias===void 0?me=[0,0,0,0]:typeof ee.bias==\"number\"?me=[ee.bias,ee.bias,ee.bias,ee.bias]:(me=[ee.bias[0],ee.bias[1],ee.bias[2],0],ee.bias[3]!==void 0&&(me[3]=ee.bias[3]));const F=V*T;if(ve!==void 0&&(ve.format!==void 0&&P===4&&ve.format!==\"RGBA\"||P===3&&ve.format!==\"RGB\"&&ve.format!==\"BGR\"))throw new Error(\"Tensor format doesn't match input tensor dims\");const J=4;let re=0,le=1,ae=2,j=3,O=0,R=F,A=F*2,_e=-1;K===\"RGBA\"?(O=0,R=F,A=F*2,_e=F*3):K===\"RGB\"?(O=0,R=F,A=F*2):K===\"RBG\"&&(O=0,A=F,R=F*2),N=xe.createImageData(T,V);for(let Me=0;Me<V*T;re+=J,le+=J,ae+=J,j+=J,Me++)N.data[re]=(we.data[O++]-me[0])*ne[0],N.data[le]=(we.data[R++]-me[1])*ne[1],N.data[ae]=(we.data[A++]-me[2])*ne[2],N.data[j]=_e===-1?255:(we.data[_e++]-me[3])*ne[3]}else throw new Error(\"Can not access image data\");return N}},\"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js\":(nt,fe,I)=>{I.r(fe)},\"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{bufferToTensor:()=>ie,tensorFromGpuBuffer:()=>xe,tensorFromImage:()=>we,tensorFromPinnedBuffer:()=>N,tensorFromTexture:()=>ve});var E=I(\"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js\");const ie=(T,V)=>{if(T===void 0)throw new Error(\"Image buffer must be defined\");if(V.height===void 0||V.width===void 0)throw new Error(\"Image height and width must be defined\");if(V.tensorLayout===\"NHWC\")throw new Error(\"NHWC Tensor layout is not supported yet\");const{height:P,width:K}=V,ee=V.norm??{mean:255,bias:0};let ne,me;typeof ee.mean==\"number\"?ne=[ee.mean,ee.mean,ee.mean,ee.mean]:ne=[ee.mean[0],ee.mean[1],ee.mean[2],ee.mean[3]??255],typeof ee.bias==\"number\"?me=[ee.bias,ee.bias,ee.bias,ee.bias]:me=[ee.bias[0],ee.bias[1],ee.bias[2],ee.bias[3]??0];const F=V.format!==void 0?V.format:\"RGBA\",J=V.tensorFormat!==void 0&&V.tensorFormat!==void 0?V.tensorFormat:\"RGB\",re=P*K,le=J===\"RGBA\"?new Float32Array(re*4):new Float32Array(re*3);let ae=4,j=0,O=1,R=2,A=3,_e=0,Me=re,ke=re*2,Oe=-1;F===\"RGB\"&&(ae=3,j=0,O=1,R=2,A=-1),J===\"RGBA\"?Oe=re*3:J===\"RBG\"?(_e=0,ke=re,Me=re*2):J===\"BGR\"&&(ke=0,Me=re,_e=re*2);for(let st=0;st<re;st++,j+=ae,R+=ae,O+=ae,A+=ae)le[_e++]=(T[j]+me[0])/ne[0],le[Me++]=(T[O]+me[1])/ne[1],le[ke++]=(T[R]+me[2])/ne[2],Oe!==-1&&A!==-1&&(le[Oe++]=(T[A]+me[3])/ne[3]);return J===\"RGBA\"?new E.Tensor(\"float32\",le,[1,4,P,K]):new E.Tensor(\"float32\",le,[1,3,P,K])},we=async(T,V)=>{const P=typeof HTMLImageElement<\"u\"&&T instanceof HTMLImageElement,K=typeof ImageData<\"u\"&&T instanceof ImageData,ee=typeof ImageBitmap<\"u\"&&T instanceof ImageBitmap,ne=typeof T==\"string\";let me,F=V??{};const J=()=>{if(typeof document<\"u\")return document.createElement(\"canvas\");if(typeof OffscreenCanvas<\"u\")return new OffscreenCanvas(1,1);throw new Error(\"Canvas is not supported\")},re=le=>le instanceof HTMLCanvasElement||le instanceof OffscreenCanvas?le.getContext(\"2d\"):null;if(P){const le=J();le.width=T.width,le.height=T.height;const ae=re(le);if(ae!=null){let j=T.height,O=T.width;if(V!==void 0&&V.resizedHeight!==void 0&&V.resizedWidth!==void 0&&(j=V.resizedHeight,O=V.resizedWidth),V!==void 0){if(F=V,V.tensorFormat!==void 0)throw new Error(\"Image input config format must be RGBA for HTMLImageElement\");F.tensorFormat=\"RGBA\",F.height=j,F.width=O}else F.tensorFormat=\"RGBA\",F.height=j,F.width=O;ae.drawImage(T,0,0),me=ae.getImageData(0,0,O,j).data}else throw new Error(\"Can not access image data\")}else if(K){let le,ae;if(V!==void 0&&V.resizedWidth!==void 0&&V.resizedHeight!==void 0?(le=V.resizedHeight,ae=V.resizedWidth):(le=T.height,ae=T.width),V!==void 0&&(F=V),F.format=\"RGBA\",F.height=le,F.width=ae,V!==void 0){const j=J();j.width=ae,j.height=le;const O=re(j);if(O!=null)O.putImageData(T,0,0),me=O.getImageData(0,0,ae,le).data;else throw new Error(\"Can not access image data\")}else me=T.data}else if(ee){if(V===void 0)throw new Error(\"Please provide image config with format for Imagebitmap\");const le=J();le.width=T.width,le.height=T.height;const ae=re(le);if(ae!=null){const j=T.height,O=T.width;return ae.drawImage(T,0,0,O,j),me=ae.getImageData(0,0,O,j).data,F.height=j,F.width=O,ie(me,F)}else throw new Error(\"Can not access image data\")}else{if(ne)return new Promise((le,ae)=>{const j=J(),O=re(j);if(!T||!O)return ae();const R=new Image;R.crossOrigin=\"Anonymous\",R.src=T,R.onload=()=>{j.width=R.width,j.height=R.height,O.drawImage(R,0,0,j.width,j.height);const A=O.getImageData(0,0,j.width,j.height);F.height=j.height,F.width=j.width,le(ie(A.data,F))}});throw new Error(\"Input data provided is not supported - aborted tensor creation\")}if(me!==void 0)return ie(me,F);throw new Error(\"Input data provided is not supported - aborted tensor creation\")},ve=(T,V)=>{const{width:P,height:K,download:ee,dispose:ne}=V,me=[1,K,P,4];return new E.Tensor({location:\"texture\",type:\"float32\",texture:T,dims:me,download:ee,dispose:ne})},xe=(T,V)=>{const{dataType:P,dims:K,download:ee,dispose:ne}=V;return new E.Tensor({location:\"gpu-buffer\",type:P??\"float32\",gpuBuffer:T,dims:K,download:ee,dispose:ne})},N=(T,V,P)=>new E.Tensor({location:\"cpu-pinned\",type:T,data:V,dims:P??[V.length]})},\"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js\":(nt,fe,I)=>{I.r(fe)},\"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>ie,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>E,checkTypedArray:()=>ve});const E=new Map([[\"float32\",Float32Array],[\"uint8\",Uint8Array],[\"int8\",Int8Array],[\"uint16\",Uint16Array],[\"int16\",Int16Array],[\"int32\",Int32Array],[\"bool\",Uint8Array],[\"float64\",Float64Array],[\"uint32\",Uint32Array]]),ie=new Map([[Float32Array,\"float32\"],[Uint8Array,\"uint8\"],[Int8Array,\"int8\"],[Uint16Array,\"uint16\"],[Int16Array,\"int16\"],[Int32Array,\"int32\"],[Float64Array,\"float64\"],[Uint32Array,\"uint32\"]]);let we=!1;const ve=()=>{if(!we){we=!0;const xe=typeof BigInt64Array<\"u\"&&BigInt64Array.from,N=typeof BigUint64Array<\"u\"&&BigUint64Array.from,T=typeof Float16Array<\"u\"&&Float16Array.from;xe&&(E.set(\"int64\",BigInt64Array),ie.set(BigInt64Array,\"int64\")),N&&(E.set(\"uint64\",BigUint64Array),ie.set(BigUint64Array,\"uint64\")),T?(E.set(\"float16\",Float16Array),ie.set(Float16Array,\"float16\")):E.set(\"float16\",Uint16Array)}}},\"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{Tensor:()=>xe});var E=I(\"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js\"),ie=I(\"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js\"),we=I(\"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js\"),ve=I(\"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js\");class xe{constructor(T,V,P){(0,we.checkTypedArray)();let K,ee;if(typeof T==\"object\"&&\"location\"in T)switch(this.dataLocation=T.location,K=T.type,ee=T.dims,T.location){case\"cpu-pinned\":{const me=we.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(K);if(!me)throw new TypeError(`unsupported type \"${K}\" to create tensor from pinned buffer`);if(!(T.data instanceof me))throw new TypeError(`buffer should be of type ${me.name}`);this.cpuData=T.data;break}case\"texture\":{if(K!==\"float32\")throw new TypeError(`unsupported type \"${K}\" to create tensor from texture`);this.gpuTextureData=T.texture,this.downloader=T.download,this.disposer=T.dispose;break}case\"gpu-buffer\":{if(K!==\"float32\"&&K!==\"float16\"&&K!==\"int32\"&&K!==\"int64\"&&K!==\"uint32\"&&K!==\"uint8\"&&K!==\"bool\")throw new TypeError(`unsupported type \"${K}\" to create tensor from gpu buffer`);this.gpuBufferData=T.gpuBuffer,this.downloader=T.download,this.disposer=T.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let me,F;if(typeof T==\"string\")if(K=T,F=P,T===\"string\"){if(!Array.isArray(V))throw new TypeError(\"A string tensor's data must be a string array.\");me=V}else{const J=we.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(T);if(J===void 0)throw new TypeError(`Unsupported tensor type: ${T}.`);if(Array.isArray(V)){if(T===\"float16\"&&J===Uint16Array)throw new TypeError(\"Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.\");T===\"uint64\"||T===\"int64\"?me=J.from(V,BigInt):me=J.from(V)}else if(V instanceof J)me=V;else throw new TypeError(`A ${K} tensor's data must be type of ${J}`)}else if(F=V,Array.isArray(T)){if(T.length===0)throw new TypeError(\"Tensor type cannot be inferred from an empty array.\");const J=typeof T[0];if(J===\"string\")K=\"string\",me=T;else if(J===\"boolean\")K=\"bool\",me=Uint8Array.from(T);else throw new TypeError(`Invalid element type of data array: ${J}.`)}else{const J=we.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(T.constructor);if(J===void 0)throw new TypeError(`Unsupported type for tensor data: ${T.constructor}.`);K=J,me=T}if(F===void 0)F=[me.length];else if(!Array.isArray(F))throw new TypeError(\"A tensor's dims must be a number array\");ee=F,this.cpuData=me,this.dataLocation=\"cpu\"}const ne=(0,ve.calculateSize)(ee);if(this.cpuData&&ne!==this.cpuData.length)throw new Error(`Tensor's size(${ne}) does not match data length(${this.cpuData.length}).`);this.type=K,this.dims=ee,this.size=ne}static async fromImage(T,V){return(0,ie.tensorFromImage)(T,V)}static fromTexture(T,V){return(0,ie.tensorFromTexture)(T,V)}static fromGpuBuffer(T,V){return(0,ie.tensorFromGpuBuffer)(T,V)}static fromPinnedBuffer(T,V,P){return(0,ie.tensorFromPinnedBuffer)(T,V,P)}toDataURL(T){return(0,E.tensorToDataURL)(this,T)}toImageData(T){return(0,E.tensorToImageData)(this,T)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error(\"The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.\");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error(\"The data is not stored as a WebGL texture.\");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error(\"The data is not stored as a WebGPU buffer.\");return this.gpuBufferData}async getData(T){switch(this.ensureValid(),this.dataLocation){case\"cpu\":case\"cpu-pinned\":return this.data;case\"texture\":case\"gpu-buffer\":{if(!this.downloader)throw new Error(\"The current tensor is not created with a specified data downloader.\");if(this.isDownloading)throw new Error(\"The current tensor is being downloaded.\");try{this.isDownloading=!0;const V=await this.downloader();return this.downloader=void 0,this.dataLocation=\"cpu\",this.cpuData=V,T&&this.disposer&&(this.disposer(),this.disposer=void 0),V}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error(\"The current tensor is being downloaded.\");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation=\"none\"}ensureValid(){if(this.dataLocation===\"none\")throw new Error(\"The tensor is disposed.\")}reshape(T){if(this.ensureValid(),this.downloader||this.disposer)throw new Error(\"Cannot reshape a tensor that owns GPU resource.\");return(0,ve.tensorReshape)(this,T)}}},\"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{calculateSize:()=>ie,tensorReshape:()=>we});var E=I(\"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js\");const ie=ve=>{let xe=1;for(let N=0;N<ve.length;N++){const T=ve[N];if(typeof T!=\"number\"||!Number.isSafeInteger(T))throw new TypeError(`dims[${N}] must be an integer, got: ${T}`);if(T<0)throw new RangeError(`dims[${N}] must be a non-negative integer, got: ${T}`);xe*=T}return xe},we=(ve,xe)=>{switch(ve.location){case\"cpu\":return new E.Tensor(ve.type,ve.data,xe);case\"cpu-pinned\":return new E.Tensor({location:\"cpu-pinned\",data:ve.data,type:ve.type,dims:xe});case\"texture\":return new E.Tensor({location:\"texture\",texture:ve.texture,type:ve.type,dims:xe});case\"gpu-buffer\":return new E.Tensor({location:\"gpu-buffer\",gpuBuffer:ve.gpuBuffer,type:ve.type,dims:xe});default:throw new Error(`tensorReshape: tensor location ${ve.location} is not supported`)}}},\"./node_modules/onnxruntime-common/dist/esm/tensor.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{Tensor:()=>ie});var E=I(\"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js\");const ie=E.Tensor},\"./node_modules/onnxruntime-common/dist/esm/trace.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{TRACE:()=>ie,TRACE_FUNC_BEGIN:()=>ve,TRACE_FUNC_END:()=>xe});var E=I(\"./node_modules/onnxruntime-common/dist/esm/env-impl.js\");const ie=(N,T)=>{(typeof E.env.trace>\"u\"?!E.env.wasm.trace:!E.env.trace)||console.timeStamp(`${N}::ORT::${T}`)},we=(N,T)=>{var K;const V=((K=new Error().stack)==null?void 0:K.split(/\\r\\n|\\r|\\n/g))||[];let P=!1;for(let ee=0;ee<V.length;ee++){if(P&&!V[ee].includes(\"TRACE_FUNC\")){let ne=`FUNC_${N}::${V[ee].trim().split(\" \")[1]}`;T&&(ne+=`::${T}`),ie(\"CPU\",ne);return}V[ee].includes(\"TRACE_FUNC\")&&(P=!0)}},ve=N=>{(typeof E.env.trace>\"u\"?!E.env.wasm.trace:!E.env.trace)||we(\"BEGIN\",N)},xe=N=>{(typeof E.env.trace>\"u\"?!E.env.wasm.trace:!E.env.trace)||we(\"END\",N)}},\"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{TrainingSession:()=>ve});var E=I(\"./node_modules/onnxruntime-common/dist/esm/backend-impl.js\"),ie=I(\"./node_modules/onnxruntime-common/dist/esm/tensor.js\");const we=\"Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.\";class ve{constructor(N,T,V){this.handler=N,this.hasOptimizerModel=T,this.hasEvalModel=V}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error(\"This training session has no evalModel loaded.\")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error(\"This training session has no evalModel loaded.\")}static async create(N,T){const V=N.evalModel||\"\",P=N.optimizerModel||\"\",K=T||{},[ee,ne]=await(0,E.resolveBackendAndExecutionProviders)(K);if(ee.createTrainingSessionHandler){const me=await ee.createTrainingSessionHandler(N.checkpointState,N.trainModel,V,P,ne);return new ve(me,!!N.optimizerModel,!!N.evalModel)}else throw new Error(we)}typeNarrowingForRunStep(N,T,V,P,K){const ee={};let ne={};if(typeof V!=\"object\"||V===null||V instanceof ie.Tensor||Array.isArray(V))throw new TypeError(\"'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.\");let me=!0;if(typeof P==\"object\"){if(P===null)throw new TypeError(\"Unexpected argument[1]: cannot be null.\");if(P instanceof ie.Tensor)throw new TypeError(\"'fetches' cannot be a Tensor\");if(Array.isArray(P)){if(P.length===0)throw new TypeError(\"'fetches' cannot be an empty array.\");me=!1;for(const F of P){if(typeof F!=\"string\")throw new TypeError(\"'fetches' must be a string array or an object.\");if(T.indexOf(F)===-1)throw new RangeError(`'fetches' contains invalid output name: ${F}.`);ee[F]=null}if(typeof K==\"object\"&&K!==null)ne=K;else if(typeof K<\"u\")throw new TypeError(\"'options' must be an object.\")}else{let F=!1;const J=Object.getOwnPropertyNames(P);for(const re of T)if(J.indexOf(re)!==-1){const le=P[re];(le===null||le instanceof ie.Tensor)&&(F=!0,me=!1,ee[re]=le)}if(F){if(typeof K==\"object\"&&K!==null)ne=K;else if(typeof K<\"u\")throw new TypeError(\"'options' must be an object.\")}else ne=P}}else if(typeof P<\"u\")throw new TypeError(\"Unexpected argument[1]: must be 'fetches' or 'options'.\");for(const F of N)if(typeof V[F]>\"u\")throw new Error(`input '${F}' is missing in 'feeds'.`);if(me)for(const F of T)ee[F]=null;return[ee,ne]}convertHandlerReturnTypeToMapOfTensors(N){const T={};for(const V in N)if(Object.hasOwnProperty.call(N,V)){const P=N[V];P instanceof ie.Tensor?T[V]=P:T[V]=new ie.Tensor(P.type,P.data,P.dims)}return T}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(N,T,V){const[P,K]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,N,T,V),ee=await this.handler.runTrainStep(N,P,K);return this.convertHandlerReturnTypeToMapOfTensors(ee)}async runOptimizerStep(N){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(N||{});else throw new Error(\"This TrainingSession has no OptimizerModel loaded.\")}async runEvalStep(N,T,V){if(this.hasEvalModel){const[P,K]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,N,T,V),ee=await this.handler.runEvalStep(N,P,K);return this.convertHandlerReturnTypeToMapOfTensors(ee)}else throw new Error(\"This TrainingSession has no EvalModel loaded.\")}async getParametersSize(N=!0){return this.handler.getParametersSize(N)}async loadParametersBuffer(N,T=!0){const V=await this.getParametersSize(T);if(N.length!==4*V)throw new Error(\"Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.\");return this.handler.loadParametersBuffer(N,T)}async getContiguousParameters(N=!0){return this.handler.getContiguousParameters(N)}async release(){return this.handler.dispose()}}},\"./node_modules/onnxruntime-common/dist/esm/training-session.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{TrainingSession:()=>ie});var E=I(\"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js\");const ie=E.TrainingSession},\"./node_modules/onnxruntime-common/dist/esm/version.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{version:()=>E});const E=\"1.19.0\"},\"./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs\":(nt,fe,I)=>{I.r(fe),I.d(fe,{InferenceSession:()=>vt,TRACE:()=>Ee,TRACE_FUNC_BEGIN:()=>He,TRACE_FUNC_END:()=>We,Tensor:()=>Be,TrainingSession:()=>zt,default:()=>Hf,env:()=>A,registerBackend:()=>ne});/*!\n * ONNX Runtime Web v1.20.0-dev.20240827-1d059b8702\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */var E=Object.defineProperty,ie=Object.getOwnPropertyDescriptor,we=Object.getOwnPropertyNames,ve=Object.prototype.hasOwnProperty,xe=(e=>typeof require<\"u\"?require:typeof Proxy<\"u\"?new Proxy(e,{get:(t,r)=>(typeof require<\"u\"?require:t)[r]}):e)(function(e){if(typeof require<\"u\")return require.apply(this,arguments);throw Error('Dynamic require of \"'+e+'\" is not supported')}),N=(e,t)=>()=>(e&&(t=e(e=0)),t),T=(e,t)=>{for(var r in t)E(e,r,{get:t[r],enumerable:!0})},V=(e,t,r,n)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let i of we(t))!ve.call(e,i)&&i!==r&&E(e,i,{get:()=>t[i],enumerable:!(n=ie(t,i))||n.enumerable});return e},P=e=>V(E({},\"__esModule\",{value:!0}),e),K,ee,ne,me,F,J=N(()=>{K=new Map,ee=[],ne=(e,t,r)=>{if(t&&typeof t.init==\"function\"&&typeof t.createInferenceSessionHandler==\"function\"){let n=K.get(e);if(n===void 0)K.set(e,{backend:t,priority:r});else{if(n.priority>r)return;if(n.priority===r&&n.backend!==t)throw new Error(`cannot register backend \"${e}\" using priority ${r}`)}if(r>=0){let i=ee.indexOf(e);i!==-1&&ee.splice(i,1);for(let a=0;a<ee.length;a++)if(K.get(ee[a]).priority<=r){ee.splice(a,0,e);return}ee.push(e)}return}throw new TypeError(\"not a valid backend\")},me=async e=>{let t=K.get(e);if(!t)return\"backend not found.\";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(n){return r||(t.error=`${n}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},F=async e=>{let t=e.executionProviders||[],r=t.map(d=>typeof d==\"string\"?d:d.name),n=r.length===0?ee:r,i,a=[],s=new Set;for(let d of n){let c=await me(d);typeof c==\"string\"?a.push({name:d,err:c}):(i||(i=c),i===c&&s.add(d))}if(!i)throw new Error(`no available backend found. ERR: ${a.map(d=>`[${d.name}] ${d.err}`).join(\", \")}`);for(let{name:d,err:c}of a)r.includes(d)&&console.warn(`removing requested execution provider \"${d}\" from session options because it is not available: ${c}`);let u=t.filter(d=>s.has(typeof d==\"string\"?d:d.name));return[i,new Proxy(e,{get:(d,c)=>c===\"executionProviders\"?u:Reflect.get(d,c)})]}}),re=N(()=>{J()}),le,ae=N(()=>{le=\"1.20.0-dev.20240827-5d54dc1462\"}),j,O,R=N(()=>{ae(),j=\"warning\",O={wasm:{},webgl:{},webgpu:{},versions:{common:le},set logLevel(e){if(e!==void 0){if(typeof e!=\"string\"||[\"verbose\",\"info\",\"warning\",\"error\",\"fatal\"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);j=e}},get logLevel(){return j}},Object.defineProperty(O,\"logLevel\",{enumerable:!0})}),A,_e=N(()=>{R(),A=O}),Me,ke,Oe=N(()=>{Me=(e,t)=>{let r=typeof document<\"u\"?document.createElement(\"canvas\"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let n=r.getContext(\"2d\");if(n!=null){let i,a;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout===\"NHWC\"?(i=e.dims[2],a=e.dims[3]):(i=e.dims[3],a=e.dims[2]);let s=(t==null?void 0:t.format)!==void 0?t.format:\"RGB\",u=t==null?void 0:t.norm,d,c;u===void 0||u.mean===void 0?d=[255,255,255,255]:typeof u.mean==\"number\"?d=[u.mean,u.mean,u.mean,u.mean]:(d=[u.mean[0],u.mean[1],u.mean[2],0],u.mean[3]!==void 0&&(d[3]=u.mean[3])),u===void 0||u.bias===void 0?c=[0,0,0,0]:typeof u.bias==\"number\"?c=[u.bias,u.bias,u.bias,u.bias]:(c=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(c[3]=u.bias[3]));let w=a*i,g=0,l=w,v=w*2,S=-1;s===\"RGBA\"?(g=0,l=w,v=w*2,S=w*3):s===\"RGB\"?(g=0,l=w,v=w*2):s===\"RBG\"&&(g=0,v=w,l=w*2);for(let $=0;$<a;$++)for(let U=0;U<i;U++){let q=(e.data[g++]-c[0])*d[0],L=(e.data[l++]-c[1])*d[1],se=(e.data[v++]-c[2])*d[2],X=S===-1?255:(e.data[S++]-c[3])*d[3];n.fillStyle=\"rgba(\"+q+\",\"+L+\",\"+se+\",\"+X+\")\",n.fillRect(U,$,1,1)}if(\"toDataURL\"in r)return r.toDataURL();throw new Error(\"toDataURL is not supported\")}else throw new Error(\"Can not access image data\")},ke=(e,t)=>{let r=typeof document<\"u\"?document.createElement(\"canvas\").getContext(\"2d\"):new OffscreenCanvas(1,1).getContext(\"2d\"),n;if(r!=null){let i,a,s;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout===\"NHWC\"?(i=e.dims[2],a=e.dims[1],s=e.dims[3]):(i=e.dims[3],a=e.dims[2],s=e.dims[1]);let u=t!==void 0&&t.format!==void 0?t.format:\"RGB\",d=t==null?void 0:t.norm,c,w;d===void 0||d.mean===void 0?c=[255,255,255,255]:typeof d.mean==\"number\"?c=[d.mean,d.mean,d.mean,d.mean]:(c=[d.mean[0],d.mean[1],d.mean[2],255],d.mean[3]!==void 0&&(c[3]=d.mean[3])),d===void 0||d.bias===void 0?w=[0,0,0,0]:typeof d.bias==\"number\"?w=[d.bias,d.bias,d.bias,d.bias]:(w=[d.bias[0],d.bias[1],d.bias[2],0],d.bias[3]!==void 0&&(w[3]=d.bias[3]));let g=a*i;if(t!==void 0&&(t.format!==void 0&&s===4&&t.format!==\"RGBA\"||s===3&&t.format!==\"RGB\"&&t.format!==\"BGR\"))throw new Error(\"Tensor format doesn't match input tensor dims\");let l=4,v=0,S=1,$=2,U=3,q=0,L=g,se=g*2,X=-1;u===\"RGBA\"?(q=0,L=g,se=g*2,X=g*3):u===\"RGB\"?(q=0,L=g,se=g*2):u===\"RBG\"&&(q=0,se=g,L=g*2),n=r.createImageData(i,a);for(let oe=0;oe<a*i;v+=l,S+=l,$+=l,U+=l,oe++)n.data[v]=(e.data[q++]-w[0])*c[0],n.data[S]=(e.data[L++]-w[1])*c[1],n.data[$]=(e.data[se++]-w[2])*c[2],n.data[U]=X===-1?255:(e.data[X++]-w[3])*c[3]}else throw new Error(\"Can not access image data\");return n}}),Pe,st,Ye,pt,ye,W=N(()=>{Et(),Pe=(e,t)=>{if(e===void 0)throw new Error(\"Image buffer must be defined\");if(t.height===void 0||t.width===void 0)throw new Error(\"Image height and width must be defined\");if(t.tensorLayout===\"NHWC\")throw new Error(\"NHWC Tensor layout is not supported yet\");let{height:r,width:n}=t,i=t.norm??{mean:255,bias:0},a,s;typeof i.mean==\"number\"?a=[i.mean,i.mean,i.mean,i.mean]:a=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias==\"number\"?s=[i.bias,i.bias,i.bias,i.bias]:s=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let u=t.format!==void 0?t.format:\"RGBA\",d=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:\"RGB\",c=r*n,w=d===\"RGBA\"?new Float32Array(c*4):new Float32Array(c*3),g=4,l=0,v=1,S=2,$=3,U=0,q=c,L=c*2,se=-1;u===\"RGB\"&&(g=3,l=0,v=1,S=2,$=-1),d===\"RGBA\"?se=c*3:d===\"RBG\"?(U=0,L=c,q=c*2):d===\"BGR\"&&(L=0,q=c,U=c*2);for(let X=0;X<c;X++,l+=g,S+=g,v+=g,$+=g)w[U++]=(e[l]+s[0])/a[0],w[q++]=(e[v]+s[1])/a[1],w[L++]=(e[S]+s[2])/a[2],se!==-1&&$!==-1&&(w[se++]=(e[$]+s[3])/a[3]);return d===\"RGBA\"?new at(\"float32\",w,[1,4,r,n]):new at(\"float32\",w,[1,3,r,n])},st=async(e,t)=>{let r=typeof HTMLImageElement<\"u\"&&e instanceof HTMLImageElement,n=typeof ImageData<\"u\"&&e instanceof ImageData,i=typeof ImageBitmap<\"u\"&&e instanceof ImageBitmap,a=typeof e==\"string\",s,u=t??{},d=()=>{if(typeof document<\"u\")return document.createElement(\"canvas\");if(typeof OffscreenCanvas<\"u\")return new OffscreenCanvas(1,1);throw new Error(\"Canvas is not supported\")},c=w=>w instanceof HTMLCanvasElement||w instanceof OffscreenCanvas?w.getContext(\"2d\"):null;if(r){let w=d();w.width=e.width,w.height=e.height;let g=c(w);if(g!=null){let l=e.height,v=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(l=t.resizedHeight,v=t.resizedWidth),t!==void 0){if(u=t,t.tensorFormat!==void 0)throw new Error(\"Image input config format must be RGBA for HTMLImageElement\");u.tensorFormat=\"RGBA\",u.height=l,u.width=v}else u.tensorFormat=\"RGBA\",u.height=l,u.width=v;g.drawImage(e,0,0),s=g.getImageData(0,0,v,l).data}else throw new Error(\"Can not access image data\")}else if(n){let w,g;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(w=t.resizedHeight,g=t.resizedWidth):(w=e.height,g=e.width),t!==void 0&&(u=t),u.format=\"RGBA\",u.height=w,u.width=g,t!==void 0){let l=d();l.width=g,l.height=w;let v=c(l);if(v!=null)v.putImageData(e,0,0),s=v.getImageData(0,0,g,w).data;else throw new Error(\"Can not access image data\")}else s=e.data}else if(i){if(t===void 0)throw new Error(\"Please provide image config with format for Imagebitmap\");let w=d();w.width=e.width,w.height=e.height;let g=c(w);if(g!=null){let l=e.height,v=e.width;return g.drawImage(e,0,0,v,l),s=g.getImageData(0,0,v,l).data,u.height=l,u.width=v,Pe(s,u)}else throw new Error(\"Can not access image data\")}else{if(a)return new Promise((w,g)=>{let l=d(),v=c(l);if(!e||!v)return g();let S=new Image;S.crossOrigin=\"Anonymous\",S.src=e,S.onload=()=>{l.width=S.width,l.height=S.height,v.drawImage(S,0,0,l.width,l.height);let $=v.getImageData(0,0,l.width,l.height);u.height=l.height,u.width=l.width,w(Pe($.data,u))}});throw new Error(\"Input data provided is not supported - aborted tensor creation\")}if(s!==void 0)return Pe(s,u);throw new Error(\"Input data provided is not supported - aborted tensor creation\")},Ye=(e,t)=>{let{width:r,height:n,download:i,dispose:a}=t,s=[1,n,r,4];return new at({location:\"texture\",type:\"float32\",texture:e,dims:s,download:i,dispose:a})},pt=(e,t)=>{let{dataType:r,dims:n,download:i,dispose:a}=t;return new at({location:\"gpu-buffer\",type:r??\"float32\",gpuBuffer:e,dims:n,download:i,dispose:a})},ye=(e,t,r)=>new at({location:\"cpu-pinned\",type:e,data:t,dims:r??[t.length]})}),he,Ce,Z,Xe,ht=N(()=>{he=new Map([[\"float32\",Float32Array],[\"uint8\",Uint8Array],[\"int8\",Int8Array],[\"uint16\",Uint16Array],[\"int16\",Int16Array],[\"int32\",Int32Array],[\"bool\",Uint8Array],[\"float64\",Float64Array],[\"uint32\",Uint32Array],[\"int4\",Uint8Array],[\"uint4\",Uint8Array]]),Ce=new Map([[Float32Array,\"float32\"],[Uint8Array,\"uint8\"],[Int8Array,\"int8\"],[Uint16Array,\"uint16\"],[Int16Array,\"int16\"],[Int32Array,\"int32\"],[Float64Array,\"float64\"],[Uint32Array,\"uint32\"]]),Z=!1,Xe=()=>{if(!Z){Z=!0;let e=typeof BigInt64Array<\"u\"&&BigInt64Array.from,t=typeof BigUint64Array<\"u\"&&BigUint64Array.from,r=typeof Float16Array<\"u\"&&Float16Array.from;e&&(he.set(\"int64\",BigInt64Array),Ce.set(BigInt64Array,\"int64\")),t&&(he.set(\"uint64\",BigUint64Array),Ce.set(BigUint64Array,\"uint64\")),r?(he.set(\"float16\",Float16Array),Ce.set(Float16Array,\"float16\")):he.set(\"float16\",Uint16Array)}}}),it,dt,Ne=N(()=>{Et(),it=e=>{let t=1;for(let r=0;r<e.length;r++){let n=e[r];if(typeof n!=\"number\"||!Number.isSafeInteger(n))throw new TypeError(`dims[${r}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${n}`);t*=n}return t},dt=(e,t)=>{switch(e.location){case\"cpu\":return new at(e.type,e.data,t);case\"cpu-pinned\":return new at({location:\"cpu-pinned\",data:e.data,type:e.type,dims:t});case\"texture\":return new at({location:\"texture\",texture:e.texture,type:e.type,dims:t});case\"gpu-buffer\":return new at({location:\"gpu-buffer\",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),at,Et=N(()=>{Oe(),W(),ht(),Ne(),at=class{constructor(e,t,r){Xe();let n,i;if(typeof e==\"object\"&&\"location\"in e)switch(this.dataLocation=e.location,n=e.type,i=e.dims,e.location){case\"cpu-pinned\":{let s=he.get(n);if(!s)throw new TypeError(`unsupported type \"${n}\" to create tensor from pinned buffer`);if(!(e.data instanceof s))throw new TypeError(`buffer should be of type ${s.name}`);this.cpuData=e.data;break}case\"texture\":{if(n!==\"float32\")throw new TypeError(`unsupported type \"${n}\" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case\"gpu-buffer\":{if(n!==\"float32\"&&n!==\"float16\"&&n!==\"int32\"&&n!==\"int64\"&&n!==\"uint32\"&&n!==\"uint8\"&&n!==\"bool\"&&n!==\"uint4\"&&n!==\"int4\")throw new TypeError(`unsupported type \"${n}\" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let s,u;if(typeof e==\"string\")if(n=e,u=r,e===\"string\"){if(!Array.isArray(t))throw new TypeError(\"A string tensor's data must be a string array.\");s=t}else{let d=he.get(e);if(d===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(e===\"float16\"&&d===Uint16Array||e===\"uint4\"||e===\"int4\")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${d.name} as data.`);e===\"uint64\"||e===\"int64\"?s=d.from(t,BigInt):s=d.from(t)}else if(t instanceof d)s=t;else throw new TypeError(`A ${n} tensor's data must be type of ${d}`)}else if(u=t,Array.isArray(e)){if(e.length===0)throw new TypeError(\"Tensor type cannot be inferred from an empty array.\");let d=typeof e[0];if(d===\"string\")n=\"string\",s=e;else if(d===\"boolean\")n=\"bool\",s=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${d}.`)}else{let d=Ce.get(e.constructor);if(d===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);n=d,s=e}if(u===void 0)u=[s.length];else if(!Array.isArray(u))throw new TypeError(\"A tensor's dims must be a number array\");i=u,this.cpuData=s,this.dataLocation=\"cpu\"}let a=it(i);if(this.cpuData&&a!==this.cpuData.length&&!((n===\"uint4\"||n===\"int4\")&&Math.ceil(a/2)===this.cpuData.length))throw new Error(`Tensor's size(${a}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=i,this.size=a}static async fromImage(e,t){return st(e,t)}static fromTexture(e,t){return Ye(e,t)}static fromGpuBuffer(e,t){return pt(e,t)}static fromPinnedBuffer(e,t,r){return ye(e,t,r)}toDataURL(e){return Me(this,e)}toImageData(e){return ke(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error(\"The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.\");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error(\"The data is not stored as a WebGL texture.\");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error(\"The data is not stored as a WebGPU buffer.\");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case\"cpu\":case\"cpu-pinned\":return this.data;case\"texture\":case\"gpu-buffer\":{if(!this.downloader)throw new Error(\"The current tensor is not created with a specified data downloader.\");if(this.isDownloading)throw new Error(\"The current tensor is being downloaded.\");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation=\"cpu\",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error(\"The current tensor is being downloaded.\");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation=\"none\"}ensureValid(){if(this.dataLocation===\"none\")throw new Error(\"The tensor is disposed.\")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error(\"Cannot reshape a tensor that owns GPU resource.\");return dt(this,e)}}}),Be,te=N(()=>{Et(),Be=at}),Ee,Ue,He,We,Qe=N(()=>{R(),Ee=(e,t)=>{(typeof O.trace>\"u\"?!O.wasm.trace:!O.trace)||console.timeStamp(`${e}::ORT::${t}`)},Ue=(e,t)=>{var i;let r=((i=new Error().stack)==null?void 0:i.split(/\\r\\n|\\r|\\n/g))||[],n=!1;for(let a=0;a<r.length;a++){if(n&&!r[a].includes(\"TRACE_FUNC\")){let s=`FUNC_${e}::${r[a].trim().split(\" \")[1]}`;t&&(s+=`::${t}`),Ee(\"CPU\",s);return}r[a].includes(\"TRACE_FUNC\")&&(n=!0)}},He=e=>{(typeof O.trace>\"u\"?!O.wasm.trace:!O.trace)||Ue(\"BEGIN\",e)},We=e=>{(typeof O.trace>\"u\"?!O.wasm.trace:!O.trace)||Ue(\"END\",e)}}),ut,gt=N(()=>{J(),te(),Qe(),ut=class $f{constructor(t){this.handler=t}async run(t,r,n){He();let i={},a={};if(typeof t!=\"object\"||t===null||t instanceof Be||Array.isArray(t))throw new TypeError(\"'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.\");let s=!0;if(typeof r==\"object\"){if(r===null)throw new TypeError(\"Unexpected argument[1]: cannot be null.\");if(r instanceof Be)throw new TypeError(\"'fetches' cannot be a Tensor\");if(Array.isArray(r)){if(r.length===0)throw new TypeError(\"'fetches' cannot be an empty array.\");s=!1;for(let c of r){if(typeof c!=\"string\")throw new TypeError(\"'fetches' must be a string array or an object.\");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);i[c]=null}if(typeof n==\"object\"&&n!==null)a=n;else if(typeof n<\"u\")throw new TypeError(\"'options' must be an object.\")}else{let c=!1,w=Object.getOwnPropertyNames(r);for(let g of this.outputNames)if(w.indexOf(g)!==-1){let l=r[g];(l===null||l instanceof Be)&&(c=!0,s=!1,i[g]=l)}if(c){if(typeof n==\"object\"&&n!==null)a=n;else if(typeof n<\"u\")throw new TypeError(\"'options' must be an object.\")}else a=r}}else if(typeof r<\"u\")throw new TypeError(\"Unexpected argument[1]: must be 'fetches' or 'options'.\");for(let c of this.inputNames)if(typeof t[c]>\"u\")throw new Error(`input '${c}' is missing in 'feeds'.`);if(s)for(let c of this.outputNames)i[c]=null;let u=await this.handler.run(t,i,a),d={};for(let c in u)if(Object.hasOwnProperty.call(u,c)){let w=u[c];w instanceof Be?d[c]=w:d[c]=new Be(w.type,w.data,w.dims)}return We(),d}async release(){return this.handler.dispose()}static async create(t,r,n,i){He();let a,s={};if(typeof t==\"string\"){if(a=t,typeof r==\"object\"&&r!==null)s=r;else if(typeof r<\"u\")throw new TypeError(\"'options' must be an object.\")}else if(t instanceof Uint8Array){if(a=t,typeof r==\"object\"&&r!==null)s=r;else if(typeof r<\"u\")throw new TypeError(\"'options' must be an object.\")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<\"u\"&&t instanceof SharedArrayBuffer){let w=t,g=0,l=t.byteLength;if(typeof r==\"object\"&&r!==null)s=r;else if(typeof r==\"number\"){if(g=r,!Number.isSafeInteger(g))throw new RangeError(\"'byteOffset' must be an integer.\");if(g<0||g>=w.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${w.byteLength}).`);if(l=t.byteLength-g,typeof n==\"number\"){if(l=n,!Number.isSafeInteger(l))throw new RangeError(\"'byteLength' must be an integer.\");if(l<=0||g+l>w.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${w.byteLength-g}].`);if(typeof i==\"object\"&&i!==null)s=i;else if(typeof i<\"u\")throw new TypeError(\"'options' must be an object.\")}else if(typeof n<\"u\")throw new TypeError(\"'byteLength' must be a number.\")}else if(typeof r<\"u\")throw new TypeError(\"'options' must be an object.\");a=new Uint8Array(w,g,l)}else throw new TypeError(\"Unexpected argument[0]: must be 'path' or 'buffer'.\");let[u,d]=await F(s),c=await u.createInferenceSessionHandler(a,d);return We(),new $f(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),vt,Ct=N(()=>{gt(),vt=ut}),M=N(()=>{}),G=N(()=>{}),k=N(()=>{}),Q=N(()=>{}),ge,Ze,tt=N(()=>{J(),te(),ge=\"Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.\",Ze=class Pf{constructor(t,r,n){this.handler=t,this.hasOptimizerModel=r,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error(\"This training session has no evalModel loaded.\")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error(\"This training session has no evalModel loaded.\")}static async create(t,r){let n=t.evalModel||\"\",i=t.optimizerModel||\"\",a=r||{},[s,u]=await F(a);if(s.createTrainingSessionHandler){let d=await s.createTrainingSessionHandler(t.checkpointState,t.trainModel,n,i,u);return new Pf(d,!!t.optimizerModel,!!t.evalModel)}else throw new Error(ge)}typeNarrowingForRunStep(t,r,n,i,a){let s={},u={};if(typeof n!=\"object\"||n===null||n instanceof Be||Array.isArray(n))throw new TypeError(\"'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.\");let d=!0;if(typeof i==\"object\"){if(i===null)throw new TypeError(\"Unexpected argument[1]: cannot be null.\");if(i instanceof Be)throw new TypeError(\"'fetches' cannot be a Tensor\");if(Array.isArray(i)){if(i.length===0)throw new TypeError(\"'fetches' cannot be an empty array.\");d=!1;for(let c of i){if(typeof c!=\"string\")throw new TypeError(\"'fetches' must be a string array or an object.\");if(r.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);s[c]=null}if(typeof a==\"object\"&&a!==null)u=a;else if(typeof a<\"u\")throw new TypeError(\"'options' must be an object.\")}else{let c=!1,w=Object.getOwnPropertyNames(i);for(let g of r)if(w.indexOf(g)!==-1){let l=i[g];(l===null||l instanceof Be)&&(c=!0,d=!1,s[g]=l)}if(c){if(typeof a==\"object\"&&a!==null)u=a;else if(typeof a<\"u\")throw new TypeError(\"'options' must be an object.\")}else u=i}}else if(typeof i<\"u\")throw new TypeError(\"Unexpected argument[1]: must be 'fetches' or 'options'.\");for(let c of t)if(typeof n[c]>\"u\")throw new Error(`input '${c}' is missing in 'feeds'.`);if(d)for(let c of r)s[c]=null;return[s,u]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let n in t)if(Object.hasOwnProperty.call(t,n)){let i=t[n];i instanceof Be?r[n]=i:r[n]=new Be(i.type,i.data,i.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(t,r,n){let[i,a]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,t,r,n),s=await this.handler.runTrainStep(t,i,a);return this.convertHandlerReturnTypeToMapOfTensors(s)}async runOptimizerStep(t){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(t||{});else throw new Error(\"This TrainingSession has no OptimizerModel loaded.\")}async runEvalStep(t,r,n){if(this.hasEvalModel){let[i,a]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,t,r,n),s=await this.handler.runEvalStep(t,i,a);return this.convertHandlerReturnTypeToMapOfTensors(s)}else throw new Error(\"This TrainingSession has no EvalModel loaded.\")}async getParametersSize(t=!0){return this.handler.getParametersSize(t)}async loadParametersBuffer(t,r=!0){let n=await this.getParametersSize(r);if(t.length!==4*n)throw new Error(\"Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.\");return this.handler.loadParametersBuffer(t,r)}async getContiguousParameters(t=!0){return this.handler.getContiguousParameters(t)}async release(){return this.handler.dispose()}}}),zt,yt=N(()=>{tt(),zt=Ze}),Tt={};T(Tt,{InferenceSession:()=>vt,TRACE:()=>Ee,TRACE_FUNC_BEGIN:()=>He,TRACE_FUNC_END:()=>We,Tensor:()=>Be,TrainingSession:()=>zt,env:()=>A,registerBackend:()=>ne});var bt=N(()=>{re(),_e(),Ct(),te(),M(),G(),Qe(),k(),Q(),yt()}),Ae=N(()=>{}),D={};T(D,{default:()=>Ge});var ce,Se,Ge,Fe=N(()=>{var e;Rp(),sn(),sr(),ce=\"ort-wasm-proxy-worker\",Se=((e=globalThis.self)==null?void 0:e.name)===ce,Se&&(self.onmessage=t=>{let{type:r,in:n}=t.data;try{switch(r){case\"init-wasm\":Rn(n.wasm).then(()=>{tc(n).then(()=>{postMessage({type:r})},i=>{postMessage({type:r,err:i})})},i=>{postMessage({type:r,err:i})});break;case\"init-ep\":{let{epName:i,env:a}=n;rc(a,i).then(()=>{postMessage({type:r})},s=>{postMessage({type:r,err:s})});break}case\"copy-from\":{let{buffer:i}=n,a=Ad(i);postMessage({type:r,out:a});break}case\"create\":{let{model:i,options:a}=n;nc(i,a).then(s=>{postMessage({type:r,out:s})},s=>{postMessage({type:r,err:s})});break}case\"release\":sc(n),postMessage({type:r});break;case\"run\":{let{sessionId:i,inputIndices:a,inputs:s,outputIndices:u,options:d}=n;ac(i,a,s,u,new Array(u.length).fill(null),d).then(c=>{c.some(w=>w[3]!==\"cpu\")?postMessage({type:r,err:\"Proxy does not support non-cpu tensor location.\"}):postMessage({type:r,out:c},lc([...s,...c]))},c=>{postMessage({type:r,err:c})});break}case\"end-profiling\":oc(n),postMessage({type:r});break;default:}}catch(i){postMessage({type:r,err:i})}}),Ge=Se?null:t=>new Worker(t??Re,{type:\"module\",name:ce})}),et={};T(et,{default:()=>$t});var mt,ct,$t,_t=N(()=>{var e;ct=(mt=import.meta.url,async function(t={}){function r(){return xr.buffer!=mr.buffer&&wn(),mr}function n(){return xr.buffer!=mr.buffer&&wn(),Pr}function i(){return xr.buffer!=mr.buffer&&wn(),Ve}function a(){return xr.buffer!=mr.buffer&&wn(),kt}function s(){return xr.buffer!=mr.buffer&&wn(),nr}function u(){return xr.buffer!=mr.buffer&&wn(),Rr}function d(){return xr.buffer!=mr.buffer&&wn(),Jr}function c(){return xr.buffer!=mr.buffer&&wn(),Od}var w,g,l=Object.assign({},t),v=new Promise((o,h)=>{w=o,g=h}),S=typeof window==\"object\",$=typeof importScripts==\"function\",U=$&&self.name==\"em-pthread\";l.mountExternalData=(o,h)=>{o.startsWith(\"./\")&&(o=o.substring(2)),(l.Fb||(l.Fb=new Map)).set(o,h)},l.unmountExternalData=()=>{delete l.Fb};var q=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let L=()=>{let o=(y,x,B)=>(...de)=>{let qe=as,ot=x==null?void 0:x();de=y(...de);let At=x==null?void 0:x();return ot!==At&&(y=At,B(ot),x=B=null),as!=qe?new Promise((Bt,Jt)=>{kc={resolve:Bt,reject:Jt}}):de},h=y=>async(...x)=>{var B;try{if(l.Eb)throw Error(\"Session already started\");let de=l.Eb={bc:x[0],errors:[]},qe=await y(...x);if(l.Eb!==de)throw Error(\"Session mismatch\");(B=l.Mb)==null||B.flush();let ot=de.errors;if(0<ot.length){let At=await Promise.all(ot);if(At=At.filter(Bt=>Bt),0<At.length)throw Error(At.join(`\n`))}return qe}finally{l.Eb=null}};l._OrtCreateSession=o(l._OrtCreateSession,()=>l._OrtCreateSession,y=>l._OrtCreateSession=y),l._OrtRun=h(o(l._OrtRun,()=>l._OrtRun,y=>l._OrtRun=y)),l._OrtRunWithBinding=h(o(l._OrtRunWithBinding,()=>l._OrtRunWithBinding,y=>l._OrtRunWithBinding=y)),l._OrtBindInput=o(l._OrtBindInput,()=>l._OrtBindInput,y=>l._OrtBindInput=y),L=void 0};l.jsepInit=(o,h)=>{if(L==null||L(),o===\"webgpu\"){[l.Mb,l.Tb,l.Xb,l.Nb,l.Wb,l.jb,l.Yb,l.$b,l.Ub,l.Vb,l.Zb]=h;let y=l.Mb;l.jsepRegisterBuffer=(x,B,de,qe)=>y.registerBuffer(x,B,de,qe),l.jsepGetBuffer=x=>y.getBuffer(x),l.jsepCreateDownloader=(x,B,de)=>y.createDownloader(x,B,de),l.jsepOnReleaseSession=x=>{y.onReleaseSession(x)},l.jsepOnRunStart=x=>y.onRunStart(x)}};var se,X,oe=Object.assign({},l),Ke=\"./this.program\",je=(o,h)=>{throw h},ft=\"\";(S||$)&&($?ft=self.location.href:typeof document<\"u\"&&document.currentScript&&(ft=document.currentScript.src),mt&&(ft=mt),ft=ft.startsWith(\"blob:\")?\"\":ft.substr(0,ft.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1),$&&(X=o=>{var h=new XMLHttpRequest;return h.open(\"GET\",o,!1),h.responseType=\"arraybuffer\",h.send(null),new Uint8Array(h.response)}),se=(o,h,y)=>{var x=new XMLHttpRequest;x.open(\"GET\",o,!0),x.responseType=\"arraybuffer\",x.onload=()=>{x.status==200||x.status==0&&x.response?h(x.response):y()},x.onerror=y,x.send(null)});var Ot,Vt=console.log.bind(console),lr=console.error.bind(console),wr=Vt,er=lr;if(Object.assign(l,oe),oe=null,U){let o=function(h){try{var y=h.data,x=y.cmd;if(x===\"load\"){let B=[];self.onmessage=de=>B.push(de),self.startWorker=()=>{postMessage({cmd:\"loaded\"});for(let de of B)o(de);self.onmessage=o};for(let de of y.handlers)l[de]&&!l[de].proxy||(l[de]=(...qe)=>{postMessage({Lb:\"callHandler\",kc:de,args:qe})},de==\"print\"&&(wr=l[de]),de==\"printErr\"&&(er=l[de]));xr=y.wasmMemory,wn(),Lr(y.wasmModule)}else if(x===\"run\"){Pc(y.pthread_ptr,0,0,1,0,0),xc(y.pthread_ptr),Qf(),dh(),Gr||(lf(),Gr=!0);try{Yf(y.start_routine,y.arg)}catch(B){if(B!=\"unwind\")throw B}}else x===\"cancel\"?Ba()&&qd(-1):y.target!==\"setimmediate\"&&(x===\"checkMailbox\"?Gr&&Bd():x&&(er(`worker: received unknown command ${x}`),er(y)))}catch(B){throw uf(),B}};var Lr,Gr=!1;er=function(...h){h=h.join(\" \"),console.error(h)},self.alert=function(...h){postMessage({Lb:\"alert\",text:h.join(\" \"),mc:Ba()})},l.instantiateWasm=(h,y)=>new Promise(x=>{Lr=B=>{B=new WebAssembly.Instance(B,ih()),y(B),x()}}),self.onunhandledrejection=h=>{throw h.reason||h},self.onmessage=o}l.wasmBinary&&(Ot=l.wasmBinary);var xr,Nr,Zt,mr,Pr,Ve,kt,nr,Rr,Jr,dn,Ns,Od,Ln=!1;function wn(){var o=xr.buffer;l.HEAP8=mr=new Int8Array(o),l.HEAP16=Ve=new Int16Array(o),l.HEAPU8=Pr=new Uint8Array(o),l.HEAPU16=kt=new Uint16Array(o),l.HEAP32=nr=new Int32Array(o),l.HEAPU32=Rr=new Uint32Array(o),l.HEAPF32=Jr=new Float32Array(o),l.HEAPF64=Od=new Float64Array(o),l.HEAP64=dn=new BigInt64Array(o),l.HEAPU64=Ns=new BigUint64Array(o)}if(!U){if(!((xr=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof q))throw er(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),Error(\"bad memory\");wn()}var Gu=[],yn=[],Cn=[],Gn=0,js=null;function zd(){if(--Gn==0&&js){var o=js;js=null,o()}}function Oa(o){throw er(o=\"Aborted(\"+o+\")\"),Ln=!0,Zt=1,o=new WebAssembly.RuntimeError(o+\". Build with -sASSERTIONS for more info.\"),g(o),o}var cc,th=o=>o.startsWith(\"data:application/octet-stream;base64,\"),rh=o=>o.startsWith(\"file://\");function nh(o){if(o==cc&&Ot)return new Uint8Array(Ot);if(X)return X(o);throw\"both async and sync fetching of the wasm failed\"}function sh(o,h,y){return function(x){if(!Ot&&(S||$)){if(typeof fetch==\"function\"&&!rh(x))return fetch(x,{credentials:\"same-origin\"}).then(B=>{if(!B.ok)throw`failed to load wasm binary file at '${x}'`;return B.arrayBuffer()}).catch(()=>nh(x));if(se)return new Promise((B,de)=>{se(x,qe=>B(new Uint8Array(qe)),de)})}return Promise.resolve().then(()=>nh(x))}(o).then(x=>WebAssembly.instantiate(x,h)).then(y,x=>{er(`failed to asynchronously prepare wasm: ${x}`),Oa(x)})}function ih(){return{a:{M:Xf,za:Kf,b:Zf,$:fh,z:gh,pa:wh,X:bh,Z:Mh,qa:vh,na:xh,ga:Th,ma:Sh,J:kh,Y:Ch,V:Eh,oa:$h,W:Ph,va:em,D:tm,P:rm,O:sm,C:am,s:om,p:lm,E:um,y:_m,Q:gm,ta:wm,ja:ym,T:bm,aa:Mm,F:vm,ia:xc,sa:xm,u:Tm,B:Cm,o:Em,m:Pm,c:Mc,n:Am,k:Om,Aa:zm,r:Dm,g:Bm,v:Lm,l:Rm,f:Nm,i:jm,j:Vm,h:Um,e:Wm,da:Gm,ea:qm,fa:Hm,ba:Wh,ca:Gh,S:Km,d:Xm,N:Qm,G:Ym,K:Jm,w:Zm,ra:e_,U:t_,t:Hh,x:r_,L:n_,R:s_,ya:i_,xa:a_,ka:Qh,la:Yh,_:_c,A:Jh,I:Zh,ha:ef,H:tf,a:xr,wa:mc,ua:sf,q:u_}}}var pc={858916:(o,h,y,x)=>{if(l===void 0||!l.Fb)return 1;if((o=fn(o>>>0)).startsWith(\"./\")&&(o=o.substring(2)),!(o=l.Fb.get(o)))return 2;if(x>>>=0,(h>>>=0)+(y>>>=0)>o.byteLength)return 3;try{return n().set(o.subarray(h,h+y),x>>>0),0}catch{return 4}},859417:()=>{l.Ub()},859448:()=>{l.Vb()},859477:()=>{l.Zb()},859502:o=>l.Tb(o),859535:o=>l.Xb(o),859567:(o,h,y)=>{l.Nb(o,h,y,!0)},859606:(o,h,y)=>{l.Nb(o,h,y)},859639:()=>typeof wasmOffsetConverter<\"u\",859696:o=>{l.jb(\"Abs\",o,void 0)},859747:o=>{l.jb(\"Neg\",o,void 0)},859798:o=>{l.jb(\"Floor\",o,void 0)},859851:o=>{l.jb(\"Ceil\",o,void 0)},859903:o=>{l.jb(\"Reciprocal\",o,void 0)},859961:o=>{l.jb(\"Sqrt\",o,void 0)},860013:o=>{l.jb(\"Exp\",o,void 0)},860064:o=>{l.jb(\"Erf\",o,void 0)},860115:o=>{l.jb(\"Sigmoid\",o,void 0)},860170:(o,h,y)=>{l.jb(\"HardSigmoid\",o,{alpha:h,beta:y})},860249:o=>{l.jb(\"Log\",o,void 0)},860300:o=>{l.jb(\"Sin\",o,void 0)},860351:o=>{l.jb(\"Cos\",o,void 0)},860402:o=>{l.jb(\"Tan\",o,void 0)},860453:o=>{l.jb(\"Asin\",o,void 0)},860505:o=>{l.jb(\"Acos\",o,void 0)},860557:o=>{l.jb(\"Atan\",o,void 0)},860609:o=>{l.jb(\"Sinh\",o,void 0)},860661:o=>{l.jb(\"Cosh\",o,void 0)},860713:o=>{l.jb(\"Asinh\",o,void 0)},860766:o=>{l.jb(\"Acosh\",o,void 0)},860819:o=>{l.jb(\"Atanh\",o,void 0)},860872:o=>{l.jb(\"Tanh\",o,void 0)},860924:o=>{l.jb(\"Not\",o,void 0)},860975:(o,h,y)=>{l.jb(\"Clip\",o,{min:h,max:y})},861044:o=>{l.jb(\"Clip\",o,void 0)},861096:(o,h)=>{l.jb(\"Elu\",o,{alpha:h})},861154:o=>{l.jb(\"Gelu\",o,void 0)},861206:o=>{l.jb(\"Relu\",o,void 0)},861258:(o,h)=>{l.jb(\"LeakyRelu\",o,{alpha:h})},861322:(o,h)=>{l.jb(\"ThresholdedRelu\",o,{alpha:h})},861392:(o,h)=>{l.jb(\"Cast\",o,{to:h})},861450:o=>{l.jb(\"Add\",o,void 0)},861501:o=>{l.jb(\"Sub\",o,void 0)},861552:o=>{l.jb(\"Mul\",o,void 0)},861603:o=>{l.jb(\"Div\",o,void 0)},861654:o=>{l.jb(\"Pow\",o,void 0)},861705:o=>{l.jb(\"Equal\",o,void 0)},861758:o=>{l.jb(\"Greater\",o,void 0)},861813:o=>{l.jb(\"GreaterOrEqual\",o,void 0)},861875:o=>{l.jb(\"Less\",o,void 0)},861927:o=>{l.jb(\"LessOrEqual\",o,void 0)},861986:(o,h,y,x,B)=>{l.jb(\"ReduceMean\",o,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:x?Array.from(s().subarray(x>>>0,B>>>0)):[]})},862145:(o,h,y,x,B)=>{l.jb(\"ReduceMax\",o,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:x?Array.from(s().subarray(x>>>0,B>>>0)):[]})},862303:(o,h,y,x,B)=>{l.jb(\"ReduceMin\",o,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:x?Array.from(s().subarray(x>>>0,B>>>0)):[]})},862461:(o,h,y,x,B)=>{l.jb(\"ReduceProd\",o,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:x?Array.from(s().subarray(x>>>0,B>>>0)):[]})},862620:(o,h,y,x,B)=>{l.jb(\"ReduceSum\",o,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:x?Array.from(s().subarray(x>>>0,B>>>0)):[]})},862778:(o,h,y,x,B)=>{l.jb(\"ReduceL1\",o,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:x?Array.from(s().subarray(x>>>0,B>>>0)):[]})},862935:(o,h,y,x,B)=>{l.jb(\"ReduceL2\",o,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:x?Array.from(s().subarray(x>>>0,B>>>0)):[]})},863092:(o,h,y,x,B)=>{l.jb(\"ReduceLogSum\",o,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:x?Array.from(s().subarray(x>>>0,B>>>0)):[]})},863253:(o,h,y,x,B)=>{l.jb(\"ReduceSumSquare\",o,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:x?Array.from(s().subarray(x>>>0,B>>>0)):[]})},863417:(o,h,y,x,B)=>{l.jb(\"ReduceLogSumExp\",o,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:x?Array.from(s().subarray(x>>>0,B>>>0)):[]})},863581:o=>{l.jb(\"Where\",o,void 0)},863634:(o,h,y)=>{l.jb(\"Transpose\",o,{perm:h?Array.from(s().subarray(h>>>0,y>>>0)):[]})},863742:(o,h,y,x)=>{l.jb(\"DepthToSpace\",o,{blocksize:h,mode:fn(y),format:x?\"NHWC\":\"NCHW\"})},863875:(o,h,y,x)=>{l.jb(\"DepthToSpace\",o,{blocksize:h,mode:fn(y),format:x?\"NHWC\":\"NCHW\"})},864008:(o,h,y,x,B,de,qe,ot,At,Bt,Jt,Er,Dr,De,Tr)=>{l.jb(\"ConvTranspose\",o,{format:At?\"NHWC\":\"NCHW\",autoPad:h,dilations:[y],group:x,kernelShape:[B],pads:[de,qe],strides:[ot],wIsConst:()=>!!r()[Bt>>>0],outputPadding:Jt?Array.from(s().subarray(Jt>>>0,Er>>>0)):[],outputShape:Dr?Array.from(s().subarray(Dr>>>0,De>>>0)):[],activation:fn(Tr)})},864409:(o,h,y,x,B,de,qe,ot,At,Bt,Jt,Er,Dr,De)=>{l.jb(\"ConvTranspose\",o,{format:ot?\"NHWC\":\"NCHW\",autoPad:h,dilations:Array.from(s().subarray(y>>>0,2+(y>>>0)>>>0)),group:x,kernelShape:Array.from(s().subarray(B>>>0,2+(B>>>0)>>>0)),pads:Array.from(s().subarray(de>>>0,4+(de>>>0)>>>0)),strides:Array.from(s().subarray(qe>>>0,2+(qe>>>0)>>>0)),wIsConst:()=>!!r()[At>>>0],outputPadding:Bt?Array.from(s().subarray(Bt>>>0,Jt>>>0)):[],outputShape:Er?Array.from(s().subarray(Er>>>0,Dr>>>0)):[],activation:fn(De)})},864974:(o,h,y,x,B,de,qe,ot,At,Bt,Jt,Er,Dr,De,Tr)=>{l.jb(\"ConvTranspose\",o,{format:At?\"NHWC\":\"NCHW\",autoPad:h,dilations:[y],group:x,kernelShape:[B],pads:[de,qe],strides:[ot],wIsConst:()=>!!r()[Bt>>>0],outputPadding:Jt?Array.from(s().subarray(Jt>>>0,Er>>>0)):[],outputShape:Dr?Array.from(s().subarray(Dr>>>0,De>>>0)):[],activation:fn(Tr)})},865375:(o,h,y,x,B,de,qe,ot,At,Bt,Jt,Er,Dr,De)=>{l.jb(\"ConvTranspose\",o,{format:ot?\"NHWC\":\"NCHW\",autoPad:h,dilations:Array.from(s().subarray(y>>>0,2+(y>>>0)>>>0)),group:x,kernelShape:Array.from(s().subarray(B>>>0,2+(B>>>0)>>>0)),pads:Array.from(s().subarray(de>>>0,4+(de>>>0)>>>0)),strides:Array.from(s().subarray(qe>>>0,2+(qe>>>0)>>>0)),wIsConst:()=>!!r()[At>>>0],outputPadding:Bt?Array.from(s().subarray(Bt>>>0,Jt>>>0)):[],outputShape:Er?Array.from(s().subarray(Er>>>0,Dr>>>0)):[],activation:fn(De)})},865940:(o,h)=>{l.jb(\"GlobalAveragePool\",o,{format:h?\"NHWC\":\"NCHW\"})},866031:(o,h,y,x,B,de,qe,ot,At,Bt,Jt,Er,Dr,De)=>{l.jb(\"AveragePool\",o,{format:De?\"NHWC\":\"NCHW\",auto_pad:h,ceil_mode:y,count_include_pad:x,storage_order:B,dilations:de?Array.from(s().subarray(de>>>0,qe>>>0)):[],kernel_shape:ot?Array.from(s().subarray(ot>>>0,At>>>0)):[],pads:Bt?Array.from(s().subarray(Bt>>>0,Jt>>>0)):[],strides:Er?Array.from(s().subarray(Er>>>0,Dr>>>0)):[]})},866446:(o,h)=>{l.jb(\"GlobalAveragePool\",o,{format:h?\"NHWC\":\"NCHW\"})},866537:(o,h,y,x,B,de,qe,ot,At,Bt,Jt,Er,Dr,De)=>{l.jb(\"AveragePool\",o,{format:De?\"NHWC\":\"NCHW\",auto_pad:h,ceil_mode:y,count_include_pad:x,storage_order:B,dilations:de?Array.from(s().subarray(de>>>0,qe>>>0)):[],kernel_shape:ot?Array.from(s().subarray(ot>>>0,At>>>0)):[],pads:Bt?Array.from(s().subarray(Bt>>>0,Jt>>>0)):[],strides:Er?Array.from(s().subarray(Er>>>0,Dr>>>0)):[]})},866952:(o,h)=>{l.jb(\"GlobalMaxPool\",o,{format:h?\"NHWC\":\"NCHW\"})},867039:(o,h,y,x,B,de,qe,ot,At,Bt,Jt,Er,Dr,De)=>{l.jb(\"MaxPool\",o,{format:De?\"NHWC\":\"NCHW\",auto_pad:h,ceil_mode:y,count_include_pad:x,storage_order:B,dilations:de?Array.from(s().subarray(de>>>0,qe>>>0)):[],kernel_shape:ot?Array.from(s().subarray(ot>>>0,At>>>0)):[],pads:Bt?Array.from(s().subarray(Bt>>>0,Jt>>>0)):[],strides:Er?Array.from(s().subarray(Er>>>0,Dr>>>0)):[]})},867450:(o,h)=>{l.jb(\"GlobalMaxPool\",o,{format:h?\"NHWC\":\"NCHW\"})},867537:(o,h,y,x,B,de,qe,ot,At,Bt,Jt,Er,Dr,De)=>{l.jb(\"MaxPool\",o,{format:De?\"NHWC\":\"NCHW\",auto_pad:h,ceil_mode:y,count_include_pad:x,storage_order:B,dilations:de?Array.from(s().subarray(de>>>0,qe>>>0)):[],kernel_shape:ot?Array.from(s().subarray(ot>>>0,At>>>0)):[],pads:Bt?Array.from(s().subarray(Bt>>>0,Jt>>>0)):[],strides:Er?Array.from(s().subarray(Er>>>0,Dr>>>0)):[]})},867948:(o,h,y,x,B)=>{l.jb(\"Gemm\",o,{alpha:h,beta:y,transA:x,transB:B})},868052:o=>{l.jb(\"MatMul\",o,void 0)},868106:(o,h,y,x)=>{l.jb(\"ArgMax\",o,{keepDims:!!h,selectLastIndex:!!y,axis:x})},868214:(o,h,y,x)=>{l.jb(\"ArgMin\",o,{keepDims:!!h,selectLastIndex:!!y,axis:x})},868322:(o,h)=>{l.jb(\"Softmax\",o,{axis:h})},868385:(o,h)=>{l.jb(\"Concat\",o,{axis:h})},868445:(o,h,y,x,B)=>{l.jb(\"Split\",o,{axis:h,numOutputs:y,splitSizes:x?Array.from(s().subarray(x>>>0,B>>>0)):[]})},868585:o=>{l.jb(\"Expand\",o,void 0)},868639:(o,h)=>{l.jb(\"Gather\",o,{axis:Number(h)})},868710:(o,h)=>{l.jb(\"GatherElements\",o,{axis:Number(h)})},868789:(o,h,y,x,B,de,qe,ot,At,Bt,Jt)=>{l.jb(\"Resize\",o,{antialias:h,axes:y?Array.from(s().subarray(y>>>0,x>>>0)):[],coordinateTransformMode:fn(B),cubicCoeffA:de,excludeOutside:qe,extrapolationValue:ot,keepAspectRatioPolicy:fn(At),mode:fn(Bt),nearestMode:fn(Jt)})},869135:(o,h,y,x,B,de,qe)=>{l.jb(\"Slice\",o,{starts:h?Array.from(s().subarray(h>>>0,y>>>0)):[],ends:x?Array.from(s().subarray(x>>>0,B>>>0)):[],axes:de?Array.from(s().subarray(de>>>0,qe>>>0)):[]})},869351:o=>{l.jb(\"Tile\",o,void 0)},869403:(o,h,y)=>{l.jb(\"InstanceNormalization\",o,{epsilon:h,format:y?\"NHWC\":\"NCHW\"})},869517:(o,h,y)=>{l.jb(\"InstanceNormalization\",o,{epsilon:h,format:y?\"NHWC\":\"NCHW\"})},869631:o=>{l.jb(\"Range\",o,void 0)},869684:(o,h)=>{l.jb(\"Einsum\",o,{equation:fn(h)})},869765:(o,h,y,x,B)=>{l.jb(\"Pad\",o,{mode:h,value:y,pads:x?Array.from(s().subarray(x>>>0,B>>>0)):[]})},869892:(o,h,y,x,B,de)=>{l.jb(\"BatchNormalization\",o,{epsilon:h,momentum:y,spatial:!!B,trainingMode:!!x,format:de?\"NHWC\":\"NCHW\"})},870061:(o,h,y,x,B,de)=>{l.jb(\"BatchNormalization\",o,{epsilon:h,momentum:y,spatial:!!B,trainingMode:!!x,format:de?\"NHWC\":\"NCHW\"})},870230:(o,h,y)=>{l.jb(\"CumSum\",o,{exclusive:Number(h),reverse:Number(y)})},870327:(o,h,y)=>{l.jb(\"DequantizeLinear\",o,{axis:h,blockSize:y})},870417:(o,h,y,x,B,de,qe,ot,At)=>{l.jb(\"Attention\",o,{numHeads:h,isUnidirectional:y,maskFilterValue:x,scale:B,doRotary:de,qkvHiddenSizes:qe?Array.from(s().subarray(Number(ot)>>>0,Number(ot)+qe>>>0)):[],pastPresentShareBuffer:!!At})},870689:o=>{l.jb(\"BiasAdd\",o,void 0)},870744:o=>{l.jb(\"BiasSplitGelu\",o,void 0)},870805:o=>{l.jb(\"FastGelu\",o,void 0)},870861:(o,h,y,x,B,de,qe,ot,At,Bt,Jt,Er,Dr,De,Tr,Qr)=>{l.jb(\"Conv\",o,{format:Er?\"NHWC\":\"NCHW\",auto_pad:h,dilations:y?Array.from(s().subarray(y>>>0,x>>>0)):[],group:B,kernel_shape:de?Array.from(s().subarray(de>>>0,qe>>>0)):[],pads:ot?Array.from(s().subarray(ot>>>0,At>>>0)):[],strides:Bt?Array.from(s().subarray(Bt>>>0,Jt>>>0)):[],w_is_const:()=>!!r()[Dr>>>0],activation:fn(De),activation_params:Tr?Array.from(d().subarray(Tr>>>0,Qr>>>0)):[]})},871357:o=>{l.jb(\"Gelu\",o,void 0)},871409:(o,h,y,x)=>{l.jb(\"GroupQueryAttention\",o,{numHeads:h,kvNumHeads:y,scale:x})},871522:(o,h,y,x)=>{l.jb(\"LayerNormalization\",o,{axis:h,epsilon:y,simplified:!!x})},871633:(o,h,y,x)=>{l.jb(\"LayerNormalization\",o,{axis:h,epsilon:y,simplified:!!x})},871744:(o,h,y,x,B,de)=>{l.jb(\"MatMulNBits\",o,{k:h,n:y,accuracyLevel:x,bits:B,blockSize:de})},871871:(o,h,y,x,B,de)=>{l.jb(\"MultiHeadAttention\",o,{numHeads:h,isUnidirectional:y,maskFilterValue:x,scale:B,doRotary:de})},872030:(o,h)=>{l.jb(\"QuickGelu\",o,{alpha:h})},872094:(o,h,y,x,B)=>{l.jb(\"RotaryEmbedding\",o,{interleaved:!!h,numHeads:y,rotaryEmbeddingDim:x,scale:B})},872233:(o,h,y)=>{l.jb(\"SkipLayerNormalization\",o,{epsilon:h,simplified:!!y})},872335:(o,h,y)=>{l.jb(\"SkipLayerNormalization\",o,{epsilon:h,simplified:!!y})},872437:(o,h,y,x)=>{l.jb(\"GatherBlockQuantized\",o,{gatherAxis:h,quantizeAxis:y,blockSize:x})},872558:o=>{l.Yb(o)},872592:(o,h)=>l.$b(o,h,l.Eb.bc,l.Eb.errors)};function Kf(o,h,y){return Rh(async()=>{await l.Wb(o,h,y)})}function Xf(){return typeof wasmOffsetConverter<\"u\"}function hc(o){this.name=\"ExitStatus\",this.message=`Program terminated with exit(${o})`,this.status=o}var fc=o=>{o.terminate(),o.onmessage=()=>{}},ah=o=>{Vs.length==0&&(ph(),ch(Vs[0]));var h=Vs.pop();if(!h)return 6;_i.push(h),ss[o.Ab]=h,h.Ab=o.Ab;var y={cmd:\"run\",start_routine:o.cc,arg:o.Pb,pthread_ptr:o.Ab};return h.postMessage(y,o.ic),0},mi=0,Xr=(o,h,...y)=>{for(var x=2*y.length,B=Fc(),de=Ic(8*x),qe=de>>>3,ot=0;ot<y.length;ot++){var At=y[ot];typeof At==\"bigint\"?(dn[qe+2*ot]=1n,dn[qe+2*ot+1]=At):(dn[qe+2*ot]=0n,c()[qe+2*ot+1>>>0]=At)}return o=df(o,0,x,de,h),Hd(B),o};function mc(o){if(U)return Xr(0,1,o);if(Zt=o,!(0<mi)){for(var h of _i)fc(h);for(h of Vs)fc(h);Vs=[],_i=[],ss=[],Ln=!0}je(o,new hc(o))}function oh(o){if(U)return Xr(1,0,o);_c(o)}var _c=o=>{if(Zt=o,U)throw oh(o),\"unwind\";mc(o)},Vs=[],_i=[],lh=[],ss={},uh=o=>{var h=o.Ab;delete ss[h],Vs.push(o),_i.splice(_i.indexOf(o),1),o.Ab=0,Ac(h)};function dh(){lh.forEach(o=>o())}var ch=o=>new Promise(h=>{o.onmessage=B=>{var de=(B=B.data).cmd;if(B.targetThread&&B.targetThread!=Ba()){var qe=ss[B.targetThread];qe?qe.postMessage(B,B.transferList):er(`Internal error! Worker sent a message \"${de}\" to target pthread ${B.targetThread}, but that thread no longer exists!`)}else de===\"checkMailbox\"?Bd():de===\"spawnThread\"?ah(B):de===\"cleanupThread\"?uh(ss[B.thread]):de===\"killThread\"?(B=B.thread,de=ss[B],delete ss[B],fc(de),Ac(B),_i.splice(_i.indexOf(de),1),de.Ab=0):de===\"cancelThread\"?ss[B.thread].postMessage({cmd:\"cancel\"}):de===\"loaded\"?(o.loaded=!0,h(o)):de===\"alert\"?alert(`Thread ${B.threadId}: ${B.text}`):B.target===\"setimmediate\"?o.postMessage(B):de===\"callHandler\"?l[B.handler](...B.args):de&&er(`worker sent an unknown command ${de}`)},o.onerror=B=>{throw er(`worker sent an error! ${B.filename}:${B.lineno}: ${B.message}`),B};var y,x=[];for(y of[])l.hasOwnProperty(y)&&x.push(y);o.postMessage({cmd:\"load\",handlers:x,wasmMemory:xr,wasmModule:Nr})});function ph(){var o=new Worker(new URL(import.meta.url),{type:\"module\",workerData:\"em-pthread\",name:\"em-pthread\"});Vs.push(o)}var Dd=o=>{for(;0<o.length;)o.shift()(l)},Qf=()=>{var o=Ba(),h=u()[o+52>>>2>>>0];o=u()[o+56>>>2>>>0],pf(h,h-o),Hd(h)},Yf=(o,h)=>{mi=0,o=hf(o,h),0<mi?Zt=o:qd(o)};class Jf{constructor(h){this.Ib=h-24}}function Zf(o,h,y){var x=new Jf(o>>>=0);throw h>>>=0,y>>>=0,u()[x.Ib+16>>>2>>>0]=0,u()[x.Ib+4>>>2>>>0]=h,u()[x.Ib+8>>>2>>>0]=y,o}function hh(o,h,y,x){return U?Xr(2,1,o,h,y,x):fh(o,h,y,x)}function fh(o,h,y,x){if(o>>>=0,h>>>=0,y>>>=0,x>>>=0,q===void 0)return er(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var B=[];return U&&B.length===0?hh(o,h,y,x):(o={cc:y,Ab:o,Pb:x,ic:B},U?(o.Lb=\"spawnThread\",postMessage(o,B),0):ah(o))}var mh=typeof TextDecoder<\"u\"?new TextDecoder(\"utf8\"):void 0,_h=(o,h,y)=>{var x=(h>>>=0)+y;for(y=h;o[y]&&!(y>=x);)++y;if(16<y-h&&o.buffer&&mh)return mh.decode(o.buffer instanceof q?o.slice(h,y):o.subarray(h,y));for(x=\"\";h<y;){var B=o[h++];if(128&B){var de=63&o[h++];if((224&B)==192)x+=String.fromCharCode((31&B)<<6|de);else{var qe=63&o[h++];65536>(B=(240&B)==224?(15&B)<<12|de<<6|qe:(7&B)<<18|de<<12|qe<<6|63&o[h++])?x+=String.fromCharCode(B):(B-=65536,x+=String.fromCharCode(55296|B>>10,56320|1023&B))}}else x+=String.fromCharCode(B)}return x},fn=(o,h)=>(o>>>=0)?_h(n(),o,h):\"\";function gh(o,h,y){return U?Xr(3,1,o,h,y):0}function wh(o,h){if(U)return Xr(4,1,o,h)}var gc=o=>{for(var h=0,y=0;y<o.length;++y){var x=o.charCodeAt(y);127>=x?h++:2047>=x?h+=2:55296<=x&&57343>=x?(h+=4,++y):h+=3}return h},yh=(o,h,y,x)=>{if(!(0<x))return 0;var B=y>>>=0;x=y+x-1;for(var de=0;de<o.length;++de){var qe=o.charCodeAt(de);if(55296<=qe&&57343>=qe&&(qe=65536+((1023&qe)<<10)|1023&o.charCodeAt(++de)),127>=qe){if(y>=x)break;h[y++>>>0]=qe}else{if(2047>=qe){if(y+1>=x)break;h[y++>>>0]=192|qe>>6}else{if(65535>=qe){if(y+2>=x)break;h[y++>>>0]=224|qe>>12}else{if(y+3>=x)break;h[y++>>>0]=240|qe>>18,h[y++>>>0]=128|qe>>12&63}h[y++>>>0]=128|qe>>6&63}h[y++>>>0]=128|63&qe}}return h[y>>>0]=0,y-B},za=(o,h,y)=>yh(o,n(),h,y);function bh(o,h){if(U)return Xr(5,1,o,h)}function Mh(o,h,y){if(U)return Xr(6,1,o,h,y)}function vh(o,h,y){return U?Xr(7,1,o,h,y):0}function xh(o,h){if(U)return Xr(8,1,o,h)}function Th(o,h,y){if(U)return Xr(9,1,o,h,y)}function Sh(o,h,y,x){if(U)return Xr(10,1,o,h,y,x)}function kh(o,h,y,x){if(U)return Xr(11,1,o,h,y,x)}function Ch(o,h,y,x){if(U)return Xr(12,1,o,h,y,x)}function Eh(o){if(U)return Xr(13,1,o)}function $h(o,h){if(U)return Xr(14,1,o,h)}function Ph(o,h,y){if(U)return Xr(15,1,o,h,y)}var Ah,Us,em=()=>{Oa(\"\")},is=o=>{for(var h=\"\";n()[o>>>0];)h+=Ah[n()[o++>>>0]];return h},wc={},yc={};function ys(o,h,y={}){if(!(\"argPackAdvance\"in h))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");return function(x,B,de={}){var qe=B.name;if(!x)throw new Us(`type \"${qe}\" must have a positive integer typeid pointer`);if(yc.hasOwnProperty(x)){if(de.Rb)return;throw new Us(`Cannot register type '${qe}' twice`)}yc[x]=B,wc.hasOwnProperty(x)&&(B=wc[x],delete wc[x],B.forEach(ot=>ot()))}(o,h,y)}var Ih=(o,h,y)=>{switch(h){case 1:return y?x=>r()[x>>>0]:x=>n()[x>>>0];case 2:return y?x=>i()[x>>>1>>>0]:x=>a()[x>>>1>>>0];case 4:return y?x=>s()[x>>>2>>>0]:x=>u()[x>>>2>>>0];case 8:return y?x=>dn[x>>>3]:x=>Ns[x>>>3];default:throw new TypeError(`invalid integer width (${h}): ${o}`)}};function tm(o,h,y){y>>>=0,ys(o>>>=0,{name:h=is(h>>>0),fromWireType:x=>x,toWireType:function(x,B){if(typeof B!=\"bigint\"&&typeof B!=\"number\")throw B=B===null?\"null\":(x=typeof B)==\"object\"||x===\"array\"||x===\"function\"?B.toString():\"\"+B,new TypeError(`Cannot convert \"${B}\" to ${this.name}`);return typeof B==\"number\"&&(B=BigInt(B)),B},argPackAdvance:Ws,readValueFromPointer:Ih(h,y,h.indexOf(\"u\")==-1),Db:null})}var Ws=8;function rm(o,h,y,x){ys(o>>>=0,{name:h=is(h>>>0),fromWireType:function(B){return!!B},toWireType:function(B,de){return de?y:x},argPackAdvance:Ws,readValueFromPointer:function(B){return this.fromWireType(n()[B>>>0])},Db:null})}var bc=[],bs=[];function Mc(o){9<(o>>>=0)&&--bs[o+1]==0&&(bs[o]=void 0,bc.push(o))}var qn=o=>{if(!o)throw new Us(\"Cannot use deleted val. handle = \"+o);return bs[o]},Hn=o=>{switch(o){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let h=bc.pop()||bs.length;return bs[h]=o,bs[h+1]=1,h}};function vc(o){return this.fromWireType(u()[o>>>2>>>0])}var nm={name:\"emscripten::val\",fromWireType:o=>{var h=qn(o);return Mc(o),h},toWireType:(o,h)=>Hn(h),argPackAdvance:Ws,readValueFromPointer:vc,Db:null};function sm(o){return ys(o>>>0,nm)}var im=(o,h)=>{switch(h){case 4:return function(y){return this.fromWireType(d()[y>>>2>>>0])};case 8:return function(y){return this.fromWireType(c()[y>>>3>>>0])};default:throw new TypeError(`invalid float width (${h}): ${o}`)}};function am(o,h,y){y>>>=0,ys(o>>>=0,{name:h=is(h>>>0),fromWireType:x=>x,toWireType:(x,B)=>B,argPackAdvance:Ws,readValueFromPointer:im(h,y),Db:null})}function om(o,h,y,x,B){if(o>>>=0,y>>>=0,h=is(h>>>0),B===-1&&(B=4294967295),B=ot=>ot,x===0){var de=32-8*y;B=ot=>ot<<de>>>de}var qe=h.includes(\"unsigned\")?function(ot,At){return At>>>0}:function(ot,At){return At};ys(o,{name:h,fromWireType:B,toWireType:qe,argPackAdvance:Ws,readValueFromPointer:Ih(h,y,x!==0),Db:null})}function lm(o,h,y){function x(de){var qe=u()[de>>>2>>>0];return de=u()[de+4>>>2>>>0],new B(r().buffer,de,qe)}var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][h];ys(o>>>=0,{name:y=is(y>>>0),fromWireType:x,argPackAdvance:Ws,readValueFromPointer:x},{Rb:!0})}function um(o,h){o>>>=0;var y=(h=is(h>>>0))===\"std::string\";ys(o,{name:h,fromWireType:function(x){var B=u()[x>>>2>>>0],de=x+4;if(y)for(var qe=de,ot=0;ot<=B;++ot){var At=de+ot;if(ot==B||n()[At>>>0]==0){if(qe=fn(qe,At-qe),Bt===void 0)var Bt=qe;else Bt+=\"\\0\",Bt+=qe;qe=At+1}}else{for(Bt=Array(B),ot=0;ot<B;++ot)Bt[ot]=String.fromCharCode(n()[de+ot>>>0]);Bt=Bt.join(\"\")}return os(x),Bt},toWireType:function(x,B){B instanceof ArrayBuffer&&(B=new Uint8Array(B));var de=typeof B==\"string\";if(!(de||B instanceof Uint8Array||B instanceof Uint8ClampedArray||B instanceof Int8Array))throw new Us(\"Cannot pass non-string to std::string\");var qe=y&&de?gc(B):B.length,ot=Gd(4+qe+1),At=ot+4;if(u()[ot>>>2>>>0]=qe,y&&de)za(B,At,qe+1);else if(de)for(de=0;de<qe;++de){var Bt=B.charCodeAt(de);if(255<Bt)throw os(At),new Us(\"String has UTF-16 code units that do not fit in 8 bits\");n()[At+de>>>0]=Bt}else for(de=0;de<qe;++de)n()[At+de>>>0]=B[de];return x!==null&&x.push(os,ot),ot},argPackAdvance:Ws,readValueFromPointer:vc,Db(x){os(x)}})}var Fh=typeof TextDecoder<\"u\"?new TextDecoder(\"utf-16le\"):void 0,dm=(o,h)=>{for(var y=o>>1,x=y+h/2;!(y>=x)&&a()[y>>>0];)++y;if(32<(y<<=1)-o&&Fh)return Fh.decode(n().slice(o,y));for(y=\"\",x=0;!(x>=h/2);++x){var B=i()[o+2*x>>>1>>>0];if(B==0)break;y+=String.fromCharCode(B)}return y},cm=(o,h,y)=>{if(y??(y=2147483647),2>y)return 0;var x=h;y=(y-=2)<2*o.length?y/2:o.length;for(var B=0;B<y;++B){var de=o.charCodeAt(B);i()[h>>>1>>>0]=de,h+=2}return i()[h>>>1>>>0]=0,h-x},pm=o=>2*o.length,hm=(o,h)=>{for(var y=0,x=\"\";!(y>=h/4);){var B=s()[o+4*y>>>2>>>0];if(B==0)break;++y,65536<=B?(B-=65536,x+=String.fromCharCode(55296|B>>10,56320|1023&B)):x+=String.fromCharCode(B)}return x},fm=(o,h,y)=>{if(h>>>=0,y??(y=2147483647),4>y)return 0;var x=h;y=x+y-4;for(var B=0;B<o.length;++B){var de=o.charCodeAt(B);if(55296<=de&&57343>=de&&(de=65536+((1023&de)<<10)|1023&o.charCodeAt(++B)),s()[h>>>2>>>0]=de,(h+=4)+4>y)break}return s()[h>>>2>>>0]=0,h-x},mm=o=>{for(var h=0,y=0;y<o.length;++y){var x=o.charCodeAt(y);55296<=x&&57343>=x&&++y,h+=4}return h};function _m(o,h,y){if(o>>>=0,h>>>=0,y=is(y>>>=0),h===2)var x=dm,B=cm,de=pm,qe=ot=>a()[ot>>>1>>>0];else h===4&&(x=hm,B=fm,de=mm,qe=ot=>u()[ot>>>2>>>0]);ys(o,{name:y,fromWireType:ot=>{for(var At,Bt=u()[ot>>>2>>>0],Jt=ot+4,Er=0;Er<=Bt;++Er){var Dr=ot+4+Er*h;Er!=Bt&&qe(Dr)!=0||(Jt=x(Jt,Dr-Jt),At===void 0?At=Jt:(At+=\"\\0\",At+=Jt),Jt=Dr+h)}return os(ot),At},toWireType:(ot,At)=>{if(typeof At!=\"string\")throw new Us(`Cannot pass non-string to C++ string type ${y}`);var Bt=de(At),Jt=Gd(4+Bt+h);return u()[Jt>>>2>>>0]=Bt/h,B(At,Jt+4,Bt+h),ot!==null&&ot.push(os,Jt),Jt},argPackAdvance:Ws,readValueFromPointer:vc,Db(ot){os(ot)}})}function gm(o,h){ys(o>>>=0,{Sb:!0,name:h=is(h>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var wm=()=>1;function ym(o){Pc(o>>>0,!$,1,!S,131072,!1),dh()}var Oh=o=>{if(!Ln)try{if(o(),!(0<mi))try{U?qd(Zt):_c(Zt)}catch(h){h instanceof hc||h==\"unwind\"||je(1,h)}}catch(h){h instanceof hc||h==\"unwind\"||je(1,h)}};function xc(o){o>>>=0,typeof Atomics.jc==\"function\"&&(Atomics.jc(s(),o>>>2,o).value.then(Bd),o+=128,Atomics.store(s(),o>>>2,1))}var Bd=()=>{var o=Ba();o&&(xc(o),Oh(cf))};function bm(o,h){(o>>>=0)==h>>>0?setTimeout(Bd):U?postMessage({targetThread:o,cmd:\"checkMailbox\"}):(o=ss[o])&&o.postMessage({cmd:\"checkMailbox\"})}var Tc=[];function Mm(o,h,y,x,B){for(h>>>=0,x/=2,Tc.length=x,y=B>>>0>>>3,B=0;B<x;B++)Tc[B]=dn[y+2*B]?dn[y+2*B+1]:c()[y+2*B+1>>>0];return(h?pc[h]:d_[o])(...Tc)}function vm(o){o>>>=0,U?postMessage({cmd:\"cleanupThread\",thread:o}):uh(ss[o])}function xm(o){}var Sc=(o,h)=>{var y=yc[o];if(y===void 0)throw o=of(o),y=is(o),os(o),new Us(`${h} has unknown type ${y}`);return y},zh=(o,h,y)=>{var x=[];return o=o.toWireType(x,y),x.length&&(u()[h>>>2>>>0]=Hn(x)),o};function Tm(o,h,y){return h>>>=0,y>>>=0,o=qn(o>>>0),h=Sc(h,\"emval::as\"),zh(h,y,o)}var Ld=o=>{try{o()}catch(h){Oa(h)}},Gs=0,as=null,Dh=0,Rd=[],Bh={},Lh={},Sm=0,kc=null,km=[];function Rh(o){return function(h){if(!Ln){if(Gs===0){var y=!1,x=!1;h((B=0)=>{if(!Ln&&(Dh=B,y=!0,x)){Gs=2,Ld(()=>_f(as)),typeof Browser<\"u\"&&Browser.Jb.Qb&&Browser.Jb.resume(),B=!1;try{var de=function(){var At=s()[as+8>>>2>>>0];return At=Kt[Lh[At]],--mi,At()}()}catch(At){de=At,B=!0}var qe=!1;if(!as){var ot=kc;ot&&(kc=null,(B?ot.reject:ot.resolve)(de),qe=!0)}if(B&&!qe)throw de}}),x=!0,y||(Gs=1,as=function(){var B=Gd(65548),de=B+12;u()[B>>>2>>>0]=de,u()[B+4>>>2>>>0]=de+65536,de=Rd[0];var qe=Bh[de];return qe===void 0&&(qe=Sm++,Bh[de]=qe,Lh[qe]=de),de=qe,s()[B+8>>>2>>>0]=de,B}(),typeof Browser<\"u\"&&Browser.Jb.Qb&&Browser.Jb.pause(),Ld(()=>ff(as)))}else Gs===2?(Gs=0,Ld(gf),os(as),as=null,km.forEach(Oh)):Oa(`invalid state: ${Gs}`);return Dh}}(h=>{o().then(h)})}function Cm(o){return o>>>=0,Rh(()=>(o=qn(o)).then(Hn))}var Nd=[];function Em(o,h,y,x){return y>>>=0,x>>>=0,(o=Nd[o>>>0])(null,h=qn(h>>>0),y,x)}var $m={},jd=o=>{var h=$m[o];return h===void 0?is(o):h};function Pm(o,h,y,x,B){return y>>>=0,x>>>=0,B>>>=0,(o=Nd[o>>>0])(h=qn(h>>>0),h[y=jd(y)],x,B)}var Nh=()=>typeof globalThis==\"object\"?globalThis:Function(\"return this\")();function Am(o){return(o>>>=0)==0?Hn(Nh()):(o=jd(o),Hn(Nh()[o]))}var Im=o=>{var h=Nd.length;return Nd.push(o),h},Fm=(o,h)=>{for(var y=Array(o),x=0;x<o;++x)y[x]=Sc(u()[h+4*x>>>2>>>0],\"parameter \"+x);return y},jh=(o,h)=>Object.defineProperty(h,\"name\",{value:o});function Om(o,h,y){var x=(h=Fm(o,h>>>0)).shift();o--;var B=`return function (obj, func, destructorsRef, args) {\n`,de=0,qe=[];y===0&&qe.push(\"obj\");for(var ot=[\"retType\"],At=[x],Bt=0;Bt<o;++Bt)qe.push(\"arg\"+Bt),ot.push(\"argType\"+Bt),At.push(h[Bt]),B+=`  var arg${Bt} = argType${Bt}.readValueFromPointer(args${de?\"+\"+de:\"\"});\n`,de+=h[Bt].argPackAdvance;return B+=`  var rv = ${y===1?\"new func\":\"func.call\"}(${qe.join(\", \")});\n`,x.Sb||(ot.push(\"emval_returnValue\"),At.push(zh),B+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),ot.push(B+`};\n`),o=function(Jt){var Er=Function;if(!(Er instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof Er} which is not a function`);var Dr=jh(Er.name||\"unknownFunctionName\",function(){});return Dr.prototype=Er.prototype,Dr=new Dr,(Jt=Er.apply(Dr,Jt))instanceof Object?Jt:Dr}(ot)(...At),y=`methodCaller<(${h.map(Jt=>Jt.name).join(\", \")}) => ${x.name}>`,Im(jh(y,o))}function zm(o){return o=jd(o>>>0),Hn(l[o])}function Dm(o,h){return h>>>=0,o=qn(o>>>0),h=qn(h),Hn(o[h])}function Bm(o){9<(o>>>=0)&&(bs[o+1]+=1)}function Lm(){return Hn([])}function Rm(o){o=qn(o>>>0);for(var h=Array(o.length),y=0;y<o.length;y++)h[y]=o[y];return Hn(h)}function Nm(o){return Hn(jd(o>>>0))}function jm(){return Hn({})}function Vm(o){for(var h=qn(o>>>=0);h.length;){var y=h.pop();h.pop()(y)}Mc(o)}function Um(o,h,y){h>>>=0,y>>>=0,o=qn(o>>>0),h=qn(h),y=qn(y),o[h]=y}function Wm(o,h){return h>>>=0,o=(o=Sc(o>>>0,\"_emval_take_value\")).readValueFromPointer(h),Hn(o)}function Gm(o,h){o=-9007199254740992>o||9007199254740992<o?NaN:Number(o),h>>>=0,o=new Date(1e3*o),s()[h>>>2>>>0]=o.getUTCSeconds(),s()[h+4>>>2>>>0]=o.getUTCMinutes(),s()[h+8>>>2>>>0]=o.getUTCHours(),s()[h+12>>>2>>>0]=o.getUTCDate(),s()[h+16>>>2>>>0]=o.getUTCMonth(),s()[h+20>>>2>>>0]=o.getUTCFullYear()-1900,s()[h+24>>>2>>>0]=o.getUTCDay(),o=(o.getTime()-Date.UTC(o.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,s()[h+28>>>2>>>0]=o}var Da=o=>o%4==0&&(o%100!=0||o%400==0),Vh=[0,31,60,91,121,152,182,213,244,274,305,335],Uh=[0,31,59,90,120,151,181,212,243,273,304,334];function qm(o,h){o=-9007199254740992>o||9007199254740992<o?NaN:Number(o),h>>>=0,o=new Date(1e3*o),s()[h>>>2>>>0]=o.getSeconds(),s()[h+4>>>2>>>0]=o.getMinutes(),s()[h+8>>>2>>>0]=o.getHours(),s()[h+12>>>2>>>0]=o.getDate(),s()[h+16>>>2>>>0]=o.getMonth(),s()[h+20>>>2>>>0]=o.getFullYear()-1900,s()[h+24>>>2>>>0]=o.getDay();var y=(Da(o.getFullYear())?Vh:Uh)[o.getMonth()]+o.getDate()-1|0;s()[h+28>>>2>>>0]=y,s()[h+36>>>2>>>0]=-60*o.getTimezoneOffset(),y=new Date(o.getFullYear(),6,1).getTimezoneOffset();var x=new Date(o.getFullYear(),0,1).getTimezoneOffset();o=0|(y!=x&&o.getTimezoneOffset()==Math.min(x,y)),s()[h+32>>>2>>>0]=o}function Hm(o){o>>>=0;var h=new Date(s()[o+20>>>2>>>0]+1900,s()[o+16>>>2>>>0],s()[o+12>>>2>>>0],s()[o+8>>>2>>>0],s()[o+4>>>2>>>0],s()[o>>>2>>>0],0),y=s()[o+32>>>2>>>0],x=h.getTimezoneOffset(),B=new Date(h.getFullYear(),6,1).getTimezoneOffset(),de=new Date(h.getFullYear(),0,1).getTimezoneOffset(),qe=Math.min(de,B);return 0>y?s()[o+32>>>2>>>0]=+(B!=de&&qe==x):0<y!=(qe==x)&&(B=Math.max(de,B),h.setTime(h.getTime()+6e4*((0<y?qe:B)-x))),s()[o+24>>>2>>>0]=h.getDay(),y=(Da(h.getFullYear())?Vh:Uh)[h.getMonth()]+h.getDate()-1|0,s()[o+28>>>2>>>0]=y,s()[o>>>2>>>0]=h.getSeconds(),s()[o+4>>>2>>>0]=h.getMinutes(),s()[o+8>>>2>>>0]=h.getHours(),s()[o+12>>>2>>>0]=h.getDate(),s()[o+16>>>2>>>0]=h.getMonth(),s()[o+20>>>2>>>0]=h.getYear(),o=h.getTime(),BigInt(isNaN(o)?-1:o/1e3)}function Wh(o,h,y,x,B,de,qe){return U?Xr(16,1,o,h,y,x,B,de,qe):-52}function Gh(o,h,y,x,B,de){if(U)return Xr(17,1,o,h,y,x,B,de)}function Km(o,h,y,x){o>>>=0,h>>>=0,y>>>=0,x>>>=0;var B=new Date().getFullYear(),de=new Date(B,0,1),qe=new Date(B,6,1);B=de.getTimezoneOffset();var ot=qe.getTimezoneOffset(),At=Math.max(B,ot);u()[o>>>2>>>0]=60*At,s()[h>>>2>>>0]=+(B!=ot),de=(o=Bt=>Bt.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:\"short\"}).split(\" \")[1])(de),qe=o(qe),ot<B?(za(de,y,17),za(qe,x,17)):(za(de,x,17),za(qe,y,17))}var Cc=[],qh=(o,h)=>{Cc.length=0;for(var y;y=n()[o++>>>0];){var x=y!=105;h+=(x&=y!=112)&&h%8?4:0,Cc.push(y==112?u()[h>>>2>>>0]:y==106?dn[h>>>3]:y==105?s()[h>>>2>>>0]:c()[h>>>3>>>0]),h+=x?8:4}return Cc};function Xm(o,h,y){return o>>>=0,h=qh(h>>>0,y>>>0),pc[o](...h)}function Qm(o,h,y){return o>>>=0,h=qh(h>>>0,y>>>0),pc[o](...h)}var Ym=()=>{},Jm=()=>Date.now();function Zm(o,h){return er(fn(o>>>0,h>>>0))}var Hh,e_=()=>{throw mi+=1,\"unwind\"};function t_(){return 4294901760}Hh=()=>performance.timeOrigin+performance.now();var r_=()=>navigator.hardwareConcurrency;function n_(){return Oa(\"Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER\"),0}function s_(o){o>>>=0;var h=n().length;if(o<=h||4294901760<o)return!1;for(var y=1;4>=y;y*=2){var x=h*(1+.2/y);x=Math.min(x,o+100663296);var B=Math;x=Math.max(o,x);e:{B=(B.min.call(B,4294901760,x+(65536-x%65536)%65536)-xr.buffer.byteLength+65535)/65536;try{xr.grow(B),wn();var de=1;break e}catch{}de=void 0}if(de)return!0}return!1}var Vd=()=>(Oa(\"Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER\"),0),qu={},Kh=o=>{o.forEach(h=>{Vd()})};function i_(){var o=Error().stack.toString().split(`\n`);return o[0]==\"Error\"&&o.shift(),Kh(o),qu.Ob=Vd(),qu.ac=o,qu.Ob}function a_(o,h,y){if(o>>>=0,h>>>=0,qu.Ob==o)var x=qu.ac;else(x=Error().stack.toString().split(`\n`))[0]==\"Error\"&&x.shift(),Kh(x);for(var B=3;x[B]&&Vd()!=o;)++B;for(o=0;o<y&&x[o+B];++o)s()[h+4*o>>>2>>>0]=Vd();return o}var Ec,$c={},Xh=()=>{if(!Ec){var o,h={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:Ke};for(o in $c)$c[o]===void 0?delete h[o]:h[o]=$c[o];var y=[];for(o in h)y.push(`${o}=${h[o]}`);Ec=y}return Ec};function Qh(o,h){if(U)return Xr(18,1,o,h);o>>>=0,h>>>=0;var y=0;return Xh().forEach((x,B)=>{var de=h+y;for(B=u()[o+4*B>>>2>>>0]=de,de=0;de<x.length;++de)r()[B++>>>0]=x.charCodeAt(de);r()[B>>>0]=0,y+=x.length+1}),0}function Yh(o,h){if(U)return Xr(19,1,o,h);o>>>=0,h>>>=0;var y=Xh();u()[o>>>2>>>0]=y.length;var x=0;return y.forEach(B=>x+=B.length+1),u()[h>>>2>>>0]=x,0}function Jh(o){return U?Xr(20,1,o):52}function Zh(o,h,y,x){return U?Xr(21,1,o,h,y,x):52}function ef(o,h,y,x){return U?Xr(22,1,o,h,y,x):70}var o_=[null,[],[]];function tf(o,h,y,x){if(U)return Xr(23,1,o,h,y,x);h>>>=0,y>>>=0,x>>>=0;for(var B=0,de=0;de<y;de++){var qe=u()[h>>>2>>>0],ot=u()[h+4>>>2>>>0];h+=8;for(var At=0;At<ot;At++){var Bt=n()[qe+At>>>0],Jt=o_[o];Bt===0||Bt===10?((o===1?wr:er)(_h(Jt,0)),Jt.length=0):Jt.push(Bt)}B+=ot}return u()[x>>>2>>>0]=B,0}var rf=[31,29,31,30,31,30,31,31,30,31,30,31],nf=[31,28,31,30,31,30,31,31,30,31,30,31],l_=(o,h)=>{r().set(o,h>>>0)};function sf(o,h,y,x){function B(De,Tr,Qr){for(De=typeof De==\"number\"?De.toString():De||\"\";De.length<Tr;)De=Qr[0]+De;return De}function de(De,Tr){return B(De,Tr,\"0\")}function qe(De,Tr){function Qr(yf){return 0>yf?-1:0<yf?1:0}var gi;return(gi=Qr(De.getFullYear()-Tr.getFullYear()))===0&&(gi=Qr(De.getMonth()-Tr.getMonth()))===0&&(gi=Qr(De.getDate()-Tr.getDate())),gi}function ot(De){switch(De.getDay()){case 0:return new Date(De.getFullYear()-1,11,29);case 1:return De;case 2:return new Date(De.getFullYear(),0,3);case 3:return new Date(De.getFullYear(),0,2);case 4:return new Date(De.getFullYear(),0,1);case 5:return new Date(De.getFullYear()-1,11,31);case 6:return new Date(De.getFullYear()-1,11,30)}}function At(De){var Tr=De.Bb;for(De=new Date(new Date(De.Cb+1900,0,1).getTime());0<Tr;){var Qr=De.getMonth(),gi=(Da(De.getFullYear())?rf:nf)[Qr];if(!(Tr>gi-De.getDate())){De.setDate(De.getDate()+Tr);break}Tr-=gi-De.getDate()+1,De.setDate(1),11>Qr?De.setMonth(Qr+1):(De.setMonth(0),De.setFullYear(De.getFullYear()+1))}return Qr=new Date(De.getFullYear()+1,0,4),Tr=ot(new Date(De.getFullYear(),0,4)),Qr=ot(Qr),0>=qe(Tr,De)?0>=qe(Qr,De)?De.getFullYear()+1:De.getFullYear():De.getFullYear()-1}o>>>=0,h>>>=0,y>>>=0,x>>>=0;var Bt=u()[x+40>>>2>>>0];for(var Jt in x={fc:s()[x>>>2>>>0],ec:s()[x+4>>>2>>>0],Gb:s()[x+8>>>2>>>0],Kb:s()[x+12>>>2>>>0],Hb:s()[x+16>>>2>>>0],Cb:s()[x+20>>>2>>>0],ub:s()[x+24>>>2>>>0],Bb:s()[x+28>>>2>>>0],nc:s()[x+32>>>2>>>0],dc:s()[x+36>>>2>>>0],hc:Bt?fn(Bt):\"\"},y=fn(y),Bt={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})y=y.replace(new RegExp(Jt,\"g\"),Bt[Jt]);var Er=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),Dr=\"January February March April May June July August September October November December\".split(\" \");for(Jt in Bt={\"%a\":De=>Er[De.ub].substring(0,3),\"%A\":De=>Er[De.ub],\"%b\":De=>Dr[De.Hb].substring(0,3),\"%B\":De=>Dr[De.Hb],\"%C\":De=>de((De.Cb+1900)/100|0,2),\"%d\":De=>de(De.Kb,2),\"%e\":De=>B(De.Kb,2,\" \"),\"%g\":De=>At(De).toString().substring(2),\"%G\":At,\"%H\":De=>de(De.Gb,2),\"%I\":De=>((De=De.Gb)==0?De=12:12<De&&(De-=12),de(De,2)),\"%j\":De=>{for(var Tr=0,Qr=0;Qr<=De.Hb-1;Tr+=(Da(De.Cb+1900)?rf:nf)[Qr++]);return de(De.Kb+Tr,3)},\"%m\":De=>de(De.Hb+1,2),\"%M\":De=>de(De.ec,2),\"%n\":()=>`\n`,\"%p\":De=>0<=De.Gb&&12>De.Gb?\"AM\":\"PM\",\"%S\":De=>de(De.fc,2),\"%t\":()=>\"\t\",\"%u\":De=>De.ub||7,\"%U\":De=>de(Math.floor((De.Bb+7-De.ub)/7),2),\"%V\":De=>{var Tr=Math.floor((De.Bb+7-(De.ub+6)%7)/7);if(2>=(De.ub+371-De.Bb-2)%7&&Tr++,Tr)Tr==53&&((Qr=(De.ub+371-De.Bb)%7)==4||Qr==3&&Da(De.Cb)||(Tr=1));else{Tr=52;var Qr=(De.ub+7-De.Bb-1)%7;(Qr==4||Qr==5&&Da(De.Cb%400-1))&&Tr++}return de(Tr,2)},\"%w\":De=>De.ub,\"%W\":De=>de(Math.floor((De.Bb+7-(De.ub+6)%7)/7),2),\"%y\":De=>(De.Cb+1900).toString().substring(2),\"%Y\":De=>De.Cb+1900,\"%z\":De=>{var Tr=0<=(De=De.dc);return De=Math.abs(De)/60,(Tr?\"+\":\"-\")+(\"0000\"+(De/60*100+De%60)).slice(-4)},\"%Z\":De=>De.hc,\"%%\":()=>\"%\"},y=y.replace(/%%/g,\"\\0\\0\"),Bt)y.includes(Jt)&&(y=y.replace(new RegExp(Jt,\"g\"),Bt[Jt](x)));return Jt=function(De){var Tr=Array(gc(De)+1);return yh(De,Tr,0,Tr.length),Tr}(y=y.replace(/\\0\\0/g,\"%\")),Jt.length>h?0:(l_(Jt,o),Jt.length-1)}function u_(o,h,y,x){return sf(o>>>0,h>>>0,y>>>0,x>>>0)}U||function(){for(var o=l.numThreads-1;o--;)ph();Gu.unshift(()=>{Gn++,function(h){U?h():Promise.all(Vs.map(ch)).then(h)}(()=>zd())})}();for(var af=Array(256),Ud=0;256>Ud;++Ud)af[Ud]=String.fromCharCode(Ud);Ah=af,Us=l.BindingError=class extends Error{constructor(o){super(o),this.name=\"BindingError\"}},l.InternalError=class extends Error{constructor(o){super(o),this.name=\"InternalError\"}},bs.push(0,1,void 0,1,null,1,!0,1,!1,1),l.count_emval_handles=()=>bs.length/2-5-bc.length;var d_=[mc,oh,hh,gh,wh,bh,Mh,vh,xh,Th,Sh,kh,Ch,Eh,$h,Ph,Wh,Gh,Qh,Yh,Jh,Zh,ef,tf],Kt=function(){function o(y,x){return Kt=y.exports,Kt=function(){var B=Kt,de={};for(let[qe,ot]of Object.entries(B))de[qe]=typeof ot==\"function\"?(...At)=>{Rd.push(qe);try{return ot(...At)}finally{Ln||(Rd.pop(),as&&Gs===1&&Rd.length===0&&(Gs=0,mi+=1,Ld(mf),typeof Fibers<\"u\"&&Fibers.oc()))}}:ot;return de}(),Kt=function(){var B=Kt,de=ot=>At=>ot(At)>>>0,qe=ot=>()=>ot()>>>0;return(B=Object.assign({},B)).Ca=de(B.Ca),B.fb=qe(B.fb),B.gb=de(B.gb),B.emscripten_main_runtime_thread_id=qe(B.emscripten_main_runtime_thread_id),B.sb=de(B.sb),B.tb=qe(B.tb),B}(),lh.push(Kt.ib),yn.unshift(Kt.Ba),Nr=x,zd(),Kt}var h=ih();if(Gn++,l.instantiateWasm)try{return l.instantiateWasm(h,o)}catch(y){er(`Module.instantiateWasm callback failed with error: ${y}`),g(y)}return cc||(cc=l.locateFile?th(\"ort-wasm-simd-threaded.jsep.wasm\")?\"ort-wasm-simd-threaded.jsep.wasm\":l.locateFile?l.locateFile(\"ort-wasm-simd-threaded.jsep.wasm\",ft):ft+\"ort-wasm-simd-threaded.jsep.wasm\":new URL(I(\"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm\"),I.b).href),function(y,x){var B=cc;return Ot||typeof WebAssembly.instantiateStreaming!=\"function\"||th(B)||rh(B)||typeof fetch!=\"function\"?sh(B,y,x):fetch(B,{credentials:\"same-origin\"}).then(de=>WebAssembly.instantiateStreaming(de,y).then(x,function(qe){return er(`wasm streaming compile failed: ${qe}`),er(\"falling back to ArrayBuffer instantiation\"),sh(B,y,x)}))}(h,function(y){o(y.instance,y.module)}).catch(g),{}}(),of=o=>(of=Kt.Ca)(o),lf=()=>(lf=Kt.Da)();l._OrtInit=(o,h)=>(l._OrtInit=Kt.Ea)(o,h),l._OrtGetLastError=(o,h)=>(l._OrtGetLastError=Kt.Fa)(o,h),l._OrtCreateSessionOptions=(o,h,y,x,B,de,qe,ot,At,Bt)=>(l._OrtCreateSessionOptions=Kt.Ga)(o,h,y,x,B,de,qe,ot,At,Bt),l._OrtAppendExecutionProvider=(o,h)=>(l._OrtAppendExecutionProvider=Kt.Ha)(o,h),l._OrtAddFreeDimensionOverride=(o,h,y)=>(l._OrtAddFreeDimensionOverride=Kt.Ia)(o,h,y),l._OrtAddSessionConfigEntry=(o,h,y)=>(l._OrtAddSessionConfigEntry=Kt.Ja)(o,h,y),l._OrtReleaseSessionOptions=o=>(l._OrtReleaseSessionOptions=Kt.Ka)(o),l._OrtCreateSession=(o,h,y)=>(l._OrtCreateSession=Kt.La)(o,h,y),l._OrtReleaseSession=o=>(l._OrtReleaseSession=Kt.Ma)(o),l._OrtGetInputOutputCount=(o,h,y)=>(l._OrtGetInputOutputCount=Kt.Na)(o,h,y),l._OrtGetInputName=(o,h)=>(l._OrtGetInputName=Kt.Oa)(o,h),l._OrtGetOutputName=(o,h)=>(l._OrtGetOutputName=Kt.Pa)(o,h),l._OrtFree=o=>(l._OrtFree=Kt.Qa)(o),l._OrtCreateTensor=(o,h,y,x,B,de)=>(l._OrtCreateTensor=Kt.Ra)(o,h,y,x,B,de),l._OrtGetTensorData=(o,h,y,x,B)=>(l._OrtGetTensorData=Kt.Sa)(o,h,y,x,B),l._OrtReleaseTensor=o=>(l._OrtReleaseTensor=Kt.Ta)(o),l._OrtCreateRunOptions=(o,h,y,x)=>(l._OrtCreateRunOptions=Kt.Ua)(o,h,y,x),l._OrtAddRunConfigEntry=(o,h,y)=>(l._OrtAddRunConfigEntry=Kt.Va)(o,h,y),l._OrtReleaseRunOptions=o=>(l._OrtReleaseRunOptions=Kt.Wa)(o),l._OrtCreateBinding=o=>(l._OrtCreateBinding=Kt.Xa)(o),l._OrtBindInput=(o,h,y)=>(l._OrtBindInput=Kt.Ya)(o,h,y),l._OrtBindOutput=(o,h,y,x)=>(l._OrtBindOutput=Kt.Za)(o,h,y,x),l._OrtClearBoundOutputs=o=>(l._OrtClearBoundOutputs=Kt._a)(o),l._OrtReleaseBinding=o=>(l._OrtReleaseBinding=Kt.$a)(o),l._OrtRunWithBinding=(o,h,y,x,B)=>(l._OrtRunWithBinding=Kt.ab)(o,h,y,x,B),l._OrtRun=(o,h,y,x,B,de,qe,ot)=>(l._OrtRun=Kt.bb)(o,h,y,x,B,de,qe,ot),l._OrtEndProfiling=o=>(l._OrtEndProfiling=Kt.cb)(o),l._JsepOutput=(o,h,y)=>(l._JsepOutput=Kt.db)(o,h,y),l._JsepGetNodeName=o=>(l._JsepGetNodeName=Kt.eb)(o);var Wd,Ba=()=>(Ba=Kt.fb)(),Gd=l._malloc=o=>(Gd=l._malloc=Kt.gb)(o),os=l._free=o=>(os=l._free=Kt.hb)(o),Pc=(o,h,y,x,B,de)=>(Pc=Kt.kb)(o,h,y,x,B,de),uf=()=>(uf=Kt.lb)(),df=(o,h,y,x,B)=>(df=Kt.mb)(o,h,y,x,B),Ac=o=>(Ac=Kt.nb)(o),qd=o=>(qd=Kt.ob)(o),cf=()=>(cf=Kt.pb)(),pf=(o,h)=>(pf=Kt.qb)(o,h),Hd=o=>(Hd=Kt.rb)(o),Ic=o=>(Ic=Kt.sb)(o),Fc=()=>(Fc=Kt.tb)(),hf=l.dynCall_ii=(o,h)=>(hf=l.dynCall_ii=Kt.vb)(o,h),ff=o=>(ff=Kt.wb)(o),mf=()=>(mf=Kt.xb)(),_f=o=>(_f=Kt.yb)(o),gf=()=>(gf=Kt.zb)();function wf(){0<Gn||(U?(w(l),U||Dd(yn),startWorker(l)):(Dd(Gu),0<Gn||Wd||(Wd=!0,l.calledRun=!0,Ln||(U||Dd(yn),w(l),U||Dd(Cn)))))}return l.___start_em_js=872704,l.___stop_em_js=872926,l.stackSave=()=>Fc(),l.stackRestore=o=>Hd(o),l.stackAlloc=o=>Ic(o),l.UTF8ToString=fn,l.stringToUTF8=za,l.lengthBytesUTF8=gc,js=function o(){Wd||wf(),Wd||(js=o)},wf(),v}),$t=ct,((e=globalThis.self)==null?void 0:e.name)===\"em-pthread\"&&ct()}),Re,Nt,Lt,Ht,Rt,Wt,Xt,cr,sr=N(()=>{var e,t;Ae(),Re=import.meta.url??(typeof document<\"u\"?(e=document.currentScript)==null?void 0:e.src:typeof self<\"u\"?(t=self.location)==null?void 0:t.href:void 0),Nt=typeof location>\"u\"?void 0:location.origin,Lt=(r,n)=>{try{let i=n??Re;return(i?new URL(r,i):new URL(r)).origin===Nt}catch{return!1}},Ht=async r=>{let n=await(await fetch(r,{credentials:\"same-origin\"})).blob();return URL.createObjectURL(n)},Rt=(Fe(),P(D)).default,Wt=async()=>{if(!Re)throw new Error(\"Failed to load proxy worker: cannot determine the script source URL.\");if(Lt(Re))return[void 0,Rt()];let r=await Ht(Re);return[r,Rt(r)]},Xt=(_t(),P(et)).default,cr=async(r,n,i)=>[void 0,Xt]}),yr,Je,wt,Dt,Kr,In,Rn,Vr,sn=N(()=>{sr(),Je=!1,wt=!1,Dt=!1,Kr=()=>{if(typeof SharedArrayBuffer>\"u\")return!1;try{return typeof MessageChannel<\"u\"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},In=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Rn=async e=>{if(Je)return Promise.resolve();if(wt)throw new Error(\"multiple calls to 'initializeWebAssembly()' detected.\");if(Dt)throw new Error(\"previous call to 'initializeWebAssembly()' failed.\");wt=!0;let t=e.initTimeout,r=e.numThreads;if(!In())throw new Error(\"WebAssembly SIMD is not supported in the current environment.\");let n=Kr();r>1&&!n&&(typeof self<\"u\"&&!self.crossOriginIsolated&&console.warn(\"env.wasm.numThreads is set to \"+r+\", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info.\"),console.warn(\"WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading.\"),e.numThreads=r=1);let i=e.wasmPaths,a=typeof i==\"string\"?i:void 0,s=i==null?void 0:i.mjs,u=(s==null?void 0:s.href)??s,d=i==null?void 0:i.wasm,c=(d==null?void 0:d.href)??d,w=e.wasmBinary,[g,l]=await cr(u,a,r>1),v=!1,S=[];if(t>0&&S.push(new Promise($=>{setTimeout(()=>{v=!0,$()},t)})),S.push(new Promise(($,U)=>{let q={numThreads:r};w?q.wasmBinary=w:(c||a)&&(q.locateFile=(L,se)=>c??(a??se)+L),l(q).then(L=>{wt=!1,Je=!0,yr=L,$(),g&&URL.revokeObjectURL(g)},L=>{wt=!1,Dt=!0,U(L)})})),await Promise.race(S),v)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Vr=()=>{if(Je&&yr)return yr;throw new Error(\"WebAssembly is not initialized yet.\")}}),Ur,Fn,Or,Xn=N(()=>{sn(),Ur=(e,t)=>{let r=Vr(),n=r.lengthBytesUTF8(e)+1,i=r._malloc(n);return r.stringToUTF8(e,i,n),t.push(i),i},Fn=(e,t,r,n)=>{if(typeof e==\"object\"&&e!==null){if(r.has(e))throw new Error(\"Circular reference in options\");r.add(e)}Object.entries(e).forEach(([i,a])=>{let s=t?t+i:i;if(typeof a==\"object\")Fn(a,s+\".\",r,n);else if(typeof a==\"string\"||typeof a==\"number\")n(s,a.toString());else if(typeof a==\"boolean\")n(s,a?\"1\":\"0\");else throw new Error(`Can't handle extra config type: ${typeof a}`)})},Or=e=>{let t=Vr(),r=t.stackSave();try{let n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);let i=t.HEAP32[n/4],a=t.HEAPU32[n/4+1],s=a?t.UTF8ToString(a):\"\";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${s}`)}finally{t.stackRestore(r)}}}),Nn,qs=N(()=>{sn(),Xn(),Nn=e=>{let t=Vr(),r=0,n=[],i=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!=\"number\"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!=\"number\"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(i.terminate=!1);let a=0;return(e==null?void 0:e.tag)!==void 0&&(a=Ur(e.tag,n)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,a),r===0&&Or(\"Can't create run options.\"),(e==null?void 0:e.extra)!==void 0&&Fn(e.extra,\"\",new WeakSet,(s,u)=>{let d=Ur(s,n),c=Ur(u,n);t._OrtAddRunConfigEntry(r,d,c)!==0&&Or(`Can't set a run config entry: ${s} - ${u}.`)}),[r,n]}catch(a){throw r!==0&&t._OrtReleaseRunOptions(r),n.forEach(s=>t._free(s)),a}}}),vs,xs,Ts,Ss,Qn,Hs=N(()=>{sn(),Xn(),vs=e=>{switch(e){case\"disabled\":return 0;case\"basic\":return 1;case\"extended\":return 2;case\"all\":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},xs=e=>{switch(e){case\"sequential\":return 0;case\"parallel\":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Ts=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\"1\"),e.executionProviders&&e.executionProviders.some(r=>(typeof r==\"string\"?r:r.name)===\"webgpu\")&&(e.enableMemPattern=!1)},Ss=(e,t,r)=>{for(let n of t){let i=typeof n==\"string\"?n:n.name;switch(i){case\"webnn\":if(i=\"WEBNN\",typeof n!=\"string\"){let s=n==null?void 0:n.deviceType;if(s){let u=Ur(\"deviceType\",r),d=Ur(s,r);Vr()._OrtAddSessionConfigEntry(e,u,d)!==0&&Or(`Can't set a session config entry: 'deviceType' - ${s}.`)}}break;case\"webgpu\":if(i=\"JS\",typeof n!=\"string\"){let s=n;if(s!=null&&s.preferredLayout){if(s.preferredLayout!==\"NCHW\"&&s.preferredLayout!==\"NHWC\")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${s.preferredLayout}`);let u=Ur(\"preferredLayout\",r),d=Ur(s.preferredLayout,r);Vr()._OrtAddSessionConfigEntry(e,u,d)!==0&&Or(`Can't set a session config entry: 'preferredLayout' - ${s.preferredLayout}.`)}}break;case\"wasm\":case\"cpu\":continue;default:throw new Error(`not supported execution provider: ${i}`)}let a=Ur(i,r);Vr()._OrtAppendExecutionProvider(e,a)!==0&&Or(`Can't append execution provider: ${i}.`)}},Qn=e=>{let t=Vr(),r=0,n=[],i=e||{};Ts(i);try{let a=vs(i.graphOptimizationLevel??\"all\"),s=xs(i.executionMode??\"sequential\"),u=typeof i.logId==\"string\"?Ur(i.logId,n):0,d=i.logSeverityLevel??2;if(!Number.isInteger(d)||d<0||d>4)throw new Error(`log serverity level is not valid: ${d}`);let c=i.logVerbosityLevel??0;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log verbosity level is not valid: ${c}`);let w=typeof i.optimizedModelFilePath==\"string\"?Ur(i.optimizedModelFilePath,n):0;if(r=t._OrtCreateSessionOptions(a,!!i.enableCpuMemArena,!!i.enableMemPattern,s,!!i.enableProfiling,0,u,d,c,w),r===0&&Or(\"Can't create session options.\"),i.executionProviders&&Ss(r,i.executionProviders,n),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!=\"boolean\")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let g=Ur(\"enableGraphCapture\",n),l=Ur(i.enableGraphCapture.toString(),n);t._OrtAddSessionConfigEntry(r,g,l)!==0&&Or(`Can't set a session config entry: 'enableGraphCapture' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[g,l]of Object.entries(i.freeDimensionOverrides)){if(typeof g!=\"string\")throw new Error(`free dimension override name must be a string: ${g}`);if(typeof l!=\"number\"||!Number.isInteger(l)||l<0)throw new Error(`free dimension override value must be a non-negative integer: ${l}`);let v=Ur(g,n);t._OrtAddFreeDimensionOverride(r,v,l)!==0&&Or(`Can't set a free dimension override: ${g} - ${l}.`)}return i.extra!==void 0&&Fn(i.extra,\"\",new WeakSet,(g,l)=>{let v=Ur(g,n),S=Ur(l,n);t._OrtAddSessionConfigEntry(r,v,S)!==0&&Or(`Can't set a session config entry: ${g} - ${l}.`)}),[r,n]}catch(a){throw r!==0&&t._OrtReleaseSessionOptions(r),n.forEach(s=>t._free(s)),a}}}),ls,On,Yn,jn,es,us,ds,Qt=N(()=>{ls=e=>{switch(e){case\"int8\":return 3;case\"uint8\":return 2;case\"bool\":return 9;case\"int16\":return 5;case\"uint16\":return 4;case\"int32\":return 6;case\"uint32\":return 12;case\"float16\":return 10;case\"float32\":return 1;case\"float64\":return 11;case\"string\":return 8;case\"int64\":return 7;case\"uint64\":return 13;case\"int4\":return 22;case\"uint4\":return 21;default:throw new Error(`unsupported data type: ${e}`)}},On=e=>{switch(e){case 3:return\"int8\";case 2:return\"uint8\";case 9:return\"bool\";case 5:return\"int16\";case 4:return\"uint16\";case 6:return\"int32\";case 12:return\"uint32\";case 10:return\"float16\";case 1:return\"float32\";case 11:return\"float64\";case 8:return\"string\";case 7:return\"int64\";case 13:return\"uint64\";case 22:return\"int4\";case 21:return\"uint4\";default:throw new Error(`unsupported data type: ${e}`)}},Yn=(e,t)=>{let r=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],n=typeof t==\"number\"?t:t.reduce((i,a)=>i*a,1);return r>0?Math.ceil(n*r):void 0},jn=e=>{switch(e){case\"float16\":return typeof Float16Array<\"u\"&&Float16Array.from?Float16Array:Uint16Array;case\"float32\":return Float32Array;case\"uint8\":return Uint8Array;case\"int8\":return Int8Array;case\"uint16\":return Uint16Array;case\"int16\":return Int16Array;case\"int32\":return Int32Array;case\"bool\":return Uint8Array;case\"float64\":return Float64Array;case\"uint32\":return Uint32Array;case\"int64\":return BigInt64Array;case\"uint64\":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},es=e=>{switch(e){case\"verbose\":return 0;case\"info\":return 1;case\"warning\":return 2;case\"error\":return 3;case\"fatal\":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},us=e=>e===\"float32\"||e===\"float16\"||e===\"int32\"||e===\"int64\"||e===\"uint32\"||e===\"uint8\"||e===\"bool\"||e===\"uint4\"||e===\"int4\",ds=e=>{switch(e){case\"none\":return 0;case\"cpu\":return 1;case\"cpu-pinned\":return 2;case\"texture\":return 3;case\"gpu-buffer\":return 4;default:throw new Error(`unsupported data location: ${e}`)}}}),ts,ks=N(()=>{Ae(),ts=async e=>{if(typeof e==\"string\"){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get(\"Content-Length\"),n=r?parseInt(r,10):0;if(n<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),a;try{a=new ArrayBuffer(n)}catch(u){if(u instanceof RangeError){let d=Math.ceil(n/65536);a=new WebAssembly.Memory({initial:d,maximum:d}).buffer}else throw u}let s=0;for(;;){let{done:u,value:d}=await i.read();if(u)break;let c=d.byteLength;new Uint8Array(a,s,c).set(d),s+=c}return new Uint8Array(a,0,n)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),Cs,cs,Es,$s,ps,Ps,jr,bn=N(()=>{Qt(),Cs=[\"V\",\"I\",\"W\",\"E\",\"F\"],cs=(e,t)=>{console.log(`[${Cs[e]},${new Date().toISOString()}]${t}`)},ps=(e,t)=>{Es=e,$s=t},Ps=(e,t)=>{let r=es(e),n=es(Es);r>=n&&cs(r,typeof t==\"function\"?t():t)},jr=(...e)=>{$s&&Ps(...e)}}),be,m=N(()=>{Qt(),be=(e,t)=>new(jn(t))(e)}),z=N(()=>{}),Y,ue,pe,ze,Mt,St,xt,Ft,rr,Ar=N(()=>{bn(),z(),Y=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),ue=[],pe=e=>Math.ceil(e/16)*16,ze=e=>{for(let t=0;t<ue.length;t++){let r=ue[t];if(e<=r)return r}return Math.ceil(e/16)*16},Mt=1,St=()=>Mt++,xt=async(e,t,r,n)=>{let i=pe(r),a=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let s=e.getCommandEncoder();e.endComputePass(),s.copyBufferToBuffer(t,0,a,0,i),e.flush(),await a.mapAsync(GPUMapMode.READ);let u=a.getMappedRange();if(n){let d=n();return d.set(new Uint8Array(u,0,r)),d}else return new Uint8Array(u.slice(0,r))}finally{a.destroy()}},Ft=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map;for(let[t]of Y)ue.push(t),this.freeBuffers.set(t,[]),this.freeUniformBuffers.set(t,[])}upload(e,t){let r=t.buffer,n=t.byteOffset,i=t.byteLength,a=pe(i),s=this.storageCache.get(e);if(!s)throw new Error(\"gpu data for uploading does not exist\");if(s.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${s.originalSize}, data size=${i}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),d=u.getMappedRange();new Uint8Array(d).set(new Uint8Array(r,n,i)),u.unmap();let c=this.backend.getCommandEncoder();this.backend.endComputePass(),c.copyBufferToBuffer(u,0,s.gpuData.buffer,0,a),jr(\"verbose\",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(u)}memcpy(e,t){let r=this.storageCache.get(e);if(!r)throw new Error(\"source gpu data for memcpy does not exist\");let n=this.storageCache.get(t);if(!n)throw new Error(\"destination gpu data for memcpy does not exist\");if(r.originalSize!==n.originalSize)throw new Error(\"inconsistent source and destination gpu data size\");let i=pe(r.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(r.gpuData.buffer,0,n.gpuData.buffer,0,i)}registerExternalBuffer(e,t,r){let n;if(r){if(n=this.externalBuffers.get(r),n===void 0)throw new Error(\"previous buffer is not registered\");if(e===r)return jr(\"verbose\",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, buffer is the same, skip.`),n;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(r)}else n=St();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:e},originalSize:t}),this.externalBuffers.set(e,n),jr(\"verbose\",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, registered.`),n}unregisterExternalBuffer(e){let t=this.externalBuffers.get(e);t!==void 0&&(this.storageCache.delete(t),this.externalBuffers.delete(e),jr(\"verbose\",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${t}`))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let r=ze(e),n,i=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||a){let u=(i?this.freeBuffers:this.freeUniformBuffers).get(r);u?u.length>0?n=u.pop():n=this.backend.device.createBuffer({size:r,usage:t}):n=this.backend.device.createBuffer({size:r,usage:t})}else n=this.backend.device.createBuffer({size:r,usage:t});let s={id:St(),type:0,buffer:n};return this.storageCache.set(s.id,{gpuData:s,originalSize:e}),jr(\"verbose\",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${s.id}`),s}get(e){var t;return(t=this.storageCache.get(e))==null?void 0:t.gpuData}release(e){let t=this.storageCache.get(e);if(!t)throw new Error(\"releasing data does not exist\");return jr(\"verbose\",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,t){let r=this.storageCache.get(e);if(!r)throw new Error(\"data does not exist\");await xt(this.backend,r.gpuData.buffer,r.originalSize,t)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus===\"default\"){for(let e of this.buffersPending){let t=Y.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let r=this.freeBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let r=this.freeUniformBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach(r=>{r.destroy()}),this.capturedPendingBuffers.delete(e))}},rr=(...e)=>new Ft(...e)}),ar,Gt,_r=N(()=>{ar=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(\";\")),this.key}},Gt=e=>new ar(e)}),cn,tn,$e,xn,Sr,Yr,mn,Yt=N(()=>{cn=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},tn=class{static calcShape(e,t,r=!1){let n=e.length,i=t.length;if(n===0)return t;if(i===0)return e;let a=Math.max(e.length,t.length),s=new Array(a);if(r){if(n<2||i<2)return;let u=cn.calcMatMulShape([e[n-2],e[n-1]],[t[i-2],t[i-1]]);if(u===void 0)return;[s[a-2],s[a-1]]=u}for(let u=r?3:1;u<=a;u++){let d=n-u<0?1:e[n-u],c=i-u<0?1:t[i-u];if(d!==c&&d>1&&c>1)return;let w=Math.max(d,c);if(d&&c)s[a-u]=Math.max(d,c);else{if(w>1)return;s[a-u]=0}}return s}static isValidBroadcast(e,t){let r=e.length,n=t.length;if(r>n)return!1;for(let i=1;i<=r;i++)if(e[r-i]!==1&&e[r-i]!==t[n-i])return!1;return!0}},$e=class Kd{static size(t){return Kd.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let n=t.length;if(n===0)return[];let i=new Array(n),a=n-1;for(;a>=0;){if(t[a]%r===0){i[a]=t[a]/r;break}if(r%t[a]!==0)throw new Error(\"cannot convert shape\");i[a]=1,r/=t[a],a--}for(a--;a>=0;a--)i[a]=t[a];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return Kd.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return Kd.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,n){let i=1;for(let a=r;a<n;a++){if(t[a]<0)throw new Error(\"cannot get valid size from specified dimension range. Most likely the range contains negative values in them.\");i*=t[a]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let n=new Array(r);n[r-1]=1,n[r-2]=t[r-1];for(let i=r-3;i>=0;--i)n[i]=n[i+1]*t[i+1];return n}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error(\"unsupported axis for this operation.\");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(n=>this.normalizeAxis(n,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(n=>t[n]):t.slice().reverse()}static padShape(t,r){let n=t.length;return t.map((i,a)=>i+r[a]+r[a+n])}static areEqual(t,r){return t.length!==r.length?!1:t.every((n,i)=>n===r[i])}},xn=class Qu{static adjustPoolAttributes(t,r,n,i,a,s){if(!t&&n.length!==r.length-2)throw new Error(\"length of specified kernel shapes should be 2 less than length of input dimensions\");if(t)for(let u=0;u<r.length-2;u++)u>=n.length?n.push(r[u+2]):n[u]=r[u+2];for(let u=0;u<n.length;u++)if(u<i.length){if(i[u]<0)throw new Error(\"strides should be greater than or equal to 1\")}else i.push(1);for(let u=0;u<n.length;u++)if(u<a.length){if(a[u]<0)throw new Error(\"dilations should be greater than or equal to 1\")}else a.push(1);for(let u=0;u<n.length*2;u++)if(u<s.length){if(s[u]<0)throw new Error(\"pad should be greater than or equal to 1\")}else s.push(0);for(let u=0;u<n.length;u++){if(n[u]<=0)throw new Error(\"kernel shapes need to be greater than 0\");if(s[u]>=n[u]||s[u+n.length]>=n[u])throw new Error(\"pads should be smaller than kernel\")}}static adjustPadsBasedOnAutoPad(t,r,n,i,a,s,u){if(u){if(a.length!==2*(t.length-2))throw new Error(\"length of pads should be twice the length of data dimensions\");if(r.length!==t.length-2)throw new Error(\"length of strides should be the length of data dimensions\");if(i.length!==t.length-2)throw new Error(\"length of kernel shapes should be the length of data dimensions\");for(let d=0;d<t.length-2;d++)Qu.adjustPadAndReturnShape(t[d+(s?1:2)],r[d],n[d],i[d],a,d,d+t.length-2,u)}}static computePoolOutputShape(t,r,n,i,a,s,u){if(r.length<=0)throw new Error(\"input shape must be of size greater than 0\");let d=[r[0],r[1]];return Qu.computeShapeHelper(t,r,d,n,i,a,s,u),d}static computeConvOutputShape(t,r,n,i,a,s,u){if(t.length<=0||r.length<=0)throw new Error(\"invalid input tensor dims or invalid filter tensor dims\");let d=[t[0],r[0]];return Qu.computeShapeHelper(!1,t,d,n,i,a,s,u),d}static computeShapeHelper(t,r,n,i,a,s,u,d){if(t)for(let c=0;c<r.length-2;c++)n.push(1);else for(let c=0;c<r.length-2;c++)n.push(Qu.adjustPadAndReturnShape(r[c+2],i[c],a[c],s[c],u,c,c+r.length-2,d))}static adjustPadAndReturnShape(t,r,n,i,a,s,u,d){let c=n*(i-1)+1;if(d&&d!==\"NOTSET\")switch(d){case\"VALID\":return a[s]=0,a[u]=0,Math.floor((t-c)/r+1);case\"SAME_LOWER\":case\"SAME_UPPER\":if(n!==1)throw new Error(\"Dilation not supported for SAME_UPPER or SAME_LOWER\");{let w=((t+r-1)/r-1)*r+i-t;return a[s]=Math.floor(d===\"SAME_LOWER\"?(w+1)/2:w/2),a[u]=w-a[s],Math.floor((t+w-i)/r+1)}default:throw new Error(\"Unsupported AutoPad type\")}else return Math.floor((t+a[s]+a[u]-c)/r+1)}},Sr=class{static getShapeOfGemmResult(e,t,r,n,i){if(e.length!==2||r.length!==2)throw new Error(\"shape need to be of size 2\");let a,s,u;t?(a=e[1],s=e[0]):(a=e[0],s=e[1]);let d=-1;if(n?(u=r[0],d=1):(u=r[1],d=0),r[d]!==s)throw new Error(\"dimension mismatch\");if(a<=0||u<=0||s<=0)throw new Error(\"invalid shape specified\");if(i&&!tn.isValidBroadcast(i,[a,u]))throw new Error(\"gemm: invalid bias shape for broadcast\");return[a,u,s]}},Yr=-34028234663852886e22,mn=34028234663852886e22}),Mn,an,$r,kr,It,Cr,zr,Wr,vn,jt,Ks,rt,Ut,wi,yi,Ra,hs,or=N(()=>{Qt(),Yt(),Mn=64,an=(e,t)=>{if(t===3)throw new Error(\"vec3 has same alignment as vec4, use vec4 instead\");switch(e){case 10:return t>1?`vec${t}<f16>`:\"f16\";case 1:return t>1?`vec${t}<f32>`:\"f32\";case 6:return t>1?`vec${t}<i32>`:\"i32\";case 12:return t>1?`vec${t}<u32>`:\"u32\";case 7:if(t>1)throw new Error(\"currently not supported vecX of uint64 yet\");return[\"vec2<u32>\",\"i32\"];case 13:if(t>1)throw new Error(\"currently not supported vecX of uint64 yet\");return[\"vec2<u32>\",\"u32\"];case 9:if(t!==4)throw new Error(\"bool must be vec4\");return[\"u32\",\"vec4<bool>\"];case 22:return\"i32\";case 21:return\"u32\";default:throw new Error(`Unknown data type: ${e}`)}},$r=(e,t=1)=>{let r=an(e,t);return typeof r==\"string\"?r:r[0]},kr=(e,t=1)=>{let r=an(e,t);return typeof r==\"string\"?r:r[1]},It=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:$e.computeStrides(r)})}),t},Cr=e=>e%4===0?4:e%2===0?2:1,zr=(e=\"f32\",t,r=\"0\")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,Wr=(e,t,r)=>e===\"f32\"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,vn=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,jt=(e,t,r,n)=>e.startsWith(\"uniforms.\")&&r>4?typeof t==\"string\"?n===\"f16\"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:n===\"f16\"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,Ks=(e,t,r,n,i)=>{let a=typeof r==\"number\",s=a?r:r.length,u=[...new Array(s).keys()],d=s<2?\"u32\":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,c=an(t,i),w=typeof c==\"string\"?c:c[1],g=typeof c==\"string\"?c:c[0],l={indices:d,value:w,storage:g,tensor:t},v=Ve=>typeof Ve==\"string\"?Ve:`${Ve}u`,S={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},$=a?\"uniforms.\":\"\",U=`${$}${e}_shape`,q=`${$}${e}_strides`,L=\"\";for(let Ve=0;Ve<s-1;Ve++)L+=`\n    let dim${Ve} = current / ${jt(q,Ve,s)};\n    let rest${Ve} = current % ${jt(q,Ve,s)};\n    indices[${Ve}] = dim${Ve};\n    current = rest${Ve};\n    `;L+=`indices[${s-1}] = current;`;let se=s<2?\"\":`\n  fn o2i_${e}(offset: u32) -> ${l.indices} {\n    var indices: ${l.indices};\n    var current = offset;\n    ${L}\n    return indices;\n  }`,X=Ve=>(S.offsetToIndices=!0,s<2?Ve:`o2i_${e}(${Ve})`),oe=[];if(s>=2)for(let Ve=s-1;Ve>=0;Ve--)oe.push(`${jt(q,Ve,s)} * (indices[${Ve}])`);let Ke=s<2?\"\":`\n  fn i2o_${e}(indices: ${l.indices}) -> u32 {\n    return ${oe.join(\"+\")};\n  }`,je=Ve=>(S.indicesToOffset=!0,s<2?Ve:`i2o_${e}(${Ve})`),ft=(...Ve)=>s===0?\"0u\":`${l.indices}(${Ve.map(v).join(\",\")})`,Ot=(Ve,kt)=>s<2?`${Ve}`:`${jt(Ve,kt,s)}`,Vt=(Ve,kt,nr)=>s<2?`${Ve}=${nr};`:`${jt(Ve,kt,s)}=${nr};`,lr={},wr=(Ve,kt)=>{S.broadcastedIndicesToOffset=!0;let nr=`${kt.name}broadcastedIndicesTo${e}Offset`;if(nr in lr)return`${nr}(${Ve})`;let Rr=[];for(let Jr=s-1;Jr>=0;Jr--){let dn=kt.indicesGet(\"outputIndices\",Jr+kt.rank-s);Rr.push(`${Ot(q,Jr)} * (${dn} % ${Ot(U,Jr)})`)}return lr[nr]=`fn ${nr}(outputIndices: ${kt.type.indices}) -> u32 {\n             return ${Rr.length>0?Rr.join(\"+\"):\"0u\"};\n           }`,`${nr}(${Ve})`},er=(Ve,kt)=>(()=>{if(l.storage===l.value)return`${e}[${Ve}]=${kt};`;if(l.storage===\"vec2<u32>\"&&l.value===\"i32\")return`${e}[${Ve}]=vec2<u32>(u32(${kt}), select(0u, 0xFFFFFFFFu, ${kt} < 0));`;if(l.storage===\"vec2<u32>\"&&l.value===\"u32\")return`${e}[${Ve}]=vec2<u32>(u32(${kt}), 0u);`;if(l.storage===\"u32\"&&l.value===\"vec4<bool>\")return`${e}[${Ve}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${kt}));`;throw new Error(`not supported combination of storage type ${l.storage} and value type ${l.value} yet`)})(),Lr=Ve=>(()=>{if(l.storage===l.value)return`${e}[${Ve}]`;if(l.storage===\"vec2<u32>\"&&l.value===\"i32\")return`i32(${e}[${Ve}].x)`;if(l.storage===\"vec2<u32>\"&&l.value===\"u32\")return`u32(${e}[${Ve}].x)`;if(l.storage===\"u32\"&&l.value===\"vec4<bool>\")return`vec4<bool>(bool(${e}[${Ve}] & 0xFFu), bool(${e}[${Ve}] & 0xFF00u), bool(${e}[${Ve}] & 0xFF0000u), bool(${e}[${Ve}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${l.storage} and value type ${l.value} yet`)})(),Gr=s<2?\"\":`\n  fn get_${e}ByIndices(indices: ${l.indices}) -> ${w} {\n    return ${Lr(`i2o_${e}(indices)`)};\n  }`,xr=s<2?\"\":(()=>{let Ve=u.map(nr=>`d${nr}: u32`).join(\", \"),kt=u.map(nr=>`d${nr}`).join(\", \");return`\n  fn get_${e}(${Ve}) -> ${w} {\n    return get_${e}ByIndices(${ft(kt)});\n  }`})(),Nr=(...Ve)=>{if(Ve.length!==s)throw new Error(`indices length must be ${s}`);let kt=Ve.map(v).join(\",\");return s===0?Lr(\"0u\"):s===1?Lr(kt[0]):(S.get=!0,S.getByIndices=!0,S.indicesToOffset=!0,`get_${e}(${kt})`)},Zt=Ve=>s<2?Lr(Ve):(S.getByIndices=!0,S.indicesToOffset=!0,`get_${e}ByIndices(${Ve})`),mr=s<2?\"\":`\n  fn set_${e}ByIndices(indices: ${l.indices}, value: ${w}) {\n    ${er(`i2o_${e}(indices)`,\"value\")}\n  }`,Pr=s<2?\"\":(()=>{let Ve=u.map(nr=>`d${nr}: u32`).join(\", \"),kt=u.map(nr=>`d${nr}`).join(\", \");return`\n  fn set_${e}(${Ve}, value: ${w}) {\n    set_${e}ByIndices(${ft(kt)}, value);\n  }`})();return{impl:()=>{let Ve=[],kt=!1;return S.offsetToIndices&&(Ve.push(se),kt=!0),S.indicesToOffset&&(Ve.push(Ke),kt=!0),S.broadcastedIndicesToOffset&&(Object.values(lr).forEach(nr=>Ve.push(nr)),kt=!0),S.set&&(Ve.push(Pr),kt=!0),S.setByIndices&&(Ve.push(mr),kt=!0),S.get&&(Ve.push(xr),kt=!0),S.getByIndices&&(Ve.push(Gr),kt=!0),!a&&kt&&Ve.unshift(`const ${U} = ${l.indices}(${r.join(\",\")});`,`const ${q} = ${l.indices}(${$e.computeStrides(r).join(\",\")});`),Ve.join(`\n`)},type:l,offsetToIndices:X,indicesToOffset:je,broadcastedIndicesToOffset:wr,indices:ft,indicesGet:Ot,indicesSet:Vt,set:(...Ve)=>{if(Ve.length!==s+1)throw new Error(`indices length must be ${s}`);let kt=Ve[s];if(typeof kt!=\"string\")throw new Error(\"value must be string\");let nr=Ve.slice(0,s).map(v).join(\",\");return s===0?er(\"0u\",kt):s===1?er(nr[0],kt):(S.set=!0,S.setByIndices=!0,S.indicesToOffset=!0,`set_${e}(${nr}, ${kt})`)},setByOffset:er,setByIndices:(Ve,kt)=>s<2?er(Ve,kt):(S.setByIndices=!0,S.indicesToOffset=!0,`set_${e}ByIndices(${Ve}, ${kt});`),get:Nr,getByOffset:Lr,getByIndices:Zt,usage:n,name:e,strides:q,shape:U,rank:s}},rt=(e,t,r,n=1)=>Ks(e,t,r,\"input\",n),Ut=(e,t,r,n=1)=>Ks(e,t,r,\"output\",n),wi=(e,t,r,n=1)=>Ks(e,t,r,\"internal\",n),yi=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e==\"number\"?`${e}u`:e}) { return; }`}mainStart(e=Mn){let t=typeof e==\"number\"?e:e[0],r=typeof e==\"number\"?1:e[1],n=typeof e==\"number\"?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||r>this.limits.maxComputeWorkgroupSizeY||n>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*r*n>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=i?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,s=i?\"let global_idx = global_id.x; let local_idx = local_id.x;\":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${t*r*n}u + local_idx;`;return`@compute @workgroup_size(${t}, ${r}, ${n})\n  fn main(${a}) {\n    ${s}\n  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith(\"uniforms.\")&&this.uniforms.push({name:e.shape.replace(\"uniforms.\",\"\"),type:\"u32\",length:e.rank}),e.strides.startsWith(\"uniforms.\")&&this.uniforms.push({name:e.strides.replace(\"uniforms.\",\"\"),type:\"u32\",length:e.rank}))}declareVariable(e,t){if(e.usage===\"internal\")throw new Error(\"cannot use internal variable with declareVariable(). use registerInternalVariables() instead.\");this.variables.push(e),this.appendVariableUniforms(e);let r=e.usage===\"input\"?\"read\":\"read_write\",n=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${r}> ${e.name}: array<${n}>;`}declareVariables(...e){return e.map(t=>this.declareVariable(t,this.variableIndex++)).join(`\n`)}registerInternalVariable(e){if(e.usage!==\"internal\")throw new Error(\"cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.\");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(e,t,r=1){return this.uniforms.push({name:e,type:t,length:r}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return\"\";let e=[];for(let{name:t,type:r,length:n}of this.uniforms)if(n&&n>4)r===\"f16\"?e.push(`@align(16) ${t}:array<mat2x4<${r}>, ${Math.ceil(n/8)}>`):e.push(`${t}:array<vec4<${r}>, ${Math.ceil(n/4)}>`);else{let i=n==null||n===1?r:`vec${n}<${r}>`;e.push(`${t}:${i}`)}return`\n      struct Uniforms { ${e.join(\", \")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`\n`)+this.internalVariables.map(e=>e.impl()).join(`\n`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=t=>[12,10,1,6][[\"u32\",\"f16\",\"f32\",\"i32\"].indexOf(t)];return this.uniforms.map(t=>[e(t.type),t.length??1])}},Ra=(e,t)=>new yi(e,t),hs=(e,t)=>{let r=e.length,n=[];for(let i=0;i<r;i++){let a=r-1-i,s=e[a]||1;(t[t.length-1-i]||1)>1&&s===1&&n.unshift(a)}return n}}),Na,bi,As,ja,zn,Va,Mi,fs=N(()=>{Qt(),Yt(),_r(),or(),Na=e=>{if(!e||e.length!==1)throw new Error(\"Transpose requires 1 input.\")},bi=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,As=(e,t)=>$e.sortBasedOnPerm(e,bi(e.length,t)),ja=(e,t,r,n)=>{let i=[];i.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let a=0;a<t;++a)i.push(r.indicesSet(\"a\",e[a],`i[${a}]`));return i.push(\"return a;}\"),i.join(`\n`)},zn=(e,t)=>{let r=e.dataType,n=e.dims.length,i=bi(n,t),a=As(e.dims,i),s=Ut(\"output\",r,a.length),u=rt(\"a\",r,n),d;if(i.length===2&&i[0]===1&&i[1]===0){let c=s.type.value,w=[16,16,1];d=g=>`\n  ${g.registerUniform(\"output_size\",\"u32\").declareVariables(u,s)}\n  var<workgroup> tile : array<array<${c}, ${w[0]+1}>, ${w[0]}>;\n  ${g.mainStart(w)}\n    var x = workgroup_id.x * ${w[0]}u + local_id.x;\n    var y = workgroup_id.y * ${w[0]}u + local_id.y;\n    let width = uniforms.output_shape[0];\n    let height = uniforms.output_shape[1];\n    if (x < width && y < height) {\n      tile[local_id.y][local_id.x] = ${u.getByOffset(\"y * width + x\")};\n    }\n    workgroupBarrier();\n    x = workgroup_id.y * ${w[0]}u + local_id.x;\n    y = workgroup_id.x * ${w[0]}u + local_id.y;\n    if (x < height && y < width) {\n      ${s.setByOffset(\"y * height + x\",\"tile[local_id.x][local_id.y]\")}\n    }\n  }`}else d=c=>`\n  ${c.registerUniform(\"output_size\",\"u32\").declareVariables(u,s)}\n\n  ${ja(i,n,u,s)}\n\n  ${c.mainStart()}\n    ${c.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\n\n    let indices = ${s.offsetToIndices(\"global_idx\")};\n    let aIndices = perm(indices);\n\n    ${s.setByOffset(\"global_idx\",u.getByIndices(\"aIndices\"))}\n  }`;return{name:\"Transpose\",shaderCache:{hint:`${t}`,inputDependencies:[\"rank\"]},getRunData:()=>{let c=$e.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:[{type:12,data:c},...It(e.dims,a)]}},getShaderSource:d}},Va=(e,t)=>{Na(e.inputs),e.compute(zn(e.inputs[0],t.perm))},Mi=e=>Gt({perm:e.perm})}),Ua,Wa,Ga,qa,vi,Ha,Ka,xi,Xa,Qa,Tn,Ya,Ja,Ti,Za,eo,Si,to,ro,ki,no,Ju=N(()=>{Qt(),Yt(),or(),Fi(),fs(),Ua={max:\"select(bestValue, candidate, candidate > bestValue)\",min:\"select(bestValue, candidate, candidate < bestValue)\",mean:\"bestValue + candidate\",sum:\"bestValue + candidate\",prod:\"bestValue * candidate\",sumSquare:\"bestValue + candidate * candidate\",logSumExp:\"bestValue + exp(candidate)\",l1:\"bestValue + abs(candidate)\",l2:\"bestValue + candidate * candidate\",logSum:\"bestValue + candidate\"},Wa={max:\"select(bestValue, candidate, candidate > bestValue)\",min:\"select(bestValue, candidate, candidate < bestValue)\",mean:\"bestValue + candidate\",sum:\"bestValue + candidate\",prod:\"bestValue * candidate\",sumSquare:\"bestValue + candidate\",logSumExp:\"bestValue + candidate\",l1:\"bestValue + candidate\",l2:\"bestValue + candidate\",logSum:\"bestValue + candidate\"},Ga={max:\"_A[offset]\",min:\"_A[offset]\",mean:\"0\",sum:\"0\",prod:\"1\",sumSquare:\"0\",logSumExp:\"0\",l1:\"0\",l2:\"0\",logSum:\"0\"},qa={max:\"bestValue\",min:\"bestValue\",sum:\"bestValue\",prod:\"bestValue\",sumSquare:\"bestValue\",logSumExp:\"log(bestValue)\",l1:\"bestValue\",l2:\"sqrt(bestValue)\",logSum:\"log(bestValue)\"},vi=(e,t)=>{let r=[];for(let n=t-e;n<t;++n)r.push(n);return r},Ha=(e,t)=>{let r=[],n=e.length;for(let a=0;a<n;a++)t.indexOf(a)===-1&&r.push(e[a]);let i=t.map(a=>e[a]);return[r,i]},Ka=(e,t)=>{let r=e.length+t.length,n=[],i=0;for(let a=0;a<r;a++)t.indexOf(a)===-1?n.push(e[i++]):n.push(1);return n},xi=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},Xa=(e,t)=>{let r=[];if(!xi(e,t)){for(let n=0;n<t;++n)e.indexOf(n)===-1&&r.push(n);e.forEach(n=>r.push(n))}return r},Qa=(e,t,r,n,i,a,s)=>{let u=r[0].dims,d=$e.size(a),c=$e.size(s),w=rt(\"_A\",r[0].dataType,u),g=Ut(\"output\",i,a),l=32,v=`\n          var<workgroup> aBestValues : array<f32, ${l}>;\n       `;return{name:e,shaderCache:t,getShaderSource:S=>`\n        ${S.registerUniform(\"reduceSize\",\"u32\").declareVariables(w,g)}\n        ${v}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${S.mainStart(l)}\n\n          let outputIndex = global_idx / ${l};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${Ga[n]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${l}) {\n           let candidate = f32(${w.getByOffset(\"offset + k\")});\n           bestValue = ${Ua[n]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${l}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${Wa[n]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${g.setByOffset(\"outputIndex\",`${n===\"mean\"?`${g.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${g.type.storage}(${qa[n]})`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:d},programUniforms:[{type:12,data:c}]})}},Tn=(e,t,r,n)=>{let i=e.inputs.length===1?r:Qs(e.inputs,r),a=i.axes;a.length===0&&!i.noopWithEmptyAxes&&(a=e.inputs[0].dims.map((v,S)=>S));let s=$e.normalizeAxes(a,e.inputs[0].dims.length),u=s,d=e.inputs[0],c=Xa(u,e.inputs[0].dims.length);c.length>0&&(d=e.compute(zn(e.inputs[0],c),{inputs:[0],outputs:[-1]})[0],u=vi(u.length,d.dims.length));let[w,g]=Ha(d.dims,u),l=w;i.keepDims&&(l=Ka(w,s)),e.compute(Qa(t,{hint:i.cacheKey,inputDependencies:[\"type\"]},[d],n,e.inputs[0].dataType,l,g),{inputs:[d]})},Ya=(e,t)=>{Tn(e,\"ReduceMeanShared\",t,\"mean\")},Ja=(e,t)=>{Tn(e,\"ReduceL1Shared\",t,\"l1\")},Ti=(e,t)=>{Tn(e,\"ReduceL2Shared\",t,\"l2\")},Za=(e,t)=>{Tn(e,\"ReduceLogSumExpShared\",t,\"logSumExp\")},eo=(e,t)=>{Tn(e,\"ReduceMaxShared\",t,\"max\")},Si=(e,t)=>{Tn(e,\"ReduceMinShared\",t,\"min\")},to=(e,t)=>{Tn(e,\"ReduceProdShared\",t,\"prod\")},ro=(e,t)=>{Tn(e,\"ReduceSumShared\",t,\"sum\")},ki=(e,t)=>{Tn(e,\"ReduceSumSquareShared\",t,\"sumSquare\")},no=(e,t)=>{Tn(e,\"ReduceLogSumShared\",t,\"logSum\")}}),Sn,so,Xs,Qs,En,io,Ci,ao,oo,Ei,lo,uo,$i,co,po,kn,ho,fo,Pi,mo,_o,Ai,go,wo,Ii,yo,Fi=N(()=>{Qt(),Yt(),_r(),or(),Ju(),Sn=e=>{if(!e||e.length===0||e.length>2)throw new Error(\"Reduce op requires 1 or 2 inputs.\");if(e.length===2&&e[1].dims.length!==1)throw new Error(\"Invalid axes input dims.\")},so=e=>[\"\",\"\",`var value = ${e.getByIndices(\"input_indices\")};`,\"\"],Xs=(e,t,r,n,i,a,s=!1,u=!1)=>{let d=[],c=r[0].dims,w=c.length,g=$e.normalizeAxes(i,w),l=!u&&g.length===0;c.forEach(($,U)=>{l||g.indexOf(U)>=0?s&&d.push(1):d.push($)});let v=d.length,S=$e.size(d);return{name:e,shaderCache:t,getShaderSource:$=>{let U=[],q=rt(\"_A\",r[0].dataType,w),L=Ut(\"output\",a,v),se=n(q,L,g),X=se[2];for(let oe=0,Ke=0;oe<w;oe++)l||g.indexOf(oe)>=0?(s&&Ke++,X=`for(var j${oe}: u32 = 0; j${oe} < ${c[oe]}; j${oe}++) {\n                  ${se[2].includes(\"last_index\")?`let last_index = j${oe};`:\"\"}\n                  ${q.indicesSet(\"input_indices\",oe,`j${oe}`)}\n                  ${X}\n                }`):(U.push(`${q.indicesSet(\"input_indices\",oe,L.indicesGet(\"output_indices\",Ke))};`),Ke++);return`\n\n        ${$.registerUniform(\"output_size\",\"u32\").declareVariables(q,L)}\n\n        ${$.mainStart()}\n          ${$.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\n          var input_indices: ${q.type.indices};\n          let output_indices = ${L.offsetToIndices(\"global_idx\")};\n\n          ${U.join(`\n`)}\n          ${se[0]}       // init ops for reduce max/min\n          ${se[1]}\n          ${X}\n          ${se[3]}\n          ${se.length===4?L.setByOffset(\"global_idx\",\"value\"):se.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:d,dataType:a}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:[{type:12,data:S},...It(c,d)]})}},Qs=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),Gt({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},En=(e,t,r,n)=>{let i=e.inputs,a=i.length===1?r:Qs(i,r);e.compute(Xs(t,{hint:a.cacheKey,inputDependencies:[\"rank\"]},[i[0]],a.noopWithEmptyAxes&&a.axes.length===0?so:n,a.axes,i[0].dataType,a.keepDims,a.noopWithEmptyAxes),{inputs:[0]})},io=(e,t)=>{Sn(e.inputs),En(e,\"ReduceLogSum\",t,(r,n)=>[`var value = ${n.type.storage}(0);`,\"\",`value += ${r.getByIndices(\"input_indices\")};`,\"value = log(value);\"])},Ci=(e,t)=>{Sn(e.inputs),En(e,\"ReduceL1\",t,(r,n)=>[`var value = ${n.type.storage}(0);`,\"\",`value += abs(${r.getByIndices(\"input_indices\")});`,\"\"])},ao=(e,t)=>{Sn(e.inputs),En(e,\"ReduceL2\",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,\"\",`t = ${r.getByIndices(\"input_indices\")}; value += (t * t);`,\"value = sqrt(value);\"])},oo=(e,t)=>{Sn(e.inputs),En(e,\"ReduceLogSumExp\",t,(r,n)=>[`var value = ${n.type.storage}(0);`,\"\",`value += exp(${r.getByIndices(\"input_indices\")});`,\"value = log(value);\"])},Ei=(e,t)=>{Sn(e.inputs),En(e,\"ReduceMax\",t,(r,n,i)=>{let a=[];for(let s=0;s<r.rank;s++)(i.indexOf(s)>=0||i.length===0)&&a.push(r.indicesSet(\"input_indices\",s,0));return[`${a.join(`\n`)}`,`var value = ${r.getByIndices(\"input_indices\")};`,`value = max(value, ${r.getByIndices(\"input_indices\")});`,\"\"]})},lo=(e,t)=>{Sn(e.inputs),En(e,\"ReduceMean\",t,(r,n,i)=>{let a=1;for(let s=0;s<r.rank;s++)(i.indexOf(s)>=0||i.length===0)&&(a*=e.inputs[0].dims[s]);return[\"var sum = f32(0);\",\"\",`sum += f32(${r.getByIndices(\"input_indices\")});`,`let value = ${n.type.value}(sum / ${a});`]})},uo=(e,t)=>{Sn(e.inputs),En(e,\"ReduceMin\",t,(r,n,i)=>{let a=[];for(let s=0;s<r.rank;s++)(i.indexOf(s)>=0||i.length===0)&&a.push(`input_indices[${s}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${r.getByIndices(\"input_indices\")};`,`value = min(value, ${r.getByIndices(\"input_indices\")});`,\"\"]})},$i=(e,t)=>{Sn(e.inputs),En(e,\"ReduceProd\",t,(r,n)=>[`var value = ${n.type.storage}(1);`,\"\",`value *= ${r.getByIndices(\"input_indices\")};`,\"\"])},co=(e,t)=>{Sn(e.inputs),En(e,\"ReduceSum\",t,(r,n)=>[`var value = ${n.type.storage}(0);`,\"\",`value += ${r.getByIndices(\"input_indices\")};`,\"\"])},po=(e,t)=>{Sn(e.inputs),En(e,\"ReduceSumSquare\",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,\"\",`t = ${r.getByIndices(\"input_indices\")}; value += t * t;`,\"\"])},kn=(e,t,r)=>{if(t.length===0)return r;let n=1,i=1;for(let a=0;a<t.length;a++)t.indexOf(a)===-1?n*=e[a]:i*=e[a];return i<32&&n>1024},ho=(e,t)=>{kn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?lo(e,t):Ya(e,t)},fo=(e,t)=>{kn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ci(e,t):Ja(e,t)},Pi=(e,t)=>{kn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ao(e,t):Ti(e,t)},mo=(e,t)=>{kn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?oo(e,t):Za(e,t)},_o=(e,t)=>{kn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ei(e,t):eo(e,t)},Ai=(e,t)=>{kn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?uo(e,t):Si(e,t)},go=(e,t)=>{kn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$i(e,t):to(e,t)},wo=(e,t)=>{kn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?co(e,t):ro(e,t)},Ii=(e,t)=>{kn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?po(e,t):ki(e,t)},yo=(e,t)=>{kn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?io(e,t):no(e,t)}}),Ys,bo,Mo,Js,Zu=N(()=>{Qt(),_r(),Fi(),Ys=e=>{if(!e||e.length===0||e.length>2)throw new Error(\"ArgMinMaxOp op requires 1 or 2 inputs.\");if(e[0].dataType!==1)throw new Error(\"Invalid input type.\")},bo=(e,t)=>{Ys(e.inputs);let r=(n,i,a)=>{let s=[];for(let u=0;u<n.rank;u++)(a.indexOf(u)>=0||a.length===0)&&s.push(`input_indices[${u}] = 0;`);return[`${s.join(`\n`)}`,`var value = ${n.getByIndices(\"input_indices\")};\nvar best_index : i32 = 0;`,`if (${n.getByIndices(\"input_indices\")} ${t.selectLastIndex>0?\"<=\":\"<\"} value) {\n         value = ${n.getByIndices(\"input_indices\")};\n         best_index = i32(last_index);\n       }`,\"\",i.setByOffset(\"global_idx\",\"best_index\")]};e.compute(Xs(\"ArgMin\",{hint:t.cacheKey,inputDependencies:[\"rank\"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Mo=(e,t)=>{Ys(e.inputs);let r=(n,i,a)=>{let s=[];for(let u=0;u<n.rank;u++)(a.indexOf(u)>=0||a.length===0)&&s.push(`input_indices[${u}] = 0;`);return[`${s.join(`\n`)}`,`var value = ${n.getByIndices(\"input_indices\")};\nvar best_index : i32 = 0;`,`if (${n.getByIndices(\"input_indices\")} ${t.selectLastIndex>0?\">=\":\">\"} value) {\n         value = ${n.getByIndices(\"input_indices\")};\n         best_index = i32(last_index);\n       }`,\"\",i.setByOffset(\"global_idx\",\"best_index\")]};e.compute(Xs(\"argMax\",{hint:t.cacheKey,inputDependencies:[\"rank\"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Js=e=>Gt(e)}),vo,Oi,xo,To,ms,So,ko,Zs=N(()=>{Qt(),Yt(),z(),or(),vo=(e,t)=>{let r=e[0],n=e[1],i=e[2],a=e[3],s=e[4],u=e[5];if(s&&u)throw new Error(\"Attention cannot have both past and attention_bias\");if(r.dims.length!==3)throw new Error('Input \"input\" must have 3 dimensions');let d=r.dims[0],c=r.dims[1],w=r.dims[2];if(i.dims.length!==1)throw new Error('Input \"bias\" is expected to have 1 dimensions');if(n.dims.length!==2)throw new Error('Input \"weights\" is expected to have 2 dimensions');if(n.dims[0]!==w)throw new Error(\"Input 1 dimension 0 should have same length as dimension 2 of input 0\");if(i.dims[0]!==n.dims[1])throw new Error('Input \"bias\" dimension 0 should have same length as dimension 1 of input \"weights\"');let g=i.dims[0]/3,l=g,v=l;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error(\"qkv_hidden_sizes attribute should have 3 elements\");for(let se of t.qkvHiddenSizes)if(se%t.numHeads!==0)throw new Error(\"qkv_hidden_sizes should be divisible by num_heads\");g=t.qkvHiddenSizes[0],l=t.qkvHiddenSizes[1],v=t.qkvHiddenSizes[2]}let S=c;if(g!==l)throw new Error(\"qkv_hidden_sizes first element should be same as the second\");if(i.dims[0]!==g+l+v)throw new Error('Input \"bias\" dimension 0 should have same length as sum of Q/K/V hidden sizes');let $=0;if(s){if(l!==v)throw new Error('Input \"past\" expect k_hidden_size == v_hidden_size');if(s.dims.length!==5)throw new Error('Input \"past\" must have 5 dimensions');if(s.dims[0]!==2)throw new Error('Input \"past\" first dimension must be 2');if(s.dims[1]!==d)throw new Error('Input \"past\" second dimension must be batch_size');if(s.dims[2]!==t.numHeads)throw new Error('Input \"past\" third dimension must be num_heads');if(s.dims[4]!==l/t.numHeads)throw new Error('Input \"past\" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||($=s.dims[3])}let U=S+$,q=-1,L=0;if(a)throw new Error(\"Mask not supported\");if(s)throw new Error(\"past is not supported\");if(u){if(u.dims.length!==4)throw new Error('Input \"attention_bias\" must have 4 dimensions');if(u.dims[0]!==d||u.dims[1]!==t.numHeads||u.dims[2]!==c||u.dims[3]!==U)throw new Error('Expect \"attention_bias\" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:d,sequenceLength:c,pastSequenceLength:$,kvSequenceLength:S,totalSequenceLength:U,maxSequenceLength:q,inputHiddenSize:w,hiddenSize:g,vHiddenSize:v,headSize:Math.floor(g/t.numHeads),vHeadSize:Math.floor(v/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:L,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Oi=(e,t,r)=>{let n=Cr(r),i=64,a=r/n;a<i&&(i=32);let s=Math.ceil(r/n/i),u=[{type:1,data:1/r},{type:12,data:a},{type:12,data:s}],d=$r(e.dataType,n),c=kr(1,n),w=[\"type\"],g=l=>{let v=Ut(\"x\",e.dataType,e.dims,n),S=kr(e.dataType),$=[{name:\"d_inv\",type:\"f32\"},{name:\"d_comp\",type:\"u32\"},{name:\"elements_per_thread\",type:\"u32\"}];return`\n  var<workgroup> thread_max: array<f32, ${i}>;\n  var<workgroup> thread_sum: array<f32, ${i}>;\n  ${l.registerUniforms($).declareVariables(v)}\n  ${l.mainStart([i,1,1])}\n    let local_offset = local_idx * uniforms.elements_per_thread;\n    let offset = (global_idx / ${i}) * uniforms.d_comp + local_offset;\n\n    var thread_max_vector = ${c}(-3.402823e+38f);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${c}(x[offset + i]), thread_max_vector);\n    }\n    thread_max[local_idx] = ${(()=>{switch(n){case 1:return\"thread_max_vector\";case 2:return\"max(thread_max_vector.x, thread_max_vector.y)\";case 4:return\"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))\";default:throw new Error(`Unsupported components: ${n}`)}})()};\n    workgroupBarrier();\n\n    var max_value =  f32(-3.402823e+38f);\n    for (var i = 0u; i < ${i}; i++) {\n      max_value = max(thread_max[i], max_value);\n    }\n\n    var sum_vector = ${c}(0);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      sum_vector += exp(${c}(x[offset + i]) - max_value);\n    }\n    thread_sum[local_idx] = ${(()=>{switch(n){case 1:return\"sum_vector\";case 2:return\"sum_vector.x + sum_vector.y\";case 4:return\"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w\";default:throw new Error(`Unsupported components: ${n}`)}})()};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${i}; i++) {\n      sum += thread_sum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        x[offset + i] = ${v.type.value}(${S}(uniforms.d_inv));\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        var f32input = ${c}(x[offset + i]);\n        x[offset + i] = ${v.type.value}(exp(f32input - max_value) / sum);\n      }\n    }\n  }`};return{name:\"AttentionProbsSoftmax\",shaderCache:{hint:`${i};${d};${n}`,inputDependencies:w},getShaderSource:g,getRunData:()=>({outputs:[],dispatchGroup:{x:t},programUniforms:u})}},xo=(e,t,r,n,i,a,s,u)=>{let d=u+a.kvSequenceLength,c=[a.batchSize,a.numHeads,a.sequenceLength,d],w=a.kvNumHeads===void 0&&e>1&&n,g=w?[a.batchSize,a.numHeads,d,a.headSize]:void 0,l=s.scale===0?1/Math.sqrt(a.headSize):s.scale,v=Cr(a.headSize),S=a.headSize/v,$=12,U={x:Math.ceil(d/$),y:Math.ceil(a.sequenceLength/$),z:a.batchSize*a.numHeads},q=[{type:12,data:a.sequenceLength},{type:12,data:S},{type:12,data:d},{type:12,data:a.numHeads},{type:1,data:l},{type:12,data:u},{type:12,data:a.kvSequenceLength}],L=w&&n&&$e.size(n.dims)>0,se=[\"type\",\"type\"];L&&se.push(\"type\"),i&&se.push(\"type\");let X=[{dims:c,dataType:t.dataType,gpuDataType:0}];w&&X.push({dims:g,dataType:t.dataType,gpuDataType:0});let oe=Ke=>{let je=rt(\"q\",t.dataType,t.dims,v),ft=rt(\"key\",r.dataType,r.dims,v),Ot=[je,ft];if(L){let Lr=rt(\"past_key\",n.dataType,n.dims,v);Ot.push(Lr)}i&&Ot.push(rt(\"attention_bias\",i.dataType,i.dims));let Vt=Ut(\"output\",t.dataType,c),lr=[Vt];w&&lr.push(Ut(\"present_key\",t.dataType,g,v));let wr=kr(1,v),er=[{name:\"M\",type:\"u32\"},{name:\"K\",type:\"u32\"},{name:\"N\",type:\"u32\"},{name:\"num_heads\",type:\"u32\"},{name:\"alpha\",type:\"f32\"},{name:\"past_sequence_length\",type:\"u32\"},{name:\"kv_sequence_length\",type:\"u32\"}];return`\n  const TILE_SIZE = ${$}u;\n\n  var<workgroup> tileQ: array<${je.type.storage}, ${$*$}>;\n  var<workgroup> tileK: array<${je.type.storage}, ${$*$}>;\n  ${Ke.registerUniforms(er).declareVariables(...Ot,...lr)}\n  ${Ke.mainStart([$,$,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    ${L&&w?`\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx;\n    let pastKeyOffset = uniforms.past_sequence_length * uniforms.K * headIdx;`:`\n    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;`}\n    ${w?\"let presentKeyOffset = headIdx * uniforms.N * uniforms.K;\":\"\"}\n    var value = ${wr}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        var idx = TILE_SIZE * local_id.y + local_id.x;\n      ${L&&w?`\n              if (n + local_id.y < uniforms.past_sequence_length) {\n                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];\n              } else {\n                tileK[idx] =\n                         key[kOffset + (n + local_id.y - uniforms.past_sequence_length) * uniforms.K + w + local_id.x];\n              }`:\"tileK[idx] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\"}\n      ${w?\"present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];\":\"\"}\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n        value += ${wr}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\n      var sum: f32 = ${(()=>{switch(v){case 1:return\"value\";case 2:return\"value.x + value.y\";case 4:return\"value.x + value.y + value.z + value.w\";default:throw new Error(`Unsupported components: ${v}`)}})()};\n        output[outputIdx] = ${Vt.type.value} (sum * uniforms.alpha) + ${i?\"attention_bias[outputIdx]\":\"0.0\"};\n    }\n  }`};return{name:\"AttentionProbs\",shaderCache:{hint:`${v};${i!==void 0};${n!==void 0};${e}`,inputDependencies:se},getRunData:()=>({outputs:X,dispatchGroup:U,programUniforms:q}),getShaderSource:oe}},To=(e,t,r,n,i,a)=>{let s=a+i.kvSequenceLength,u=i.nReps?i.nReps:1,d=i.vHiddenSize*u,c=i.kvNumHeads==null&&e>1&&n,w=c?[i.batchSize,i.numHeads,s,i.headSize]:void 0,g=[i.batchSize,i.sequenceLength,d],l=12,v={x:Math.ceil(i.vHeadSize/l),y:Math.ceil(i.sequenceLength/l),z:i.batchSize*i.numHeads},S=[{type:12,data:i.sequenceLength},{type:12,data:s},{type:12,data:i.vHeadSize},{type:12,data:i.numHeads},{type:12,data:d},{type:12,data:a},{type:12,data:i.kvSequenceLength}],$=c&&n&&$e.size(n.dims)>0,U=[\"type\",\"type\"];$&&U.push(\"type\");let q=[{dims:g,dataType:t.dataType,gpuDataType:0}];c&&q.push({dims:w,dataType:t.dataType,gpuDataType:0});let L=se=>{let X=rt(\"probs\",t.dataType,t.dims),oe=rt(\"v\",r.dataType,r.dims),Ke=[X,oe];$&&Ke.push(rt(\"past_value\",n.dataType,n.dims));let je=[Ut(\"output\",t.dataType,g)];c&&je.push(Ut(\"present_value\",t.dataType,w));let ft=[{name:\"M\",type:\"u32\"},{name:\"K\",type:\"u32\"},{name:\"N\",type:\"u32\"},{name:\"num_heads\",type:\"u32\"},{name:\"v_hidden_size\",type:\"u32\"},{name:\"past_sequence_length\",type:\"u32\"},{name:\"kv_sequence_length\",type:\"u32\"}];return`\n  const TILE_SIZE = ${l}u;\n  var<workgroup> tileQ: array<${X.type.value}, ${l*l}>;\n  var<workgroup> tileK: array<${X.type.value}, ${l*l}>;\n  ${se.registerUniforms(ft).declareVariables(...Ke,...je)}\n  ${se.mainStart([l,l,1])}\n   let headIdx = workgroup_id.z;\n   let m = global_id.y;\n   let n = global_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   ${$&&c?`\n    let pastValueOffset = headIdx * uniforms.N * uniforms.past_sequence_length + n;\n    let vOffset = headIdx * uniforms.N * uniforms.kv_sequence_length + n;\n      `:`\n   let offsetB = headIdx * uniforms.N * uniforms.K + n;\n            `}\n    ${c?\"let presentValueOffset = headIdx * uniforms.N * uniforms.K + n;\":\"\"}\n   var value = ${X.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        var idx = TILE_SIZE * local_id.y + local_id.x;\n        ${$&&c?`\n        if (w + local_id.y < uniforms.past_sequence_length) {\n          tileK[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];\n        } else {\n          tileK[idx] = v[vOffset + (w + local_id.y - uniforms.past_sequence_length) * uniforms.N];\n        }\n      `:`\n        tileK[idx] = v[offsetB + (w + local_id.y) * uniforms.N];\n      `}\n        ${c?\"present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileK[idx];\":\"\"}\n      }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`};return{name:\"AttentionScore\",shaderCache:{hint:`${n!==void 0};${e}`,inputDependencies:U},getRunData:()=>({outputs:q,dispatchGroup:v,programUniforms:S}),getShaderSource:L}},ms=(e,t,r,n,i,a,s,u,d,c,w)=>{let g=Math.min(e.outputCount,1+(s?1:0)+(u?1:0)),l=c.kvNumHeads!==void 0||g>1?c.pastSequenceLength:0,v=l+c.kvSequenceLength,S=d&&$e.size(d.dims)>0?d:void 0,$=[t,r];c.kvNumHeads===void 0&&g>1&&s&&$e.size(s.dims)>0&&$.push(s),S&&$.push(S);let U=e.compute(xo(g,t,r,s,S,c,w,l),{inputs:$,outputs:c.kvNumHeads===void 0&&g>1?[-1,1]:[-1]})[0];e.compute(Oi(U,c.batchSize*c.numHeads*c.sequenceLength,v),{inputs:[U],outputs:[]});let q=[U,n];c.kvNumHeads===void 0&&g>1&&u&&$e.size(u.dims)>0&&q.push(u),e.compute(To(g,U,n,u,c,l),{inputs:q,outputs:c.kvNumHeads===void 0&&g>1?[0,2]:[0]})},So=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],n=t.sequenceLength,i=t.inputHiddenSize,a=t.headSize,s=12,u={x:Math.ceil(t.headSize/s),y:Math.ceil(t.sequenceLength/s),z:t.batchSize*t.numHeads},d=[e.inputs[0],e.inputs[1],e.inputs[2]],c=[{type:12,data:n},{type:12,data:i},{type:12,data:a},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],w=g=>{let l=Ut(\"output_q\",d[0].dataType,r),v=Ut(\"output_k\",d[0].dataType,r),S=Ut(\"output_v\",d[0].dataType,r),$=rt(\"input\",d[0].dataType,d[0].dims),U=rt(\"weight\",d[1].dataType,d[1].dims),q=rt(\"bias\",d[2].dataType,d[2].dims),L=$.type.storage,se=[{name:\"M\",type:\"u32\"},{name:\"K\",type:\"u32\"},{name:\"N\",type:\"u32\"},{name:\"num_heads\",type:\"u32\"},{name:\"head_size\",type:\"u32\"},{name:\"hidden_size\",type:\"u32\"},{name:\"ldb\",type:\"u32\"}];return`\n  const TILE_SIZE = ${s}u;\n  var<workgroup> tileInput: array<${L}, ${s*s}>;\n  var<workgroup> tileWeightQ: array<${L}, ${s*s}>;\n  var<workgroup> tileWeightK: array<${L}, ${s*s}>;\n  var<workgroup> tileWeightV: array<${L}, ${s*s}>;\n  ${g.registerUniforms(se).declareVariables($,U,q,l,v,S)}\n  ${g.mainStart([s,s,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = global_id.y;\n    let n = global_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${L}(0);\n    var valueK = ${L}(0);\n    var valueV = ${L}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:\"AttentionPrepare\",shaderCache:{inputDependencies:[\"type\",\"type\",\"type\"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:u,programUniforms:c}),getShaderSource:w},{inputs:d,outputs:[-1,-1,-1]})},ko=(e,t)=>{let r=vo(e.inputs,t),[n,i,a]=So(e,r);return ms(e,n,i,a,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}}),Co,Eo,zi,$o,ed=N(()=>{bt(),Qt(),Yt(),_r(),or(),Co=(e,t)=>{if(!e||e.length!==5)throw new Error(\"BatchNormalization requires 5 inputs\");let r=(n,i,a)=>{let s=i.length;if(s!==n.length)throw new Error(`${a}: num dimensions != ${s}`);i.forEach((u,d)=>{if(u!==n[d])throw new Error(`${a}: dim[${d}] do not match`)})};if(e[0].dims.length>1){let n=t.format===\"NHWC\"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,n,\"Invalid input scale\"),r(e[2].dims,n,\"Invalid input B\"),r(e[3].dims,n,\"Invalid input mean\"),r(e[4].dims,n,\"Invalid input var\")}else r(e[1].dims,[1],\"Invalid input scale\"),r(e[2].dims,[1],\"Invalid input B\"),r(e[3].dims,[1],\"Invalid input mean\"),r(e[4].dims,[1],\"Invalid input var\")},Eo=(e,t)=>{let{epsilon:r,spatial:n,format:i}=t,a=e[0].dims,s=n?Cr(a[a.length-1]):1,u=i===\"NHWC\"&&a.length>1?s:1,d=$e.size(a)/s,c=n,w=c?a.length:a,g=rt(\"x\",e[0].dataType,e[0].dims,s),l=rt(\"scale\",e[1].dataType,e[1].dims,u),v=rt(\"bias\",e[2].dataType,e[2].dims,u),S=rt(\"inputMean\",e[3].dataType,e[3].dims,u),$=rt(\"inputVar\",e[4].dataType,e[4].dims,u),U=Ut(\"y\",e[0].dataType,w,s),q=()=>{let se=\"\";if(n)se=`let cOffset = ${a.length===1?\"0u\":i===\"NHWC\"?`outputIndices[${a.length-1}] / ${s}`:\"outputIndices[1]\"};`;else if(i===\"NCHW\")se=`\n            ${U.indicesSet(\"outputIndices\",\"0\",\"0\")}\n            let cOffset = ${U.indicesToOffset(\"outputIndices\")};`;else{se=`var cIndices = ${l.type.indices}(0);\n                       cIndices[0] = outputIndices[${a.length-1}];`;for(let X=1;X<l.rank;X++)se+=`cIndices[${X}] = outputIndices[${X}];`;se+=`let cOffset = ${l.indicesToOffset(\"cIndices\")};`}return se},L=se=>`\n  const epsilon = ${r};\n  ${se.registerUniform(\"outputSize\",\"u32\").declareVariables(g,l,v,S,$,U)}\n  ${se.mainStart()}\n  ${se.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\n    var outputIndices = ${U.offsetToIndices(`global_idx * ${s}`)};\n    ${q()}\n    let scale = ${l.getByOffset(\"cOffset\")};\n    let bias = ${v.getByOffset(\"cOffset\")};\n    let inputMean = ${S.getByOffset(\"cOffset\")};\n    let inputVar = ${$.getByOffset(\"cOffset\")};\n    let x = ${g.getByOffset(\"global_idx\")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${U.setByOffset(\"global_idx\",\"value\")}\n  }`;return{name:\"BatchNormalization\",shaderCache:{hint:`${t.epsilon}_${t.format}_${n}_${s}`,inputDependencies:c?[\"rank\",\"type\",\"type\",\"type\",\"type\"]:void 0},getShaderSource:L,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c?[{type:12,data:d},...It(a)]:[{type:12,data:d}]})}},zi=e=>Gt(e),$o=(e,t)=>{let{inputs:r,outputCount:n}=e,i=zi({...t,outputCount:n});if(A.webgpu.validateInputContent&&Co(r,i),t.trainingMode)throw new Error(\"BatchNormalization trainingMode is not supported yet.\");e.compute(Eo(r,i))}}),Po,Ao,Di,td=N(()=>{Yt(),or(),Po=e=>{if(e[0].dims.length!==3)throw new Error(\"input should have 3 dimensions\");if(![320,640,1280].includes(e[0].dims[2]))throw new Error(\"number of channels should be 320, 640 or 1280\");if(e[1].dims.length!==1)throw new Error(\"bias is expected to have 1 dimensions\");if(e[0].dims[2]!==e[1].dims[0])throw new Error(\"last dimension of input and bias are not the same\")},Ao=e=>{let t=e[0].dims,r=e[0].dims[2],n=$e.size(t)/4,i=e[0].dataType,a=rt(\"input\",i,t,4),s=rt(\"bias\",i,[r],4),u=rt(\"residual\",i,t,4),d=Ut(\"output\",i,t,4);return{name:\"BiasAdd\",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:c=>`\n  const channels = ${r}u / 4;\n  ${c.declareVariables(a,s,u,d)}\n\n  ${c.mainStart()}\n    ${c.guardAgainstOutOfBoundsWorkgroupSizes(n)}\n    let value = ${a.getByOffset(\"global_idx\")}\n      + ${s.getByOffset(\"global_idx % channels\")} + ${u.getByOffset(\"global_idx\")};\n    ${d.setByOffset(\"global_idx\",\"value\")}\n  }`}},Di=e=>{Po(e.inputs),e.compute(Ao(e.inputs))}}),Io,Mr,Fo,Oo,Bi,zo,Do,Li,Bo,Lo,Ri,Ro,No,ei,jo,Vo,Is,Ni,ti,ji,Uo,Wo,Go,Vi,qo,Ho,Ko,Ui,Xo,Qo,Wi,Yo,Jo,Gi,Zo,qi,Hi,Ki,Xi,Qi,el,tl,Yi,rl,nl,Ji=N(()=>{Qt(),Yt(),_r(),or(),Io=(e,t,r,n,i,a)=>{let s=Math.ceil(t/4),u=\"\";typeof i==\"string\"?u=`${i}(a)`:u=i(\"a\");let d=rt(\"inputData\",r,[s],4),c=Ut(\"outputData\",n,[s],4);return`\n      ${e.registerUniform(\"vec_size\",\"u32\").declareVariables(d,c)}\n\n  ${a??\"\"}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.vec_size\")}\n\n    let a = ${d.getByOffset(\"global_idx\")};\n    ${c.setByOffset(\"global_idx\",u)}\n  }`},Mr=(e,t,r,n,i,a=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:[\"type\"]},getShaderSource:s=>Io(s,$e.size(e.dims),e.dataType,a,r,n),getRunData:s=>({outputs:[{dims:e.dims,dataType:a}],dispatchGroup:{x:Math.ceil($e.size(s[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil($e.size(e.dims)/4)}]})}),Fo=e=>{e.compute(Mr(e.inputs[0],\"Abs\",\"abs\"))},Oo=e=>{e.compute(Mr(e.inputs[0],\"Acos\",\"acos\"))},Bi=e=>{e.compute(Mr(e.inputs[0],\"Acosh\",\"acosh\"))},zo=e=>{e.compute(Mr(e.inputs[0],\"Asin\",\"asin\"))},Do=e=>{e.compute(Mr(e.inputs[0],\"Asinh\",\"asinh\"))},Li=e=>{e.compute(Mr(e.inputs[0],\"Atan\",\"atan\"))},Bo=e=>{e.compute(Mr(e.inputs[0],\"Atanh\",\"atanh\"))},Lo=e=>Gt(e),Ri=(e,t)=>{let r;switch(t.to){case 10:r=\"vec4<f16>\";break;case 1:r=\"vec4<f32>\";break;case 12:r=\"vec4<u32>\";break;case 6:r=\"vec4<i32>\";break;case 9:r=\"vec4<bool>\";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(Mr(e.inputs[0],\"Cast\",r,void 0,t.cacheKey,t.to))},Ro=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:Yr,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:mn;return Gt({min:t,max:r})},No=(e,t)=>{let r=e.inputs.length===1?t:Ro(e.inputs),n=kr(e.inputs[0].dataType);e.compute(Mr(e.inputs[0],\"Clip\",i=>`clamp(${i}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${n}> = vec4(${n}(${r.min}));\n    const clip_max_: vec4<${n}> = vec4(${n}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},ei=e=>{e.compute(Mr(e.inputs[0],\"Ceil\",\"ceil\"))},jo=e=>{e.compute(Mr(e.inputs[0],\"Cos\",\"cos\"))},Vo=e=>{e.compute(Mr(e.inputs[0],\"Cosh\",\"cosh\"))},Is=e=>Gt(e),Ni=(e,t)=>{let r=kr(e.inputs[0].dataType);e.compute(Mr(e.inputs[0],\"Elu\",n=>`elu_vf32(${n})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},ti=(e=\"f32\")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,ji=e=>{let t=kr(e.inputs[0].dataType);e.compute(Mr(e.inputs[0],\"Erf\",r=>`erf_vf32(${r})`,ti(t)))},Uo=e=>{e.compute(Mr(e.inputs[0],\"Exp\",\"exp\"))},Wo=e=>{e.compute(Mr(e.inputs[0],\"Floor\",\"floor\"))},Go=e=>{let t=kr(e.inputs[0].dataType);e.compute(Mr(e.inputs[0],\"Gelu\",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,ti(t)))},Vi=(e,t)=>{let r=kr(e.inputs[0].dataType);e.compute(Mr(e.inputs[0],\"LeakyRelu\",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},qo=e=>{e.compute(Mr(e.inputs[0],\"Not\",t=>`!${t}`))},Ho=e=>{e.compute(Mr(e.inputs[0],\"Neg\",t=>`-${t}`))},Ko=e=>{e.compute(Mr(e.inputs[0],\"Reciprocal\",t=>`1.0/${t}`))},Ui=e=>{let t=kr(e.inputs[0].dataType);e.compute(Mr(e.inputs[0],\"Relu\",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Xo=e=>{e.compute(Mr(e.inputs[0],\"Sigmoid\",t=>`(1.0 / (1.0 + exp(-${t})))`))},Qo=e=>Gt(e),Wi=(e,t)=>{let r=kr(e.inputs[0].dataType);e.compute(Mr(e.inputs[0],\"HardSigmoid\",n=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${n} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Yo=e=>{e.compute(Mr(e.inputs[0],\"Sin\",\"sin\"))},Jo=e=>{e.compute(Mr(e.inputs[0],\"Sinh\",\"sinh\"))},Gi=e=>{e.compute(Mr(e.inputs[0],\"Sqrt\",\"sqrt\"))},Zo=e=>{e.compute(Mr(e.inputs[0],\"Tan\",\"tan\"))},qi=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Hi=e=>{e.compute(Mr(e.inputs[0],\"Tanh\",qi))},Ki=(e=\"f32\")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${qi(\"v\")};\n}\n`,Xi=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Qi=e=>{let t=kr(e.inputs[0].dataType);e.compute(Mr(e.inputs[0],\"FastGelu\",Xi,Ki(t),void 0,e.inputs[0].dataType))},el=(e,t)=>{let r=kr(e.inputs[0].dataType);return e.compute(Mr(e.inputs[0],\"ThresholdedRelu\",n=>`select(vec4<${r}>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},tl=e=>{e.compute(Mr(e.inputs[0],\"Log\",\"log\"))},Yi=(e,t)=>`\nconst alpha = vec4<${e}>(${t});\nconst one = ${e}(1.0);\nconst zero = ${e}(0.0);\n\nfn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {\n  let v = x *alpha;\n  var x1 : vec4<${e}>;\n  for (var i = 0; i < 4; i = i + 1) {\n    if (v[i] >= zero) {\n      x1[i] = one / (one + exp(-v[i]));\n    } else {\n      x1[i] = one - one / (one + exp(v[i]));\n    }\n  }\n  return x * x1;\n}\n`,rl=e=>`quick_gelu_impl(${e})`,nl=(e,t)=>{let r=kr(e.inputs[0].dataType);e.compute(Mr(e.inputs[0],\"QuickGelu\",rl,Yi(r,t.alpha),t.cacheKey,e.inputs[0].dataType))}}),sl,ri,il,rd=N(()=>{Yt(),or(),Ji(),sl=e=>{if(e[0].dims.length!==3)throw new Error(\"input should have 3 dimensions\");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error(\"hidden state should be 2560, 5120 or 10240\");if(e[1].dims.length!==1)throw new Error(\"bias is expected to have 1 dimensions\");if(e[0].dims[2]!==e[1].dims[0])throw new Error(\"last dimension of input and bias are not the same\")},ri=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=rt(\"input\",e[0].dataType,e[0].dims,4),n=rt(\"bias\",e[0].dataType,[e[0].dims[2]],4),i=Ut(\"output\",e[0].dataType,t,4),a=$e.size(t)/4,s=$r(e[0].dataType);return{name:\"BiasSplitGelu\",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:u=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${u.declareVariables(r,n,i)}\n\n  ${ti(s)}\n\n  ${u.mainStart()}\n    ${u.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${i.setByOffset(\"global_idx\",\"valueLeft * geluRight\")}\n  }`}},il=e=>{sl(e.inputs),e.compute(ri(e.inputs))}}),al,Zi,$n,ol,ll,ul,ea,dl,cl,ta,pl,hl,ra,nd=N(()=>{Qt(),Yt(),or(),al=(e,t,r,n,i,a,s,u,d,c,w,g)=>{let l,v;typeof u==\"string\"?l=v=(L,se)=>`${u}((${L}),(${se}))`:typeof u==\"function\"?l=v=u:(l=u.scalar,v=u.vector);let S=Ut(\"outputData\",w,n.length,4),$=rt(\"aData\",d,t.length,4),U=rt(\"bData\",c,r.length,4),q;if(i)if(a){let L=$e.size(t)===1,se=$e.size(r)===1,X=t.length>0&&t[t.length-1]%4===0,oe=r.length>0&&r[r.length-1]%4===0;L||se?q=S.setByOffset(\"global_idx\",v(L?`${$.type.value}(${$.getByOffset(\"0\")}.x)`:$.getByOffset(\"global_idx\"),se?`${U.type.value}(${U.getByOffset(\"0\")}.x)`:U.getByOffset(\"global_idx\"))):q=`\n            let outputIndices = ${S.offsetToIndices(\"global_idx * 4u\")};\n            let offsetA = ${$.broadcastedIndicesToOffset(\"outputIndices\",S)};\n            let offsetB = ${U.broadcastedIndicesToOffset(\"outputIndices\",S)};\n            ${S.setByOffset(\"global_idx\",v(s||X?$.getByOffset(\"offsetA / 4u\"):`${$.type.value}(${$.getByOffset(\"offsetA / 4u\")}[offsetA % 4u])`,s||oe?U.getByOffset(\"offsetB / 4u\"):`${U.type.value}(${U.getByOffset(\"offsetB / 4u\")}[offsetB % 4u])`))}\n          `}else q=S.setByOffset(\"global_idx\",v($.getByOffset(\"global_idx\"),U.getByOffset(\"global_idx\")));else{if(!a)throw new Error(\"no necessary to use scalar implementation for element-wise binary op implementation.\");let L=(se,X,oe=\"\")=>{let Ke=`aData[indexA${X}][componentA${X}]`,je=`bData[indexB${X}][componentB${X}]`;return`\n            let outputIndices${X} = ${S.offsetToIndices(`global_idx * 4u + ${X}u`)};\n            let offsetA${X} = ${$.broadcastedIndicesToOffset(`outputIndices${X}`,S)};\n            let offsetB${X} = ${U.broadcastedIndicesToOffset(`outputIndices${X}`,S)};\n            let indexA${X} = offsetA${X} / 4u;\n            let indexB${X} = offsetB${X} / 4u;\n            let componentA${X} = offsetA${X} % 4u;\n            let componentB${X} = offsetB${X} % 4u;\n            ${se}[${X}] = ${oe}(${l(Ke,je)});\n          `};w===9?q=`\n            var data = vec4<u32>(0);\n            ${L(\"data\",0,\"u32\")}\n            ${L(\"data\",1,\"u32\")}\n            ${L(\"data\",2,\"u32\")}\n            ${L(\"data\",3,\"u32\")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:q=`\n            ${L(\"outputData[global_idx]\",0)}\n            ${L(\"outputData[global_idx]\",1)}\n            ${L(\"outputData[global_idx]\",2)}\n            ${L(\"outputData[global_idx]\",3)}\n          `}return`\n        ${e.registerUniform(\"vec_size\",\"u32\").declareVariables($,U,S)}\n\n        ${g??\"\"}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.vec_size\")}\n        ${q}\n      }`},Zi=(e,t,r,n,i,a,s=r.dataType)=>{let u=!$e.areEqual(r.dims,n.dims),d=r.dims,c=$e.size(r.dims),w=!1,g=!1,l=[u];if(u){let v=tn.calcShape(r.dims,n.dims,!1);if(!v)throw new Error(\"Can't perform binary op on the given tensors\");d=v,c=$e.size(d);let S=$e.size(r.dims)===1,$=$e.size(n.dims)===1,U=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,q=n.dims.length>0&&n.dims[n.dims.length-1]%4===0;l.push(S),l.push($),l.push(U),l.push(q);let L=1;for(let se=1;se<d.length;se++){let X=r.dims[r.dims.length-se]??1,oe=n.dims[n.dims.length-se]??1;if(X===oe)L*=X;else break}L%4===0?(g=!0,w=!0):(S||$||U||q)&&(w=!0)}else w=!0;return l.push(w),{name:e,shaderCache:{hint:t+l.map(v=>v.toString()).join(\"_\"),inputDependencies:[\"rank\",\"rank\"]},getShaderSource:v=>al(v,r.dims,n.dims,d,w,u,g,i,r.dataType,n.dataType,s,a),getRunData:()=>({outputs:[{dims:d,dataType:s}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:Math.ceil($e.size(d)/4)},...It(r.dims,n.dims,d)]})}},$n=(e,t,r,n,i,a)=>{e.compute(Zi(t,i??\"\",e.inputs[0],e.inputs[1],r,n,a))},ol=e=>{$n(e,\"Add\",(t,r)=>`${t}+${r}`)},ll=e=>{$n(e,\"Div\",(t,r)=>`${t}/${r}`)},ul=e=>{$n(e,\"Equal\",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},ea=e=>{$n(e,\"Mul\",(t,r)=>`${t}*${r}`)},dl=e=>{let t=rt(\"input\",e.inputs[0].dataType,e.inputs[0].dims).type.value;$n(e,\"Pow\",{scalar:(r,n)=>`pow_custom(${r},${n})`,vector:(r,n)=>`pow_vector_custom(${r},${n})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t===\"i32\"?\"round\":\"\"}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},cl=e=>{$n(e,\"Sub\",(t,r)=>`${t}-${r}`)},ta=e=>{$n(e,\"Greater\",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},pl=e=>{$n(e,\"Less\",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},hl=e=>{$n(e,\"GreaterOrEqual\",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},ra=e=>{$n(e,\"LessOrEqual\",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}}),fl,na,ml,_l,gl,wl,sd=N(()=>{Qt(),Yt(),_r(),or(),fl=(e,t)=>{if(!e||e.length<1)throw new Error(\"too few inputs\");let r=0,n=e[r],i=n.dataType,a=n.dims.length;e.forEach((s,u)=>{if(u!==r){if(s.dataType!==i)throw new Error(\"input tensors should be one type\");if(s.dims.length!==a)throw new Error(\"input tensors should have the same shape\");s.dims.forEach((d,c)=>{if(c!==t&&d!==n.dims[c])throw new Error(\"non concat dimensions must match\")})}})},na=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,ml=(e,t)=>{let r=e.length,n=[];for(let i=0;i<r;++i){let a=t.setByOffset(\"global_idx\",e[i].getByIndices(\"indices\"));r===1?n.push(a):i===0?n.push(`if (inputIndex == ${i}u) { ${a} }`):i===r-1?n.push(`else { ${a} }`):n.push(`else if (inputIndex == ${i}) { ${a} }`)}return n.join(`\n`)},_l=(e,t,r,n)=>{let i=$e.size(r),a=new Array(e.length),s=new Array(e.length),u=0,d=[],c=[],w=[{type:12,data:i}];for(let $=0;$<e.length;++$)u+=e[$].dims[t],a[$]=u,c.push(e[$].dims.length),s[$]=rt(`input${$}`,n,c[$]),d.push(\"rank\"),w.push({type:12,data:a[$]});for(let $=0;$<e.length;++$)w.push(...It(e[$].dims));w.push(...It(r));let g=Ut(\"output\",n,r.length),l=g.indicesGet(\"indices\",t),v=Array.from(Array(a.length).keys()).map($=>`uniforms.sizeInConcatAxis${$}`).join(\",\"),S=$=>`\n\n  ${(()=>{$.registerUniform(\"outputSize\",\"u32\");for(let U=0;U<e.length;U++)$.registerUniform(`sizeInConcatAxis${U}`,\"u32\");return $.declareVariables(...s,g)})()}\n\n  ${na(a.length,v)}\n\n  ${$.mainStart()}\n    ${$.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\n\n    var indices = ${g.offsetToIndices(\"global_idx\")};\n\n    let inputIndex = calculateInputIndex(${l});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${a.length}u>(${v});\n      ${l} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${ml(s,g)}\n  }`;return{name:\"Concat\",shaderCache:{hint:`${t}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:r,dataType:n}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:w}),getShaderSource:S}},gl=(e,t)=>{let r=e.inputs,n=r[0].dims,i=$e.normalizeAxis(t.axis,n.length);fl(r,i);let a=n.slice();a[i]=r.reduce((u,d)=>u+(d.dims.length>i?d.dims[i]:0),0);let s=r.filter(u=>$e.size(u.dims)>0);e.compute(_l(s,i,a,r[0].dataType),{inputs:s})},wl=e=>Gt({axis:e.axis})}),Jn,Vn,Zn,sa,Un=N(()=>{Qt(),Yt(),Jn=(e,t,r=\"f32\")=>{switch(e.activation){case\"Relu\":return`value = max(value, ${t}(0.0));`;case\"Sigmoid\":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case\"Clip\":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case\"HardSigmoid\":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case\"LeakyRelu\":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case\"Tanh\":return`let e2x = exp(-2.0 * abs(value));\n              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);\n        `;case\"\":return\"\";default:throw new Error(`Unsupported activation ${e.activation}`)}},Vn=(e,t)=>{e.activation===\"Clip\"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation===\"HardSigmoid\"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation===\"LeakyRelu\"&&t.push({type:1,data:e.alpha})},Zn=(e,t)=>{e.activation===\"Clip\"?t.push({name:\"clip_max\",type:\"f32\"},{name:\"clip_min\",type:\"f32\"}):e.activation===\"HardSigmoid\"?t.push({name:\"alpha\",type:\"f32\"},{name:\"beta\",type:\"f32\"}):e.activation===\"LeakyRelu\"&&t.push({name:\"alpha\",type:\"f32\"})},sa=e=>{let t=(e==null?void 0:e.activation)||\"\";if(t===\"HardSigmoid\"){let[r,n]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:t,alpha:r,beta:n}}else if(t===\"Clip\"){let[r,n]=(e==null?void 0:e.activation_params)||[Yr,mn];return{activation:t,clipMax:n,clipMin:r}}else if(t===\"LeakyRelu\"){let[r]=(e==null?void 0:e.activation_params)||[.01];return{activation:t,alpha:r}}return{activation:t}}}),on,ia,Dn=N(()=>{on=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},ia=e=>`\n      ${e?\"value = value + getBiasByOutputCoords(coords);\":\"\"}\n      `}),aa,yl=N(()=>{aa=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`}),bl,Ml,Fs,oa,vl,ni,xl,Os,si=N(()=>{Qt(),Yt(),or(),Un(),Dn(),bl=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?\", batchIndices\":\"\"});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?\", batchIndices\":\"\"});\n        `,Ml=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?\"\":\"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];\"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?\"\":\"acc[i] = BCached3 * ACached3[i] + acc[i];\"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?\"\":\"acc[i] = BCached3 * ACached.w + acc[i];\"}\n        }`,Fs=(e,t,r=\"f32\",n,i=!1,a=32,s=!1,u=32)=>{let d=t[1]*e[1],c=t[0]*e[0],w=i?d:a,g=i?a:d,l=w/t[0],v=a/t[1];if(!((i&&l===4&&e[1]===4||!i&&(l===3||l===4))&&w%t[0]===0&&a%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${l} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${l} must be 3 or 4.\n  tileAWidth ${w} must be divisible by workgroupSize[0]${t[0]}. tileInner ${a} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${l}<${r}>, ${w/l}>, ${g}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${c/e[0]}>, ${a}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${l};\nconst tileInner = ${a};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${s?\"0\":\"i32(globalId.z)\"};\n  ${n?`let batchIndices = ${n.offsetToIndices(\"u32(batch)\")};`:\"\"}\n  let globalRowStart = i32(workgroupId.y) * ${d};\n\n  let num_tiles = ${s?`${Math.ceil(u/a)}`:\"(uniforms.dim_inner - 1) / tileInner + 1\"};\n  var kStart = ${s?`i32(globalId.z) * ${u}`:\"0\"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${v};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${bl(i,n)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${v}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${n?\", batchIndices\":\"\"});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${l===3?\"\":\"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];\"}\n\n          ${Ml(i,l)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},oa=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?\", batchIndices\":\"\"});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?\", batchIndices\":\"\"});\n            `,vl=e=>e?\"let ACached = mm_Asub[k][tileRow + innerRow];\":\"let ACached = mm_Asub[tileRow + innerRow][k];\",ni=(e,t,r=\"f32\",n,i=!1,a=32,s=!1,u=32,d=!1)=>{let c=e[1]*t[1],w=e[0]*t[0],g=i?c:a,l=i?a:c;if(!(l%t[1]===0&&g%t[0]===0&&a%t[1]===0))throw new Error(`tileAHight ${l} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${g} must be divisible by workgroupSize[0]${t[0]}, tileInner ${a} must be divisible by workgroupSize[1]${t[1]}`);let v=l/t[1],S=g/t[0],$=a/t[1],U=d?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${c};\n    let globalColStart = i32(workgroupId.x) * ${w};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${l}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${g}; inputCol = inputCol + ${t[0]}) {\n          ${oa(i,n)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${w}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${n?\", batchIndices\":\"\"});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${c};\n\nlet tileRowA = i32(localId.y) * ${v};\nlet tileColA = i32(localId.x) * ${S};\nlet tileRowB = i32(localId.y) * ${$};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${v}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${S}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${oa(i,n)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${$}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${n?\", batchIndices\":\"\"});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${vl(i)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${g}>, ${l}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${w}>, ${a}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${a};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${s?\"0\":\"i32(globalId.z)\"};\n    ${n?`let batchIndices = ${n.offsetToIndices(\"u32(batch)\")};`:\"\"}\n    let num_tiles = ${s?`${Math.ceil(u/a)}`:\"(uniforms.dim_inner - 1) / tileInner + 1\"};\n    var kStart = ${s?`i32(globalId.z) * ${u}`:\"0\"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n    ${U}\n  }\n`},xl=(e,t,r,n,i,a=!1)=>{let[s,u,d]=i,[c,w,g,l]=n,v=hs(s,d),S=hs(u,d),$=$r(n[0].type.tensor),U=()=>{let L=w.rank,se=c.rank,X=`var aIndices: ${w.type.indices};`;for(let oe=L-2-1,Ke=se-1;oe>=0;oe--,Ke--)X+=`\naIndices[${oe}] = ${se>1?`batchIndices[${Ke}]`:\"batchIndices\"};`;return v.forEach(oe=>{X+=`\naIndices[${oe}] = 0;`}),X+=`\naIndices[${L-2}] = u32(row);\n                   aIndices[${L-1}] = u32(colIn);`,X},q=()=>{let L=g.rank,se=c.rank,X=`var bIndices: ${g.type.indices};`;for(let oe=L-2-1,Ke=se-1;oe>=0;oe--,Ke--)X+=`\nbIndices[${oe}] = ${se>1?`batchIndices[${Ke}]`:\"batchIndices\"};`;return S.forEach(oe=>{X+=`\nbIndices[${oe}] = 0;`}),X+=`\nbIndices[${L-2}] = u32(row);\n                   bIndices[${L-1}] = u32(colIn);`,X};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${c.type.indices}) -> ${on(e,$)} {\n      var value = ${on(e,$)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${U()}\n        value = ${w.getByIndices(\"aIndices\")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${c.type.indices}) -> ${on(e,$)} {\n      var value = ${on(e,$)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${q()}\n        value = ${g.getByIndices(\"bIndices\")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${on(e,$)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${a?\"bias[colIn]\":`${on(e,$)}(bias[row])`};`:\"\"}\n        ${r}\n        ${l.setByIndices(\"vec3<u32>(coords)\",\"value\")}\n      }\n    }\n    `},Os=(e,t,r,n,i=!1,a)=>{let s=e[0].dims,u=e[1].dims,d=s.slice(0,-2),c=u.slice(0,-2),w=n?n.slice(0,-2):r.slice(0,-2),g=$e.size(w),l=s[s.length-2],v=s[s.length-1],S=u[u.length-1],$=v%4===0&&S%4===0,U=l<=8?[4,1,1]:[4,4,1],q=[8,8,1],L=[Math.ceil(S/q[0]/U[0]),Math.ceil(l/q[1]/U[1]),Math.ceil(g/q[2]/U[2])],se=$?4:1,X=[...d,l,v/se],oe=X.length,Ke=[...c,v,S/se],je=Ke.length,ft=[g,l,S/se],Ot=[{type:6,data:l},{type:6,data:S},{type:6,data:v}];Vn(t,Ot),Ot.push(...It(w,X,Ke));let Vt=[\"rank\",\"rank\"],lr=e.length>2;lr&&(Ot.push(...It(e[2].dims)),Vt.push(\"rank\")),Ot.push(...It(ft));let wr=er=>{let Lr=w.length,Gr=wi(\"batchDims\",e[0].dataType,Lr,1),xr=$r(e[0].dataType),Nr=rt(\"a\",e[0].dataType,oe,se),Zt=rt(\"b\",e[1].dataType,je,se),mr=Ut(\"result\",e[0].dataType,ft.length,se),Pr=[Nr,Zt];if(lr){let Jr=i?se:1;Pr.push(rt(\"bias\",e[2].dataType,e[2].dims.length,Jr))}let Ve=[{name:\"dim_a_outer\",type:\"i32\"},{name:\"dim_b_outer\",type:\"i32\"},{name:\"dim_inner\",type:\"i32\"}];Zn(t,Ve);let kt=$r(mr.type.tensor),nr=Jn(t,mr.type.value,kt),Rr=xl(se,lr,nr,[Gr,Nr,Zt,mr],[d,c,w],i);return`\n  ${er.registerUniforms(Ve).registerInternalVariables(Gr).declareVariables(...Pr,mr)}\n  ${Rr}\n  ${$?Fs(U,q,xr,Gr):ni(U,q,xr,Gr)}\n                   `};return{name:\"MatMul\",shaderCache:{hint:`${U};${t.activation};${$};${i}`,inputDependencies:Vt},getRunData:()=>({outputs:[{dims:a?a(r):r,dataType:e[0].dataType}],dispatchGroup:{x:L[0],y:L[1],z:L[2]},programUniforms:Ot}),getShaderSource:wr}}}),Tl,Sl,ii=N(()=>{Qt(),bn(),or(),Un(),Dn(),yl(),si(),Tl=(e,t,r,n,i=!1,a,s=4,u=4,d=4,c=\"f32\")=>{let w=Ot=>{switch(Ot){case 1:return\"resData = x[xIndex];\";case 3:return`resData = vec3<${c}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return\"resData = x[xIndex / 4];\";default:throw new Error(`innerElementSize ${Ot} is not supported.`)}},g=Ot=>{switch(Ot){case 1:return\"return w[row * i32(uniforms.w_shape[3]) + colIn];\";case 4:return\"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];\";default:throw new Error(`innerElementSize ${Ot} is not supported.`)}},l=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,v=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,S=e?\"i32(uniforms.x_shape[1])\":\"i32(uniforms.x_shape[2])\",$=e?\"i32(uniforms.x_shape[2])\":\"i32(uniforms.x_shape[3])\",U=e?\"row\":\"col\",q=e?\"col\":\"row\",L=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?\"i32(uniforms.result_shape[2])\":\"i32(uniforms.result_shape[3])\"};\n    let outRow = ${U} / outWidth;\n    let outCol = ${U} % outWidth;\n\n    let WRow = ${q} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${q} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${q} % inChannels;\n    var resData = ${on(s,c)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${S} && xCol >= 0 && xCol < ${$}) {\n      ${l}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${w(s)}\n    }\n    return resData;`,se=e?t&&n?`\n    let col = colIn * ${s};\n    ${L}`:`\n    let col = colIn * ${s};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${L}\n    }\n    return ${on(s,c)}(0.0);`:n&&r?`\n    let col = colIn * ${s};\n    ${L}`:`\n    let col = colIn * ${s};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${L}\n    }\n    return ${on(s,c)}(0.0);`,X=`${g(u)}`,oe=on(d,c),Ke=on(e?s:u,c),je=on(e?u:s,c),ft=Jn(a,oe,c);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Ke} {\n      ${e?se:X}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${je} {\n      ${e?X:se}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${oe}) {\n      let col = colIn * ${d};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?\"i32(uniforms.result_shape[2])\":\"i32(uniforms.result_shape[3])\"};\n      ${v}\n      ${ia(i)}\n      ${ft}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Sl=(e,t,r,n,i,a,s,u,d)=>{let c=t.format===\"NHWC\",w=c?e[0].dims[3]:e[0].dims[1],g=r[0],l=c?r[2]:r[3],v=c?r[1]:r[2],S=c?r[3]:r[1],$=c&&(w%4===0||w%3===0)&&S%4===0,U=c?S:l*v,q=c?l*v:S,L=[8,8,1],se=n<=8?[4,1,1]:[4,4,1],X=[Math.ceil(U/L[0]/se[0]),Math.ceil(q/L[1]/se[1]),Math.ceil(g/L[2]/se[2])];jr(\"verbose\",()=>`[conv2d_mm_webgpu] dispatch = ${X}`);let oe=$?c&&w%4!==0?3:4:1,Ke=L[1]*se[1],je=L[0]*se[0],ft=Math.max(L[0]*oe,L[1]),Ot=n%Ke===0,Vt=i%je===0,lr=a%ft===0,wr=$?[oe,4,4]:[1,1,1],er=[{type:6,data:n},{type:6,data:i},{type:6,data:a},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];Vn(t,er),er.push(...It(e[0].dims,e[1].dims));let Lr=[\"rank\",\"rank\"];s&&(er.push(...It(e[2].dims)),Lr.push(\"rank\")),er.push(...It(r));let Gr=xr=>{let Nr=[{name:\"dim_a_outer\",type:\"i32\"},{name:\"dim_b_outer\",type:\"i32\"},{name:\"dim_inner\",type:\"i32\"},{name:\"pad\",type:\"i32\",length:2},{name:\"stride\",type:\"i32\",length:2},{name:\"dilation\",type:\"i32\",length:2}];Zn(t,Nr);let Zt=$?4:1,mr=$r(e[0].dataType),Pr=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${$?`vec4<${mr}>`:mr}) {\n        result[flatIndex] = ${$?`vec4<${mr}>`:mr}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${$?`vec4<${mr}>`:mr}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${$?\"/ 4\":\"\"}, value);\n      }`,Ve=rt(\"x\",e[0].dataType,e[0].dims.length,oe===3?1:oe),kt=rt(\"w\",e[1].dataType,e[1].dims.length,Zt),nr=[Ve,kt],Rr=Ut(\"result\",e[0].dataType,r.length,Zt);if(s){let Jr=rt(\"bias\",e[2].dataType,e[2].dims.length,Zt);nr.push(Jr),Pr+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${$?`vec4<${mr}>`:mr} {\n          return bias[coords.${c?\"w\":\"y\"}${$?\"/ 4\":\"\"}];\n        }`}return`\n        ${aa(\"uniforms.result_strides\")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${xr.registerUniforms(Nr).declareVariables(...nr,Rr)}\n        ${Pr}\n        ${Tl(c,Ot,Vt,lr,s,t,wr[0],wr[1],wr[2],mr)}\n        ${$?Fs(se,L,mr,void 0,!c,ft):ni(se,L,mr,void 0,!c,ft,!1,void 0,u)}`};return{name:\"Conv2DMatMul\",shaderCache:{hint:`${t.cacheKey};${oe};${$};${Ot};${Vt};${lr};${Ke};${je};${ft}`,inputDependencies:Lr},getRunData:()=>({outputs:[{dims:d?d(r):r,dataType:e[0].dataType}],dispatchGroup:{x:X[0],y:X[1],z:X[2]},programUniforms:er}),getShaderSource:Gr}}}),kl,la,zs,Cl,Ds,El,$l,Pl,Qd=N(()=>{Qt(),bn(),Yt(),or(),Un(),Dn(),kl=e=>{let t=1;for(let r=0;r<e.length;r++)t*=e[r];return t},la=e=>typeof e==\"number\"?[e,e,e]:e,zs=(e,t)=>t<=1?e:e+(e-1)*(t-1),Cl=(e,t,r,n=1)=>{let i=zs(t,n);return Math.floor((e[0]*(r-1)-r+i)/2)},Ds=(e,t,r,n,i)=>{i==null&&(i=Cl(e,t[0],n[0]));let a=[0,0,0,r];for(let s=0;s<3;s++)e[s]+2*i>=t[s]&&(a[s]=Math.trunc((e[s]-t[s]+2*i)/n[s]+1));return a},El=(e,t,r,n,i,a,s,u,d,c)=>{let w,g,l,v;if(e===\"VALID\"&&(e=0),typeof e==\"number\"){w={top:e,bottom:e,left:e,right:e,front:e,back:e};let S=Ds([t,r,n,1],[u,d,c],1,[i,a,s],e);g=S[0],l=S[1],v=S[2]}else if(Array.isArray(e)){if(!e.every(($,U,q)=>$===q[0]))throw Error(`Unsupported padding parameter: ${e}`);w={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let S=Ds([t,r,n,1],[u,d,c],1,[i,a,s],e[0]);g=S[0],l=S[1],v=S[2]}else if(e===\"SAME_UPPER\"){g=Math.ceil(t/i),l=Math.ceil(r/a),v=Math.ceil(n/s);let S=(g-1)*i+u-t,$=(l-1)*a+d-r,U=(v-1)*s+c-n,q=Math.floor(S/2),L=S-q,se=Math.floor($/2),X=$-se,oe=Math.floor(U/2),Ke=U-oe;w={top:se,bottom:X,left:oe,right:Ke,front:q,back:L}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:w,outDepth:g,outHeight:l,outWidth:v}},$l=(e,t,r,n,i,a=!1,s=\"channelsLast\")=>{let u,d,c,w,g;if(s===\"channelsLast\")[u,d,c,w,g]=e;else if(s===\"channelsFirst\")[u,g,d,c,w]=e;else throw new Error(`Unknown dataFormat ${s}`);let[l,,v,S,$]=t,[U,q,L]=la(r),[se,X,oe]=la(n),Ke=zs(v,se),je=zs(S,X),ft=zs($,oe),{padInfo:Ot,outDepth:Vt,outHeight:lr,outWidth:wr}=El(i,d,c,w,U,q,L,Ke,je,ft),er=a?l*g:l,Lr=[0,0,0,0,0];return s===\"channelsFirst\"?Lr=[u,er,Vt,lr,wr]:s===\"channelsLast\"&&(Lr=[u,Vt,lr,wr,er]),{batchSize:u,dataFormat:s,inDepth:d,inHeight:c,inWidth:w,inChannels:g,outDepth:Vt,outHeight:lr,outWidth:wr,outChannels:er,padInfo:Ot,strideDepth:U,strideHeight:q,strideWidth:L,filterDepth:v,filterHeight:S,filterWidth:$,effectiveFilterDepth:Ke,effectiveFilterHeight:je,effectiveFilterWidth:ft,dilationDepth:se,dilationHeight:X,dilationWidth:oe,inShape:e,outShape:Lr,filterShape:t}},Pl=(e,t,r,n,i,a)=>{let s=a===\"channelsLast\";s?e[0].dims[3]:e[0].dims[1];let u=[64,1,1],d={x:r.map((U,q)=>q)},c=[Math.ceil(kl(d.x.map(U=>r[U]))/u[0]),1,1];jr(\"verbose\",()=>`[conv3d_naive_webgpu] dispatch = ${c}`);let w=1,g=$e.size(r),l=[{type:12,data:g},{type:12,data:n},{type:12,data:i},{type:12,data:t.strides},{type:12,data:t.dilations}];Vn(t,l),l.push(...It(e[0].dims,e[1].dims));let v=[\"rank\",\"rank\"],S=e.length===3;S&&(l.push(...It(e[2].dims)),v.push(\"rank\")),l.push(...It(r));let $=U=>{let q=[{name:\"output_size\",type:\"u32\"},{name:\"filter_dims\",type:\"u32\",length:n.length},{name:\"pads\",type:\"u32\",length:i.length},{name:\"strides\",type:\"u32\",length:t.strides.length},{name:\"dilations\",type:\"u32\",length:t.dilations.length}];Zn(t,q);let L=1,se=$r(e[0].dataType),X=rt(\"x\",e[0].dataType,e[0].dims.length,w),oe=rt(\"W\",e[1].dataType,e[1].dims.length,L),Ke=[X,oe],je=Ut(\"result\",e[0].dataType,r.length,L),ft=\"\";if(S){let lr=rt(\"bias\",e[2].dataType,e[2].dims.length,L);Ke.push(lr),ft+=`\n        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${se} {\n          return bias[${s?jt(\"coords\",4,5):jt(\"coords\",1,5)}];\n        }`}let Ot=on(w,se),Vt=Jn(t,Ot,se);return`\n            ${ft}\n            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {\n              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);\n              return ${X.getByIndices(\"aIndices\")};\n            }\n            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {\n              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);\n              return ${oe.getByIndices(\"aIndices\")};\n            }\n          ${U.registerUniforms(q).declareVariables(...Ke,je)}\n          ${U.mainStart()}\n          ${U.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\n              let coords = ${je.offsetToIndices(\"global_idx\")};\n              let batch = ${jt(\"coords\",0,X.rank)};\n              let d2 = ${s?jt(\"coords\",X.rank-1,X.rank):jt(\"coords\",1,X.rank)};\n              let xFRCCorner = vec3<u32>(${s?jt(\"coords\",1,X.rank):jt(\"coords\",2,X.rank)},\n              ${s?jt(\"coords\",2,X.rank):jt(\"coords\",3,X.rank)},\n              ${s?jt(\"coords\",3,X.rank):jt(\"coords\",4,X.rank)}) * uniforms.strides - uniforms.pads;\n              let xFCorner = xFRCCorner.x;\n              let xRCorner = xFRCCorner.y;\n              let xCCorner = xFRCCorner.z;\n              let xShapeY = ${s?jt(\"uniforms.x_shape\",1,X.rank):jt(\"uniforms.x_shape\",2,X.rank)};\n              let xShapeZ = ${s?jt(\"uniforms.x_shape\",2,X.rank):jt(\"uniforms.x_shape\",3,X.rank)};\n              let xShapeW = ${s?jt(\"uniforms.x_shape\",3,X.rank):jt(\"uniforms.x_shape\",4,X.rank)};\n              let xShapeU = ${s?jt(\"uniforms.x_shape\",4,X.rank):jt(\"uniforms.x_shape\",1,X.rank)};\n              let inputDepthNearestVec4 = (xShapeU / 4) * 4;\n              let inputDepthVec4Remainder = xShapeU % 4;\n\n              var value = 0.0;\n              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {\n                let xF = xFCorner + wF * uniforms.dilations[0];\n                if (xF < 0 || xF >= xShapeY) {\n                  continue;\n                }\n\n                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {\n                  let xR = xRCorner + wR * uniforms.dilations[1];\n                  if (xR < 0 || xR >= xShapeZ) {\n                    continue;\n                  }\n\n                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {\n                    let xC = xCCorner + wC * uniforms.dilations[2];\n                    if (xC < 0 || xC >= xShapeW) {\n                      continue;\n                    }\n\n                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {\n                      ${s?`let xValues = vec4<f32>(\n                               getX(batch, xF, xR, xC, d1),\n                               getX(batch, xF, xR, xC, d1 + 1),\n                               getX(batch, xF, xR, xC, d1 + 2),\n                               getX(batch, xF, xR, xC, d1 + 3));\n                            `:`let xValues = vec4<f32>(\n                               getX(batch, d1, xF, xR, xC),\n                               getX(batch, d1 + 1, xF, xR, xC),\n                               getX(batch, d1 + 2, xF, xR, xC),\n                               getX(batch, d1 + 3, xF, xR, xC));\n                            `}\n                            let wValues = vec4<f32>(\n                              getW(d2, d1, wF, wR, wC),\n                              getW(d2, d1 + 1, wF, wR, wC),\n                              getW(d2, d1 + 2, wF, wR, wC),\n                              getW(d2, d1 + 3, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    }\n                    if (inputDepthVec4Remainder == 1) {\n                        ${s?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)\n                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)\n                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}\n                    } else if (inputDepthVec4Remainder == 2) {\n                      ${s?`let xValues = vec2<f32>(\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));\n                      `:`let xValues = vec2<f32>(\n                        getX(batch, inputDepthNearestVec4, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));\n                    `}\n                    let wValues = vec2<f32>(\n                      getW(d2, inputDepthNearestVec4, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    } else if (inputDepthVec4Remainder == 3) {\n                      ${s?`let xValues = vec3<f32>(\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));\n                      `:`let xValues = vec3<f32>(\n                        getX(batch, inputDepthNearestVec4, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));\n                    `}\n                    let wValues = vec3<f32>(\n                      getW(d2, inputDepthNearestVec4, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    }\n                  }\n                }\n              }\n              ${S?\"value = value + getBiasByOutputCoords(coords)\":\"\"};\n              ${Vt}\n              result[global_idx] = f32(value);\n          }`};return{name:\"Conv3DNaive\",shaderCache:{hint:`${t.cacheKey};${s};${w};${S}`,inputDependencies:v},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:c[0],y:c[1],z:c[2]},programUniforms:l}),getShaderSource:$}}}),Al,Il,id=N(()=>{Qt(),Yt(),or(),ha(),Un(),Al=(e,t,r)=>{let n=e.length>2,i=n?\"value += b[output_channel];\":\"\",a=e[0].dims,s=e[1].dims,u=s[0]/t.group,d=t.format===\"NHWC\",c=ai(a,s,t.dilations,t.pads,t.strides,d),w=$e.size(c),g=[{type:12,data:w},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:u}];Vn(t,g),g.push(...It(a,s));let l=[\"rank\",\"rank\"];n&&(g.push(...It(e[2].dims)),l.push(\"rank\")),g.push(...It(c));let v=S=>{let $=Ut(\"output\",e[0].dataType,c.length),U=$r($.type.tensor),q=Jn(t,$.type.value,U),L=rt(\"x\",e[0].dataType,a.length),se=rt(\"w\",e[1].dataType,s.length),X=[L,se];n&&X.push(rt(\"b\",e[2].dataType,e[2].dims.length));let oe=[{name:\"output_size\",type:\"u32\"},{name:\"dilations\",type:\"u32\",length:t.dilations.length},{name:\"strides\",type:\"u32\",length:2},{name:\"pads\",type:\"u32\",length:2},{name:\"output_channels_per_group\",type:\"u32\"}];return Zn(t,oe),`\n  ${S.registerUniforms(oe).declareVariables(...X,$)}\n\n  ${S.mainStart()}\n    ${S.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\n\n    let outputIndices = ${$.offsetToIndices(\"global_idx\")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${d?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${d?1:2}], outputIndices[${d?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${$.type.value} = ${$.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${d?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${d?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${d?L.get(\"batch\",\"xHeight\",\"xWidth\",\"input_channel\"):L.get(\"batch\",\"input_channel\",\"xHeight\",\"xWidth\")};\n          let wVal = ${se.get(\"output_channel\",\"wInChannel\",\"wHeight\",\"wWidth\")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${i}\n    ${q}\n    ${$.setByOffset(\"global_idx\",\"value\")}\n  }`};return{name:\"GroupedConv\",shaderCache:{hint:t.cacheKey,inputDependencies:l},getRunData:()=>({outputs:[{dims:r?r(c):c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:g}),getShaderSource:v}},Il=(e,t,r,n)=>{let i=e.length>2,a=Cr(r[3]),s=Cr(r[2]),u=$e.size(r)/a/s,d=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/a],c=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/a],w=[r[0],r[1],r[2],r[3]/a],g=[{type:12,data:u},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];Vn(t,g),g.push(...It(d,c,w));let l=(s-1)*t.strides[1]+c[1],v=S=>{let $=Ut(\"output\",e[0].dataType,w.length,a),U=$r($.type.tensor),q=Jn(t,$.type.value,U),L=rt(\"x\",e[0].dataType,d.length,a),se=rt(\"w\",e[1].dataType,c.length,a),X=[L,se];i&&X.push(rt(\"b\",e[2].dataType,e[2].dims,a));let oe=i?\"value += b[output_channel];\":\"\",Ke=[{name:\"output_size\",type:\"u32\"},{name:\"strides\",type:\"i32\",length:2},{name:\"pads\",type:\"i32\",length:2}];return Zn(t,Ke),`\n  ${S.registerUniforms(Ke).declareVariables(...X,$)}\n  ${S.mainStart()}\n    ${S.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${s}u;\n    let col = (index1 % width1) * ${s}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${L.type.value}, ${l}>;\n    var values: array<${$.type.value}, ${s}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w's height/width.\n    for (var w_height: u32 = 0u; w_height < ${c[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${l}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${L.get(\"batch\",\"u32(x_height)\",\"u32(x_width)\",\"input_channel\")};\n          } else {\n            x_vals[i] = ${L.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${c[1]}; w_width++) {\n          let w_val = ${se.get(\"w_height\",\"w_width\",\"0\",\"output_channel\")};\n          for (var i = 0u; i < ${s}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${s}u; i++) {\n      var value = values[i];\n      ${oe}\n      ${q}\n      ${$.set(\"batch\",\"row\",\"col + i\",\"output_channel\",\"value\")};\n    }\n  }`};return{name:\"GroupedConv-Vectorize\",shaderCache:{hint:`${t.cacheKey};${a};${s};${l};${c[0]};${c[1]}`,inputDependencies:i?[\"rank\",\"rank\",\"type\"]:[\"rank\",\"rank\"]},getRunData:()=>({outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:g}),getShaderSource:v}}}),rs,Fl,Ol,zl=N(()=>{Qt(),Yt(),si(),or(),Un(),rs=(e,t,r,n,i=!1,a)=>{let s=e[0].dims,u=e[1].dims,d=s[s.length-2],c=u[u.length-1],w=s[s.length-1],g=Cr(c),l=Cr(w),v=Cr(d),S=$e.size(r)/g/v,$=e.length>2,U=n?n.slice(0,-2):r.slice(0,-2),q=[$e.size(U),d,c],L=[{type:12,data:S},{type:12,data:d},{type:12,data:c},{type:12,data:w}];Vn(t,L),L.push(...It(U,s,u)),$&&L.push(...It(e[2].dims)),L.push(...It(q));let se=X=>{let oe=wi(\"batch_dims\",e[0].dataType,U.length),Ke=rt(\"a\",e[0].dataType,s.length,l),je=rt(\"b\",e[1].dataType,u.length,g),ft=Ut(\"output\",e[0].dataType,q.length,g),Ot=$r(ft.type.tensor),Vt=Jn(t,ft.type.value,Ot),lr=[Ke,je],wr=\"\";if($){let Pr=i?g:1;lr.push(rt(\"bias\",e[2].dataType,e[2].dims.length,Pr)),wr=`${i?`value += bias[col / ${Pr}];`:`value += ${ft.type.value}(bias[row + i]);`}`}let er=s.slice(0,-2),Lr=u.slice(0,-2),Gr=hs(er,U),xr=hs(Lr,U),Nr=[{name:\"output_size\",type:\"u32\"},{name:\"M\",type:\"u32\"},{name:\"N\",type:\"u32\"},{name:\"K\",type:\"u32\"}];Zn(t,Nr);let Zt=(Pr,Ve)=>{let kt=Pr.rank,nr=Pr.name;if(kt===2)return`var ${nr}_indices = ${Pr.type.indices}(0u, 0u);`;let Rr=oe.rank,Jr=`var ${nr}_indices: ${Pr.type.indices};`;for(let dn=kt-2-1,Ns=Rr-1;dn>=0;dn--,Ns--)Jr+=`\n${nr}_indices[${dn}] = ${Rr>1?`batch_indices[${Ns}]`:\"batch_indices\"};`;return Ve.forEach(dn=>{Jr+=`\n${nr}_indices[${dn}] = 0;`}),Jr+=`${nr}_indices[${kt-2}] = 0u;\n                     ${nr}_indices[${kt-1}] = 0u;`,Jr},mr=()=>{let Pr=`var a_data: ${Ke.type.value};`;for(let Ve=0;Ve<l;Ve++)Pr+=`\n              let b_data${Ve} = b[(b_offset + (k + ${Ve}) * uniforms.N + col) / ${g}];`;for(let Ve=0;Ve<v;Ve++){Pr+=`a_data = a[(a_offset + (row + ${Ve}) * uniforms.K + k) / ${l}];`;for(let kt=0;kt<l;kt++)Pr+=`\n            values[${Ve}] = fma(${je.type.value}(a_data${l===1?\"\":`[${kt}]`}), b_data${kt}, values[${Ve}]);\n`}return Pr};return`\n  ${X.registerUniforms(Nr).registerInternalVariables(oe).declareVariables(...lr,ft)}\n  ${X.mainStart()}\n    ${X.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\n    let col = (global_idx % (uniforms.N / ${g})) * ${g};\n    var index1 = global_idx / (uniforms.N / ${g});\n    let stride1 = uniforms.M / ${v};\n    let row = (index1 % stride1) * ${v};\n    let batch = index1 / stride1;\n\n    ${r.length===2?\"\":`let batch_indices = ${oe.offsetToIndices(\"batch\")};`}\n    ${Zt(Ke,Gr)}\n    let a_offset = ${Ke.indicesToOffset(\"a_indices\")};\n    ${Zt(je,xr)}\n    let b_offset = ${je.indicesToOffset(\"b_indices\")};\n    var values: array<${ft.type.value}, ${v}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${l}) {\n      ${mr()}\n    }\n    for (var i = 0u; i < ${v}u; i++) {\n      var value = values[i];\n      ${wr}\n      ${Vt}\n      let cur_indices = ${ft.type.indices}(batch, row + i, col);\n      let offset = ${ft.indicesToOffset(\"cur_indices\")};\n      ${ft.setByOffset(`offset / ${g}`,\"value\")};\n    }\n  }\n  `};return{name:\"MatMulNaive\",shaderCache:{hint:`${t.activation};${g};${l};${v};${i}`,inputDependencies:$?[\"rank\",\"rank\",\"rank\"]:[\"rank\",\"rank\"]},getRunData:()=>({outputs:[{dims:a?a(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:L}),getShaderSource:se}},Fl=e=>{if(!e||e.length!==2)throw new Error(\"MatMul requires 2 inputs.\");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error(\"shared dimension does not match.\")},Ol=e=>{Fl(e.inputs);let t=tn.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error(\"Can't use matmul on the given tensors\");let r=t[t.length-1],n=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&n<8?e.compute(rs(e.inputs,{activation:\"\"},t)):e.compute(Os(e.inputs,{activation:\"\"},t))}}),ai,oi,li,ua,da,ca,Dl,Bl,pa,ha=N(()=>{Yt(),ii(),Qd(),si(),id(),Un(),zl(),fs(),ai=(e,t,r,n,i,a)=>{let s=e[0],u=e.slice(a?1:2,a?3:4),d=u.length,c=t[0],w=t.slice(2).map((l,v)=>l+(l-1)*(r[v]-1)),g=u.map((l,v)=>l+n[v]+n[v+d]).map((l,v)=>Math.floor((l-w[v]+i[v])/i[v]));return g.splice(0,0,s),g.splice(a?3:1,0,c),g},oi=[2,3,1,0],li=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error(\"Conv requires 2 or 3 inputs\");if(e[0].dims.length>5)throw new Error(\"greater than 5D is not supported\");if(e[0].dims.length!==e[1].dims.length)throw new Error(\"filter does not have same dimension as input\");let r=e[0].dims[t.format===\"NHWC\"?e[0].dims.length-1:1],n=e[1].dims[1]*t.group;if(r!==n)throw new Error(\"FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error(\"invalid bias\");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error(\"invalid kernel shape\")},ua=(e,t)=>{let r=e.kernelShape.slice();for(let a=2;a<t[1].dims.length;++a)r[a-2]===0&&(r[a-2]=t[1].dims[a]);let n=e.pads.slice();xn.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,n,e.format===\"NHWC\",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:n}),i},da=e=>{let t=sa(e),r=e.format,n=[\"NOTSET\",\"VALID\",\"SAME_UPPER\",\"SAME_LOWER\"][e.auto_pad],i=e.dilations,a=e.group,s=e.kernel_shape,u=e.pads,d=e.strides,c=e.w_is_const();return{autoPad:n,format:r,dilations:i,group:a,kernelShape:s,pads:u,strides:d,wIsConst:c,...t,cacheKey:`${e.format};${t.activation};`}},ca=(e,t,r,n)=>{let i=r.format===\"NHWC\";if(r.group!==1){if(!e.adapterInfo.isArchitecture(\"ampere\")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let Ke=ai(t[0].dims,t[1].dims,r.dilations,r.pads,r.strides,i),je=e.kernelCustomData.wT??e.compute(zn(t[1],oi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=je);let ft=[t[0],je];t.length===3&&ft.push(t[2]),e.compute(Il(ft,r,Ke,n),{inputs:ft})}else e.compute(Al(t,r,n));return}let a=t.length===3,s=t[0].dims[i?1:2],u=t[0].dims[i?2:3],d=t[0].dims[i?3:1],c=t[1].dims[2],w=t[1].dims[3],g=ai(t[0].dims,t[1].dims,r.dilations,r.pads,r.strides,i),l=g[i?1:2],v=g[i?2:3],S=g[i?3:1],$=i&&c===s&&w===u&&r.pads[0]===0&&r.pads[1]===0;if($||c===1&&w===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let Ke=g[0],je,ft,Ot,Vt=[];if(i){let er=e.kernelCustomData.wT??e.compute(zn(t[1],oi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=er),$){let Lr=s*u*d;je=t[0].reshape([1,Ke,Lr]),ft=er.reshape([1,Lr,S]),Ot=[1,Ke,S]}else je=t[0].reshape([Ke,s*u,d]),ft=er.reshape([1,d,S]),Ot=[Ke,l*v,S];Vt.push(je),Vt.push(ft)}else je=t[0].reshape([Ke,d,s*u]),ft=t[1].reshape([1,S,d]),Ot=[Ke,S,l*v],Vt.push(ft),Vt.push(je);a&&Vt.push(t[2]);let lr=Ot[2],wr=Vt[0].dims[Vt[0].dims.length-1];lr<8&&wr<8?e.compute(rs(Vt,r,g,Ot,i,n),{inputs:Vt}):e.compute(Os(Vt,r,g,Ot,i,n),{inputs:Vt});return}let U=!0,q=e.kernelCustomData.wT??e.compute(zn(t[1],oi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=q);let L=[t[0],q];a&&L.push(t[2]);let se=i?l*v:S,X=i?S:l*v,oe=c*w*d;e.compute(Sl(L,r,g,se,X,oe,a,U,n),{inputs:L})},Dl=(e,t)=>{let r=t.format===\"NHWC\",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],a=[1].concat(t.strides),s=[1].concat(t.dilations),u=[1].concat(t.kernelShape),d=ua({...t,pads:i,strides:a,dilations:s,kernelShape:u},n);ca(e,n,d,c=>r?[c[0],c[2],c[3]]:[c[0],c[1],c[3]])},Bl=(e,t,r)=>{let n=r.format===\"NHWC\"?\"channelsLast\":\"channelsFirst\",i=ua(r,t),a=r.autoPad===\"NOTSET\"?r.pads:r.autoPad,s=$l(t[0].dims,t[1].dims,r.strides,r.dilations,a,!1,n);e.compute(Pl(t,i,s.outShape,[s.filterDepth,s.filterHeight,s.filterWidth],[s.padInfo.front,s.padInfo.top,s.padInfo.left],n))},pa=(e,t)=>{if(li(e.inputs,t),e.inputs[0].dims.length===3)Dl(e,t);else if(e.inputs[0].dims.length===5)Bl(e,e.inputs,t);else{let r=ua(t,e.inputs);ca(e,e.inputs,r)}}}),Ll,Rl,Nl=N(()=>{Qt(),bn(),or(),Un(),Dn(),yl(),si(),Ll=(e,t=!1,r,n,i=4)=>{let a=U=>{switch(U){case 1:return\"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${n}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${U} is not supported.`)}},s=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,u=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,d=e?\"i32(uniforms.x_shape[1])\":\"i32(uniforms.x_shape[2])\",c=e?\"i32(uniforms.x_shape[2])\":\"i32(uniforms.x_shape[3])\",w=e?\"row\":\"col\",g=e?\"col\":\"row\",l=`\n      let inChannels = ${e?\"i32(uniforms.x_shape[3])\":\"i32(uniforms.x_shape[1])\"};\n      let outWidth = ${e?\"i32(uniforms.result_shape[2])\":\"i32(uniforms.result_shape[3])\"};\n      let outRow = ${w} / outWidth;\n      let outCol = ${w} % outWidth;\n\n      let WRow = ${g} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${g} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${d}) || fract(xR) > 0.0) {\n        return ${n}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${c}) || fract(xC) > 0.0) {\n        return ${n}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${g} % inChannels;\n      ${s}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${i}];`,v=e?`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${l}\n      }\n      return ${n}(0.0);`:`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${l}\n      }\n      return ${n}(0.0);`,S=`\n      let col = colIn * ${i};\n      let inChannels = ${e?\"i32(uniforms.x_shape[3])\":\"i32(uniforms.x_shape[1])\"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?\"row < uniforms.dim_inner && col < uniforms.dim_b_outer\":\"row < uniforms.dim_inner && col < uniforms.dim_a_outer\"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${a(i)}\n      }\n      return ${n}(0.0);\n      `,$=Jn(r,n);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${n} {\n    ${e?v:S}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${n} {\n    ${e?S:v}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${n}) {\n    let col = colIn * ${i};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?\"i32(uniforms.result_shape[2])\":\"i32(uniforms.result_shape[3])\"};\n      ${u}\n      ${ia(t)}\n      ${$}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${i}] = value;\n    }\n  }`},Rl=(e,t,r,n,i,a,s,u)=>{let d=t.format===\"NHWC\",c=d?e[0].dims[3]:e[0].dims[1],w=r[0],g=d?r[2]:r[3],l=d?r[1]:r[2],v=d?r[3]:r[1],S=d&&c%4===0&&c%3&&v%4===0,$=d?v:g*l,U=d?g*l:v,q=[8,8,1],L=n<=8?[4,1,1]:[4,4,1],se=[Math.ceil($/q[0]/L[0]),Math.ceil(U/q[1]/L[1]),Math.ceil(w/q[2]/L[2])];jr(\"verbose\",()=>`[conv_backprop_mm_webgpu] dispatch = ${se}`);let X=S?4:1,oe=Math.max(q[0]*X,q[1]),Ke=S?4:1,je=[t.kernelShape[d?1:2],t.kernelShape[d?2:3]],ft=[je[0]+(t.dilations[0]<=1?0:(je[0]-1)*(t.dilations[0]-1)),je[1]+(t.dilations[1]<=1?0:(je[1]-1)*(t.dilations[1]-1))],Ot=[ft[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),ft[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],Vt=[{type:6,data:n},{type:6,data:i},{type:6,data:a},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:je},{type:6,data:Ot}];Vn(t,Vt),Vt.push(...It(e[0].dims,e[1].dims));let lr=[\"rank\",\"rank\"];s&&(Vt.push(...It(e[2].dims)),lr.push(\"rank\")),Vt.push(...It(r));let wr=er=>{let Lr=rt(\"x\",e[0].dataType,e[0].dims.length,Ke),Gr=rt(\"w\",e[1].dataType,e[1].dims.length,1),xr=Ut(\"result\",e[0].dataType,r.length,Ke),Nr=[Lr,Gr],Zt=\"\";if(s){let Ve=rt(\"bias\",e[2].dataType,e[2].dims.length,Ke);Nr.push(Ve),Zt+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${Ve.type.value} {\n            return bias[coords.${d?\"w\":\"y\"}${S?\"/ 4\":\"\"}];\n          }`}let mr=[{name:\"dim_a_outer\",type:\"i32\"},{name:\"dim_b_outer\",type:\"i32\"},{name:\"dim_inner\",type:\"i32\"},{name:\"strides\",type:\"i32\",length:2},{name:\"dilations\",type:\"i32\",length:2},{name:\"filter_dims\",type:\"i32\",length:je.length},{name:\"pads\",type:\"i32\",length:Ot.length}];Zn(t,mr);let Pr=$r(e[0].dataType,1);if(Pr!==\"f16\"&&Pr!==\"f32\")throw new Error(`elemType ${Pr} is not supported.`);return`\n        ${aa(\"uniforms.result_strides\")}\n        ${er.registerUniforms(mr).declareVariables(...Nr,xr)};\n        ${Zt}\n        ${Ll(d,s,t,Lr.type.value,X)}\n        ${S?Fs(L,q,Pr,void 0,!d,oe):ni(L,q,Pr,void 0,!d,oe,!1,void 0,u)}`};return{name:\"Conv2DTransposeMatMul\",shaderCache:{hint:`${t.cacheKey};${L};${q};${S}`,inputDependencies:lr},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:se[0],y:se[1],z:se[2]},programUniforms:Vt}),getShaderSource:wr}}}),jl,fa,Vl=N(()=>{Qt(),bn(),Yt(),or(),jl=(e,t,r,n,i,a=!1,s,u,d=!1)=>{let c=d?1:2,w=d?2:3,g=d?3:1,l=a?2:1,v=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${a?`vec4<${s}>`:s}) {\n    result[flatIndex] = ${a?`vec4<${s}>`:s}(value);\n  }`;n&&(v+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${a?`vec4<${s}>`:s} {\n      return bias[coords.${d?\"w\":\"y\"}${a?\"/ 4\":\"\"}];\n    }`);let S=a?4:1,$=rt(\"W\",t[1].dataType,t[1].dims.length,S),U=rt(\"Dy\",t[0].dataType,t[0].dims.length,S),q=[U,$];n&&q.push(rt(\"bias\",t[2].dataType,[r[g]].length,S));let L=Ut(\"result\",t[0].dataType,r.length,S),se=`{\n        let batch: u32 = ${i?\"global_id.z\":\"workgroup_id.z\"} / uniforms.result_shape[1];\n        let r = ${i?\"global_id.z\":\"workgroup_id.z\"} % uniforms.result_shape[1];\n        let c = ${i?\"global_id.y\":\"workgroup_id.y\"} * ${l};\n        let d1: u32 = ${i?\"global_id.x\":\"workgroup_id.x\"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${s}>, ${l}>;\n        for (var i = 0; i < ${l}; i++) {\n          dotProd[i] = vec4<${s}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${s}(dyCorner.x) + ${s}(wR)) / ${s}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${s}(dyCorner.y) + ${s}(wC)) / ${s}(uniforms.strides.y);\n            let dyC2 = (${s}(dyCorner.y) + 1.0 + ${s}(wC)) / ${s}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${s}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${$.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1\",\"d2\")};\n                let wValue1 = ${$.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 1\",\"d2\")};\n                let wValue2 = ${$.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 2\",\"d2\")};\n                let wValue3 = ${$.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 3\",\"d2\")};\n\n                var xValue = ${U.get(\"batch\",\"idyR\",\"idyC\",\"d2\")};\n                let tmpval = vec4<${s}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${U.get(\"batch\",\"idyR\",\"idyC2\",\"d2\")};\n\n                dotProd[1] = dotProd[1] + vec4<${s}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${g}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${$.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1\",\"d2\")};\n                let wValue1 = ${$.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 1\",\"d2\")};\n                let wValue2 = ${$.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 2\",\"d2\")};\n                let wValue3 = ${$.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 3\",\"d2\")};\n\n                var xValue = ${U.get(\"batch\",\"idyR\",\"idyC\",\"d2\")};\n                let tmpval = vec4<${s}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${$.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1\",\"d2\")};\n                let wValue1 = ${$.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 1\",\"d2\")};\n                let wValue2 = ${$.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 2\",\"d2\")};\n                let wValue3 = ${$.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 3\",\"d2\")};\n\n                var xValue = ${U.get(\"batch\",\"idyR\",\"idyC2\",\"d2\")};\n                let tmpval = vec4<${s}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${l}; i = i + 1) {\n          let value = dotProd[i] + ${n?\"bias[c+i]\":`vec4<${s}>(0.0)`};\n          ${L.set(\"batch\",\"r\",\"c + i\",\"d1\",\"value\")};\n        }\n      }`,X=`\n          let outputIndices = ${L.offsetToIndices(\"global_idx\")};\n          let batch = ${L.indicesGet(\"outputIndices\",0)};\n          let d1 = ${L.indicesGet(\"outputIndices\",g)};\n          let r = ${L.indicesGet(\"outputIndices\",c)};\n          let c = ${L.indicesGet(\"outputIndices\",w)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${s}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${s}(dyRCorner) + ${s}(wR)) / ${s}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[${c}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${s}(dyCCorner) + ${s}(wC)) / ${s}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[${w}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${d?U.get(\"batch\",\"idyR\",\"idyC\",\"inputChannel\"):U.get(\"batch\",\"inputChannel\",\"idyR\",\"idyC\")};\n                let wValue = ${$.get(\"inputChannel\",\"wOutChannel\",\"u32(wRPerm)\",\"u32(wCPerm)\")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${n?\"bias[d1]\":`${s}(0.0)`};\n          ${L.setByOffset(\"global_idx\",\"value\")};\n        `;return`\n  ${e.registerUniforms(u).declareVariables(...q,L)}\n  ${v}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")};\n  ${a?se:X}}`},fa=(e,t,r)=>{let n=e.length>2,i=t.outputShape,a=$e.size(i),s=[Math.ceil(a/64),1,1];jr(\"verbose\",()=>`[conv2d_backprop_webgpu] dispatch = ${s}`);let u=t.format===\"NHWC\",d=[\"rank\",\"rank\"],c=[t.strides[0],t.strides[1]],w=[t.kernelShape[u?1:2],t.kernelShape[u?2:3]],g=[t.dilations[0],t.dilations[1]],l=[w[0]+(t.dilations[0]<=1?0:(t.kernelShape[u?1:2]-1)*(t.dilations[0]-1)),w[1]+(t.dilations[1]<=1?0:(t.kernelShape[u?2:3]-1)*(t.dilations[1]-1))],v=[l[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),l[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],S=!1,$=t.group,U=e[1].dims,q=U[0]/$,L=U[1],se=[{type:12,data:a},{type:12,data:c},{type:12,data:w},{type:12,data:g},{type:12,data:l},{type:6,data:v},{type:12,data:q},{type:12,data:L},...It(e[0].dims,e[1].dims)];n&&(se.push(...It(e[2].dims)),d.push(\"rank\")),se.push(...It(i));let X=s[1]===1&&s[2]===1,oe=Ke=>{let je=[{name:\"output_size\",type:\"u32\"},{name:\"strides\",type:\"u32\",length:c.length},{name:\"filter_dims\",type:\"u32\",length:w.length},{name:\"dilations\",type:\"u32\",length:w.length},{name:\"effective_filter_dims\",type:\"u32\",length:l.length},{name:\"pads\",type:\"i32\",length:v.length},{name:\"input_channels_per_group\",type:\"u32\"},{name:\"output_channels_per_group\",type:\"u32\"}],ft=$r(e[0].dataType);return`${jl(Ke,e,i,n,X,S,ft,je,u)}`};return{name:\"ConvTranspose2D\",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:d},getRunData:()=>({dispatchGroup:{x:s[0],y:s[1],z:s[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:se}),getShaderSource:oe}}}),Ul,Wl,ui,ma,Gl,ql,Hl,_a,di,ad,od=N(()=>{Nl(),Vl(),Un(),fs(),Ul=(e,t,r,n,i,a)=>(e-1)*t+r+(n-1)*i+1-a,Wl=(e,t,r,n,i)=>{let a=Math.floor(e/2);t===\"SAME_UPPER\"?(r[n]=a,r[i]=e-a):t===\"SAME_LOWER\"&&(r[n]=e-a,r[i]=a)},ui=(e,t,r,n,i,a,s,u,d,c)=>{let w=e.length-2,g=c.length===0;if(d.length===0)for(let S=0;S<w;++S)d.push(0);let l=e[0],v=t[u?3:1]*i;for(let S=0,$=e.length-w-(u?1:0);S<w;++S,++$){let U=e[$],q=g?U*s[S]:c[S],L=Ul(U,s[S],a[S],t[$],r[S],q);Wl(L,n,a,S,S+w),g&&c.push(s[S]*(U-1)+d[S]+(t[$]-1)*r[S]+1-a[S]-a[S+w])}c.splice(0,0,l),c.splice(u?3:1,0,v)},ma=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((g,l)=>g*l,1)===0){r.length=0;for(let g=2;g<t[1].dims.length;++g)r.push(t[1].dims[g])}let n=e.format===\"NHWC\";r.splice(0,0,t[1].dims[0]),r.splice(n?3:1,0,t[1].dims[1]);let i=e.pads.slice(),a=e.outputShape.slice(),s=e.outputPadding.slice(),u=t[0].dims,d=e.dilations.slice();if(d.reduce((g,l)=>g+l,0)===0){let g=t[0].dims.length-2;d=new Array(g).fill(1)}let c=e.strides.slice();if(c.reduce((g,l)=>g+l,0)===0){let g=t[0].dims.length-2;c=new Array(g).fill(1)}ui(u,r,d,e.autoPad,e.group,i,c,n,s,a);let w=Object.assign({},e);return Object.assign(w,{kernelShape:r,pads:i,outputPadding:s,outputShape:a,dilations:d,strides:c}),w},Gl=e=>{let t=sa(e),r=e.format,n=[\"NOTSET\",\"VALID\",\"SAME_UPPER\",\"SAME_LOWER\"][typeof e.autoPad>\"u\"?0:e.autoPad],i=e.dilations,a=e.group,s=e.kernelShape,u=e.pads,d=e.strides,c=e.wIsConst(),w=e.outputPadding,g=e.outputShape;return{autoPad:n,format:r,dilations:i,group:a,kernelShape:s,outputPadding:w,outputShape:g,pads:u,strides:d,wIsConst:c,...t,cacheKey:`${e.format};${t.activation};`}},ql=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error(\"Conv requires 2 or 3 inputs\");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error(\"currently only support 2-dimensional conv\");if(e[0].dims.length!==e[1].dims.length)throw new Error(\"filter does not have same dimension as input\");let r=e[0].dims[t.format===\"NHWC\"?e[0].dims.length-1:1],n=e[1].dims[0];if(r!==n)throw new Error(\"FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error(\"invalid bias\");let a=e[0].dims.length-2;if(t.dilations.reduce((s,u)=>s+u,0)>0&&t.dilations.length!==a)throw new Error(`dilations should be ${a}D`);if(t.strides.reduce((s,u)=>s+u,0)>0&&t.strides.length!==a)throw new Error(`strides should be ${a}D`);if(t.pads.reduce((s,u)=>s+u,0)>0&&t.pads.length!==a*2)throw new Error(`pads should be ${a*2}D`);if(t.outputPadding.length!==a&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${a}D`);if(t.kernelShape.reduce((s,u)=>s+u,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error(\"invalid kernel shape\");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error(\"invalid output shape\")},Hl=[2,3,1,0],_a=(e,t,r)=>{let n=ma(r,t),i=r.format===\"NHWC\",a=n.outputShape,s=a[i?3:1],u=t[0].dims[i?3:1];if(n.group!==1||s===1&&u===1){e.compute(fa(t,n));return}let d=a[i?1:2],c=a[i?2:3],w=t[1].dims[2],g=t[1].dims[3],l=i?d*c:s,v=i?s:d*c,S=w*g*u,$=!0,U=e.kernelCustomData.wT??e.compute(zn(t[1],Hl),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=U);let q=[t[0],U],L=t.length===3;L&&(!i&&t[2].dims.length===1?q.push(t[2].reshape([t[2].dims[0],1,1])):q.push(t[2])),e.compute(Rl(q,n,a,l,v,S,L,$),{inputs:q})},di=(e,t)=>{let r=t.format===\"NHWC\",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let a=t.dilations;(a.length===0||a[0]===0)&&(a=[1]);let s=t.strides;(s.length===0||s[0]===0)&&(s=[1]);let u=t.pads;u.length===0&&(u=[0,0]),u=[0,u[0],0,u[1]],s=[1].concat(s),a=[1].concat(a),i=[1].concat(i);let d=ma({...t,pads:u,strides:s,dilations:a,kernelShape:i},n);e.compute(fa(n,d,c=>r?[c[0],c[2],c[3]]:[c[0],c[1],c[3]]))},ad=(e,t)=>{ql(e.inputs,t),e.inputs[0].dims.length===3?di(e,t):_a(e,e.inputs,t)}}),Kl,ga,Xl,ld=N(()=>{Qt(),Yt(),_r(),or(),Kl=(e,t,r,n)=>{let i=$e.size(t),a=t.length,s=rt(\"input\",e,a),u=Ut(\"output\",e,a),d=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),c=$e.normalizeAxis(d,a),w=g=>{let l=` i32(${s.indicesGet(\"inputIndices\",\"uniforms.axis\")}) `,v=jt(\"uniforms.input_shape\",\"uniforms.axis\",a),S=n.reverse?l+(n.exclusive?\" + 1\":\"\"):\"0\",$=n.reverse?v:l+(n.exclusive?\"\":\" + 1\");return`\n                ${g.registerUniform(\"outputSize\",\"u32\").registerUniform(\"axis\",\"u32\").declareVariables(s,u)}\n                ${g.mainStart()}\n                  ${g.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\n                  var inputIndices = ${u.offsetToIndices(\"global_idx\")};\n                  var sum = ${u.type.value}(0);\n                  let first : i32 = ${S};\n                  let last : i32 = ${$};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${s.indicesSet(\"inputIndices\",\"uniforms.axis\",\"u32(i)\")};\n                    sum = sum + ${s.getByIndices(\"inputIndices\")};\n                  }\n                  ${u.setByOffset(\"global_idx\",\"sum\")};\n                }`};return{name:\"CumSum\",shaderCache:{hint:n.cacheKey,inputDependencies:[\"rank\"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:c},...It(t,t)]}),getShaderSource:w}},ga=(e,t)=>{let r=e.inputs[0].dims,n=e.inputs[0].dataType,i=e.inputs[1];e.compute(Kl(n,r,i,t),{inputs:[0]})},Xl=e=>{let t=e.exclusive===1,r=e.reverse===1;return Gt({exclusive:t,reverse:r})}}),wa,Ql,Yl,ya,ud,Yd=N(()=>{Qt(),Yt(),_r(),or(),wa=e=>{if(!e||e.length!==1)throw new Error(\"DepthToSpace requires 1 input.\");if(e[0].dims.length!==4)throw new Error(\"DepthToSpace requires 4D input.\")},Ql=(e,t,r,n)=>{let i=[];i.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let a=0;a<t;++a)i.push(r.indicesSet(\"a\",e[a],`i[${a}]`));return i.push(\"return a;}\"),i.join(`\n`)},Yl=(e,t)=>{let r,n,i,a,s,u,d=t.format===\"NHWC\",c=t.blocksize,w=t.mode===\"DCR\";d?([r,n,i,a]=e.dims,s=w?[r,n,i,c,c,a/c**2]:[r,n,i,a/c**2,c,c],u=w?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,n,i,a]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],s=w?[r,c,c,a/c**2,n,i]:[r,a/c**2,c,c,n,i],u=w?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let g=e.reshape(s),l=g.dims.length,v=e.dataType,S=rt(\"a\",v,l),$=Ut(\"output\",v,l),U=q=>`\n  ${q.registerUniform(\"output_size\",\"u32\").declareVariables(S,$)}\n\n  ${Ql(u,l,S,$)}\n\n  ${q.mainStart()}\n    ${q.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\n\n    let indices = ${$.offsetToIndices(\"global_idx\")};\n    let aIndices = perm(indices);\n\n    ${$.setByOffset(\"global_idx\",S.getByIndices(\"aIndices\"))}\n  }`;return{name:\"DepthToSpace\",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:[\"rank\"]},getRunData:q=>{let L=d?[r,n*c,i*c,a/c**2]:[r,a/c**2,n*c,i*c],se=$e.size(L),X=g.dims,oe=$e.sortBasedOnPerm(X,u);return{outputs:[{dims:L,dataType:q[0].dataType}],dispatchGroup:{x:Math.ceil(se/64)},programUniforms:[{type:12,data:se},...It(X,oe)]}},getShaderSource:U}},ya=(e,t)=>{wa(e.inputs),e.compute(Yl(e.inputs[0],t))},ud=e=>Gt({blocksize:e.blocksize,mode:e.mode,format:e.format})}),Bs,_s,ba,Jl,Ma,Zl,eu,ci,tu,ru,va,dd=N(()=>{Qt(),Yt(),_r(),or(),Bs=\"[a-zA-Z]|\\\\.\\\\.\\\\.\",_s=\"(\"+Bs+\")+\",ba=\"^\"+_s+\"$\",Jl=\"(\"+_s+\",)*\"+_s,Ma=\"^\"+Jl+\"$\",Zl=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let r=this.symbolToIndices.get(e);r===void 0?r=[t]:r.push(t),this.symbolToIndices.set(e,r)}},eu=class{constructor(e,t){var i;this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[r,n]=t.includes(\"->\")?t.split(\"->\",2):[t,\"\"];if(!r.match(RegExp(Ma)))throw new Error(\"Invalid LHS term\");if(r.split(\",\").forEach((a,s)=>{let u=e[s].dims.slice();if(!a.match(RegExp(ba)))throw new Error(\"Invalid LHS term\");let d=this.processTerm(a,!0,u,s);this.lhs.push(d)}),n===\"\")n+=[...this.symbolToInfo.entries()].filter(([a,s])=>s.count===1||a===\"...\").map(([a])=>a).join(\"\");else if(!n.match(RegExp(_s)))throw new Error(\"Invalid RHS\");(i=n.match(RegExp(Bs,\"g\")))==null||i.forEach(a=>{if(a===\"...\")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let s=this.symbolToInfo.get(a);if(s===void 0)throw new Error(\"Invalid RHS symbol\");this.outputDims.push(s.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(e,t,r){let n=this.symbolToInfo.get(e);if(n!==void 0){if(n.dimValue!==t&&n.count!==1)throw new Error(\"Dimension mismatch\");n.count++,n.inputIndices.push(r)}else n={count:1,dimValue:t,inputIndices:[r]};this.symbolToInfo.set(e,n)}processTerm(e,t,r,n=-1){let i=r.length,a=!1,s=[],u=0;if(!e.match(RegExp(ba))&&!t&&e!==\"\")throw new Error(\"Invalid LHS term\");let d=e.match(RegExp(Bs,\"g\")),c=new Zl(n);return d==null||d.forEach((w,g)=>{if(w===\"...\"){if(a)throw new Error(\"Only one ellipsis is allowed per input term\");a=!0;let l=i-d.length+1;if(l<0)throw new Error(\"Ellipsis out of bounds\");if(s=r.slice(u,u+l),this.hasEllipsis){if(this.ellipsisDims.length!==s.length||this.ellipsisDims.toString()!==s.toString())throw new Error(\"Ellipsis dimensions mismatch\")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=s;else throw new Error(\"Ellipsis must be specified in the LHS\");for(let v=0;v<s.length;v++){let S=String.fromCharCode(48+v);c.addSymbol(S,g+v),this.addSymbol(S,r[u++],n)}}else c.addSymbol(w,g+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(w,r[u++],n)}),c}},ci=e=>e+\"_max\",tu=(e,t,r,n)=>{let i=e.map(c=>c.length).map((c,w)=>rt(`input${w}`,t,c)),a=$e.size(n),s=Ut(\"output\",t,n.length),u=[...r.symbolToInfo.keys()].filter(c=>!r.rhs.symbolToIndices.has(c)),d=c=>{let w=[],g=\"var prod = 1.0;\",l=\"var sum = 0.0;\",v=\"sum += prod;\",S=[],$=[],U=[],q=[],L=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((X,oe)=>{var Ke;if(r.rhs.symbolToIndices.has(oe)){let je=(Ke=r.rhs.symbolToIndices.get(oe))==null?void 0:Ke[0];je!==void 0&&r.lhs.forEach((ft,Ot)=>{if(X.inputIndices.includes(Ot)){let Vt=ft.symbolToIndices.get(oe);if(Vt===void 0)throw new Error(\"Invalid symbol error\");Vt.forEach(lr=>{w.push(`${i[Ot].indicesSet(`input${Ot}Indices`,lr,s.indicesGet(\"outputIndices\",je))}`)})}})}else r.lhs.forEach((je,ft)=>{if(X.inputIndices.includes(ft)){let Ot=je.symbolToIndices.get(oe);if(Ot===void 0)throw new Error(\"Invalid symbol error\");Ot.forEach(Vt=>{S.push(`${i[ft].indicesSet(`input${ft}Indices`,Vt,`${oe}`)}`)}),q.push(`prod *= ${i[ft].getByIndices(`input${ft}Indices`)};`)}}),$.push(`for(var ${oe}: u32 = 0; ${oe} < uniforms.${ci(oe)}; ${oe}++) {`),U.push(\"}\")});let se=L?[...w,`let sum = ${i.map((X,oe)=>X.getByIndices(`input${oe}Indices`)).join(\" * \")};`]:[...w,l,...$,...S,g,...q,v,...U];return`\n            ${c.registerUniforms(u.map(X=>({name:`${ci(X)}`,type:\"u32\"}))).registerUniform(\"outputSize\",\"u32\").declareVariables(...i,s)}\n\n            ${c.mainStart()}\n            ${c.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\n            var outputIndices = ${s.offsetToIndices(\"global_idx\")};\n            ${i.map((X,oe)=>`var input${oe}Indices: ${i[oe].type.indices};`).join(`\n`)}\n            ${se.join(`\n`)};\n            ${s.setByOffset(\"global_idx\",\"sum\")};\n          }`};return{name:\"Einsum\",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>\"rank\")},getRunData:()=>{let c=u.filter(g=>r.symbolToInfo.has(g)).map(g=>{var l;return{type:12,data:((l=r.symbolToInfo.get(g))==null?void 0:l.dimValue)||0}});c.push({type:12,data:a});let w=e.map((g,l)=>[...It(g)]).reduce((g,l)=>g.concat(l),c);return w.push(...It(n)),{outputs:[{dims:n,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:w}},getShaderSource:d}},ru=(e,t)=>{let r=new eu(e.inputs,t.equation),n=r.outputDims,i=e.inputs.map((a,s)=>a.dims);e.compute(tu(i,e.inputs[0].dataType,r,n))},va=e=>{let t=e.equation.replace(/\\s+/g,\"\");return Gt({equation:t})}}),nu,Ir,cd,pd,hd,su=N(()=>{Qt(),Yt(),or(),nu=e=>{if(!e||e.length!==2)throw new Error(\"Expand requires 2 input.\");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;n<r.length&&i<t.length;++n,++i)if(r[n]!==t[i]&&r[n]!==1&&t[i]!==1)throw new Error(\"Expand requires shape to be broadcastable to input\")},Ir=(e,t)=>{let r=e.length-t.length,n=[];for(let i=0;i<r;++i)n.push(e[i]);for(let i=0;i<t.length;++i)n.push(t[i]===1?e[i+r]:t[i]);return n},cd=(e,t)=>e.length>t.length?Ir(e,t):Ir(t,e),pd=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=cd(t,r),i=e[0].dataType,a=i===9?4:1,s=Math.ceil($e.size(n)/a),u=c=>{let w=rt(\"input\",i,t.length,a),g=Ut(\"output\",i,n.length,a),l;if(i===9){let v=(S,$,U=\"\")=>`\n          let outputIndices${$} = ${g.offsetToIndices(`outputOffset + ${$}u`)};\n          let offset${$} = ${w.broadcastedIndicesToOffset(`outputIndices${$}`,g)};\n          let index${$} = offset${$} / 4u;\n          let component${$} = offset${$} % 4u;\n          ${S}[${$}] = ${U}(${w.getByOffset(`index${$}`)}[component${$}]);\n        `;l=`\n        let outputOffset = global_idx * ${a};\n        var data = vec4<u32>(0);\n        ${v(\"data\",0,\"u32\")}\n        ${v(\"data\",1,\"u32\")}\n        ${v(\"data\",2,\"u32\")}\n        ${v(\"data\",3,\"u32\")}\n        ${g.setByOffset(\"global_idx\",\"data\")}\n      }`}else l=`\n        let outputIndices = ${g.offsetToIndices(\"global_idx\")};\n        let inputOffset = ${w.broadcastedIndicesToOffset(\"outputIndices\",g)};\n        ${g.setByOffset(\"global_idx\",w.getByOffset(\"inputOffset\"))}\n      }`;return`\n    ${c.registerUniform(\"vec_size\",\"u32\").declareVariables(w,g)}\n    ${c.mainStart()}\n    ${c.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.vec_size\")}\n    ${l}`},d=[{type:12,data:s},...It(t,n)];return{name:\"Expand\",shaderCache:{hint:`${n.length}`,inputDependencies:[\"rank\"]},getShaderSource:u,getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:d})}},hd=e=>{nu(e.inputs),e.compute(pd(e.inputs),{inputs:[0]})}}),iu,au,fd=N(()=>{Qt(),Yt(),or(),Ji(),iu=e=>{let t=e[0].dataType,r=$e.size(e[0].dims),n=$e.size(e[1].dims),i=n%4===0,a=s=>{let u=rt(\"x\",t,[1],4),d=rt(\"bias\",t,[1],4),c=Ut(\"y\",t,[1],4),w=[{name:\"output_vec_size\",type:\"u32\"},{name:\"bias_size\",type:\"u32\"}],g=v=>`\n      let bias${v}_offset: u32 = (global_idx * 4 + ${v}) % uniforms.bias_size;\n      let bias${v} = ${d.getByOffset(`bias${v}_offset / 4`)}[bias${v}_offset % 4];`,l=i?`\n      let bias = ${d.getByOffset(\"global_idx % (uniforms.bias_size / 4)\")};`:`${g(0)}${g(1)}${g(2)}${g(3)}\n      let bias = ${u.type.value}(bias0, bias1, bias2, bias3);`;return`${s.registerUniforms(w).declareVariables(u,d,c)}\n\n    ${Ki(kr(t))}\n\n    ${s.mainStart(Mn)}\n      ${s.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_vec_size\")}\n\n      let x = ${u.getByOffset(\"global_idx\")};\n      ${l}\n      let x_in = x + bias;\n      ${c.setByOffset(\"global_idx\",Xi(\"x_in\"))}\n    }`};return{name:\"FastGeluWithBias\",shaderCache:{hint:`${i}`,inputDependencies:[\"type\",\"type\"]},getShaderSource:a,getRunData:s=>({outputs:[{dims:s[0].dims,dataType:s[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:n}],dispatchGroup:{x:Math.ceil(r/Mn/4)}})}},au=e=>{e.inputs.length<2||$e.size(e.inputs[1].dims)===0?Qi(e):e.compute(iu(e.inputs))}}),ou,xa,Ta,lu,md=N(()=>{Qt(),Yt(),_r(),or(),ou=e=>{if(!e||e.length!==2)throw new Error(\"Gather requires 2 inputs.\")},xa=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r.length,a=$e.normalizeAxis(t.axis,i),s=r.slice(0);s.splice(a,1,...n);let u=r[a],d=e[0].dataType===9?4:1,c=Math.ceil($e.size(s)/d),w=[{type:12,data:c},{type:6,data:u},{type:12,data:a},...It(e[0].dims,e[1].dims,s)],g=l=>{let v=rt(\"data\",e[0].dataType,e[0].dims.length,d),S=rt(\"inputIndices\",e[1].dataType,e[1].dims.length),$=Ut(\"output\",e[0].dataType,s.length,d),U=L=>{let se=n.length,X=`var indicesIndices${L}  = ${S.type.indices}(0);`;for(let oe=0;oe<se;oe++)X+=`${se>1?`indicesIndices${L}[${oe}]`:`indicesIndices${L}`} = ${s.length>1?`outputIndices${L}[uniforms.axis + ${oe}]`:`outputIndices${L}`};`;X+=`\n          var idx${L} = ${S.getByIndices(`indicesIndices${L}`)};\n          if (idx${L} < 0) {\n            idx${L} = idx${L} + uniforms.axisDimLimit;\n          }\n          var dataIndices${L} : ${v.type.indices};\n        `;for(let oe=0,Ke=0;oe<i;oe++)oe===a?(X+=`${i>1?`dataIndices${L}[${oe}]`:`dataIndices${L}`} = u32(idx${L});`,Ke+=se):(X+=`${i>1?`dataIndices${L}[${oe}]`:`dataIndices${L}`} = ${s.length>1?`outputIndices${L}[${Ke}]`:`outputIndices${L}`};`,Ke++);return X},q;if(e[0].dataType===9){let L=(se,X,oe=\"\")=>`\n          let outputIndices${X} = ${$.offsetToIndices(`outputOffset + ${X}u`)};\n          ${U(X)};\n          let offset${X} = ${v.indicesToOffset(`dataIndices${X}`)};\n          let index${X} = offset${X} / 4u;\n          let component${X} = offset${X} % 4u;\n          ${se}[${X}] = ${oe}(${v.getByOffset(`index${X}`)}[component${X}]);\n        `;q=`\n        let outputOffset = global_idx * ${d};\n        var value = vec4<u32>(0);\n        ${L(\"value\",0,\"u32\")}\n        ${L(\"value\",1,\"u32\")}\n        ${L(\"value\",2,\"u32\")}\n        ${L(\"value\",3,\"u32\")}\n        ${$.setByOffset(\"global_idx\",\"value\")}\n      `}else q=`\n      let outputIndices = ${$.offsetToIndices(\"global_idx\")};\n      ${U(\"\")};\n      let value = ${v.getByIndices(\"dataIndices\")};\n      ${$.setByOffset(\"global_idx\",\"value\")};\n      `;return`\n      ${l.registerUniform(\"outputSize\",\"u32\").registerUniform(\"axisDimLimit\",\"i32\").registerUniform(\"axis\",\"u32\").declareVariables(v,S,$)}\n      ${l.mainStart()}\n        ${l.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\n        ${q}\n      }`};return{name:\"Gather\",shaderCache:{hint:t.cacheKey,inputDependencies:[\"rank\",\"rank\"]},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:w}),getShaderSource:g}},Ta=e=>Gt({axis:e.axis}),lu=(e,t)=>{let r=e.inputs;ou(r),e.compute(xa(e.inputs,t))}}),Sa,_d,gd,uu,wd=N(()=>{Qt(),Yt(),_r(),or(),Sa=(e,t)=>{if(e.length<3||e.length>4)throw new Error(\"GatherBlockQuantized requires 3 or 4 inputs.\");let r=$e.normalizeAxis(t.quantizeAxis,e[0].dims.length),n=t.blockSize,i=e[0],a=e[2],s=e.length===4?e[3]:void 0;if(a.dims.length!==i.dims.length||!i.dims.map((u,d)=>d===r?Math.ceil(u/n)===a.dims[d]:u===a.dims[d]).reduce((u,d)=>u&&d,!0))throw new Error(\"Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.\");if(s){if(s.dataType!==i.dataType)throw new Error(\"Zero point must have the same data type as the input tensor.\");if(s.dims.length!==a.dims.length||!s.dims.map((u,d)=>u===a.dims[d]).reduce((u,d)=>u&&d,!0))throw new Error(\"Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.\")}},_d=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r.length,a=$e.normalizeAxis(t.gatherAxis,i),s=$e.normalizeAxis(t.quantizeAxis,i),u=r.slice(0);u.splice(a,1,...n);let d=$e.size(u),c=e[2].dataType,w=e[0].dataType===22,g=[{type:12,data:d},{type:12,data:s},{type:12,data:a},{type:12,data:t.blockSize},...It(...e.map((v,S)=>v.dims),u)],l=v=>{let S=rt(\"data\",e[0].dataType,e[0].dims.length),$=rt(\"inputIndices\",e[1].dataType,e[1].dims.length),U=rt(\"scales\",e[2].dataType,e[2].dims.length),q=e.length>3?rt(\"zeroPoint\",e[3].dataType,e[3].dims.length):void 0,L=Ut(\"output\",c,u.length),se=[S,$,U];q&&se.push(q);let X=[{name:\"output_size\",type:\"u32\"},{name:\"quantize_axis\",type:\"u32\"},{name:\"gather_axis\",type:\"u32\"},{name:\"block_size\",type:\"u32\"}];return`\n        ${v.registerUniforms(X).declareVariables(...se,L)}\n        ${v.mainStart()}\n        let output_indices = ${L.offsetToIndices(\"global_idx\")};\n        var indices_indices = ${$.type.indices}(0);\n        ${n.length>1?`\n          for (var i: u32 = 0; i < ${n.length}; i++) {\n            let index = ${L.indicesGet(\"output_indices\",\"uniforms.gather_axis + i\")};\n            ${$.indicesSet(\"indices_indices\",\"i\",\"index\")};\n          }`:`indices_indices = ${L.indicesGet(\"output_indices\",\"uniforms.gather_axis\")};`};\n        var data_indices = ${S.type.indices}(0);\n        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {\n          let index = ${L.indicesGet(\"output_indices\",\"i\")};\n          ${S.indicesSet(\"data_indices\",\"i\",\"index\")};\n        }\n        var index_from_indices = ${$.getByIndices(\"indices_indices\")};\n        if (index_from_indices < 0) {\n          index_from_indices += ${r[a]};\n        }\n        ${S.indicesSet(\"data_indices\",\"uniforms.gather_axis\",\"u32(index_from_indices)\")};\n        for (var i = uniforms.gather_axis + 1; i < ${u.length}; i++) {\n          let index = ${L.indicesGet(\"output_indices\",`i + ${n.length} - 1`)};\n          ${S.indicesSet(\"data_indices\",\"i\",\"index\")};\n        }\n        let data_offset = ${S.indicesToOffset(\"data_indices\")};\n        let data_index = data_offset % 8;\n        // Convert 4-bit packed data to 8-bit packed data.\n        let packed_4bit_quantized_data = ${S.getByOffset(\"data_offset / 8\")};\n        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;\n        let quantized_data_vec = ${w?\"unpack4xI8\":\"unpack4xU8\"}(u32(packed_8bit_quantized_data));\n        let quantized_data = quantized_data_vec[data_index / 2];\n        var scale_indices = data_indices;\n        let quantize_axis_index = ${U.indicesGet(\"data_indices\",\"uniforms.quantize_axis\")} / uniforms.block_size;\n        ${U.indicesSet(\"scale_indices\",\"uniforms.quantize_axis\",\"quantize_axis_index\")};\n        var scale = ${U.getByIndices(\"scale_indices\")};\n        ${q?`\n              let zero_point_indices = scale_indices;\n              let zero_point_offset = ${q.indicesToOffset(\"zero_point_indices\")};\n              let zero_point_index = zero_point_offset % 8;\n              let packed_4bit_zero_points = ${q.getByOffset(\"zero_point_offset / 8\")};\n              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;\n              let zero_point_vec = ${w?\"unpack4xI8\":\"unpack4xU8\"}(u32(packed_8bit_zero_points));\n              let zero_point = zero_point_vec[zero_point_index / 2];`:\"var zero_point = 0\"};\n        let dequantized_data = ${kr(c)}(quantized_data - zero_point) * scale;\n        ${L.setByOffset(\"global_idx\",\"dequantized_data\")};\n    }`};return{name:\"GatherBlockQuantized\",shaderCache:{hint:`${t.cacheKey};${e.filter((v,S)=>S!==1).map(v=>v.dims.join(\"_\")).join(\";\")}`,inputDependencies:Array.from({length:e.length},(v,S)=>\"rank\")},getRunData:()=>({outputs:[{dims:u,dataType:c}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:g}),getShaderSource:l}},gd=(e,t)=>{let r=e.inputs;Sa(r,t),e.compute(_d(e.inputs,t))},uu=e=>Gt({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),du,cu,pu,hu,yd=N(()=>{Qt(),Yt(),_r(),or(),du=e=>{if(!e||e.length!==2)throw new Error(\"GatherElements requires 2 inputs.\");if(e[0].dims.length<1)throw new Error(\"GatherElements requires that the data input be rank >= 1.\");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},cu=(e,t)=>{let r=e[0].dims,n=e[0].dataType,i=r.length,a=e[1].dims,s=e[1].dataType,u=$e.normalizeAxis(t.axis,i),d=r[u],c=a.slice(0),w=$e.size(c),g=rt(\"input\",n,i),l=rt(\"indicesInput\",s,a.length),v=Ut(\"output\",n,c.length),S=[{type:12,data:w},{type:6,data:d},{type:12,data:u}];return S.push(...It(r,a,c)),{name:\"GatherElements\",shaderCache:{inputDependencies:[\"rank\",\"rank\"]},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:S}),getShaderSource:$=>`\n      ${$.registerUniform(\"outputSize\",\"u32\").registerUniform(\"axisDimLimit\",\"i32\").registerUniform(\"axis\",\"u32\").declareVariables(g,l,v)}\n      ${$.mainStart()}\n      ${$.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\n\n      let outputIndices = ${v.offsetToIndices(\"global_idx\")};\n\n      var idx = ${l.getByOffset(\"global_idx\")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${g.type.indices}(outputIndices);\n      ${g.indicesSet(\"inputIndices\",\"uniforms.axis\",\"u32(idx)\")};\n      let value = ${g.getByIndices(\"inputIndices\")};\n\n      ${v.setByOffset(\"global_idx\",\"value\")};\n  }`}},pu=e=>Gt({axis:e.axis}),hu=(e,t)=>{let r=e.inputs;du(r),e.compute(cu(e.inputs,t))}}),fu,mu,_u,gu,bd=N(()=>{Qt(),Yt(),or(),fu=e=>{if(!e)throw new Error(\"Input is missing\");if(e.length<2||e.length>3)throw new Error(\"Invaid input number.\");if(e.length===3&&e[2].dims.length>2)throw new Error(\"Invalid input shape of C\");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error(\"Input types are mismatched\")},mu=(e,t)=>{let r=e[0].dims.slice(),n=e[1].dims.slice(),[i,a,s]=Sr.getShapeOfGemmResult(r,t.transA,n,t.transB,e.length===3?e[2].dims:void 0),u=[i,a];if(!u)throw new Error(\"Can't use gemm on the given tensors\");let d=$e.size(u),c=[{type:12,data:d},{type:12,data:i},{type:12,data:a},{type:12,data:s},{type:1,data:t.alpha},{type:1,data:t.beta}],w=[\"type\",\"type\"];e.length===3&&(c.push(...It(e[2].dims)),w.push(\"rank\")),c.push(...It(u));let g=l=>{let v=\"\";t.transA&&t.transB?v=\"value += a[k * uniforms.M + m] * b[n * uniforms.K + k];\":t.transA&&!t.transB?v=\"value += a[k * uniforms.M + m] * b[k * uniforms.N + n];\":!t.transA&&t.transB?v=\"value += a[m * uniforms.K + k] * b[n * uniforms.K + k];\":!t.transA&&!t.transB&&(v=\"value += a[m * uniforms.K + k] * b[k * uniforms.N + n];\");let S=t.alpha===1?\"\":\"value *= uniforms.alpha;\",$=rt(\"a\",e[0].dataType,e[0].dims),U=rt(\"b\",e[1].dataType,e[1].dims),q=$.type.value,L=null,se=[$,U];e.length===3&&(L=rt(\"c\",e[2].dataType,e[2].dims.length),se.push(L));let X=Ut(\"output\",e[0].dataType,u.length);se.push(X);let oe=[{name:\"output_size\",type:\"u32\"},{name:\"M\",type:\"u32\"},{name:\"N\",type:\"u32\"},{name:\"K\",type:\"u32\"},{name:\"alpha\",type:\"f32\"},{name:\"beta\",type:\"f32\"}];return`\n  ${l.registerUniforms(oe).declareVariables(...se)}\n\n  ${l.mainStart()}\n    ${l.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${q}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${v}\n    }\n\n    ${S}\n    ${L!=null?`let cOffset = ${L.broadcastedIndicesToOffset(\"vec2(m, n)\",X)}; value += ${q}(uniforms.beta) * ${L.getByOffset(\"cOffset\")};`:\"\"}\n    output[global_idx] = value;\n  }`};return{name:\"Gemm\",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c}),getShaderSource:g}},_u=e=>{let t=e.transA,r=e.transB,n=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:n,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},gu=(e,t)=>{fu(e.inputs),e.compute(mu(e.inputs,t))}}),pn,wu,yu,ka,Md,gs,bu,Mu=N(()=>{Qt(),Yt(),_r(),z(),Zs(),or(),fs(),pn=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,wu=(e,t)=>{let r=e[0],n=pn(e,1),i=pn(e,2),a=pn(e,3),s=pn(e,4),u=pn(e,5),d=pn(e,6),c=pn(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\"Input query is expected to have 3 or 5 dimensions\");let w=r.dims[0],g=r.dims[1],l=r.dims.length===3?r.dims[2]:t.numHeads*r.dims[4],v=g,S=0,$=0,U=Math.floor(l/t.numHeads);if(d&&c&&$e.size(d.dims)&&$e.size(c.dims)){if(d.dims.length!==4)throw new Error('Input \"past_key\" is expected to have 4 dimensions');if(d.dims[0]!==w||d.dims[1]!==t.numHeads||d.dims[3]!==U)throw new Error('Input \"past_key\" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[0]!==w||c.dims[1]!==t.numHeads||c.dims[3]!==U)throw new Error('Input \"past_value\" shape (batch_size, num_heads, past_sequence_length, head_size)');if(d.dims[2]!==c.dims[2])throw new Error('Input \"past_key\" and \"past_value\" shall have same dim 2 (past_sequence_length)');if(c.dims.length!==4)throw new Error('Input \"past_value\" is expected to have 4 dimensions');S=d.dims[2],$=d.dims[2]}else if(d&&$e.size(d.dims)||c&&$e.size(c.dims))throw new Error('Input \"past_key\" and \"past_value\" shall be both present or both absent');let q;if(n&&$e.size(n.dims)>0){if(r.dims.length!==3)throw new Error('Input \"query\" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input \"key\" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input \"query\" and \"key\" shall have same dim 0 (batch size)');if(n.dims.length===3){if(n.dims[2]!==r.dims[2])throw new Error('Input \"query\" and \"key\" shall have same dim 2 (hidden_size)');q=2,v=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==U)throw new Error('Expect \"key\" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect \"value\" be none when \"key\" has packed kv format.');q=5,v=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==U)throw new Error('Expect \"key\" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');q=0,v=n.dims[2]}}else{if(r.dims.length!==5)throw new Error('Input \"query\" is expected to have 5 dimensions when key is empty');if(r.dims[2]!==t.numHeads||r.dims[3]!==3)throw new Error('Expect \"query\" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');q=3}if(a&&$e.size(a.dims)>0){if(a.dims.length!==1)throw new Error('Input \"bias\" is expected to have 1 dimension');if(n&&n.dims.length===5&&n.dims[3]===2)throw new Error(\"bias is not allowed for packed kv.\")}let L=S+v,se=0;if(s&&$e.size(s.dims)>0){se=8;let je=s.dims;throw je.length===1?je[0]===w?se=1:je[0]===3*w+2&&(se=3):je.length===2&&je[0]===w&&je[1]===L&&(se=5),se===8?new Error('Input \"key_padding_mask\" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error(\"Mask not supported\")}let X=!1,oe=l;if(i&&$e.size(i.dims)>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input \"value\" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input \"query\" and \"value\" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(v!==i.dims[1])throw new Error('Input \"key\" and \"value\" shall have the same dim 1 (kv_sequence_length)');oe=i.dims[2]}else{if(v!==i.dims[2])throw new Error('Input \"key\" and \"value\" shall have the same dim 2 (kv_sequence_length)');oe=i.dims[1]*i.dims[3],X=!0}}let Ke=!1;if(s&&$e.size(s.dims)>0)throw new Error(\"Key padding mask is not supported\");if(u&&$e.size(u.dims)>0){if(u.dims.length!==4)throw new Error('Input \"attention_bias\" is expected to have 4 dimensions');if(u.dims[0]!==w||u.dims[1]!==t.numHeads||u.dims[2]!==g||u.dims[3]!==L)throw new Error('Expect \"attention_bias\" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:w,sequenceLength:g,pastSequenceLength:S,kvSequenceLength:v,totalSequenceLength:L,maxSequenceLength:$,inputHiddenSize:0,hiddenSize:l,vHiddenSize:oe,headSize:U,vHeadSize:Math.floor(oe/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:se,scale:t.scale,broadcastResPosBias:Ke,passPastInKv:X,qkvFormat:q}},yu=e=>Gt({...e}),ka=Gt({perm:[0,2,1,3]}),Md=(e,t,r,n,i,a,s)=>{let u=[n,i,a],d=$e.size(u),c=[{type:12,data:d},{type:12,data:s},{type:12,data:a}],w=g=>{let l=Ut(\"qkv_with_bias\",t.dataType,u),v=rt(\"qkv\",t.dataType,u),S=rt(\"bias\",r.dataType,u),$=[{name:\"output_size\",type:\"u32\"},{name:\"bias_offset\",type:\"u32\"},{name:\"hidden_size\",type:\"u32\"}];return`\n  ${g.registerUniforms($).declareVariables(v,S,l)}\n  ${g.mainStart()}\n    ${g.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:\"MultiHeadAttentionAddBias\",shaderCache:{inputDependencies:[\"type\",\"type\"]},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c}),getShaderSource:w},{inputs:[t,r],outputs:[-1]})[0]},gs=(e,t,r,n,i,a,s,u)=>{let d=a;if(s&&$e.size(s.dims)>0){if(n===1)throw new Error(\"AddBiasReshape is not implemented. Please export your model with packed QKV or KV\");return d=Md(e,a,s,t,n,r*i,u),d=d.reshape([t,n,r,i]),e.compute(zn(d,ka.perm),{inputs:[d],outputs:[-1]})[0]}else return a.dims.length===3&&(d=a.reshape([t,n,r,i])),e.compute(zn(d,ka.perm),{inputs:[d],outputs:[-1]})[0]},bu=(e,t)=>{let r=wu(e.inputs,t),n=e.inputs[0],i=pn(e.inputs,1),a=pn(e.inputs,2),s=pn(e.inputs,3),u=pn(e.inputs,4),d=pn(e.inputs,5),c=pn(e.inputs,6),w=pn(e.inputs,7);if(n.dims.length===5)throw new Error(\"Packed QKV is not implemented\");if((i==null?void 0:i.dims.length)===5)throw new Error(\"Packed KV is not implemented\");let g=i&&a&&i.dims.length===4&&a.dims.length===4,l=gs(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,n,s,0);if(g)return ms(e,l,i,a,u,void 0,c,w,d,r,t);if(!i||!a)throw new Error(\"key and value must be provided\");let v=gs(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,i,s,r.hiddenSize),S=gs(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,a,s,2*r.hiddenSize);ms(e,l,v,S,u,void 0,c,w,d,r,t)}}),Ca,vu,xu,Ea,Tu,Su=N(()=>{Qt(),Yt(),or(),Ca=e=>Array.from(e.getBigInt64Array(),Number),vu=e=>{if(!e||e.length!==2)throw new Error(\"Tile requires 2 inputs.\");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error(\"Tile only support float, float16, int32, and uint32 data types\");if(e[1].dataType!==7)throw new Error(\"Tile `repeats` input should be of int64 data type\");if(e[1].dims.length!==1)throw new Error(\"Tile `repeats` input should be 1-D\");if(Ca(e[1]).length!==e[0].dims.length)throw new Error(\"Tile `repeats` input should have same number of elements as rank of input data tensor\")},xu=(e,t)=>{let r=[];for(let n=0;n<e.length;++n)r.push(e[n]*t[n]);return r},Ea=(e,t)=>{let r=e[0].dims,n=t??Ca(e[1]),i=xu(r,n),a=$e.size(i),s=e[0].dataType,u=rt(\"input\",s,r.length),d=Ut(\"output\",s,i.length),c=w=>`\n      const inputShape = ${u.indices(...r)};\n      ${w.registerUniform(\"output_size\",\"u32\").declareVariables(u,d)}\n      ${w.mainStart()}\n      ${w.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\n      let output_indices = ${d.offsetToIndices(\"global_idx\")};\n      var input_indices: ${u.type.indices};\n      for (var i = 0; i < ${r.length}; i++) {\n        let input_dim_i = ${u.indicesGet(\"uniforms.input_shape\",\"i\")};\n        let input_dim_value = ${d.indicesGet(\"output_indices\",\"i\")}  % input_dim_i;\n\n        ${u.indicesSet(\"input_indices\",\"i\",\"input_dim_value\")}\n      }\n      ${d.setByOffset(\"global_idx\",u.getByIndices(\"input_indices\"))}\n    }`;return{name:\"Tile\",shaderCache:{hint:`${n}`,inputDependencies:[\"rank\"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},...It(e[0].dims,i)]}),getShaderSource:c}},Tu=e=>{vu(e.inputs),e.compute(Ea(e.inputs),{inputs:[0]})}}),ku,$a,Cu,Eu,Pa,$u,vd=N(()=>{Qt(),Yt(),_r(),Zs(),or(),Mu(),Su(),fs(),ku=(e,t)=>{let r=e[0],n=e[1],i=e[2],a=e[3],s=e[4];if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\"Input query is expected to have 3 or 5 dimensions\");let u=!1,d=r.dims[0],c=r.dims[1],w=r.dims.length===3?u?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],g=c,l=0,v=0,S=Math.floor(w/t.numHeads),$=a&&a.dims.length!==0,U=s&&s.dims.length!==0,q=!0;if($&&U){if(a.dims.length!==4)throw new Error('Input \"past_key\" is expected to have 4 dimensions');if(s.dims.length!==4)throw new Error('Input \"past_value\" is expected to have 4 dimensions');l=a.dims[1],v=a.dims[1]}else if($||U)throw new Error('Input \"past_key\" and \"past_value\" shall be both present or both absent');let L;if(n){if(r.dims.length!==3)throw new Error('Input \"query\" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input \"key\" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input \"query\" and \"key\" shall have same dim 0 (batch size)');if(n.dims.length===3){if(r.dims[2]%n.dims[2]!==0)throw new Error('Dimension 2 of \"query\" should be a multiple of \"key\"');L=2,g=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==S)throw new Error('Expect \"key\" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect \"value\" be none when \"key\" has packed kv format.');L=5,g=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==S)throw new Error('Expect \"key\" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');L=0,g=n.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input \"query\" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect \"query\" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');L=3}let se=0,X=!1,oe=w;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input \"value\" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input \"query\" and \"value\" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(g!==i.dims[1])throw new Error('Input \"key\" and \"value\" shall have the same dim 1 (kv_sequence_length)');oe=i.dims[2]}else{if(g!==i.dims[2])throw new Error('Input \"past_key\" and \"past_value\" shall have the same dim 2 (kv_sequence_length)');oe=i.dims[1]*i.dims[3],X=!0}}let Ke=l+g;return{batchSize:d,sequenceLength:c,pastSequenceLength:l,kvSequenceLength:g,totalSequenceLength:Ke,maxSequenceLength:v,inputHiddenSize:0,hiddenSize:w,vHiddenSize:oe,headSize:S,vHeadSize:Math.floor(oe/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:se,scale:t.scale,broadcastResPosBias:!1,passPastInKv:X,qkvFormat:L,isPastkvBSNH:q}},$a=(e,t,r,n)=>{let i=[n.batchSize,n.totalSequenceLength,n.kvNumHeads,n.headSize],a=4,s=$e.size(i)/a,u=n.totalSequenceLength,d=Ut(\"present_kv\",r,i.length,a),c=rt(\"new_kv\",e.dataType,e.dims.length,a),w=t?rt(\"past_kv\",t.dataType,t.dims.length,a):void 0,g=Math.ceil(n.headSize/a),l={x:u,y:e.dims[0],z:1},v=t?[\"rank\",\"rank\"]:[\"rank\"],S=[{type:12,data:s},{type:12,data:n.pastSequenceLength},{type:12,data:n.kvSequenceLength},{type:12,data:n.totalSequenceLength}],$=[c];w?(S.push(...It(e.dims),...It(t.dims),...It(i)),$.push(w)):S.push(...It(e.dims),...It(i));let U=[{name:\"output_size\",type:\"u32\"},{name:\"past_seqlen\",type:\"u32\"},{name:\"new_seqlen\",type:\"u32\"},{name:\"present_seqlen\",type:\"u32\"}],q=`      let past_batch_stride = uniforms.past_seqlen * num_heads * H;\n        var past_head_stride = uniforms.past_seqlen * H;\n        if (is_bsnh) {\n          past_head_stride = H;\n        }\n        let in_offset = b * past_batch_stride + s * row_stride + n * past_head_stride + h;\n        present_kv[out_offset] = past_kv[in_offset];`,L=`      let new_batch_stride = uniforms.new_seqlen * num_heads * H;\n        let new_row_stride = num_heads * H;\n        let new_head_stride = H;\n        let in_offset = b * new_batch_stride + (s - past_seqlen) * new_row_stride + n * new_head_stride + h;\n        present_kv[out_offset] = new_kv[in_offset];`,se=t?`if (s < past_seqlen) {\n        ${q}\n        } else if (s < past_seqlen + uniforms.new_seqlen) {\n        ${L}\n        }`:`if (s < past_seqlen + uniforms.new_seqlen) {\n          ${L}\n        }`,X=oe=>`\n\n  ${oe.registerUniforms(U).declareVariables(...$,d)}\n  ${oe.mainStart([g,n.kvNumHeads,1])}\n    ${oe.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\n    var indices = ${d.offsetToIndices(\"global_idx\")};\n    let h = local_id.x;\n    let n = local_id.y;\n    let s = workgroup_id.x;\n    let b = workgroup_id.y;\n    let num_heads = ${n.kvNumHeads}u;\n    let H = ${g}u;\n\n    let present_seqlen = uniforms.present_seqlen;\n    let present_batch_stride = present_seqlen * num_heads * H;\n    var row_stride = H;\n    let is_bsnh = ${n.isPastkvBSNH};\n\n    if (is_bsnh) {\n      row_stride = num_heads * H;\n    }\n    var present_head_stride = present_seqlen * H;\n    if (is_bsnh) {\n      present_head_stride = H;\n    }\n\n    let past_seqlen = uniforms.past_seqlen;\n\n    let out_offset = b * present_batch_stride + s * row_stride + n * present_head_stride + h;\n    ${se}\n  }`;return{name:\"ConcatPastNew\",shaderCache:{hint:`${n.kvNumHeads}${g}${!!t}`,inputDependencies:v},getRunData:()=>({outputs:[{dims:i,dataType:r}],dispatchGroup:l,programUniforms:S}),getShaderSource:X}},Cu=e=>Gt({...e}),Eu=Gt({perm:[0,2,1,3]}),Pa=(e,t,r,n,i)=>{let a=t,s=n.kvNumHeads,u=n.nReps;return t.dims.length===3&&n.kvSequenceLength!==0&&(a=t.reshape([n.batchSize,n.kvSequenceLength,s,n.headSize])),r?a=e.compute($a(a,r,a.dataType,n),{inputs:[a,r],outputs:[n.isPastkvBSNH?i:-1]})[0]:a=e.compute($a(a,void 0,a.dataType,n),{inputs:[a],outputs:[n.isPastkvBSNH?i:-1]})[0],u!==1&&(a=e.compute(Ea([a],[1,1,1,u]),{inputs:[a],outputs:[-1]})[0],a=a.reshape([n.batchSize,n.totalSequenceLength,s*u,n.headSize])),e.compute(zn(a,Eu.perm),{inputs:[a],outputs:[-1]})[0]},$u=(e,t)=>{var d;let r=ku(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error(\"Packed QKV is not implemented\");if(((d=e.inputs[1])==null?void 0:d.dims.length)===5)throw new Error(\"Packed KV is not implemented\");let n=gs(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],void 0,0),i=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,a=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,s=Pa(e,e.inputs[1],i,r,1),u=Pa(e,e.inputs[2],a,r,2);ms(e,n,s,u,void 0,void 0,void 0,void 0,void 0,r,t)}}),Pu,Au,Iu,Fu,xd=N(()=>{Qt(),Yt(),or(),Pu=(e,t)=>{let r=e[0].dims,n=r,i=2,a=$e.sizeToDimension(r,i),s=$e.sizeFromDimension(r,i),u=Cr(s),d=s/u,c=[r[0],r[1],d],w=[\"rank\",\"type\",\"type\"],g=[{type:12,data:s},{type:12,data:d}];g.push(...It(c,c));let l=v=>{let S=rt(\"x\",e[0].dataType,c.length,u),$=rt(\"scale\",e[1].dataType,e[1].dims),U=rt(\"bias\",e[2].dataType,e[2].dims),q=Ut(\"output\",e[0].dataType,c.length,u),L=[S,$,U,q],se=S.type.value,X=u===1?\"f32\":`vec${u}<f32>`,oe=64,Ke=[{name:\"normSize\",type:\"u32\"},{name:\"normPackedSize\",type:\"u32\"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${X}, ${oe}>;\n  const workgroupSize = ${oe}u;\n  ${v.registerUniforms(Ke).declareVariables(...L)}\n  ${v.mainStart(oe)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${X}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${X}(${S.get(\"batch\",\"channel\",\"h\")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${vn(\"workgroupShared[0]\",u)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${X}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${X}(${S.get(\"batch\",\"channel\",\"h\")}) - ${X}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${vn(\"workgroupShared[0]\",u)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${$.getByOffset(\"channel\")});\n    let channelShift = f32(${U.getByOffset(\"channel\")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${S.get(\"batch\",\"channel\",\"h\")} * ${se}(${X}(channelScale)) + ${se}(${X}(channelShift));\n      ${q.set(\"batch\",\"channel\",\"h\",\"value\")};\n    }\n  }`};return{name:\"InstanceNormalization\",shaderCache:{hint:`${t.epsilon};${u}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:a},programUniforms:g}),getShaderSource:l}},Au=(e,t,r,n,i,a,s,u)=>{let d=Cr(s),c=64,w=d===1?\"vec2f\":`mat2x${d}f`,g=d===1?\"f32\":`vec${d}f`,l=(Ke,je)=>`${w}(${Ke}, ${je})`,v=i*s/d,S=Math.ceil(a/c),$=[\"type\"],U=[{type:12,data:S},{type:12,data:a},{type:12,data:Math.floor(s/d)},{type:12,data:Math.floor(a*s/d)}],q=Ke=>{let je=rt(\"input\",t.dataType,t.dims,d);return`\n  ${Ke.declareVariables(je)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${w}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${Ke.mainStart(c)}\n    let currentImageNumber = global_idx / ${c} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${c}) % uniforms.C;\n    let wgOffset = local_id.x * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${zr(\"f32\",d)};\n    var squaredSum = ${zr(\"f32\",d)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${g}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${l(\"sum\",\"squaredSum\")};\n  }`},L=e.compute({name:\"InstanceNormComputeMean\",shaderCache:{hint:`${d}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:[i,s,c,2],dataType:1}],dispatchGroup:{x:i*s/d},programUniforms:U}),getShaderSource:q},{inputs:[t],outputs:[-1]})[0],se=[{type:12,data:v},{type:12,data:a},{type:12,data:Math.floor(s/d)},{type:12,data:Math.floor(c*s/d)}],X=[\"type\",\"type\",\"type\"],oe=Ke=>{let je=rt(\"scale\",r.dataType,r.dims,d),ft=rt(\"bias\",n.dataType,n.dims,d);return`\n  @group(0) @binding(0) var<storage, read> input : array<${w}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${je.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${ft.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${w}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${Ke.mainStart()}\n    ${Ke.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.units_of_work\")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${zr(\"f32\",d)};\n    var squaredSum = ${zr(\"f32\",d)};\n    for (var i: u32 = 0; i < min(${c}, uniforms.H); i++) {\n        let value = input[offset + i + currentChannelNumber * ${c}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${u}));\n    let channelScale = invStdDev * ${g}(scale[currentChannelNumber]);\n    let channelShift = ${g}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${l(\"channelScale\",\"channelShift\")};\n  }`};return e.compute({name:\"InstanceNormComputeChannelScaleShift\",shaderCache:{hint:`${d};${u}`,inputDependencies:X},getRunData:()=>({outputs:[{dims:[i,s,2],dataType:1}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:se}),getShaderSource:oe},{inputs:[L,r,n],outputs:[-1]})[0]},Iu=(e,t,r)=>{let n=t[0].dims,i=n,a=n[0],s=n[n.length-1],u=$e.sizeFromDimension(n,1)/s,d=Cr(s),c=$e.size(i)/d,w=[{type:12,data:u},{type:12,data:Math.floor(s/d)}],g=[\"type\",\"type\"],l=Au(e,t[0],t[1],t[2],a,u,s,r.epsilon),v=S=>{let $=$r(t[0].dataType),U=d===1?\"vec2f\":`mat2x${d}f`,q=d===1?$:`vec${d}<${$}>`,L=rt(\"input\",t[0].dataType,t[0].dims,d),se=Ut(\"output\",t[0].dataType,i,d);return`\n  @group(0) @binding(0) var<storage, read> input : array<${L.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${U}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${se.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${S.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${q}(scale[0]), ${q}(scale[1]));\n  }`};e.compute({name:\"InstanceNormalizationNHWC\",shaderCache:{hint:`${d}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:w}),getShaderSource:v},{inputs:[t[0],l]})},Fu=(e,t)=>{t.format===\"NHWC\"?Iu(e,e.inputs,t):e.compute(Pu(e.inputs,t))}}),Ou,zu,Du,Td=N(()=>{Qt(),Yt(),or(),Ou=e=>{if(!e||e.length<2)throw new Error(\"layerNorm requires at least 2 inputs.\")},zu=(e,t,r)=>{let n=t.simplified,i=e[0].dims,a=e[1],s=!n&&e[2],u=i,d=$e.normalizeAxis(t.axis,i.length),c=$e.sizeToDimension(i,d),w=$e.sizeFromDimension(i,d),g=$e.size(a.dims),l=s?$e.size(s.dims):0;if(g!==w||s&&l!==w)throw new Error(`Size of X.shape()[axis:] == ${w}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${g} and bias size of ${l}`);let v=[];for(let oe=0;oe<i.length;++oe)oe<d?v.push(i[oe]):v.push(1);let S=Cr(w),$=[\"type\",\"type\"],U=[{type:12,data:c},{type:1,data:w},{type:12,data:Math.floor(w/S)},{type:1,data:t.epsilon}];s&&$.push(\"type\");let q=r>1,L=r>2,se=oe=>{let Ke=$r(e[0].dataType),je=[rt(\"x\",e[0].dataType,e[0].dims,S),rt(\"scale\",a.dataType,a.dims,S)];s&&je.push(rt(\"bias\",s.dataType,s.dims,S)),je.push(Ut(\"output\",e[0].dataType,u,S)),q&&je.push(Ut(\"mean_data_output\",1,v)),L&&je.push(Ut(\"inv_std_output\",1,v));let ft=[{name:\"norm_count\",type:\"u32\"},{name:\"norm_size\",type:\"f32\"},{name:\"norm_size_vectorized\",type:\"u32\"},{name:\"epsilon\",type:\"f32\"}];return`\n  ${oe.registerUniforms(ft).declareVariables(...je)}\n  ${oe.mainStart()}\n    ${oe.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.norm_count\")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${zr(\"f32\",S)};\n    var mean_square_vector = ${zr(\"f32\",S)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${Wr(Ke,S,\"x[h + offset]\")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${vn(\"mean_vector\",S)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${vn(\"mean_square_vector\",S)} / uniforms.norm_size ${n?\"\":\"- mean * mean\"} + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${Wr(Ke,S,\"x[j + offset]\")};\n      let f32scale = ${Wr(Ke,S,\"scale[j]\")};\n      output[j + offset] = ${je[0].type.value}((f32input ${n?\"\":\"- mean\"}) * inv_std_dev * f32scale\n        ${s?`+ ${Wr(Ke,S,\"bias[j]\")}`:\"\"}\n      );\n    }\n\n    ${q?\"mean_data_output[global_idx] = mean\":\"\"};\n    ${L?\"inv_std_output[global_idx] = inv_std_dev\":\"\"};\n  }`},X=[{dims:u,dataType:e[0].dataType}];return q&&X.push({dims:v,dataType:1}),L&&X.push({dims:v,dataType:1}),{name:\"LayerNormalization\",shaderCache:{hint:`${S};${r};${n}`,inputDependencies:$},getRunData:()=>({outputs:X,dispatchGroup:{x:Math.ceil(c/64)},programUniforms:U}),getShaderSource:se}},Du=(e,t)=>{Ou(e.inputs),e.compute(zu(e.inputs,t,e.outputCount))}}),Bu,Lu,Sd,ur,kd=N(()=>{Qt(),Yt(),_r(),or(),Bu=(e,t)=>{if(e.length<3||e.length>4)throw new Error(\"MatMulNBits requires 3 or 4 inputs\");let r=e[0],n=r.dims.length;if(r.dims[n-1]!==t.k)throw new Error(\"The last dim of input shape does not match the k value\");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),a=t.blockSize/8*t.bits,s=e[1];if(!$e.areEqual(s.dims,[t.n,i,a]))throw new Error(\"The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize\");let u=e[2].dims;if($e.size(u)!==t.n*i)throw new Error(\"scales input size error.\");if(e.length===4){let d=e[3].dims,c=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if($e.size(d)!==c)throw new Error(\"zeroPoints input size error.\")}},Lu=(e,t)=>{let r=e[0].dims,n=r.length,i=r[n-2],a=t.k,s=t.n,u=r.slice(0,n-2),d=$e.size(u),c=e[1].dims[2]/4,w=e[0].dataType,g=Cr(t.k),l=Cr(c),v=Cr(s),S=u.concat([i,s]),$=i>1&&s/v%2===0?2:1,U=$e.size(S)/v/$,q=64,L=[],se=[d,i,a/g],X=$e.convertShape(e[1].dims).slice();X.splice(-1,1,c/l),L.push(...It(se)),L.push(...It(X)),L.push(...It(e[2].dims)),e.length===4&&L.push(...It($e.convertShape(e[3].dims)));let oe=[d,i,s/v];L.push(...It(oe));let Ke=je=>{let ft=se.length,Ot=rt(\"a\",e[0].dataType,ft,g),Vt=rt(\"b\",12,X.length,l),lr=rt(\"scales\",e[2].dataType,e[2].dims.length),wr=[Ot,Vt,lr],er=e.length===4?rt(\"zero_points\",12,e[3].dims.length):void 0;er&&wr.push(er);let Lr=oe.length,Gr=Ut(\"output\",e[0].dataType,Lr,v),xr=$r(e[0].dataType),Nr=(()=>{switch(g){case 1:return`array<${xr}, 8>`;case 2:return`mat4x2<${xr}>`;case 4:return`mat2x4<${xr}>`;default:throw new Error(`${g}-component is not supported.`)}})(),Zt=()=>{let Ve=`\n          // reuse a data\n            var input_offset = ${Ot.indicesToOffset(`${Ot.type.indices}(batch, row, word_offset)`)};\n            var a_data: ${Nr};\n            for (var j: u32 = 0; j < ${8/g}; j++) {\n              a_data[j] = ${Ot.getByOffset(\"input_offset\")};\n              input_offset++;\n            }\n          `;for(let kt=0;kt<v*$;kt++)Ve+=`\n            b_value = ${l===1?`b${kt}_data`:`b${kt}_data[i]`};\n            b_value_lower = unpack4xU8(b_value & b_mask);\n            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);\n            b_quantized_values = ${Nr}(${Array.from({length:4},(nr,Rr)=>`${xr}(b_value_lower[${Rr}]), ${xr}(b_value_upper[${Rr}])`).join(\", \")});\n            b_dequantized_values = ${g===1?`${Nr}(${Array.from({length:8},(nr,Rr)=>`(b_quantized_values[${Rr}] - ${er?`zero_point${kt}`:\"zero_point\"}) * scale${kt}`).join(\", \")});`:`(b_quantized_values - ${Nr}(${Array(8).fill(`${er?`zero_point${kt}`:\"zero_point\"}`).join(\",\")})) * scale${kt};`};\n            workgroup_shared[local_id.x * ${$} + ${Math.floor(kt/v)}]${v>1?`[${kt%v}]`:\"\"} += ${Array.from({length:8/g},(nr,Rr)=>`${g===1?`a_data[${Rr}] * b_dequantized_values[${Rr}]`:`dot(a_data[${Rr}], b_dequantized_values[${Rr}])`}`).join(\" + \")};\n          `;return Ve},mr=()=>{let Ve=`\n            var col_index = col * ${v};\n            ${er?`\n            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;\n            var zero_point_byte_count: u32;\n            var zero_point_word_index: u32;\n            var zero_point_byte_offset: u32;\n            let zero_point_nibble_offset: u32 = block & 0x1u;\n            var zero_point_bits_offset: u32;\n            var zero_point_word: u32;`:`\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${xr}(8);`}\n            `;for(let kt=0;kt<v*$;kt++)Ve+=`\n            let scale${kt} = ${lr.getByOffset(\"col_index * nBlocksPerCol + block\")};\n            ${er?`\n            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);\n            zero_point_word_index = zero_point_byte_count >> 0x2u;\n            zero_point_byte_offset = zero_point_byte_count & 0x3u;\n            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            zero_point_word = ${er.getByOffset(\"zero_point_word_index\")} >> zero_point_bits_offset;\n            let zero_point${kt} = ${xr}((zero_point_word) & 0xFu);`:\"\"}\n            col_index += 1;`;return Ve},Pr=()=>{let Ve=`col_index = col * ${v};`;for(let kt=0;kt<v*$;kt++)Ve+=`\n            let b${kt}_data = ${Vt.getByIndices(`${Vt.type.indices}(col_index, block, word)`)};\n            col_index += 1;`;return Ve+=`\n            var b_value: u32;\n            let b_mask: u32 = 0x0F0F0F0Fu;\n            var b_value_lower: vec4<u32>;\n            var b_value_upper: vec4<u32>;\n            var b_quantized_values: ${Nr};\n            var b_dequantized_values: ${Nr};`,Ve};return`\n        var<workgroup> workgroup_shared: array<${Gr.type.value}, ${$*q}>;\n        ${je.declareVariables(...wr,Gr)}\n        ${je.mainStart([q,1,1])}\n          let output_indices = ${Gr.offsetToIndices(`(global_idx / ${q}) * ${$}`)};\n          let col = output_indices[2];\n          let row = output_indices[1];\n          let batch = output_indices[0];\n          let nBlocksPerCol = uniforms.b_shape[1];\n\n          for (var block = local_id.x; block < nBlocksPerCol; block += ${q}) {\n            //process one block\n            var word_offset: u32 = block * ${t.blockSize/g};\n            ${mr()}\n            for (var word: u32 = 0; word < ${c}; word += ${l}) {\n              ${Pr()}\n              for (var i: u32 = 0; i < ${l}; i++) {\n                ${Zt()}\n                word_offset += ${8/g};\n              }\n            }\n          }\n          workgroupBarrier();\n\n          if (local_id.x < ${$}) {\n            var output_value: ${Gr.type.value} = ${Gr.type.value}(0);\n            var workgroup_shared_offset: u32 = local_id.x;\n            for (var b: u32 = 0u; b < ${q}u; b++) {\n              output_value += workgroup_shared[workgroup_shared_offset];\n              workgroup_shared_offset += ${$};\n            }\n            ${Gr.setByIndices(`${Gr.type.indices}(batch, row, col + local_id.x)`,\"output_value\")};\n          }\n        }`};return{name:\"MatMulNBits\",shaderCache:{hint:`${t.blockSize};${t.bits};${g};${l};${v};${$};${q}`,inputDependencies:Array(e.length).fill(\"rank\")},getRunData:()=>({outputs:[{dims:S,dataType:w}],dispatchGroup:{x:U},programUniforms:L}),getShaderSource:Ke}},Sd=(e,t)=>{Bu(e.inputs,t),e.compute(Lu(e.inputs,t))},ur=e=>Gt(e)}),Zr,rn,ln,ns,Cd,Ru,Nu,f,_,C=N(()=>{Qt(),Yt(),or(),Zr=e=>{if(!e||e.length<1)throw new Error(\"Too few inputs\");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error(\"Input type must be float or float16.\");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error(\"The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].\")}},rn=(e,t,r)=>{let n=\"\";for(let i=t-1;i>=0;--i)n+=`\n            k = i32(${e.indicesGet(\"indices\",i)}) - ${jt(\"uniforms.pads\",i,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${jt(\"uniforms.x_shape\",i,t)})) {\n              break;\n            }\n            offset += k * i32(${jt(\"uniforms.x_strides\",i,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${n}\n            value = x[offset];\n          }\n      `},ln=(e,t,r)=>{let n=\"\";for(let i=t-1;i>=0;--i)n+=`\n                k = i32(${e.indicesGet(\"indices\",i)}) - ${jt(\"uniforms.pads\",i,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${jt(\"uniforms.x_shape\",i,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${jt(\"uniforms.x_shape\",i,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${jt(\"uniforms.x_strides\",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${n}\n              value = x[offset];\n          `},ns=(e,t,r)=>{let n=\"\";for(let i=t-1;i>=0;--i)n+=`\n                k = i32(${e.indicesGet(\"indices\",i)}) - ${jt(\"uniforms.pads\",i,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${jt(\"uniforms.x_shape\",i,t)})) {\n                  k = i32(${jt(\"uniforms.x_shape\",i,t)}) - 1;\n                }\n                offset += k * i32(${jt(\"uniforms.x_strides\",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${n}\n              value = x[offset];\n          `},Cd=(e,t,r)=>{let n=\"\";for(let i=t-1;i>=0;--i)n+=`\n                k = i32(${e.indicesGet(\"indices\",i)}) - ${jt(\"uniforms.pads\",i,r)};\n                if (k < 0)  {\n                  k += i32(${jt(\"uniforms.x_shape\",i,t)}]);\n                }\n                if (k >= i32(${jt(\"uniforms.x_shape\",i,t)})) {\n                  k -= i32(${jt(\"uniforms.x_shape\",i,t)});\n                }\n                offset += k * i32(${jt(\"uniforms.x_strides\",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${n}\n              value = x[offset];\n          `},Ru=(e,t,r)=>{switch(r.mode){case 0:return rn(e,t,r.pads.length);case 1:return ln(e,t,r.pads.length);case 2:return ns(e,t,r.pads.length);case 3:return Cd(e,t,r.pads.length);default:throw new Error(\"Invalid mode\")}},Nu=(e,t)=>{let r=$e.padShape(e[0].dims.slice(),t.pads),n=e[0].dims,i=$e.size(r),a=[{type:12,data:i},{type:6,data:t.pads}],s=e.length>=3&&e[2].data;t.mode===0&&a.push({type:s?e[2].dataType:1,data:t.value}),a.push(...It(e[0].dims,r));let u=[\"rank\"],d=c=>{let w=Ut(\"output\",e[0].dataType,r.length),g=rt(\"x\",e[0].dataType,n.length),l=g.type.value,v=Ru(w,n.length,t),S=[{name:\"output_size\",type:\"u32\"},{name:\"pads\",type:\"i32\",length:t.pads.length}];return t.mode===0&&S.push({name:\"constant_value\",type:s?l:\"f32\"}),`\n            ${c.registerUniforms(S).declareVariables(g,w)}\n            ${c.mainStart()}\n            ${c.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\n\n            let indices = ${w.offsetToIndices(\"global_idx\")};\n\n            var value = ${l}(0);\n            ${v}\n            output[global_idx] = value;\n        }`};return{name:\"Pad\",shaderCache:{hint:`${t.mode}${s}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil($e.size(r)/64)},programUniforms:a}),getShaderSource:d}},f=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),n=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,i=e[0].dims.length,a=new Int32Array(2*i).fill(0);if(e.length>=4){let u=e[3].getBigInt64Array();for(let d=0;d<u.length;d++)a[Number(u[d])]=Number(r[d]),a[Number(u[d])+i]=Number(r[d+u.length])}else r.forEach((u,d)=>a[Number(d)]=Number(u));let s=[];return a.forEach(u=>s.push(u)),{mode:t.mode,value:n,pads:s}}else return t},_=(e,t)=>{Zr(e.inputs);let r=f(e.inputs,t);e.compute(Nu(e.inputs,r),{inputs:[0]})}}),H,Ie,Le,lt,Pt,qt,dr,hr,Fr,fr,br,pr,gr,vr,Br,_n,gn,Wn,hn,en=N(()=>{bt(),Qt(),Yt(),or(),H=e=>{if(A.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error(\"Pool ops requires 1 input.\")},Ie=(e,t,r)=>{let n=t.format===\"NHWC\",i=e.dims.slice();n&&i.splice(1,0,i.pop());let a=Object.hasOwnProperty.call(t,\"dilations\"),s=t.kernelShape.slice(),u=t.strides.slice(),d=a?t.dilations.slice():[],c=t.pads.slice();xn.adjustPoolAttributes(r,i,s,u,d,c);let w=xn.computePoolOutputShape(r,i,u,d,s,c,t.autoPad),g=Object.assign({},t);a?Object.assign(g,{kernelShape:s,strides:u,pads:c,dilations:d,cacheKey:t.cacheKey}):Object.assign(g,{kernelShape:s,strides:u,pads:c,cacheKey:t.cacheKey});let l=w.slice();return l.push(l.splice(1,1)[0]),[g,n?l:w]},Le=(e,t)=>{let r=t.format===\"NHWC\",n=$e.size(e),i=$e.size(t.kernelShape),a=[{type:12,data:n},{type:12,data:i}],s=[{name:\"outputSize\",type:\"u32\"},{name:\"kernelSize\",type:\"u32\"}];if(t.kernelShape.length<=2){let u=t.kernelShape[t.kernelShape.length-1],d=t.strides[t.strides.length-1],c=t.pads[t.pads.length/2-1],w=t.pads[t.pads.length-1],g=!!(c+w);a.push({type:12,data:u},{type:12,data:d},{type:12,data:c},{type:12,data:w}),s.push({name:\"kw\",type:\"u32\"},{name:\"sw\",type:\"u32\"},{name:\"pwStart\",type:\"u32\"},{name:\"pwEnd\",type:\"u32\"});let l=!1;if(t.kernelShape.length===2){let v=t.kernelShape[t.kernelShape.length-2],S=t.strides[t.strides.length-2],$=t.pads[t.pads.length/2-2],U=t.pads[t.pads.length-2];l=!!($+U),a.push({type:12,data:v},{type:12,data:S},{type:12,data:$},{type:12,data:U}),s.push({name:\"kh\",type:\"u32\"},{name:\"sh\",type:\"u32\"},{name:\"phStart\",type:\"u32\"},{name:\"phEnd\",type:\"u32\"})}return[a,s,!0,g,l]}else{if(r)throw new Error(\"Pooling with kernelShape.length > 2 is not supported for NHWC format.\");let u=$e.computeStrides(t.kernelShape);a.push({type:12,data:u},{type:12,data:t.pads},{type:12,data:t.strides}),s.push({name:\"kernelStrides\",type:\"u32\",length:u.length},{name:\"pads\",type:\"u32\",length:t.pads.length},{name:\"strides\",type:\"u32\",length:t.strides.length});let d=t.pads.reduce((c,w)=>c+w);return[a,s,!!d,!1,!1]}},lt=(e,t,r,n,i,a,s,u,d,c,w,g)=>{let l=i.format===\"NHWC\",v=t.type.value,S=Ut(\"output\",t.type.tensor,n);if(i.kernelShape.length<=2){let $=\"\",U=\"\",q=\"\",L=r-(l?2:1);if(w?$=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${L}] = indices[${L}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${L}] < 0 || xIndices[${L}]\n                      >= uniforms.x_shape[${L}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset(\"xIndices\")}];\n                  ${a}\n                }`:$=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${L}] = indices[${L}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset(\"xIndices\")}];\n                  ${a}\n                }`,i.kernelShape.length===2){let se=r-(l?3:2);g?U=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${se}] = indices[${se}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${se}] < 0 || xIndices[${se}] >= uniforms.x_shape[${se}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:U=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${se}] = indices[${se}] * uniforms.sh - uniforms.phStart + j;\n                `,q=`\n              }\n            `}return`\n            ${e.registerUniforms(d).declareVariables(t,S)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\n\n              let indices = ${S.offsetToIndices(\"global_idx\")};\n              var xIndices = ${S.offsetToIndices(\"global_idx\")};\n\n              var value = ${v}(${u});\n              var pad = 0;\n              ${U}\n              ${$}\n              ${q}\n              ${s}\n\n              output[global_idx] = value;\n            }`}else{if(l)throw new Error(\"Pooling with kernelShape.length > 2 is not supported for NHWC format.\");let $=i.kernelShape.length,U=i.pads.length,q=\"\";return c?q=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset(\"xIndices\")}];\n                ${a}\n              }`:q=`\n              }\n              let x_val = x[${t.indicesToOffset(\"xIndices\")}];\n              ${a}\n            `,`\n            ${e.registerUniforms(d).declareVariables(t,S)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\n              let indices = ${S.offsetToIndices(\"global_idx\")};\n              var xIndices = ${S.offsetToIndices(\"global_idx\")};\n\n              var offsets: array<u32, ${$}>;\n\n              var value = ${v}(${u});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${$-1}u; j++) {\n                  offsets[j] = offset / ${jt(\"uniforms.kernelStrides\",\"j\",$)};\n                  offset -= offsets[j] * ${jt(\"uniforms.kernelStrides\",\"j\",$)};\n                }\n                offsets[${$-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-$}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${jt(\"uniforms.strides\",`j - ${r-$}u`,$)}\n                    + offsets[j - ${r-$}u] - ${jt(\"uniforms.pads\",\"j - 2u\",U)};\n                  ${q}\n              }\n              ${s}\n\n              output[global_idx] = value;\n            }`}},Pt=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,qt=e=>`${Pt(e)};${e.countIncludePad}`,dr=e=>`${Pt(e)};${e.storageOrder};${e.dilations}`,hr=e=>({format:e.format,autoPad:[\"NOTSET\",\"VALID\",\"SAME_UPPER\",\"SAME_LOWER\"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Fr=(e,t,r,n)=>{let[i,a]=Ie(t,n,r),s=rt(\"x\",t.dataType,t.dims.length),u=s.type.value,d=\"value += x_val;\",c=\"\";i.countIncludePad?c+=`value /= ${u}(uniforms.kernelSize);`:c+=`value /= ${u}(i32(uniforms.kernelSize) - pad);`;let[w,g,l,v,S]=Le(a,i);w.push(...It(t.dims,a));let $=[\"rank\"];return{name:e,shaderCache:{hint:`${n.cacheKey};${l};${v};${S}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil($e.size(a)/64)},programUniforms:w}),getShaderSource:U=>lt(U,s,t.dims.length,a.length,i,d,c,0,g,l,v,S)}},fr=e=>{let t=e.count_include_pad!==0,r=hr(e);if(r.ceilMode!==0)throw new Error(\"using ceil() in shape computation is not yet supported for AveragePool\");let n={countIncludePad:t,...r,cacheKey:\"\"};return{...n,cacheKey:qt(n)}},br=(e,t)=>{H(e.inputs),e.compute(Fr(\"AveragePool\",e.inputs[0],!1,t))},pr={autoPad:\"\",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},gr=e=>{let t=e.format;return{format:t,...pr,cacheKey:t}},vr=(e,t)=>{H(e.inputs),e.compute(Fr(\"GlobalAveragePool\",e.inputs[0],!0,t))},Br=(e,t,r,n)=>{let[i,a]=Ie(t,n,r),s=`\n      value = max(x_val, value);\n    `,u=\"\",d=rt(\"x\",t.dataType,t.dims.length),c=[\"rank\"],[w,g,l,v,S]=Le(a,i);return w.push(...It(t.dims,a)),{name:e,shaderCache:{hint:`${n.cacheKey};${l};${v};${S}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil($e.size(a)/64)},programUniforms:w}),getShaderSource:$=>lt($,d,t.dims.length,a.length,i,s,u,t.dataType===10?-65504:-1e5,g,l,v,S)}},_n=(e,t)=>{H(e.inputs),e.compute(Br(\"MaxPool\",e.inputs[0],!1,t))},gn=e=>{let t=e.storage_order,r=e.dilations,n=hr(e);if(t!==0)throw new Error(\"column major storage order is not yet supported for MaxPool\");if(n.ceilMode!==0)throw new Error(\"using ceil() in shape computation is not yet supported for MaxPool\");let i={storageOrder:t,dilations:r,...n,cacheKey:\"\"};return{...i,cacheKey:dr(i)}},Wn=e=>{let t=e.format;return{format:t,...pr,cacheKey:t}},hn=(e,t)=>{H(e.inputs),e.compute(Br(\"GlobalMaxPool\",e.inputs[0],!0,t))}}),un,Aa,pi,Ia,Rc=N(()=>{Qt(),Yt(),_r(),or(),un=(e,t)=>{if(e.length<2||e.length>3)throw new Error(\"DequantizeLinear requires 2 or 3 inputs.\");if(e.length===3&&e[1].dims===e[2].dims)throw new Error(\"x-scale and x-zero-point must have the same shape.\");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error(\"x and x-zero-point must have the same data type.\");if(e[0].dataType===6&&e.length>2)throw new Error(\"In the case of dequantizing int32 there is no zero point.\");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error(\"scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.\");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error(\"x and x-zero-point must have the same data type.\");if(e[1].dims.length!==e[2].dims.length)throw new Error(\"scale and zero-point inputs must have the same rank.\");if(!e[1].dims.map((r,n)=>r===e[2].dims[n]).reduce((r,n)=>r&&n,!0))throw new Error(\"scale and zero-point inputs must have the same shape.\")}if(t.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error(\"blockSize must be set only for block quantization.\");if(!e[1].dims.map((i,a)=>a===t.axis||i===e[0].dims[a]).reduce((i,a)=>i&&a,!0))throw new Error(\"For block qunatization, scale input shape to match the input shape except for the axis\");if(e[1].dims.length!==e[0].dims.length)throw new Error(\"For block qunatization the scale input rank must be the same as the x rank.\");let r=e[0].dims[t.axis],n=e[1].dims[t.axis];if(t.blockSize<Math.ceil(r/n)||t.blockSize>Math.ceil(r/(n-1)-1))throw new Error(\"blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].\")}},Aa=(e,t)=>{let r=$e.normalizeAxis(t.axis,e[0].dims.length),n=e[0].dataType,i=n===3,a=e[0].dims,s=e[1].dataType,u=$e.size(a),d=n===3||n===2,c=d?[Math.ceil($e.size(e[0].dims)/4)]:e[0].dims,w=e[1].dims,g=e.length>2?e[2]:void 0,l=g?d?[Math.ceil($e.size(g.dims)/4)]:g.dims:void 0,v=w.length===0||w.length===1&&w[0]===1,S=v===!1&&w.length===1,$=Cr(u),U=v&&(!d||$===4),q=U?$:1,L=U&&!d?$:1,se=rt(\"input\",d?12:n,c.length,L),X=rt(\"scale\",s,w.length),oe=g?rt(\"zero_point\",d?12:n,l.length):void 0,Ke=Ut(\"output\",s,a.length,q),je=[se,X];oe&&je.push(oe);let ft=[c,w];g&&ft.push(l);let Ot=[{type:12,data:u/q},{type:12,data:r},{type:12,data:t.blockSize},...It(...ft,a)],Vt=lr=>{let wr=[{name:\"output_size\",type:\"u32\"},{name:\"axis\",type:\"u32\"},{name:\"block_size\",type:\"u32\"}];return`\n      ${lr.registerUniforms(wr).declareVariables(...je,Ke)}\n      ${lr.mainStart()}\n          ${lr.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\n          let output_indices = ${Ke.offsetToIndices(\"global_idx\")};\n\n          // Set input x\n          ${d?`\n            let input = ${se.getByOffset(\"global_idx / 4\")};\n            let x_vec = ${i?\"unpack4xI8(input)\":\"unpack4xU8(input)\"};\n            let x_value = ${q===1?\"x_vec[global_idx % 4]\":\"x_vec\"};`:`let x_value = ${se.getByOffset(\"global_idx\")};`};\n\n          // Set scale input\n          ${v?`let scale_value= ${X.getByOffset(\"0\")}`:S?`\n            let scale_index = ${Ke.indicesGet(\"output_indices\",\"uniforms.axis\")};\n            let scale_value= ${X.getByOffset(\"scale_index\")};`:`\n            var scale_indices: ${X.type.indices} = output_indices;\n            let index = ${X.indicesGet(\"scale_indices\",\"uniforms.axis\")} / uniforms.block_size;\n            ${X.indicesSet(\"scale_indices\",\"uniforms.axis\",\"index\")};\n            let scale_value= ${X.getByIndices(\"scale_indices\")};`};\n\n          // Set zero-point input\n          ${oe?v?d?`\n                let zero_point_input = ${oe.getByOffset(\"0\")};\n                let zero_point_vec =  ${i?\"unpack4xI8(zero_point_input)\":\"unpack4xU8(zero_point_input)\"};\n                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${oe.getByOffset(\"0\")}`:S?d?`\n                let zero_point_index = ${Ke.indicesGet(\"output_indices\",\"uniforms.axis\")};\n                let zero_point_input = ${oe.getByOffset(\"zero_point_index / 4\")};\n                let zero_point_vec =  ${i?\"unpack4xI8(zero_point_input)\":\"unpack4xU8(zero_point_input)\"};\n                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`\n                let zero_point_index = ${Ke.indicesGet(\"output_indices\",\"uniforms.axis\")};\n                let zero_point_value = ${oe.getByOffset(\"zero_point_index\")};`:d?`\n                let zero_point_offset = ${X.indicesToOffset(\"scale_indices\")};\n                let zero_point_input = ${oe.getByOffset(\"zero_point_offset / 4\")};\n                let zero_point_vec = ${i?\"unpack4xI8(zero_point_input)\":\"unpack4xU8(zero_point_input)\"};\n                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${oe.getByIndices(\"scale_indices\")};`:`let zero_point_value = ${d?i?\"i32\":\"u32\":se.type.value}(0);`};\n      // Compute and write output\n      ${Ke.setByOffset(\"global_idx\",`${Ke.type.value}(x_value - zero_point_value) * scale_value`)};\n      }`};return{name:\"DequantizeLinear\",shaderCache:{hint:t.cacheKey,inputDependencies:oe?[\"rank\",\"rank\",\"rank\"]:[\"rank\",\"rank\"]},getShaderSource:Vt,getRunData:()=>({outputs:[{dims:a,dataType:s}],dispatchGroup:{x:Math.ceil(u/q/64),y:1,z:1},programUniforms:Ot})}},pi=(e,t)=>{un(e.inputs,t),e.compute(Aa(e.inputs,t))},Ia=e=>Gt({axis:e.axis,blockSize:e.blockSize})}),Bn,ws,Ed,Jd=N(()=>{bt(),Qt(),or(),Bn=(e,t,r)=>{let n=e===t,i=e<t&&r<0,a=e>t&&r>0;if(n||i||a)throw new Error(\"Range these inputs' contents are invalid.\")},ws=(e,t,r,n)=>{let i=Math.abs(Math.ceil((t-e)/r)),a=[i],s=i,u=[{type:12,data:s},{type:n,data:e},{type:n,data:r},...It(a)],d=c=>{let w=Ut(\"output\",n,a.length),g=w.type.value,l=[{name:\"outputSize\",type:\"u32\"},{name:\"start\",type:g},{name:\"delta\",type:g}];return`\n        ${c.registerUniforms(l).declareVariables(w)}\n        ${c.mainStart()}\n        ${c.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\n        output[global_idx] = uniforms.start + ${g}(global_idx) * uniforms.delta;\n      }`};return{name:\"Range\",shaderCache:{hint:`${n}`},getShaderSource:d,getRunData:()=>({outputs:[{dims:a,dataType:n}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u})}},Ed=e=>{let t=0,r=0,n=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],n=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],n=e.inputs[2].getFloat32Array()[0]),A.webgpu.validateInputContent&&Bn(t,r,n),e.compute(ws(t,r,n,e.inputs[0].dataType),{inputs:[]})}}),$d,ju,Nc,jc,Vc,Uc,Wc,Gc,qc,Hc,Kc,Zd,Xc,Qc,Yc,Jc,Zc,ep,tp,If=N(()=>{Qt(),Yt(),_r(),or(),$d=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error(\"Resize requires scales input values to be positive\")})),e.length>0){if(t.mode===\"linear\"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode===\"cubic\"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error(\"Resize requires scales input size to be 2 or 4 for cubic mode\")}},ju=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error(\"Resize requires axes input values to be positive and less than rank\")}));let n=new Array(r).fill(1);return t.forEach((i,a)=>n[i]=e[a]),n},Nc=(e,t,r,n,i,a)=>{let[s,u,d]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],c=e[0].dims.length;if(s>0&&e.length>s&&e[s].dims.length>0)e[s].getFloat32Array().forEach(w=>a.push(w));else if(t.coordinateTransformMode===\"tf_crop_and_resize\")throw new Error(\"Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize\");if(u>0&&e.length>u&&e[u].dims.length>0){if(e[u].getFloat32Array().forEach(w=>n.push(w)),n.length!==0&&n.length!==c&&r>=18&&n.length!==t.axes.length)throw new Error(\"Resize requires scales input size to be same as input rank or axes size for opset 18 and up\");$d(n,t),t.axes.length>0&&ju(n,t.axes,c).forEach((w,g)=>n[g]=w)}if(d>0&&e.length>d&&(e[d].getBigInt64Array().forEach(w=>i.push(Number(w))),i.length!==c||r>=18&&i.length===t.axes.length))throw new Error(\"Resize requires sizes input size to be same as input rank or axes size for opset 18 and up\");if(t.axes.length>0){if(n.length!==t.axes.length)throw new Error('Resize requires \"scales\" input size to be of axes rank when axes attributes is specified');if(i.length!==t.axes.length)throw new Error('Resize requires \"sizes\" input size to be of rank axes rank when axes attributes is specified')}if(typeof n<\"u\"&&typeof i<\"u\"&&n.length>0&&i.length>c)throw new Error(\"Resize requires only of scales or sizes to be specified\")},jc=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case\"asymmetric\":return`return ${t}(xResized) / ${t}(xScale);`;case\"pytorch_half_pixel\":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case\"tf_half_pixel_for_nn\":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case\"align_corners\":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case\"tf_crop_and_resize\":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case\"half_pixel_symmetric\":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case\"half_pixel\":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+\"}\",Vc=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case\"round_prefer_ceil\":return\"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }\";case\"floor\":return\"return floor(xOriginal);\";case\"ceil\":return\"return ceil(xOriginal);\";case\"round_prefer_floor\":return\"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }\";case\"simple\":default:if(t<11)return\"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }\";throw new Error(`Nearest mode ${e} is not supported`)}})()+\"}\",Uc=(e,t,r)=>{let n=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?n:e.slice();return t.length>0?(t.forEach((a,s)=>{n[a]=i[s],n[s+r]=i[t.length+s]}),n):i},Wc=(e,t,r,n)=>{let i=[];if(r.length>0)if(n.length>0){if(e.forEach(a=>i.push(a)),Math.max(...n)>e.length)throw new Error(\"axes is out of bound\");n.forEach((a,s)=>i[a]=r[s])}else r.forEach(a=>i.push(a));else{if(t.length===0)throw new Error(\"Resize requires either scales or sizes.\");i=e.map((a,s)=>Math.round(a*t[s]))}return i},Gc=(e,t,r)=>{let n=(()=>{switch(r.keepAspectRatioPolicy){case\"not_larger\":return r.axes.length>0?Math.min(...r.axes.map(a=>t[a]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case\"not_smaller\":return r.axes.length>0?Math.max(...r.axes.map(a=>t[a]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(a=>t[a]=n),r.axes.forEach(a=>i[a]=Math.round(e[a]*t[a]))):(t.fill(n,0,t.length),i.forEach((a,s)=>i[s]=Math.round(a*t[s]))),i},qc=(e,t,r,n,i)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet(\"output_indices\",\"i\")};\n        var scale = ${jt(\"uniforms.scales\",\"i\",n)};\n        var roi_low = ${jt(\"uniforms.roi\",\"i\",i)};\n        var roi_hi = ${jt(\"uniforms.roi\",`i + ${t.length}`,i)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${jt(\"uniforms.input_shape\",\"i\",t.length)};\n          var output_shape_i = ${jt(\"uniforms.output_shape\",\"i\",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Hc=(e,t,r,n,i,a,s)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${n.length}; i++) {\n        var output_index = ${t.indicesGet(\"output_indices\",\"i\")};\n        var input_index: u32;\n        var scale = ${jt(\"uniforms.scales\",\"i\",i)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${jt(\"uniforms.roi\",\"i\",a)};\n          var roi_hi = ${jt(\"uniforms.roi\",`i + ${r.length}`,a)};\n          var input_shape_i = ${jt(\"uniforms.input_shape\",\"i\",r.length)};\n          var output_shape_i = ${jt(\"uniforms.output_shape\",\"i\",n.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${s} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet(\"input_indices\",\"i\",\" input_index\")}\n      }\n      return input_indices;\n    }`,Kc=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet(\"input_indices\",\"i\")};\n        if (input_index < 0 || input_index >= ${jt(\"uniforms.input_shape\",\"i\",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,Zd=(e,t,r,n)=>e.rank>n?`\n    ${e.indicesSet(\"input_indices\",t,\"channel\")};\n    ${e.indicesSet(\"input_indices\",r,\"batch\")};\n`:\"\",Xc=(e,t,r,n,i)=>{let[a,s,u,d]=r.length===2?[-1,0,1,-1]:[0,2,3,1],c=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${c} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet(\"input_indices\",s,`max(0, min(row, ${r[s]} - 1))`)};\n      ${e.indicesSet(\"input_indices\",u,`max(0, min(col, ${r[u]} - 1))`)};\n      ${Zd(e,d,a,2)}\n      return ${e.getByIndices(\"input_indices\")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${c} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${c} = originalIndices[${s}];\n      var col:${c} = originalIndices[${u}];\n      ${n?`if (row < 0 || row > (${r[s]} - 1) || col < 0 || col > (${r[u]} - 1)) {\n        return ${i};\n      }`:\"\"};\n      row = max(0, min(row, ${r[s]} - 1));\n      col = max(0, min(col, ${r[u]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${d}])`:\"0\"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${a}])`:\"0\"};\n      var x11: ${c} = getInputValue(batch, channel, row1, col1);\n      var x12: ${c} = getInputValue(batch, channel, row1, col2);\n      var x21: ${c} = getInputValue(batch, channel, row2, col1);\n      var x22: ${c} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${c} = abs(row - ${c}(row1));\n      var dx2: ${c} = abs(${c}(row2) - row);\n      var dy1: ${c} = abs(col - ${c}(col1));\n      var dy2: ${c} = abs(${c}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Qc=(e,t,r,n,i,a,s,u,d,c)=>{let w=r.length===2,[g,l]=w?[0,1]:[2,3],v=e.type.value,S=$=>{let U=$===g?\"row\":\"col\";return`\n      fn ${U}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${v} {\n        var output_index = ${t.indicesGet(\"output_indices\",$)};\n        var originalIdx: ${v} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[$]},\n        ${n[$]}, ${r[$]}, ${a[$]}, ${a[$]} + ${r.length});\n        var fractOriginalIdx: ${v} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${u} && (originalIdx < 0 || originalIdx > (${r[$]} - 1))) {\n          return ${d};\n        }\n        var data: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${U}: ${v} = originalIdx + ${v}(i);\n          if (${U} < 0 || ${U} >= ${r[$]}) {\n            ${c?`coefs[i + 1] = 0.0;\n                        continue;`:u?`return ${d};`:`${U} = max(0, min(${U}, ${r[$]} - 1));`};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet(\"input_indices_copy\",$,`u32(${U})`)};\n          data[i + 1] = ${$===g?e.getByIndices(\"input_indices_copy\"):\"rowCubicInterpolation(input_indices_copy, output_indices)\"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${S(g)};\n    ${S(l)};\n  fn getCubicInterpolationCoefs(s: ${v}) -> array<${v}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${v} = 1.0 - absS;\n    var twoMinusAbsS: ${v} = 2.0 - absS;\n    var onePlusAbsS: ${v} = 1.0 + absS;\n    coeffs[0] = ((${s} * onePlusAbsS - 5 * ${s}) * onePlusAbsS + 8 * ${s}) * onePlusAbsS - 4 * ${s};\n    coeffs[1] = ((${s} + 2) * absS - (${s} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${s} + 2) * oneMinusAbsS - (${s} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${s} * twoMinusAbsS - 5 * ${s}) * twoMinusAbsS + 8 * ${s}) * twoMinusAbsS - 4 * ${s};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${v}, 4>, coefs: array<${v}, 4>) -> ${v} {\n    var coefsSum: ${v} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${v} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Yc=(e,t,r,n,i)=>{let[a,s,u,d,c]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],w=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${w} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet(\"input_indices\",s,`max(0, min(depth, ${r[s]} - 1))`)};\n      ${e.indicesSet(\"input_indices\",u,`max(0, min(height, ${r[u]} - 1))`)};\n      ${e.indicesSet(\"input_indices\",d,`max(0, min(width, ${r[d]} - 1))`)};\n      ${Zd(e,c,a,3)}\n      return ${e.getByIndices(\"input_indices\")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${w} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${w} = originalIndices[${s}];\n      var height:${w} = originalIndices[${u}];\n      var width:${w} = originalIndices[${d}];\n      ${n?`if (depth < 0 || depth > (${r[s]} - 1) || height < 0 || height > (${r[u]} - 1) || width < 0 || (width > ${r[d]} - 1)) {\n      return ${i};\n        }`:\"\"};\n\n    depth = max(0, min(depth, ${r[s]} - 1));\n      height = max(0, min(height, ${r[u]} - 1));\n      width = max(0, min(width, ${r[d]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${c}])`:\"0\"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${a}])`:\"0\"};\n\n      var x111: ${w} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${w} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${w} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${w} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${w} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${w} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${w} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${w} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${w} = abs(depth - ${w}(depth1));\n      var dx2: ${w} = abs(${w}(depth2) - depth);\n      var dy1: ${w} = abs(height - ${w}(height1));\n      var dy2: ${w} = abs(${w}(height2) - height);\n      var dz1: ${w} = abs(width - ${w}(width1));\n      var dz2: ${w} = abs(${w}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Jc=(e,t,r,n,i,a)=>{let s=e.dims,u=Uc(a,t.axes,s.length),d=Wc(s,n,i,t.axes),c=n.slice();n.length===0&&(c=s.map((L,se)=>L===0?1:d[se]/L),t.keepAspectRatioPolicy!==\"stretch\"&&(d=Gc(s,c,t)));let w=Ut(\"output\",e.dataType,d.length),g=rt(\"input\",e.dataType,s.length),l=$e.size(d),v=s.length===d.length&&s.every((L,se)=>L===d[se]),S=t.coordinateTransformMode===\"tf_crop_and_resize\",$=t.extrapolationValue,U=g.type.value,q=L=>`\n      ${v?\"\":`\n      ${jc(t.coordinateTransformMode,U)};\n      ${(()=>{switch(t.mode){case\"nearest\":return`\n              ${Kc(g,s)};\n              ${Vc(t.nearestMode,r,U)};\n              ${Hc(g,w,s,d,c.length,u.length,S)};\n              `;case\"linear\":return`\n              ${qc(w,s,d,c.length,u.length)};\n              ${(()=>{if(s.length===2||s.length===4)return`${Xc(g,w,s,S,$)}`;if(s.length===3||s.length===5)return`${Yc(g,w,s,S,$)}`;throw Error(\"Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.\")})()};\n            `;case\"cubic\":return`\n            ${(()=>{if(s.length===2||s.length===4)return`${Qc(g,w,s,d,c,u,t.cubicCoeffA,S,t.extrapolationValue,t.excludeOutside)}`;throw Error(\"Cubic mode only supports input dims 2 and 4 are supported in linear mode.\")})()};\n            `;default:throw Error(\"Invalid resize mode\")}})()};\n      `}\n      ${L.registerUniform(\"output_size\",\"u32\").registerUniform(\"scales\",\"f32\",c.length).registerUniform(\"roi\",\"f32\",u.length).declareVariables(g,w)}\n      ${L.mainStart()}\n        ${L.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\n        ${v?\"output[global_idx] = input[global_idx];\":`\n        let output_indices = ${w.offsetToIndices(\"global_idx\")};\n        var input_indices: ${g.type.indices};\n        ${(()=>{switch(t.mode){case\"nearest\":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${g.getByIndices(\"input_indices\")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case\"linear\":return`output[global_idx] = ${s.length===2||s.length===4?\"bilinearInterpolation\":\"trilinearInterpolation\"}(output_indices);`;case\"cubic\":return\"output[global_idx] = bicubicInterpolation(output_indices);\";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:\"Resize\",shaderCache:{hint:`${t.cacheKey}|${r}|${c.length>0?c:\"\"}|${i.length>0?i:\"\"}|${u.length>0?u:\"\"}|${v}|${s}`,inputDependencies:[\"rank\"]},getShaderSource:q,getRunData:()=>({outputs:[{dims:d,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:[{type:12,data:l},{type:1,data:c},{type:1,data:u},...It(s,d)]})}},Zc=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},ep=(e,t)=>{let r=[],n=[],i=[],a=Zc(e);if(t.antialias!==0)throw Error(\"Only default value (0) for Antialias attribute is supported\");Nc(e.inputs,t,a,r,n,i),e.compute(Jc(e.inputs[0],t,a,r,n,i),{inputs:[0]})},tp=e=>{let t=e.antialias,r=e.axes,n=e.coordinateTransformMode,i=e.cubicCoeffA,a=e.excludeOutside!==0,s=e.extrapolationValue,u=e.keepAspectRatioPolicy,d=e.mode,c=e.nearestMode===\"\"?\"simple\":e.nearestMode;return Gt({antialias:t,axes:r,coordinateTransformMode:n,cubicCoeffA:i,excludeOutside:a,extrapolationValue:s,keepAspectRatioPolicy:u,mode:d,nearestMode:c})}}),rp,np,sp,Ff=N(()=>{Qt(),Yt(),_r(),or(),rp=(e,t)=>{let[r,n,i,a]=e,{numHeads:s,rotaryEmbeddingDim:u}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!$e.areEqual(n.dims,[])&&!$e.areEqual(n.dims,[1])&&n.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${n.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(a.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${a.dims.length}`);if(!$e.areEqual(i.dims,a.dims))throw new Error(\"Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape\");if(u>0&&s===0)throw new Error(\"num_heads must be provided if rotary_embedding_dim is specified\");let d=r.dims[0],c=r.dims[r.dims.length-2],w=i.dims[0],g=$e.sizeFromDimension(r.dims,1)/c,l=u===0?i.dims[1]*2:g/s;if(u>l)throw new Error(\"rotary_embedding_dim must be less than or equal to head_size\");if(n.dims.length===2){if(d!==n.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${n.dims[0]}`);if(c!==n.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${n.dims[1]}`)}if(l/2!==i.dims[1]&&u/2!==i.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(c>w)throw new Error(\"Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported\")},np=(e,t)=>{let{interleaved:r,numHeads:n,rotaryEmbeddingDim:i,scale:a}=t,s=e[0].dims[0],u=$e.sizeFromDimension(e[0].dims,1),d=e[0].dims[e[0].dims.length-2],c=u/d,w=e[2].dims[1],g=i===0?w*2:c/n,l=new Array(s,d,c/g,g-w),v=$e.computeStrides(l),S=[{type:1,data:a},{type:12,data:l},{type:12,data:v},...e[0].dims.length===3?new Array({type:12,data:[u,c,g,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[u,g,d*g,1]}):[],...It(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],$=U=>{let q=rt(\"input\",e[0].dataType,e[0].dims.length),L=rt(\"position_ids\",e[1].dataType,e[1].dims.length),se=rt(\"cos_cache\",e[2].dataType,e[2].dims.length),X=rt(\"sin_cache\",e[3].dataType,e[3].dims.length),oe=Ut(\"output\",e[0].dataType,e[0].dims.length);return U.registerUniforms([{name:\"scale\",type:\"f32\"},{name:\"global_shape\",type:\"u32\",length:l.length},{name:\"global_strides\",type:\"u32\",length:v.length},{name:\"input_output_strides\",type:\"u32\",length:v.length}]),`\n        ${U.declareVariables(q,L,se,X,oe)}\n\n        ${U.mainStart(Mn)}\n          let half_rotary_emb_dim = uniforms.${se.name}_shape[1];\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\n          ${U.guardAgainstOutOfBoundsWorkgroupSizes(\"size\")}\n\n          if (bsnh[3] < half_rotary_emb_dim) {\n            let position_ids_idx =\n                ${L.broadcastedIndicesToOffset(\"bsnh.xy\",Ut(\"\",L.type.tensor,2))};\n            let position_id =\n                u32(${L.getByOffset(\"position_ids_idx\")}) + select(0, bsnh[1], position_ids_idx == 0);\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});\n            let j = i + select(half_rotary_emb_dim, 1, ${r});\n            let re = ${q.getByOffset(\"i\")} * ${se.get(\"position_id\",\"bsnh[3]\")} -\n                ${q.getByOffset(\"j\")} * ${X.get(\"position_id\",\"bsnh[3]\")};\n            ${oe.setByOffset(\"i\",\"re\")}\n            let im = ${q.getByOffset(\"i\")} * ${X.get(\"position_id\",\"bsnh[3]\")} +\n                ${q.getByOffset(\"j\")} * ${se.get(\"position_id\",\"bsnh[3]\")};\n            ${oe.setByOffset(\"j\",\"im\")}\n          } else {\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\n            ${oe.setByOffset(\"k\",q.getByOffset(\"k\"))}\n          }\n        }`};return{name:\"RotaryEmbedding\",shaderCache:{hint:Gt({interleaved:r}).cacheKey,inputDependencies:[\"rank\",\"rank\",\"rank\",\"rank\"]},getShaderSource:$,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil($e.size(l)/Mn)},programUniforms:S})}},sp=(e,t)=>{rp(e.inputs,t),e.compute(np(e.inputs,t))}}),ip,ap,op,Of=N(()=>{Qt(),Yt(),or(),ip=e=>{if(!e||e.length<3)throw new Error(\"layerNorm requires at least 3 inputs.\");let t=e[0],r=e[1],n=e[2];if(t.dataType!==r.dataType||t.dataType!==n.dataType)throw new Error(\"All inputs must have the same data type\");if(t.dims.length!==3&&t.dims.length!==2)throw new Error(\"Input must be 2D or 3D\");if(r.dims.length!==3&&r.dims.length!==2)throw new Error(\"Skip must be 2D or 3D\");let i=t.dims[t.dims.length-1],a=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error(\"Skip must have the same hidden size as input\");if(r.dims[r.dims.length-2]!==a)throw new Error(\"Skip must have the same sequence length as input\");if(n.dims.length!==1)throw new Error(\"Gamma must be 1D\");if(n.dims[n.dims.length-1]!==i)throw new Error(\"Gamma must have the same hidden size as input\");if(e.length>3){let s=e[3];if(s.dims.length!==1)throw new Error(\"Beta must be 1D\");if(s.dims[s.dims.length-1]!==i)throw new Error(\"Beta must have the same hidden size as input\")}if(e.length>4){let s=e[4];if(s.dims.length!==1)throw new Error(\"Bias must be 1D\");if(s.dims[s.dims.length-1]!==i)throw new Error(\"Bias must have the same hidden size as input\")}},ap=(e,t,r,n)=>{let i=t.simplified,a=e[0].dims,s=$e.size(a),u=a,d=s,c=a.slice(-1)[0],w=n?a.slice(0,-1).concat(1):[],g=!i&&e.length>3,l=e.length>4,v=n&&r>1,S=n&&r>2,$=r>3,U=64,q=Cr(c),L=[{type:12,data:d},{type:12,data:q},{type:12,data:c},{type:1,data:t.epsilon}],se=oe=>{let Ke=[{name:\"output_size\",type:\"u32\"},{name:\"components\",type:\"u32\"},{name:\"hidden_size\",type:\"u32\"},{name:\"epsilon\",type:\"f32\"}],je=[rt(\"x\",e[0].dataType,e[0].dims,q),rt(\"skip\",e[1].dataType,e[1].dims,q),rt(\"gamma\",e[2].dataType,e[2].dims,q)];g&&je.push(rt(\"beta\",e[3].dataType,e[3].dims,q)),l&&je.push(rt(\"bias\",e[4].dataType,e[4].dims,q)),je.push(Ut(\"output\",e[0].dataType,u,q)),v&&je.push(Ut(\"mean_output\",1,w)),S&&je.push(Ut(\"inv_std_output\",1,w)),$&&je.push(Ut(\"input_skip_bias_sum\",e[0].dataType,u,q));let ft=$r(e[0].dataType),Ot=$r(1,q);return`\n\n      ${oe.registerUniforms(Ke).declareVariables(...je)}\n      var<workgroup> sum_shared : array<${Ot}, ${U}>;\n      var<workgroup> sum_squared_shared : array<${Ot}, ${U}>;\n\n      ${oe.mainStart([U,1,1])}\n        let ix = local_id.x;\n        let iy = global_id.x / ${U};\n\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        var stride = hidden_size_vectorized / ${U};\n        let offset = ix * stride + iy * hidden_size_vectorized;\n        let offset1d = stride * ix;\n        if (ix == ${U-1}) {\n          stride = hidden_size_vectorized - stride * ix;\n        }\n        for (var i: u32 = 0; i < stride; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${l?\"bias[offset1d + i]\":ft+\"(0.0)\"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${$?\"input_skip_bias_sum[offset + i] = value;\":\"\"}\n          output[offset + i] = value;\n          let f32_value = ${Wr(ft,q,\"value\")};\n          sum_shared[ix] += f32_value;\n          sum_squared_shared[ix] += f32_value * f32_value;\n        }\n        workgroupBarrier();\n\n        var reduce_size : u32 = ${U};\n        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {\n          reduce_size = curr_size + (reduce_size & 1);\n          if (ix < curr_size) {\n            sum_shared[ix] += sum_shared[ix + reduce_size];\n            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];\n          }\n          workgroupBarrier();\n        }\n\n        let sum = sum_shared[0];\n        let square_sum = sum_squared_shared[0];\n        let mean = ${vn(\"sum\",q)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${vn(\"square_sum\",q)} / f32(uniforms.hidden_size) ${i?\"\":\"- mean * mean\"} + uniforms.epsilon);\n        ${v?\"mean_output[global_idx] = mean;\":\"\"}\n        ${S?\"inv_std_output[global_idx] = inv_std_dev;\":\"\"}\n\n        for (var i: u32 = 0; i < stride; i++) {\n          output[offset + i] = (output[offset + i] ${i?\"\":`- ${ft}(mean)`}) *\n            ${ft}(inv_std_dev) * gamma[offset1d + i]\n            ${g?\"+ beta[offset1d + i]\":\"\"};\n        }\n      }`},X=[{dims:u,dataType:e[0].dataType}];return r>1&&X.push({dims:w,dataType:1}),r>2&&X.push({dims:w,dataType:1}),r>3&&X.push({dims:a,dataType:e[0].dataType}),{name:\"SkipLayerNormalization\",shaderCache:{hint:`${q};${v};${S};${$}`,inputDependencies:e.map((oe,Ke)=>\"type\")},getShaderSource:se,getRunData:()=>({outputs:X,dispatchGroup:{x:Math.ceil(d/c)},programUniforms:L})}},op=(e,t)=>{ip(e.inputs);let r=[0];e.outputCount>1&&r.push(-3),e.outputCount>2&&r.push(-3),e.outputCount>3&&r.push(3),e.compute(ap(e.inputs,t,e.outputCount,!1),{outputs:r})}}),lp,Vu,up,ec,dp,cp,pp,hp,zf=N(()=>{Qt(),Yt(),_r(),or(),lp=(e,t)=>{if(!e||e.length<1)throw new Error(\"too few inputs\");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error(\"axes, starts and ends must have the same length\")}else if(t.starts.length!==t.ends.length)throw new Error(\"starts and ends must have the same length\");e.slice(1).forEach((r,n)=>{if(e[n+1].dataType!==6&&e[n+1].dataType!==7)throw new Error(`Input ${n} must be an array of int32 or int64`)})},Vu=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(n=>r.push(Number(n)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(n=>r.push(Number(n)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},up=(e,t)=>{if(e.length>1){let r=Vu(e,1),n=Vu(e,2),i=Vu(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),Gt({starts:r,ends:n,axes:i})}else return t},ec=(e,t,r,n,i)=>{let a=e;return e<0&&(a+=r[n[t]]),i[t]<0?Math.max(0,Math.min(a,r[n[t]]-1)):Math.max(0,Math.min(a,r[n[t]]))},dp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${jt(\"uniforms.input_shape\",\"i\",r.length)};\n            let steps_i = ${jt(\"uniforms.steps\",\"i\",r.length)};\n            let signs_i = ${jt(\"uniforms.signs\",\"i\",r.length)};\n            let starts_i = ${jt(\"uniforms.starts\",\"i\",r.length)};\n            var output_index = ${t.indicesGet(\"output_indices\",\"i\")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet(\"input_indices\",\"i\",\"input_index\")};\n          }\n          return input_indices;\n      }`,cp=(e,t)=>{let r=e[0].dims,n=$e.size(r),i=t.axes.length>0?$e.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],a=Vu(e,4);a.forEach(q=>q!==0||(()=>{throw new Error(\"step cannot be 0\")})),a.length===0&&(a=Array(i.length).fill(1));let s=t.starts.map((q,L)=>ec(q,L,r,i,a)),u=t.ends.map((q,L)=>ec(q,L,r,i,a));if(i.length!==s.length||i.length!==u.length)throw new Error(\"start, ends and axes should have the same number of elements\");if(i.length!==r.length)for(let q=0;q<r.length;++q)i.includes(q)||(s.splice(q,0,0),u.splice(q,0,r[q]),a.splice(q,0,1));let d=a.map(q=>Math.sign(q));a.forEach((q,L,se)=>{if(q<0){let X=(u[L]-s[L])/q,oe=s[L],Ke=oe+X*a[L];s[L]=Ke,u[L]=oe,se[L]=-q}});let c=r.slice(0);i.forEach((q,L)=>{c[q]=Math.ceil((u[q]-s[q])/a[q])});let w={dims:c,dataType:e[0].dataType},g=Ut(\"output\",e[0].dataType,c.length),l=rt(\"input\",e[0].dataType,e[0].dims.length),v=$e.size(c),S=[{name:\"outputSize\",type:\"u32\"},{name:\"starts\",type:\"u32\",length:s.length},{name:\"signs\",type:\"i32\",length:d.length},{name:\"steps\",type:\"u32\",length:a.length}],$=[{type:12,data:v},{type:12,data:s},{type:6,data:d},{type:12,data:a},...It(e[0].dims,c)],U=q=>`\n      ${q.registerUniforms(S).declareVariables(l,g)}\n        ${dp(l,g,r)}\n        ${q.mainStart()}\n          ${q.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\n          let output_indices = ${g.offsetToIndices(\"global_idx\")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${g.setByOffset(\"global_idx\",l.getByIndices(\"input_indices\"))}\n      }`;return{name:\"Slice\",shaderCache:{hint:`${d.length}_${s.length}_${a.length}`,inputDependencies:[\"rank\"]},getShaderSource:U,getRunData:()=>({outputs:[w],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:$})}},pp=(e,t)=>{lp(e.inputs,t);let r=up(e.inputs,t);e.compute(cp(e.inputs,r),{inputs:[0]})},hp=e=>{let t=e.starts,r=e.ends,n=e.axes;return Gt({starts:t,ends:r,axes:n})}}),fp,mp,_p,gp,Df=N(()=>{Qt(),Yt(),_r(),or(),fp=e=>{if(!e||e.length!==1)throw new Error(\"Softmax op requires 1 input.\")},mp=(e,t)=>{let r=e.dims,n=$e.size(r),i=64,a=t.axis;if(a<0&&(a=r.length+a),a<r.length-1)throw new Error(\"softmax only supports last axis for now.\");let s=r[a],u=n/s,d=Cr(s),c=s/d,w=(U,q)=>q===4?`max(max(${U}.x, ${U}.y), max(${U}.z, ${U}.w))`:q===2?`max(${U}.x, ${U}.y)`:q===3?`max(max(${U}.x, ${U}.y), ${U}.z)`:U,g=rt(\"x\",e.dataType,e.dims,d),l=Ut(\"result\",e.dataType,e.dims,d),v=g.type.value,S=$r(e.dataType)===\"f32\"?`var threadMax = ${v}(-3.402823e+38f);`:`var threadMax = ${v}(-65504.0h);`,$=U=>`\n      var<workgroup> rowMaxShared : ${v};\n      var<workgroup> rowSumShared : ${v};\n      var<workgroup> threadShared : array<${v}, ${i}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${v} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${v}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${U.registerUniform(\"packedCols\",\"i32\").declareVariables(g,l)}\n      ${U.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${i};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${S}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${v}(${w(\"threadShared[0]\",d)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${v}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${v}(${vn(\"threadShared[0]\",d)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:\"Softmax\",shaderCache:{hint:`${d}`,inputDependencies:[\"type\"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:u},programUniforms:[{type:6,data:c}]}),getShaderSource:$}},_p=(e,t)=>{fp(e.inputs),e.compute(mp(e.inputs[0],t))},gp=e=>Gt({axis:e.axis})}),wp,yp,bp,Mp,vp,xp,Tp,Bf=N(()=>{Qt(),Yt(),_r(),or(),wp=e=>{if(!e||e.length<1)throw new Error(\"too few inputs\")},yp=(e,t)=>{let r=[],n=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),n=r.length),Gt({numOutputs:n,axis:t.axis,splitSizes:r})},bp=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${jt(\"uniforms.size_in_split_axis\",\"i\",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Mp=e=>{let t=e.length,r=[];for(let n=0;n<t;++n){let i=e[n].setByIndices(\"indices\",\"input[global_idx]\");t===1?r.push(i):n===0?r.push(`if (output_number == ${n}u) { ${i} }`):n===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${n}) { ${i} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},vp=(e,t)=>{let r=e[0].dims,n=$e.size(r),i=e[0].dataType,a=$e.normalizeAxis(t.axis,r.length),s=new Array(t.numOutputs),u=rt(\"input\",i,r.length),d=new Array(t.numOutputs),c=[],w=[],g=0,l=[{type:12,data:n}];for(let S=0;S<t.numOutputs;S++){g+=t.splitSizes[S],d[S]=g;let $=r.slice();$[a]=t.splitSizes[S],w.push($),s[S]=Ut(`output${S}`,i,$.length),c.push({dims:w[S],dataType:e[0].dataType})}l.push({type:12,data:d},...It(r,...w));let v=S=>`\n  ${S.registerUniform(\"input_size\",\"u32\").registerUniform(\"size_in_split_axis\",\"u32\",d.length).declareVariables(u,...s)}\n  ${bp(d.length)}\n  ${Mp(s)}\n\n  ${S.mainStart()}\n    ${S.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.input_size\")}\n\n    var indices = ${u.offsetToIndices(\"global_idx\")};\n    var index = ${u.indicesGet(\"indices\",a)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${jt(\"uniforms.size_in_split_axis\",\"output_number - 1u\",d.length)};\n      ${u.indicesSet(\"indices\",a,\"index\")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:\"Split\",shaderCache:{hint:t.cacheKey,inputDependencies:[\"rank\"]},getShaderSource:v,getRunData:()=>({outputs:c,dispatchGroup:{x:Math.ceil(n/64)},programUniforms:l})}},xp=(e,t)=>{wp(e.inputs);let r=e.inputs.length===1?t:yp(e.inputs,t);e.compute(vp(e.inputs,r),{inputs:[0]})},Tp=e=>{let t=e.axis,r=e.splitSizes,n=e.numOutputs<0?r.length:e.numOutputs;if(n!==r.length)throw new Error(\"numOutputs and splitSizes lengh must be equal\");return Gt({axis:t,numOutputs:n,splitSizes:r})}}),Sp,kp,Cp,Lf=N(()=>{Qt(),Yt(),or(),Sp=(e,t,r,n,i)=>{let a=Ut(\"output_data\",i,r.length,4),s=rt(\"a_data\",t[1].dataType,t[1].dims.length,4),u=rt(\"b_data\",t[2].dataType,t[2].dims.length,4),d=rt(\"c_data\",t[0].dataType,t[0].dims.length,4),c,w=(g,l,v)=>`select(${l}, ${g}, ${v})`;if(!n)c=a.setByOffset(\"global_idx\",w(s.getByOffset(\"global_idx\"),u.getByOffset(\"global_idx\"),d.getByOffset(\"global_idx\")));else{let g=(l,v,S=\"\")=>{let $=`a_data[index_a${v}][component_a${v}]`,U=`b_data[index_b${v}][component_b${v}]`,q=`bool(c_data[index_c${v}] & (0xffu << (component_c${v} * 8)))`;return`\n            let output_indices${v} = ${a.offsetToIndices(`global_idx * 4u + ${v}u`)};\n            let offset_a${v} = ${s.broadcastedIndicesToOffset(`output_indices${v}`,a)};\n            let offset_b${v} = ${u.broadcastedIndicesToOffset(`output_indices${v}`,a)};\n            let offset_c${v} = ${d.broadcastedIndicesToOffset(`output_indices${v}`,a)};\n            let index_a${v} = offset_a${v} / 4u;\n            let index_b${v} = offset_b${v} / 4u;\n            let index_c${v} = offset_c${v} / 4u;\n            let component_a${v} = offset_a${v} % 4u;\n            let component_b${v} = offset_b${v} % 4u;\n            let component_c${v} = offset_c${v} % 4u;\n            ${l}[${v}] = ${S}(${w($,U,q)});\n          `};i===9?c=`\n            var data = vec4<u32>(0);\n            ${g(\"data\",0,\"u32\")}\n            ${g(\"data\",1,\"u32\")}\n            ${g(\"data\",2,\"u32\")}\n            ${g(\"data\",3,\"u32\")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:c=`\n            ${g(\"output_data[global_idx]\",0)}\n            ${g(\"output_data[global_idx]\",1)}\n            ${g(\"output_data[global_idx]\",2)}\n            ${g(\"output_data[global_idx]\",3)}\n          `}return`\n        ${e.registerUniform(\"vec_size\",\"u32\").declareVariables(d,s,u,a)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.vec_size\")}\n        ${c}\n      }`},kp=e=>{let t=e[1].dims,r=e[2].dims,n=e[0].dims,i=e[1].dataType,a=!($e.areEqual(t,r)&&$e.areEqual(r,n)),s=t,u=$e.size(t);if(a){let c=tn.calcShape(tn.calcShape(t,r,!1),n,!1);if(!c)throw new Error(\"Can't perform where op on the given tensors\");s=c,u=$e.size(s)}let d=Math.ceil(u/4);return{name:\"Where\",shaderCache:{inputDependencies:[\"rank\",\"rank\",\"rank\"]},getShaderSource:c=>Sp(c,e,s,a,i),getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:d},...It(n,t,r,s)]})}},Cp=e=>{e.compute(kp(e.inputs))}}),Ep,Rf=N(()=>{Zu(),Zs(),ed(),td(),rd(),nd(),sd(),ha(),od(),ld(),Yd(),dd(),su(),fd(),md(),wd(),yd(),bd(),vd(),xd(),Td(),zl(),kd(),Mu(),C(),en(),Rc(),Jd(),Fi(),If(),Ff(),Of(),zf(),Df(),Bf(),Su(),fs(),Ji(),Lf(),Ep=new Map([[\"Abs\",[Fo]],[\"Acos\",[Oo]],[\"Acosh\",[Bi]],[\"Add\",[ol]],[\"ArgMax\",[Mo,Js]],[\"ArgMin\",[bo,Js]],[\"Asin\",[zo]],[\"Asinh\",[Do]],[\"Atan\",[Li]],[\"Atanh\",[Bo]],[\"Attention\",[ko]],[\"AveragePool\",[br,fr]],[\"BatchNormalization\",[$o]],[\"BiasAdd\",[Di]],[\"BiasSplitGelu\",[il]],[\"Cast\",[Ri,Lo]],[\"Ceil\",[ei]],[\"Clip\",[No]],[\"Concat\",[gl,wl]],[\"Conv\",[pa,da]],[\"ConvTranspose\",[ad,Gl]],[\"Cos\",[jo]],[\"Cosh\",[Vo]],[\"CumSum\",[ga,Xl]],[\"DepthToSpace\",[ya,ud]],[\"DequantizeLinear\",[pi,Ia]],[\"Div\",[ll]],[\"Einsum\",[ru,va]],[\"Elu\",[Ni,Is]],[\"Equal\",[ul]],[\"Erf\",[ji]],[\"Exp\",[Uo]],[\"Expand\",[hd]],[\"FastGelu\",[au]],[\"Floor\",[Wo]],[\"FusedConv\",[pa,da]],[\"Gather\",[lu,Ta]],[\"GatherElements\",[hu,pu]],[\"GatherBlockQuantized\",[gd,uu]],[\"Gelu\",[Go]],[\"Gemm\",[gu,_u]],[\"GlobalAveragePool\",[vr,gr]],[\"GlobalMaxPool\",[hn,Wn]],[\"Greater\",[ta]],[\"GreaterOrEqual\",[hl]],[\"GroupQueryAttention\",[$u,Cu]],[\"HardSigmoid\",[Wi,Qo]],[\"InstanceNormalization\",[Fu]],[\"LayerNormalization\",[Du]],[\"LeakyRelu\",[Vi,Is]],[\"Less\",[pl]],[\"LessOrEqual\",[ra]],[\"Log\",[tl]],[\"MatMul\",[Ol]],[\"MatMulNBits\",[Sd,ur]],[\"MaxPool\",[_n,gn]],[\"Mul\",[ea]],[\"MultiHeadAttention\",[bu,yu]],[\"Neg\",[Ho]],[\"Not\",[qo]],[\"Pad\",[_]],[\"Pow\",[dl]],[\"QuickGelu\",[nl,Is]],[\"Range\",[Ed]],[\"Reciprocal\",[Ko]],[\"ReduceMin\",[Ai]],[\"ReduceMean\",[ho]],[\"ReduceMax\",[_o]],[\"ReduceSum\",[wo]],[\"ReduceProd\",[go]],[\"ReduceL1\",[fo]],[\"ReduceL2\",[Pi]],[\"ReduceLogSum\",[yo]],[\"ReduceLogSumExp\",[mo]],[\"ReduceSumSquare\",[Ii]],[\"Relu\",[Ui]],[\"Resize\",[ep,tp]],[\"RotaryEmbedding\",[sp]],[\"Sigmoid\",[Xo]],[\"Sin\",[Yo]],[\"Sinh\",[Jo]],[\"Slice\",[pp,hp]],[\"SkipLayerNormalization\",[op]],[\"Split\",[xp,Tp]],[\"Sqrt\",[Gi]],[\"Softmax\",[_p,gp]],[\"Sub\",[cl]],[\"Tan\",[Zo]],[\"Tanh\",[Hi]],[\"ThresholdedRelu\",[el,Is]],[\"Tile\",[Tu]],[\"Transpose\",[Va,Mi]],[\"Where\",[Cp]]])}),$p,Nf=N(()=>{bt(),bn(),or(),$p=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,r,n,i){He(e.programInfo.name);let a=this.backend.device,s=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let u=[];for(let c of t)u.push({binding:u.length,resource:{buffer:c.buffer}});for(let c of r)u.push({binding:u.length,resource:{buffer:c.buffer}});i&&u.push({binding:u.length,resource:i});let d=a.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});if(this.backend.sessionStatus===\"capturing\"){let c={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:d,dispatchGroup:n};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(c)}s.setPipeline(e.computePipeline),s.setBindGroup(0,d),s.dispatchWorkgroups(...n),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType===\"at-passes\")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),We(e.programInfo.name)}dispose(){}build(e,t){He(e.name);let r=this.backend.device,n=[];r.features.has(\"shader-f16\")&&n.push(\"enable f16;\");let i=Ra(t,this.backend.device.limits),a=e.getShaderSource(i),s=`${n.join(`\n`)}\n${i.additionalImplementations}\n${a}`,u=r.createShaderModule({code:s,label:e.name});jr(\"verbose\",()=>`[WebGPU] ${e.name} shader code: ${s}`);let d=r.createComputePipeline({compute:{module:u,entryPoint:\"main\"},layout:\"auto\",label:e.name});return We(e.name),{programInfo:e,computePipeline:d,uniformVariablesInfo:i.variablesInfo}}normalizeDispatchGroupSize(e){let t=typeof e==\"number\"?e:e.x,r=typeof e==\"number\"?1:e.y||1,n=typeof e==\"number\"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=i&&r<=i&&n<=i)return[t,r,n];let a=t*r*n,s=Math.ceil(Math.sqrt(a));if(s>i){if(s=Math.ceil(Math.cbrt(a)),s>i)throw new Error(\"Total dispatch size exceeds WebGPU maximum.\");return[s,s,s]}else return[s,s,1]}}}),Pp,Ap,Ip,Fp,jf=N(()=>{bt(),Qt(),bn(),m(),Ar(),Rf(),Nf(),Pp=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let n=0;n<e.length;++n){let i=e[n].dataType;switch(t[n]){case\"none\":{r.push(\"\");break}case\"type\":{r.push(`${i}`);break}case\"rank\":{let a=e[n].dims.length;r.push(`${i};${a}`);break}case\"dims\":{let a=e[n].dims.join(\",\");r.push(`${i};${a}`);break}default:throw new Error(`unsupported input dependency: ${t[n]}`)}}return r.join(\"|\")},Ap=(e,t,r)=>{var i,a;let n=e.name;return(i=e.shaderCache)!=null&&i.hint&&(n+=\"[\"+e.shaderCache.hint+\"]\"),n+=\":\"+r+`:${Pp(t,((a=e.shaderCache)==null?void 0:a.inputDependencies)??new Array(t.length).fill(\"dims\"))}`,n},Ip=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},Fp=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus=\"default\",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error(\"currentKernelCustomData(): currentKernelId is null. (should not happen)\");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let r=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:r};t.features.has(\"chromium-experimental-timestamp-query-inside-passes\")?r.push(\"chromium-experimental-timestamp-query-inside-passes\"):t.features.has(\"timestamp-query\")&&r.push(\"timestamp-query\"),t.features.has(\"shader-f16\")&&r.push(\"shader-f16\"),this.device=await t.requestDevice(n),this.adapterInfo=new Ip(t.info||await t.requestAdapterInfo()),this.gpuDataManager=rr(this),this.programManager=new $p(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ps(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,\"device\",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,\"adapter\",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<\"u\"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};this.queryType===\"at-passes\"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;He(),this.endComputePass();let e;this.queryType!==\"none\"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!==\"none\"&&e.mapAsync(GPUMapMode.READ).then(()=>{var n;let t=new BigUint64Array(e.getMappedRange()),r=this.pendingQueries.get(e);for(let i=0;i<t.length/2;i++){let a=r[i],s=a.kernelId,u=this.kernels.get(s),d=u.kernelType,c=u.kernelName,w=a.programName,g=a.inputTensorViews,l=a.outputTensorViews,v=t[i*2],S=t[i*2+1];typeof this.queryTimeBase>\"u\"&&(this.queryTimeBase=v);let $=Number(v-this.queryTimeBase),U=Number(S-this.queryTimeBase);if(!Number.isSafeInteger($)||!Number.isSafeInteger(U))throw new RangeError(\"incorrect timestamp range\");if((n=this.env.webgpu.profiling)!=null&&n.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:g.map(q=>({dims:q.dims,dataType:On(q.dataType)})),outputsMetadata:l.map(q=>({dims:q.dims,dataType:On(q.dataType)})),kernelId:s,kernelType:d,kernelName:c,programName:w,startTime:$,endTime:U});else{let q=\"\";g.forEach((se,X)=>{q+=`input[${X}]: [${se.dims}] | ${On(se.dataType)}, `});let L=\"\";l.forEach((se,X)=>{L+=`output[${X}]: [${se.dims}] | ${On(se.dataType)}, `}),console.log(`[profiling] kernel \"${s}|${d}|${c}|${w}\" ${q}${L}execution time: ${U-$} ns`)}Ee(\"GPU\",`${w}::${v}::${S}`)}e.unmap(),this.pendingQueries.delete(e)}),We()}run(e,t,r,n,i,a){He(e.name);let s=[];for(let L=0;L<t.length;++L){let se=t[L].data;if(se===0)continue;let X=this.gpuDataManager.get(se);if(!X)throw new Error(`no GPU data for input: ${se}`);s.push(X)}let{outputs:u,dispatchGroup:d,programUniforms:c}=e.getRunData(t),w=r.length===0?u.map((L,se)=>se):r;if(w.length!==u.length)throw new Error(`Output size ${w.length} must be equal to ${u.length}.`);let g=[],l=[];for(let L=0;L<u.length;++L){if(!Number.isInteger(w[L])||w[L]<-3||w[L]>=a)throw new Error(`Invalid output index: ${w[L]}`);if(w[L]===-3)continue;let se=w[L]===-1,X=w[L]===-2,oe=se||X?i(u[L].dataType,u[L].dims):n(w[L],u[L].dataType,u[L].dims);if(g.push(oe),oe.data===0)continue;let Ke=this.gpuDataManager.get(oe.data);if(!Ke)throw new Error(`no GPU data for output: ${oe.data}`);if(se&&this.temporaryData.push(Ke),X){let je=this.kernelPersistentData.get(this.currentKernelId);je||(je=[],this.kernelPersistentData.set(this.currentKernelId,je)),je.push(Ke)}l.push(Ke)}if(s.length!==t.length||l.length!==g.length){if(l.length===0)return We(e.name),g;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let v;if(c){let L=0,se=[];c.forEach(je=>{let ft=typeof je.data==\"number\"?[je.data]:je.data;if(ft.length===0)return;let Ot=je.type===10?2:4,Vt,lr;je.type===10?(lr=ft.length>4?16:ft.length>2?8:ft.length*Ot,Vt=ft.length>4?16:Ot*ft.length):(lr=ft.length<=2?ft.length*Ot:16,Vt=16),L=Math.ceil(L/lr)*lr,se.push(L);let wr=je.type===10?8:4;L+=ft.length>4?Math.ceil(ft.length/wr)*Vt:ft.length*Ot});let X=16;L=Math.ceil(L/X)*X;let oe=new ArrayBuffer(L);c.forEach((je,ft)=>{let Ot=se[ft],Vt=typeof je.data==\"number\"?[je.data]:je.data;if(je.type===6)new Int32Array(oe,Ot,Vt.length).set(Vt);else if(je.type===12)new Uint32Array(oe,Ot,Vt.length).set(Vt);else if(je.type===10)new Uint16Array(oe,Ot,Vt.length).set(Vt);else if(je.type===1)new Float32Array(oe,Ot,Vt.length).set(Vt);else throw new Error(`Unsupported uniform type: ${On(je.type)}`)});let Ke=this.gpuDataManager.create(L,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(Ke.buffer,0,oe,0,L),this.gpuDataManager.release(Ke.id),v={offset:0,size:L,buffer:Ke.buffer}}let S=this.programManager.normalizeDispatchGroupSize(d),$=S[1]===1&&S[2]===1,U=Ap(e,t,$),q=this.programManager.getArtifact(U);if(q||(q=this.programManager.build(e,S),this.programManager.setArtifact(U,q),jr(\"info\",()=>`[artifact] key: ${U}, programName: ${e.name}`)),c&&q.uniformVariablesInfo){if(c.length!==q.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${q.uniformVariablesInfo.length}, got ${c.length} in program \"${q.programInfo.name}\".`);for(let L=0;L<c.length;L++){let se=c[L],X=se.type,oe=typeof se.data==\"number\"?1:se.data.length,[Ke,je]=q.uniformVariablesInfo[L];if(X!==Ke||oe!==je)throw new Error(`Uniform variable ${L} mismatch: expect type ${Ke} with size ${je}, got type ${X} with size ${oe} in program \"${q.programInfo.name}\".`)}}if(jr(\"info\",()=>`[ProgramManager] run \"${e.name}\" (key=${U}) with ${S[0]}x${S[1]}x${S[2]}`),this.queryType!==\"none\"||this.sessionStatus===\"capturing\"){let L={kernelId:this.currentKernelId,programName:q.programInfo.name,inputTensorViews:t,outputTensorViews:g};this.pendingKernels.push(L),this.sessionStatus===\"capturing\"&&this.capturedPendingKernels.get(this.currentSessionId).push(L)}return this.programManager.run(q,s,l,S,v),We(e.name),g}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,r,n){let i=Ep.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let a={kernelType:e,kernelName:n,kernelEntry:i[0],attributes:[i[1],r]};this.kernels.set(t,a)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let r of t)this.gpuDataManager.release(r.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,r){let n=this.kernels.get(e);if(!n)throw new Error(`kernel not created: ${e}`);let i=n.kernelType,a=n.kernelName,s=n.kernelEntry,u=n.attributes;if(this.currentKernelId!==null)throw new Error(`kernel \"[${i}] ${a}\" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),jr(\"info\",()=>`[WebGPU] Start to run kernel \"[${i}] ${a}\"...`);let d=this.env.debug;this.temporaryData=[];try{return d&&this.device.pushErrorScope(\"validation\"),s(t,u[1]),0}catch(c){return r.push(Promise.resolve(`[WebGPU] Kernel \"[${i}] ${a}\" failed. ${c}`)),1}finally{d&&r.push(this.device.popErrorScope().then(c=>c?`GPU validation error for kernel \"[${i}] ${a}\": ${c.message}`:null));for(let c of this.temporaryData)this.gpuDataManager.release(c.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,r,n){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let a=i.get(t),s=this.gpuDataManager.registerExternalBuffer(r,n,a==null?void 0:a[1]);return i.set(t,[s,r]),s}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach(r=>this.gpuDataManager.unregisterExternalBuffer(r[1])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,r){return async()=>{let n=await xt(this,e,t);return be(n.buffer,r)}}writeTimestamp(e){this.queryType===\"inside-passes\"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType=\"none\",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)===\"default\"||(typeof this.env.trace>\"u\"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has(\"chromium-experimental-timestamp-query-inside-passes\")?this.queryType=\"inside-passes\":this.device.features.has(\"timestamp-query\")&&(this.queryType=\"at-passes\"),this.queryType!==\"none\"&&typeof this.querySet>\"u\"&&(this.querySet=this.device.createQuerySet({type:\"timestamp\",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){jr(\"info\",\"captureBegin\"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus=\"capturing\"}captureEnd(){jr(\"info\",\"captureEnd\"),this.flush(),this.sessionStatus=\"default\"}replay(){jr(\"info\",\"replay\"),this.sessionStatus=\"replaying\";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),r=e.length;this.pendingKernels=[];for(let n=0;n<r;n++){let i=this.getComputePassEncoder(),a=e[n];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(a.computePipeline),i.setBindGroup(0,a.bindGroup),i.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!==\"none\"&&this.pendingKernels.push(t[n]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType===\"at-passes\")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus=\"default\"}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),Op={};T(Op,{init:()=>Dp});var Pd,zp,Dp,Vf=N(()=>{Qt(),jf(),bn(),Yt(),Pd=class Af{constructor(t,r,n,i){this.module=t,this.dataType=r,this.data=n,this.dims=i}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error(\"Invalid data type\");let t=$e.size(this.dims);return t===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}getFloat32Array(){if(this.dataType!==1)throw new Error(\"Invalid data type\");let t=$e.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error(\"Invalid data type\");let t=$e.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error(\"Invalid data type\");let t=$e.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if($e.size(t)!==$e.size(this.dims))throw new Error(\"Invalid new shape\");return new Af(this.module,this.dataType,this.data,t)}},zp=class{constructor(e,t,r){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo;let n=e.HEAPU32,i=r>>>2;this.opKernelContext=n[i++];let a=n[i++];this.outputCount=n[i++],this.customDataOffset=n[i++],this.customDataSize=n[i++];let s=[];for(let u=0;u<a;u++){let d=n[i++],c=n[i++],w=n[i++],g=[];for(let l=0;l<w;l++)g.push(n[i++]);s.push(new Pd(e,d,c,g))}this.inputs=s}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(e,t){var s;let r=((s=t==null?void 0:t.inputs)==null?void 0:s.map(u=>typeof u==\"number\"?this.inputs[u]:u))??this.inputs,n=(t==null?void 0:t.outputs)??[],i=(u,d,c)=>new Pd(this.module,d,this.output(u,c),c),a=(u,d)=>{let c=Yn(u,d);if(!c)throw new Error(`Unsupported data type: ${u}`);let w=c>0?this.backend.gpuDataManager.create(c).id:0;return new Pd(this.module,u,w,d)};return this.backend.run(e,r,n,i,a,this.outputCount)}output(e,t){let r=this.module.stackSave();try{let n=this.module.stackAlloc((1+t.length)*4),i=n>>2;this.module.HEAPU32[i++]=t.length;for(let a=0;a<t.length;a++)this.module.HEAPU32[i++]=t[a];return this.module._JsepOutput(this.opKernelContext,e,n)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(r)}}},Dp=async(e,t,r,n)=>{let i=t.jsepInit;if(!i)throw new Error(\"Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.\");if(e===\"webgpu\"){let a=new Fp;await a.initialize(r,n),i(\"webgpu\",[a,s=>a.alloc(s),s=>a.free(s),(s,u,d,c=!1)=>{if(c)jr(\"verbose\",()=>`[WebGPU] jsepCopyGpuToGpu: src=${s}, dst=${u}, size=${d}`),a.memcpy(s,u);else{jr(\"verbose\",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${s}, gpuDataId=${u}, size=${d}`);let w=t.HEAPU8.subarray(s>>>0,(s>>>0)+d);a.upload(u,w)}},async(s,u,d)=>{jr(\"verbose\",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${s}, dataOffset=${u}, size=${d}`),await a.download(s,()=>t.HEAPU8.subarray(u>>>0,(u>>>0)+d))},(s,u,d)=>a.createKernel(s,u,d,t.UTF8ToString(t._JsepGetNodeName(u))),s=>a.releaseKernel(s),(s,u,d,c)=>{jr(\"verbose\",()=>`[WebGPU] jsepRun: sessionHandle=${d}, kernel=${s}, contextDataOffset=${u}`);let w=new zp(t,a,u);return a.computeKernel(s,w,c)},()=>a.captureBegin(),()=>a.captureEnd(),()=>a.replay()])}else i(\"webnn\")}}),Bp,tc,rc,Ls,Lp,Ad,nc,sc,ic,ac,oc,lc,Rp=N(()=>{qs(),Hs(),Qt(),sn(),Xn(),ks(),Bp=(e,t)=>{Vr()._OrtInit(e,t)!==0&&Or(\"Can't initialize onnxruntime.\")},tc=async e=>{Bp(e.wasm.numThreads,es(e.logLevel))},rc=async(e,t)=>{{let r=(Vf(),P(Op)).init;if(t===\"webgpu\"){if(typeof navigator>\"u\"||!navigator.gpu)throw new Error(\"WebGPU is not supported in current environment\");let n=e.webgpu.adapter;if(n){if(typeof n.limits!=\"object\"||typeof n.features!=\"object\"||typeof n.requestDevice!=\"function\")throw new Error(\"Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.\")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!==\"low-power\"&&i!==\"high-performance\")throw new Error(`Invalid powerPreference setting: \"${i}\"`);let a=e.webgpu.forceFallbackAdapter;if(a!==void 0&&typeof a!=\"boolean\")throw new Error(`Invalid forceFallbackAdapter setting: \"${a}\"`);if(n=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:a}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag \"--enable-unsafe-webgpu\" if you are using Chrome.')}await r(\"webgpu\",Vr(),e,n)}if(t===\"webnn\"){if(typeof navigator>\"u\"||!navigator.ml)throw new Error(\"WebNN is not supported in current environment\");await r(\"webnn\",Vr(),e)}}},Ls=new Map,Lp=e=>{let t=Vr(),r=t.stackSave();try{let n=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,n,n+4)!==0&&Or(\"Can't get session input/output count.\"),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(r)}},Ad=e=>{let t=Vr(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},nc=async(e,t)=>{var g,l;let r,n,i=Vr();Array.isArray(e)?[r,n]=e:e.buffer===i.HEAPU8.buffer?[r,n]=[e.byteOffset,e.byteLength]:[r,n]=Ad(e);let a=0,s=0,u=0,d=[],c=[],w=[];try{if([s,d]=Qn(t),(t==null?void 0:t.externalData)&&i.mountExternalData){let X=[];for(let oe of t.externalData){let Ke=typeof oe==\"string\"?oe:oe.path;X.push(ts(typeof oe==\"string\"?oe:oe.data).then(je=>{i.mountExternalData(Ke,je)}))}await Promise.all(X)}for(let X of(t==null?void 0:t.executionProviders)??[])if((typeof X==\"string\"?X:X.name)===\"webnn\"){if(i.currentContext)throw new Error(\"WebNN execution provider is already set.\");if(typeof X!=\"string\"){let oe=X,Ke=oe==null?void 0:oe.context,je=oe==null?void 0:oe.gpuDevice,ft=oe==null?void 0:oe.deviceType,Ot=oe==null?void 0:oe.numThreads,Vt=oe==null?void 0:oe.powerPreference;Ke?i.currentContext=Ke:je?i.currentContext=await navigator.ml.createContext(je):i.currentContext=await navigator.ml.createContext({deviceType:ft,numThreads:Ot,powerPreference:Vt})}else i.currentContext=await navigator.ml.createContext();break}a=await i._OrtCreateSession(r,n,s),a===0&&Or(\"Can't create a session.\"),i.currentContext&&(i.currentContext=void 0);let[v,S]=Lp(a),$=!!(t!=null&&t.enableGraphCapture),U=[],q=[],L=[];for(let X=0;X<v;X++){let oe=i._OrtGetInputName(a,X);oe===0&&Or(\"Can't get an input name.\"),c.push(oe),U.push(i.UTF8ToString(oe))}for(let X=0;X<S;X++){let oe=i._OrtGetOutputName(a,X);oe===0&&Or(\"Can't get an output name.\"),w.push(oe);let Ke=i.UTF8ToString(oe);q.push(Ke);{if($&&(t==null?void 0:t.preferredOutputLocation)===void 0){L.push(\"gpu-buffer\");continue}let je=typeof(t==null?void 0:t.preferredOutputLocation)==\"string\"?t.preferredOutputLocation:((g=t==null?void 0:t.preferredOutputLocation)==null?void 0:g[Ke])??\"cpu\";if(je!==\"cpu\"&&je!==\"cpu-pinned\"&&je!==\"gpu-buffer\")throw new Error(`Not supported preferred output location: ${je}.`);if($&&je!==\"gpu-buffer\")throw new Error(`Not supported preferred output location: ${je}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);L.push(je)}}let se=null;return L.some(X=>X===\"gpu-buffer\")&&(u=i._OrtCreateBinding(a),u===0&&Or(\"Can't create IO binding.\"),se={handle:u,outputPreferredLocations:L,outputPreferredLocationsEncoded:L.map(X=>ds(X))}),Ls.set(a,[a,c,w,se,$,!1]),[a,U,q]}catch(v){throw c.forEach(S=>i._OrtFree(S)),w.forEach(S=>i._OrtFree(S)),u!==0&&i._OrtReleaseBinding(u),a!==0&&i._OrtReleaseSession(a),v}finally{i._free(r),s!==0&&i._OrtReleaseSessionOptions(s),d.forEach(v=>i._free(v)),(l=i.unmountExternalData)==null||l.call(i)}},sc=e=>{var d;let t=Vr(),r=Ls.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[n,i,a,s,u]=r;s&&(u&&t._OrtClearBoundOutputs(s.handle),t._OrtReleaseBinding(s.handle)),(d=t.jsepOnReleaseSession)==null||d.call(t,e),i.forEach(c=>t._OrtFree(c)),a.forEach(c=>t._OrtFree(c)),t._OrtReleaseSession(n),Ls.delete(e)},ic=(e,t,r,n,i,a=!1)=>{if(!e){t.push(0);return}let s=Vr(),u=e[0],d=e[1],c=e[3],w,g;if(u===\"string\"&&c===\"gpu-buffer\")throw new Error(\"String tensor is not supported on GPU.\");if(a&&c!==\"gpu-buffer\")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(c===\"gpu-buffer\"){let S=e[2].gpuBuffer;g=Yn(ls(u),d);let $=s.jsepRegisterBuffer;if(!$)throw new Error('Tensor location \"gpu-buffer\" is not supported without using WebGPU.');w=$(n,i,S,g)}else{let S=e[2];if(Array.isArray(S)){g=4*S.length,w=s._malloc(g),r.push(w);let $=w/4;for(let U=0;U<S.length;U++){if(typeof S[U]!=\"string\")throw new TypeError(`tensor data at index ${U} is not a string`);s.HEAPU32[$++]=Ur(S[U],r)}}else g=S.byteLength,w=s._malloc(g),r.push(w),s.HEAPU8.set(new Uint8Array(S.buffer,S.byteOffset,g),w)}let l=s.stackSave(),v=s.stackAlloc(4*d.length);try{let S=v/4;d.forEach(U=>s.HEAP32[S++]=U);let $=s._OrtCreateTensor(ls(u),w,g,v,d.length,ds(c));$===0&&Or(`Can't create tensor for input/output. session=${n}, index=${i}.`),t.push($)}finally{s.stackRestore(l)}},ac=async(e,t,r,n,i,a)=>{var Vt,lr;let s=Vr(),u=Ls.get(e);if(!u)throw new Error(`cannot run inference. invalid session id: ${e}`);let d=u[0],c=u[1],w=u[2],g=u[3],l=u[4],v=u[5],S=t.length,$=n.length,U=0,q=[],L=[],se=[],X=[],oe=s.stackSave(),Ke=s.stackAlloc(S*4),je=s.stackAlloc(S*4),ft=s.stackAlloc($*4),Ot=s.stackAlloc($*4);try{[U,q]=Nn(a);for(let Zt=0;Zt<S;Zt++)ic(r[Zt],L,X,e,t[Zt],l);for(let Zt=0;Zt<$;Zt++)ic(i[Zt],se,X,e,S+n[Zt],l);let wr=Ke/4,er=je/4,Lr=ft/4,Gr=Ot/4;for(let Zt=0;Zt<S;Zt++)s.HEAPU32[wr++]=L[Zt],s.HEAPU32[er++]=c[t[Zt]];for(let Zt=0;Zt<$;Zt++)s.HEAPU32[Lr++]=se[Zt],s.HEAPU32[Gr++]=w[n[Zt]];if(g&&!v){let{handle:Zt,outputPreferredLocations:mr,outputPreferredLocationsEncoded:Pr}=g;if(c.length!==S)throw new Error(`input count from feeds (${S}) is expected to be always equal to model's input count (${c.length}).`);for(let Ve=0;Ve<S;Ve++){let kt=t[Ve];await s._OrtBindInput(Zt,c[kt],L[Ve])!==0&&Or(`Can't bind input[${Ve}] for session=${e}.`)}for(let Ve=0;Ve<$;Ve++){let kt=n[Ve];(Vt=i[Ve])!=null&&Vt[3]?s._OrtBindOutput(Zt,w[kt],se[Ve],0)!==0&&Or(`Can't bind pre-allocated output[${Ve}] for session=${e}.`):s._OrtBindOutput(Zt,w[kt],0,Pr[kt])!==0&&Or(`Can't bind output[${Ve}] to ${mr[Ve]} for session=${e}.`)}Ls.set(e,[d,c,w,g,l,!0])}(lr=s.jsepOnRunStart)==null||lr.call(s,d);let xr;g?xr=await s._OrtRunWithBinding(d,g.handle,$,ft,U):xr=await s._OrtRun(d,je,Ke,S,Ot,$,ft,U),xr!==0&&Or(\"failed to call OrtRun().\");let Nr=[];for(let Zt=0;Zt<$;Zt++){let mr=s.HEAPU32[ft/4+Zt];if(mr===se[Zt]){Nr.push(i[Zt]);continue}let Pr=s.stackSave(),Ve=s.stackAlloc(4*4),kt=!1,nr,Rr=0;try{s._OrtGetTensorData(mr,Ve,Ve+4,Ve+8,Ve+12)!==0&&Or(`Can't access output tensor data on index ${Zt}.`);let Jr=Ve/4,dn=s.HEAPU32[Jr++];Rr=s.HEAPU32[Jr++];let Ns=s.HEAPU32[Jr++],Od=s.HEAPU32[Jr++],Ln=[];for(let yn=0;yn<Od;yn++)Ln.push(s.HEAPU32[Ns/4+yn]);s._OrtFree(Ns);let wn=Ln.reduce((yn,Cn)=>yn*Cn,1);nr=On(dn);let Gu=g==null?void 0:g.outputPreferredLocations[n[Zt]];if(nr===\"string\"){if(Gu===\"gpu-buffer\")throw new Error(\"String tensor is not supported on GPU.\");let yn=[],Cn=Rr/4;for(let Gn=0;Gn<wn;Gn++){let js=s.HEAPU32[Cn++],zd=Gn===wn-1?void 0:s.HEAPU32[Cn]-js;yn.push(s.UTF8ToString(js,zd))}Nr.push([nr,Ln,yn,\"cpu\"])}else if(Gu===\"gpu-buffer\"&&wn>0){let yn=s.jsepGetBuffer;if(!yn)throw new Error('preferredLocation \"gpu-buffer\" is not supported without using WebGPU.');let Cn=yn(Rr),Gn=Yn(dn,wn);if(Gn===void 0||!us(nr))throw new Error(`Unsupported data type: ${nr}`);kt=!0,Nr.push([nr,Ln,{gpuBuffer:Cn,download:s.jsepCreateDownloader(Cn,Gn,nr),dispose:()=>{s._OrtReleaseTensor(mr)}},\"gpu-buffer\"])}else{let yn=jn(nr),Cn=new yn(wn);new Uint8Array(Cn.buffer,Cn.byteOffset,Cn.byteLength).set(s.HEAPU8.subarray(Rr,Rr+Cn.byteLength)),Nr.push([nr,Ln,Cn,\"cpu\"])}}finally{s.stackRestore(Pr),nr===\"string\"&&Rr&&s._free(Rr),kt||s._OrtReleaseTensor(mr)}}return g&&!l&&(s._OrtClearBoundOutputs(g.handle),Ls.set(e,[d,c,w,g,l,!1])),Nr}finally{s.stackRestore(oe),L.forEach(wr=>s._OrtReleaseTensor(wr)),se.forEach(wr=>s._OrtReleaseTensor(wr)),X.forEach(wr=>s._free(wr)),U!==0&&s._OrtReleaseRunOptions(U),q.forEach(wr=>s._free(wr))}},oc=e=>{let t=Vr(),r=Ls.get(e);if(!r)throw new Error(\"invalid session id\");let n=r[0],i=t._OrtEndProfiling(n);i===0&&Or(\"Can't get an profile file name.\"),t._OrtFree(i)},lc=e=>{let t=[];for(let r of e){let n=r[2];!Array.isArray(n)&&\"buffer\"in n&&t.push(n.buffer)}return t}}),Rs,Pn,Fa,Uu,Wu,Id,uc,Fd,hi,fi,Np,jp,Vp,Up,Wp,Gp,qp,Hp,Kp=N(()=>{bt(),Rp(),sn(),sr(),Rs=()=>!!A.wasm.proxy&&typeof document<\"u\",Fa=!1,Uu=!1,Wu=!1,Fd=new Map,hi=(e,t)=>{let r=Fd.get(e);r?r.push(t):Fd.set(e,[t])},fi=()=>{if(Fa||!Uu||Wu||!Pn)throw new Error(\"worker not ready\")},Np=e=>{switch(e.data.type){case\"init-wasm\":Fa=!1,e.data.err?(Wu=!0,uc[1](e.data.err)):(Uu=!0,uc[0]()),Id&&(URL.revokeObjectURL(Id),Id=void 0);break;case\"init-ep\":case\"copy-from\":case\"create\":case\"release\":case\"run\":case\"end-profiling\":{let t=Fd.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},jp=async()=>{if(!Uu){if(Fa)throw new Error(\"multiple calls to 'initWasm()' detected.\");if(Wu)throw new Error(\"previous call to 'initWasm()' failed.\");if(Fa=!0,Rs())return new Promise((e,t)=>{Pn==null||Pn.terminate(),Wt().then(([r,n])=>{try{Pn=n,Pn.onerror=a=>t(a),Pn.onmessage=Np,uc=[e,t];let i={type:\"init-wasm\",in:A};Pn.postMessage(i),Id=r}catch(i){t(i)}},t)});try{await Rn(A.wasm),await tc(A),Uu=!0}catch(e){throw Wu=!0,e}finally{Fa=!1}}},Vp=async e=>{if(Rs())return fi(),new Promise((t,r)=>{hi(\"init-ep\",[t,r]);let n={type:\"init-ep\",in:{epName:e,env:A}};Pn.postMessage(n)});await rc(A,e)},Up=async e=>Rs()?(fi(),new Promise((t,r)=>{hi(\"copy-from\",[t,r]);let n={type:\"copy-from\",in:{buffer:e}};Pn.postMessage(n,[e.buffer])})):Ad(e),Wp=async(e,t)=>{if(Rs()){if(t!=null&&t.preferredOutputLocation)throw new Error('session option \"preferredOutputLocation\" is not supported for proxy.');return fi(),new Promise((r,n)=>{hi(\"create\",[r,n]);let i={type:\"create\",in:{model:e,options:{...t}}},a=[];e instanceof Uint8Array&&a.push(e.buffer),Pn.postMessage(i,a)})}else return nc(e,t)},Gp=async e=>{if(Rs())return fi(),new Promise((t,r)=>{hi(\"release\",[t,r]);let n={type:\"release\",in:e};Pn.postMessage(n)});sc(e)},qp=async(e,t,r,n,i,a)=>{if(Rs()){if(r.some(s=>s[3]!==\"cpu\"))throw new Error(\"input tensor on GPU is not supported for proxy.\");if(i.some(s=>s))throw new Error(\"pre-allocated output tensor is not supported for proxy.\");return fi(),new Promise((s,u)=>{hi(\"run\",[s,u]);let d=r,c={type:\"run\",in:{sessionId:e,inputIndices:t,inputs:d,outputIndices:n,options:a}};Pn.postMessage(c,lc(d))})}else return ac(e,t,r,n,i,a)},Hp=async e=>{if(Rs())return fi(),new Promise((t,r)=>{hi(\"end-profiling\",[t,r]);let n={type:\"end-profiling\",in:e};Pn.postMessage(n)});oc(e)}}),dc,Xp,Qp,Uf=N(()=>{bt(),Kp(),Qt(),Ae(),ks(),dc=(e,t)=>{switch(e.location){case\"cpu\":return[e.type,e.dims,e.data,\"cpu\"];case\"gpu-buffer\":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},\"gpu-buffer\"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},Xp=e=>{switch(e[3]){case\"cpu\":return new Be(e[0],e[2],e[1]);case\"gpu-buffer\":{let t=e[0];if(!us(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:n,dispose:i}=e[2];return Be.fromGpuBuffer(r,{dataType:t,dims:e[1],download:n,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},Qp=class{async fetchModelAndCopyToWasmMemory(e){return Up(await ts(e))}async loadModel(e,t){He();let r;typeof e==\"string\"?r=await this.fetchModelAndCopyToWasmMemory(e):r=e,[this.sessionId,this.inputNames,this.outputNames]=await Wp(r,t),We()}async dispose(){return Gp(this.sessionId)}async run(e,t,r){He();let n=[],i=[];Object.entries(e).forEach(g=>{let l=g[0],v=g[1],S=this.inputNames.indexOf(l);if(S===-1)throw new Error(`invalid input '${l}'`);n.push(v),i.push(S)});let a=[],s=[];Object.entries(t).forEach(g=>{let l=g[0],v=g[1],S=this.outputNames.indexOf(l);if(S===-1)throw new Error(`invalid output '${l}'`);a.push(v),s.push(S)});let u=n.map((g,l)=>dc(g,()=>`input \"${this.inputNames[i[l]]}\"`)),d=a.map((g,l)=>g?dc(g,()=>`output \"${this.outputNames[s[l]]}\"`):null),c=await qp(this.sessionId,i,u,s,d,r),w={};for(let g=0;g<c.length;g++)w[this.outputNames[s[g]]]=a[g]??Xp(c[g]);return We(),w}startProfiling(){}endProfiling(){Hp(this.sessionId)}}}),Yp,Jp,Wf=N(()=>{bt(),Kp(),Uf(),sr(),Yp=()=>{if((typeof A.wasm.initTimeout!=\"number\"||A.wasm.initTimeout<0)&&(A.wasm.initTimeout=0),A.wasm.simd===!1&&console.warn('Deprecated property \"env.wasm.simd\" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof A.wasm.proxy!=\"boolean\"&&(A.wasm.proxy=!1),typeof A.wasm.trace!=\"boolean\"&&(A.wasm.trace=!1),typeof A.wasm.numThreads!=\"number\"||!Number.isInteger(A.wasm.numThreads)||A.wasm.numThreads<=0)if(typeof self<\"u\"&&!self.crossOriginIsolated)A.wasm.numThreads=1;else{let e=typeof navigator>\"u\"?xe(\"node:os\").cpus().length:navigator.hardwareConcurrency;A.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},Jp=class{async init(e){Yp(),await jp(),await Vp(e)}async createInferenceSessionHandler(e,t){let r=new Qp;return await r.loadModel(e,t),Promise.resolve(r)}}}),Zp={};T(Zp,{wasmBackend:()=>eh});var eh,Gf=N(()=>{Wf(),eh=new Jp});bt(),bt(),bt();var qf=\"1.20.0-dev.20240827-1d059b8702\",Hf=Tt;{let e=(Gf(),P(Zp)).wasmBackend;ne(\"webgpu\",e,5),ne(\"webnn\",e,5),ne(\"cpu\",e,10),ne(\"wasm\",e,10)}Object.defineProperty(A.versions,\"web\",{value:qf,enumerable:!0});/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n *//**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n *//**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */},\"./src/backends/onnx.js\":(nt,fe,I)=>{var E;I.r(fe),I.d(fe,{Tensor:()=>xe.Tensor,createInferenceSession:()=>me,deviceToExecutionProviders:()=>ee,isONNXProxy:()=>re,isONNXTensor:()=>F});var ie=I(\"./src/env.js\"),we=I(\"?2ce3\"),ve=I(\"./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs\"),xe=I(\"./node_modules/onnxruntime-common/dist/esm/index.js\");const N=Object.freeze({auto:null,gpu:null,cpu:\"cpu\",wasm:\"wasm\",webgpu:\"webgpu\",cuda:\"cuda\",dml:\"dml\",webnn:{name:\"webnn\",deviceType:\"cpu\"},\"webnn-npu\":{name:\"webnn\",deviceType:\"npu\"},\"webnn-gpu\":{name:\"webnn\",deviceType:\"gpu\"},\"webnn-cpu\":{name:\"webnn\",deviceType:\"cpu\"}}),T=[];let V,P;if(ie.apis.IS_NODE_ENV){switch(P=we??(E||(E=I.t(we,2))),process.platform){case\"win32\":T.push(\"dml\");break;case\"linux\":process.arch===\"x64\"&&T.push(\"cuda\");break}T.push(\"cpu\"),V=[\"cpu\"]}else P=ve,ie.apis.IS_WEBNN_AVAILABLE&&T.push(\"webnn-npu\",\"webnn-gpu\",\"webnn-cpu\",\"webnn\"),ie.apis.IS_WEBGPU_AVAILABLE&&T.push(\"webgpu\"),T.push(\"wasm\"),V=[\"wasm\"];const K=P.InferenceSession;function ee(le=null){if(!le)return V;switch(le){case\"auto\":return T;case\"gpu\":return T.filter(ae=>[\"webgpu\",\"cuda\",\"dml\",\"webnn-gpu\"].includes(ae))}if(T.includes(le))return[N[le]??le];throw new Error(`Unsupported device: \"${le}\". Should be one of: ${T.join(\", \")}.`)}let ne=null;async function me(le,ae){ne&&await ne;const j=K.create(le,ae);return ne??(ne=j),await j}function F(le){return le instanceof P.Tensor}const J=P==null?void 0:P.env;J!=null&&J.wasm&&(J.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${ie.env.version}/dist/`,J.wasm.proxy=!1,(typeof crossOriginIsolated>\"u\"||!crossOriginIsolated)&&(J.wasm.numThreads=1)),J!=null&&J.webgpu&&(J.webgpu.powerPreference=\"high-performance\");function re(){var le;return(le=J==null?void 0:J.wasm)==null?void 0:le.proxy}ie.env.backends.onnx=J},\"./src/configs.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{AutoConfig:()=>T,PretrainedConfig:()=>N,getKeyValueShapes:()=>xe});var E=I(\"./src/utils/core.js\"),ie=I(\"./src/utils/hub.js\");async function we(V,P){return await(0,ie.getModelJSON)(V,\"config.json\",!0,P)}function ve(V){const P={};let K={};switch(V.model_type){case\"llava\":case\"paligemma\":case\"florence2\":K=ve(V.text_config);break;case\"moondream1\":K=ve(V.phi_config);break;case\"musicgen\":K=ve(V.decoder);break;case\"gpt2\":case\"gptj\":case\"jais\":case\"codegen\":case\"gpt_bigcode\":P.num_heads=\"n_head\",P.num_layers=\"n_layer\",P.hidden_size=\"n_embd\";break;case\"gpt_neox\":case\"stablelm\":case\"opt\":case\"phi\":case\"phi3\":case\"falcon\":P.num_heads=\"num_attention_heads\",P.num_layers=\"num_hidden_layers\",P.hidden_size=\"hidden_size\";break;case\"llama\":case\"cohere\":case\"mistral\":case\"starcoder2\":case\"qwen2\":P.num_heads=\"num_key_value_heads\",P.num_layers=\"num_hidden_layers\",P.hidden_size=\"hidden_size\",P.num_attention_heads=\"num_attention_heads\";break;case\"gemma\":case\"gemma2\":P.num_heads=\"num_key_value_heads\",P.num_layers=\"num_hidden_layers\",P.dim_kv=\"head_dim\";break;case\"openelm\":P.num_heads=\"num_kv_heads\",P.num_layers=\"num_transformer_layers\",P.dim_kv=\"head_dim\";break;case\"gpt_neo\":case\"donut-swin\":P.num_heads=\"num_heads\",P.num_layers=\"num_layers\",P.hidden_size=\"hidden_size\";break;case\"bloom\":P.num_heads=\"n_head\",P.num_layers=\"n_layer\",P.hidden_size=\"hidden_size\";break;case\"mpt\":P.num_heads=\"n_heads\",P.num_layers=\"n_layers\",P.hidden_size=\"d_model\";break;case\"t5\":case\"mt5\":case\"longt5\":P.num_decoder_layers=\"num_decoder_layers\",P.num_decoder_heads=\"num_heads\",P.decoder_dim_kv=\"d_kv\",P.num_encoder_layers=\"num_layers\",P.num_encoder_heads=\"num_heads\",P.encoder_dim_kv=\"d_kv\";break;case\"bart\":case\"mbart\":case\"marian\":case\"whisper\":case\"m2m_100\":case\"blenderbot\":case\"blenderbot-small\":case\"florence2_language\":P.num_decoder_layers=\"decoder_layers\",P.num_decoder_heads=\"decoder_attention_heads\",P.decoder_hidden_size=\"d_model\",P.num_encoder_layers=\"encoder_layers\",P.num_encoder_heads=\"encoder_attention_heads\",P.encoder_hidden_size=\"d_model\";break;case\"speecht5\":P.num_decoder_layers=\"decoder_layers\",P.num_decoder_heads=\"decoder_attention_heads\",P.decoder_hidden_size=\"hidden_size\",P.num_encoder_layers=\"encoder_layers\",P.num_encoder_heads=\"encoder_attention_heads\",P.encoder_hidden_size=\"hidden_size\";break;case\"trocr\":P.num_encoder_layers=P.num_decoder_layers=\"decoder_layers\",P.num_encoder_heads=P.num_decoder_heads=\"decoder_attention_heads\",P.encoder_hidden_size=P.decoder_hidden_size=\"d_model\";break;case\"musicgen_decoder\":P.num_encoder_layers=P.num_decoder_layers=\"num_hidden_layers\",P.num_encoder_heads=P.num_decoder_heads=\"num_attention_heads\",P.encoder_hidden_size=P.decoder_hidden_size=\"hidden_size\";break;case\"vision-encoder-decoder\":const ne=ve(V.decoder),me=\"num_decoder_layers\"in ne,F=(0,E.pick)(V,[\"model_type\",\"is_encoder_decoder\"]);return me?(F.num_decoder_layers=ne.num_decoder_layers,F.num_decoder_heads=ne.num_decoder_heads,F.decoder_hidden_size=ne.decoder_hidden_size,F.num_encoder_layers=ne.num_encoder_layers,F.num_encoder_heads=ne.num_encoder_heads,F.encoder_hidden_size=ne.encoder_hidden_size):(F.num_layers=ne.num_layers,F.num_heads=ne.num_heads,F.hidden_size=ne.hidden_size),F}const ee={...K,...(0,E.pick)(V,[\"model_type\",\"multi_query\",\"is_encoder_decoder\"])};for(const ne in P)ee[ne]=V[P[ne]];return ee}function xe(V,{prefix:P=\"past_key_values\"}={}){const K={},ee=V.normalized_config,ne=1;if(ee.is_encoder_decoder&&\"num_encoder_heads\"in ee&&\"num_decoder_heads\"in ee){const me=ee.encoder_dim_kv??ee.encoder_hidden_size/ee.num_encoder_heads,F=ee.decoder_dim_kv??ee.decoder_hidden_size/ee.num_decoder_heads,J=[ne,ee.num_encoder_heads,0,me],re=[ne,ee.num_decoder_heads,0,F];for(let le=0;le<ee.num_decoder_layers;++le)K[`${P}.${le}.encoder.key`]=J,K[`${P}.${le}.encoder.value`]=J,K[`${P}.${le}.decoder.key`]=re,K[`${P}.${le}.decoder.value`]=re}else{const me=ee.num_heads,F=ee.num_layers,J=ee.dim_kv??ee.hidden_size/(ee.num_attention_heads??me);if(ee.model_type===\"falcon\"){const re=[ne*me,0,J];for(let le=0;le<F;++le)K[`${P}.${le}.key`]=re,K[`${P}.${le}.value`]=re}else if(ee.multi_query){const re=[ne*me,0,2*J];for(let le=0;le<F;++le)K[`${P}.${le}.key_value`]=re}else if(ee.model_type===\"bloom\"){const re=[ne*me,J,0],le=[ne*me,0,J];for(let ae=0;ae<F;++ae)K[`${P}.${ae}.key`]=re,K[`${P}.${ae}.value`]=le}else if(ee.model_type===\"openelm\")for(let re=0;re<F;++re){const le=[ne,me[re],0,J];K[`${P}.${re}.key`]=le,K[`${P}.${re}.value`]=le}else{const re=[ne,me,0,J];for(let le=0;le<F;++le)K[`${P}.${le}.key`]=re,K[`${P}.${le}.value`]=re}}return K}class N{constructor(P){Te(this,\"max_position_embeddings\");this.model_type=null,this.is_encoder_decoder=!1,Object.assign(this,P),this.normalized_config=ve(this)}static async from_pretrained(P,{progress_callback:K=null,config:ee=null,cache_dir:ne=null,local_files_only:me=!1,revision:F=\"main\"}={}){ee&&!(ee instanceof N)&&(ee=new N(ee));const J=ee??await we(P,{progress_callback:K,config:ee,cache_dir:ne,local_files_only:me,revision:F});return new this(J)}}class T{static async from_pretrained(...P){return N.from_pretrained(...P)}}},\"./src/env.js\":(nt,fe,I)=>{var A;I.r(fe),I.d(fe,{apis:()=>F,env:()=>O});var E=I(\"?569f\"),ie=I(\"?3f59\"),we=I(\"?154a\");const ve=\"3.0.0-alpha.14\",xe=typeof self<\"u\",N=xe&&self.constructor.name===\"DedicatedWorkerGlobalScope\",T=xe&&\"caches\"in self,V=typeof navigator<\"u\"&&\"gpu\"in navigator,P=typeof navigator<\"u\"&&\"ml\"in navigator,K=typeof process<\"u\",ee=K&&((A=process==null?void 0:process.release)==null?void 0:A.name)===\"node\",ne=!R(E),me=!R(ie),F=Object.freeze({IS_BROWSER_ENV:xe,IS_WEBWORKER_ENV:N,IS_WEB_CACHE_AVAILABLE:T,IS_WEBGPU_AVAILABLE:V,IS_WEBNN_AVAILABLE:P,IS_PROCESS_AVAILABLE:K,IS_NODE_ENV:ee,IS_FS_AVAILABLE:ne,IS_PATH_AVAILABLE:me}),J=ne&&me,re=J?ie.dirname(ie.dirname(we.fileURLToPath(import.meta.url))):\"./\",le=J?ie.join(re,\"/.cache/\"):null,ae=\"/models/\",j=J?ie.join(re,ae):ae,O={version:ve,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:\"https://huggingface.co/\",remotePathTemplate:\"{model}/resolve/{revision}/\",allowLocalModels:!xe,localModelPath:j,useFS:ne,useBrowserCache:T,useFSCache:ne,cacheDir:le,useCustomCache:!1,customCache:null};function R(_e){return Object.keys(_e).length===0}},\"./src/generation/configuration_utils.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{GenerationConfig:()=>ie});var E=I(\"./src/utils/core.js\");class ie{constructor(ve){Te(this,\"max_length\",20);Te(this,\"max_new_tokens\",null);Te(this,\"min_length\",0);Te(this,\"min_new_tokens\",null);Te(this,\"early_stopping\",!1);Te(this,\"max_time\",null);Te(this,\"do_sample\",!1);Te(this,\"num_beams\",1);Te(this,\"num_beam_groups\",1);Te(this,\"penalty_alpha\",null);Te(this,\"use_cache\",!0);Te(this,\"temperature\",1);Te(this,\"top_k\",50);Te(this,\"top_p\",1);Te(this,\"typical_p\",1);Te(this,\"epsilon_cutoff\",0);Te(this,\"eta_cutoff\",0);Te(this,\"diversity_penalty\",0);Te(this,\"repetition_penalty\",1);Te(this,\"encoder_repetition_penalty\",1);Te(this,\"length_penalty\",1);Te(this,\"no_repeat_ngram_size\",0);Te(this,\"bad_words_ids\",null);Te(this,\"force_words_ids\",null);Te(this,\"renormalize_logits\",!1);Te(this,\"constraints\",null);Te(this,\"forced_bos_token_id\",null);Te(this,\"forced_eos_token_id\",null);Te(this,\"remove_invalid_values\",!1);Te(this,\"exponential_decay_length_penalty\",null);Te(this,\"suppress_tokens\",null);Te(this,\"begin_suppress_tokens\",null);Te(this,\"forced_decoder_ids\",null);Te(this,\"guidance_scale\",null);Te(this,\"num_return_sequences\",1);Te(this,\"output_attentions\",!1);Te(this,\"output_hidden_states\",!1);Te(this,\"output_scores\",!1);Te(this,\"return_dict_in_generate\",!1);Te(this,\"pad_token_id\",null);Te(this,\"bos_token_id\",null);Te(this,\"eos_token_id\",null);Te(this,\"encoder_no_repeat_ngram_size\",0);Te(this,\"decoder_start_token_id\",null);Te(this,\"generation_kwargs\",{});Object.assign(this,(0,E.pick)(ve,Object.getOwnPropertyNames(this)))}}},\"./src/generation/logits_process.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{ClassifierFreeGuidanceLogitsProcessor:()=>J,ForcedBOSTokenLogitsProcessor:()=>N,ForcedEOSTokenLogitsProcessor:()=>T,LogitsProcessor:()=>we,LogitsProcessorList:()=>xe,LogitsWarper:()=>ve,MinLengthLogitsProcessor:()=>ne,MinNewTokensLengthLogitsProcessor:()=>me,NoBadWordsLogitsProcessor:()=>F,NoRepeatNGramLogitsProcessor:()=>K,RepetitionPenaltyLogitsProcessor:()=>ee,SuppressTokensAtBeginLogitsProcessor:()=>V,TemperatureLogitsWarper:()=>re,TopKLogitsWarper:()=>ae,TopPLogitsWarper:()=>le,WhisperTimeStampLogitsProcessor:()=>P});var E=I(\"./src/utils/generic.js\");I(\"./src/utils/tensor.js\");var ie=I(\"./src/utils/maths.js\");class we extends E.Callable{_call(O,R){throw Error(\"`_call` should be implemented in a subclass\")}}class ve extends E.Callable{_call(O,R){throw Error(\"`_call` should be implemented in a subclass\")}}class xe extends E.Callable{constructor(){super(),this.processors=[]}push(O){this.processors.push(O)}extend(O){this.processors.push(...O)}_call(O,R){let A=R;for(const _e of this.processors)A=_e(O,A);return A}[Symbol.iterator](){return this.processors.values()}}class N extends we{constructor(O){super(),this.bos_token_id=O}_call(O,R){for(let A=0;A<O.length;++A)if(O[A].length===1){const _e=R[A].data;_e.fill(-1/0),_e[this.bos_token_id]=0}return R}}class T extends we{constructor(O,R){super(),this.max_length=O,this.eos_token_id=Array.isArray(R)?R:[R]}_call(O,R){for(let A=0;A<O.length;++A)if(O[A].length===this.max_length-1){const _e=R[A].data;_e.fill(-1/0);for(const Me of this.eos_token_id)_e[Me]=0}return R}}class V extends we{constructor(O,R){super(),this.begin_suppress_tokens=O,this.begin_index=R}_call(O,R){for(let A=0;A<O.length;++A)if(O[A].length===this.begin_index){const _e=R[A].data;for(const Me of this.begin_suppress_tokens)_e[Me]=-1/0}return R}}class P extends we{constructor(O,R){super(),this.eos_token_id=Array.isArray(O.eos_token_id)?O.eos_token_id[0]:O.eos_token_id,this.no_timestamps_token_id=O.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=R.length,R.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=O.max_initial_timestamp_index}_call(O,R){for(let A=0;A<O.length;++A){const _e=R[A].data;if(_e[this.no_timestamps_token_id]=-1/0,O[A].length===this.begin_index-1){_e.fill(-1/0),_e[this.timestamp_begin]=0;continue}const Me=O[A].slice(this.begin_index),ke=Me.length>=1&&Me[Me.length-1]>=this.timestamp_begin,Oe=Me.length<2||Me[Me.length-2]>=this.timestamp_begin;if(ke&&(Oe?_e.subarray(this.timestamp_begin).fill(-1/0):_e.subarray(0,this.eos_token_id).fill(-1/0)),O[A].length===this.begin_index&&this.max_initial_timestamp_index!==null){const pt=this.timestamp_begin+this.max_initial_timestamp_index;_e.subarray(pt+1).fill(-1/0)}const Pe=(0,ie.log_softmax)(_e),st=Math.log(Pe.subarray(this.timestamp_begin).map(Math.exp).reduce((pt,ye)=>pt+ye)),Ye=(0,ie.max)(Pe.subarray(0,this.timestamp_begin))[0];st>Ye&&_e.subarray(0,this.timestamp_begin).fill(-1/0)}return R}}class K extends we{constructor(O){super(),this.no_repeat_ngram_size=O}getNgrams(O){const R=O.length,A=[];for(let Me=0;Me<R+1-this.no_repeat_ngram_size;++Me){const ke=[];for(let Oe=0;Oe<this.no_repeat_ngram_size;++Oe)ke.push(O[Me+Oe]);A.push(ke.map(Number))}const _e=new Map;for(const Me of A){const ke=Me.slice(0,Me.length-1),Oe=JSON.stringify(ke),Pe=_e.get(Oe)??[];Pe.push(Me[Me.length-1]),_e.set(Oe,Pe)}return _e}getGeneratedNgrams(O,R){const A=R.slice(R.length+1-this.no_repeat_ngram_size,R.length);return O.get(JSON.stringify(A.map(Number)))??[]}calcBannedNgramTokens(O){const R=[];if(O.length+1<this.no_repeat_ngram_size)return R;{const A=this.getNgrams(O);return this.getGeneratedNgrams(A,O)}}_call(O,R){for(let A=0;A<O.length;++A){const _e=R[A].data,Me=this.calcBannedNgramTokens(O[A]);for(const ke of Me)_e[ke]=-1/0}return R}}class ee extends we{constructor(O){super(),this.penalty=O}_call(O,R){for(let A=0;A<O.length;++A){const _e=R[A].data;for(const Me of O[A]){const ke=Number(Me);_e[ke]<0?_e[ke]*=this.penalty:_e[ke]/=this.penalty}}return R}}class ne extends we{constructor(O,R){super(),this.min_length=O,this.eos_token_id=Array.isArray(R)?R:[R]}_call(O,R){for(let A=0;A<O.length;++A)if(O[A].length<this.min_length){const _e=R[A].data;for(const Me of this.eos_token_id)_e[Me]=-1/0}return R}}class me extends we{constructor(O,R,A){super(),this.prompt_length_to_skip=O,this.min_new_tokens=R,this.eos_token_id=Array.isArray(A)?A:[A]}_call(O,R){for(let A=0;A<O.length;++A)if(O[A].length-this.prompt_length_to_skip<this.min_new_tokens){const Me=R[A].data;for(const ke of this.eos_token_id)Me[ke]=-1/0}return R}}class F extends we{constructor(O,R){super(),this.bad_words_ids=O,this.eos_token_id=Array.isArray(R)?R:[R]}_call(O,R){for(let A=0;A<O.length;++A){const _e=R[A].data,Me=O[A];for(const ke of this.bad_words_ids){let Oe=!0;for(let Pe=1;Pe<=ke.length-1&&ke.length<Me.length;++Pe)if(ke.at(-Pe-1)!=Me.at(-Pe)){Oe=!1;break}Oe&&(_e[ke.at(-1)]=-1/0)}}return R}}class J extends we{constructor(O){if(super(),O<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${O}.`);this.guidance_scale=O}_call(O,R){if(R.dims[0]!==2*O.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${R.dims[0]} for the logits and ${O.length} for the input ids.`);const A=O.length,_e=R.slice([0,A],null),Me=R.slice([A,R.dims[0]],null);for(let ke=0;ke<Me.data.length;++ke)Me.data[ke]+=(_e.data[ke]-Me.data[ke])*this.guidance_scale;return Me}}class re extends ve{constructor(O){super(),this.temperature=O}_call(O,R){const A=R.data;for(let _e=0;_e<A.length;++_e)A[_e]/=this.temperature;return R}}class le extends ve{constructor(O,{filter_value:R=-1/0,min_tokens_to_keep:A=1}={}){if(super(),O<0||O>1)throw new Error(`\\`top_p\\` must be a float > 0 and < 1, but is ${O}`);if(!Number.isInteger(A)||A<1)throw new Error(`\\`min_tokens_to_keep\\` must be a positive integer, but is ${A}`);this.top_p=O,this.filter_value=R,this.min_tokens_to_keep=A}}class ae extends ve{constructor(O,{filter_value:R=-1/0,min_tokens_to_keep:A=1}={}){if(super(),!Number.isInteger(O)||O<0)throw new Error(`\\`top_k\\` must be a positive integer, but is ${O}`);this.top_k=Math.max(O,A),this.filter_value=R}}},\"./src/generation/logits_sampler.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{LogitsSampler:()=>ve});var E=I(\"./src/utils/generic.js\"),ie=I(\"./src/utils/tensor.js\"),we=I(\"./src/utils/maths.js\");I(\"./src/generation/configuration_utils.js\");class ve extends E.Callable{constructor(P){super(),this.generation_config=P}async _call(P){return this.sample(P)}async sample(P){throw Error(\"sample should be implemented in subclasses.\")}getLogits(P,K){let ee=P.dims.at(-1),ne=P.data;if(K===-1)ne=ne.slice(-ee);else{let me=K*ee;ne=ne.slice(me,me+ee)}return ne}randomSelect(P){let K=0;for(let ne=0;ne<P.length;++ne)K+=P[ne];let ee=Math.random()*K;for(let ne=0;ne<P.length;++ne)if(ee-=P[ne],ee<=0)return ne;return 0}static getSampler(P){if(P.do_sample)return new N(P);if(P.num_beams>1)return new T(P);if(P.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${P.num_return_sequences}.`);return new xe(P)}}class xe extends ve{async sample(P){const K=(0,we.max)(P.data)[1];return[[BigInt(K),0]]}}class N extends ve{async sample(P){let K=P.dims.at(-1);this.generation_config.top_k>0&&(K=Math.min(this.generation_config.top_k,K));const[ee,ne]=await(0,ie.topk)(P,K),me=(0,we.softmax)(ee.data);return Array.from({length:this.generation_config.num_beams},()=>{const F=this.randomSelect(me);return[ne.data[F],Math.log(me[F])]})}}class T extends ve{async sample(P){let K=P.dims.at(-1);this.generation_config.top_k>0&&(K=Math.min(this.generation_config.top_k,K));const[ee,ne]=await(0,ie.topk)(P,K),me=(0,we.softmax)(ee.data);return Array.from({length:this.generation_config.num_beams},(F,J)=>[ne.data[J],Math.log(me[J])])}}},\"./src/generation/stopping_criteria.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{EosTokenCriteria:()=>xe,InterruptableStoppingCriteria:()=>N,MaxLengthCriteria:()=>ve,StoppingCriteria:()=>ie,StoppingCriteriaList:()=>we});var E=I(\"./src/utils/generic.js\");class ie extends E.Callable{_call(V,P){throw Error(\"StoppingCriteria needs to be subclassed\")}}class we extends E.Callable{constructor(){super(),this.criteria=[]}push(V){this.criteria.push(V)}extend(V){V instanceof we?V=V.criteria:V instanceof ie&&(V=[V]),this.criteria.push(...V)}_call(V,P){const K=new Array(V.length).fill(!1);for(const ee of this.criteria){const ne=ee(V,P);for(let me=0;me<K.length;++me)K[me]||(K[me]=ne[me])}return K}[Symbol.iterator](){return this.criteria.values()}}class ve extends ie{constructor(V,P=null){super(),this.max_length=V,this.max_position_embeddings=P}_call(V){return V.map(P=>P.length>=this.max_length)}}class xe extends ie{constructor(V){super(),Array.isArray(V)||(V=[V]),this.eos_token_id=V}_call(V,P){return V.map(K=>{const ee=K.at(-1);return this.eos_token_id.some(ne=>ee==ne)})}}class N extends ie{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(V,P){return new Array(V.length).fill(this.interrupted)}}},\"./src/generation/streamers.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{BaseStreamer:()=>ve,TextStreamer:()=>N,WhisperTextStreamer:()=>T});var E=I(\"./src/utils/core.js\"),ie=I(\"./src/tokenizers.js\"),we=I(\"./src/env.js\");class ve{put(P){throw Error(\"Not implemented\")}end(){throw Error(\"Not implemented\")}}const xe=we.apis.IS_PROCESS_AVAILABLE?V=>process.stdout.write(V):V=>console.log(V);class N extends ve{constructor(P,{skip_prompt:K=!1,callback_function:ee=null,token_callback_function:ne=null,decode_kwargs:me={},...F}={}){super(),this.tokenizer=P,this.skip_prompt=K,this.callback_function=ee??xe,this.token_callback_function=ne,this.decode_kwargs={...me,...F},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(P){var me;if(P.length>1)throw Error(\"TextStreamer only supports batch size of 1\");if(this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}const K=P[0];(me=this.token_callback_function)==null||me.call(this,K),this.token_cache=(0,E.mergeArrays)(this.token_cache,K);const ee=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let ne;ee.endsWith(`\n`)?(ne=ee.slice(this.print_len),this.token_cache=[],this.print_len=0):ee.length>0&&(0,ie.is_chinese_char)(ee.charCodeAt(ee.length-1))?(ne=ee.slice(this.print_len),this.print_len+=ne.length):(ne=ee.slice(this.print_len,ee.lastIndexOf(\" \")+1),this.print_len+=ne.length),this.on_finalized_text(ne,!1)}end(){let P;this.token_cache.length>0?(P=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):P=\"\",this.next_tokens_are_prompt=!0,this.on_finalized_text(P,!0)}on_finalized_text(P,K){var ee,ne;P.length>0&&((ee=this.callback_function)==null||ee.call(this,P)),K&&this.callback_function===xe&&we.apis.IS_PROCESS_AVAILABLE&&((ne=this.callback_function)==null||ne.call(this,`\n`))}}class T extends N{constructor(P,{skip_prompt:K=!1,callback_function:ee=null,token_callback_function:ne=null,on_chunk_start:me=null,on_chunk_end:F=null,on_finalize:J=null,time_precision:re=.02,skip_special_tokens:le=!0,decode_kwargs:ae={}}={}){super(P,{skip_prompt:K,callback_function:ee,token_callback_function:ne,decode_kwargs:{skip_special_tokens:le,...ae}}),this.timestamp_begin=P.timestamp_begin,this.on_chunk_start=me,this.on_chunk_end=F,this.on_finalize=J,this.time_precision=re,this.waiting_for_timestamp=!1}put(P){var ee,ne;if(P.length>1)throw Error(\"WhisperTextStreamer only supports batch size of 1\");const K=P[0];if(K.length===1){const me=Number(K[0])-this.timestamp_begin;if(me>=0){const F=me*this.time_precision;this.waiting_for_timestamp?(ee=this.on_chunk_end)==null||ee.call(this,F):(ne=this.on_chunk_start)==null||ne.call(this,F),this.waiting_for_timestamp=!this.waiting_for_timestamp,P=[[]]}}return super.put(P)}end(){var P;super.end(),(P=this.on_finalize)==null||P.call(this)}}},\"./src/models.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{ASTForAudioClassification:()=>Ks,ASTModel:()=>jt,ASTPreTrainedModel:()=>vn,AlbertForMaskedLM:()=>Qt,AlbertForQuestionAnswering:()=>ds,AlbertForSequenceClassification:()=>us,AlbertModel:()=>es,AlbertPreTrainedModel:()=>jn,AutoModel:()=>gs,AutoModelForAudioClassification:()=>Iu,AutoModelForAudioFrameClassification:()=>xd,AutoModelForCTC:()=>Au,AutoModelForCausalLM:()=>Tu,AutoModelForDepthEstimation:()=>Td,AutoModelForDocumentQuestionAnswering:()=>Ou,AutoModelForImageClassification:()=>Cu,AutoModelForImageFeatureExtraction:()=>Lu,AutoModelForImageMatting:()=>zu,AutoModelForImageSegmentation:()=>Eu,AutoModelForImageToImage:()=>Du,AutoModelForMaskGeneration:()=>Pu,AutoModelForMaskedLM:()=>Su,AutoModelForNormalEstimation:()=>Bu,AutoModelForObjectDetection:()=>$u,AutoModelForQuestionAnswering:()=>ku,AutoModelForSemanticSegmentation:()=>Pa,AutoModelForSeq2SeqLM:()=>Ca,AutoModelForSequenceClassification:()=>bu,AutoModelForSpeechSeq2Seq:()=>vu,AutoModelForTextToSpectrogram:()=>xu,AutoModelForTextToWaveform:()=>Ea,AutoModelForTokenClassification:()=>Mu,AutoModelForVision2Seq:()=>$a,AutoModelForXVector:()=>Fu,AutoModelForZeroShotObjectDetection:()=>vd,BartForConditionalGeneration:()=>m,BartForSequenceClassification:()=>z,BartModel:()=>be,BartPretrainedModel:()=>bn,BaseModelOutput:()=>ht,BeitForImageClassification:()=>No,BeitModel:()=>Ro,BeitPreTrainedModel:()=>Ri,BertForMaskedLM:()=>Ne,BertForQuestionAnswering:()=>Be,BertForSequenceClassification:()=>at,BertForTokenClassification:()=>Et,BertModel:()=>dt,BertPreTrainedModel:()=>it,BlenderbotForConditionalGeneration:()=>Ft,BlenderbotModel:()=>xt,BlenderbotPreTrainedModel:()=>St,BlenderbotSmallForConditionalGeneration:()=>ar,BlenderbotSmallModel:()=>Ar,BlenderbotSmallPreTrainedModel:()=>rr,BloomForCausalLM:()=>vo,BloomModel:()=>Zu,BloomPreTrainedModel:()=>Js,CLIPModel:()=>ja,CLIPPreTrainedModel:()=>As,CLIPSegForImageSegmentation:()=>Ka,CLIPSegModel:()=>Ha,CLIPSegPreTrainedModel:()=>vi,CLIPTextModelWithProjection:()=>zn,CLIPVisionModelWithProjection:()=>Va,CamembertForMaskedLM:()=>D,CamembertForQuestionAnswering:()=>Ge,CamembertForSequenceClassification:()=>ce,CamembertForTokenClassification:()=>Se,CamembertModel:()=>Ae,CamembertPreTrainedModel:()=>bt,CausalLMOutput:()=>ns,CausalLMOutputWithPast:()=>Cd,ChineseCLIPModel:()=>qa,ChineseCLIPPreTrainedModel:()=>Ga,ClapAudioModelWithProjection:()=>ql,ClapModel:()=>ma,ClapPreTrainedModel:()=>ui,ClapTextModelWithProjection:()=>Gl,CodeGenForCausalLM:()=>io,CodeGenModel:()=>En,CodeGenPreTrainedModel:()=>Qs,CohereForCausalLM:()=>uo,CohereModel:()=>lo,CoherePreTrainedModel:()=>Ei,ConvBertForMaskedLM:()=>M,ConvBertForQuestionAnswering:()=>Q,ConvBertForSequenceClassification:()=>G,ConvBertForTokenClassification:()=>k,ConvBertModel:()=>Ct,ConvBertPreTrainedModel:()=>vt,ConvNextForImageClassification:()=>cl,ConvNextModel:()=>dl,ConvNextPreTrainedModel:()=>ea,ConvNextV2ForImageClassification:()=>hl,ConvNextV2Model:()=>pl,ConvNextV2PreTrainedModel:()=>ta,DPTForDepthEstimation:()=>nl,DPTModel:()=>rl,DPTPreTrainedModel:()=>Yi,DebertaForMaskedLM:()=>mt,DebertaForQuestionAnswering:()=>_t,DebertaForSequenceClassification:()=>ct,DebertaForTokenClassification:()=>$t,DebertaModel:()=>et,DebertaPreTrainedModel:()=>Fe,DebertaV2ForMaskedLM:()=>Lt,DebertaV2ForQuestionAnswering:()=>Wt,DebertaV2ForSequenceClassification:()=>Ht,DebertaV2ForTokenClassification:()=>Rt,DebertaV2Model:()=>Nt,DebertaV2PreTrainedModel:()=>Re,DeiTForImageClassification:()=>Qo,DeiTModel:()=>Xo,DeiTPreTrainedModel:()=>Ui,DepthAnythingForDepthEstimation:()=>sl,DepthAnythingPreTrainedModel:()=>Ji,DetrForObjectDetection:()=>Vo,DetrForSegmentation:()=>Is,DetrModel:()=>jo,DetrObjectDetectionOutput:()=>Ni,DetrPreTrainedModel:()=>ei,DetrSegmentationOutput:()=>ti,Dinov2ForImageClassification:()=>fl,Dinov2Model:()=>nd,Dinov2PreTrainedModel:()=>ra,DistilBertForMaskedLM:()=>wt,DistilBertForQuestionAnswering:()=>Je,DistilBertForSequenceClassification:()=>sr,DistilBertForTokenClassification:()=>yr,DistilBertModel:()=>cr,DistilBertPreTrainedModel:()=>Xt,DonutSwinModel:()=>ul,DonutSwinPreTrainedModel:()=>ll,EfficientNetForImageClassification:()=>Yl,EfficientNetModel:()=>Ql,EfficientNetPreTrainedModel:()=>wa,ElectraForMaskedLM:()=>tt,ElectraForQuestionAnswering:()=>Tt,ElectraForSequenceClassification:()=>zt,ElectraForTokenClassification:()=>yt,ElectraModel:()=>Ze,ElectraPreTrainedModel:()=>ge,EsmForMaskedLM:()=>In,EsmForSequenceClassification:()=>Rn,EsmForTokenClassification:()=>Vr,EsmModel:()=>Kr,EsmPreTrainedModel:()=>Dt,FalconForCausalLM:()=>Wl,FalconModel:()=>Ul,FalconPreTrainedModel:()=>Vl,FastViTForImageClassification:()=>ed,FastViTModel:()=>$o,FastViTPreTrainedModel:()=>zi,Florence2ForConditionalGeneration:()=>bi,Florence2PreTrainedModel:()=>Na,GLPNForDepthEstimation:()=>ol,GLPNModel:()=>$n,GLPNPreTrainedModel:()=>Zi,GPT2LMHeadModel:()=>Qa,GPT2Model:()=>Xa,GPT2PreTrainedModel:()=>xi,GPTBigCodeForCausalLM:()=>Xs,GPTBigCodeModel:()=>so,GPTBigCodePreTrainedModel:()=>Sn,GPTJForCausalLM:()=>Ju,GPTJModel:()=>no,GPTJPreTrainedModel:()=>ki,GPTNeoForCausalLM:()=>eo,GPTNeoModel:()=>Za,GPTNeoPreTrainedModel:()=>Ti,GPTNeoXForCausalLM:()=>ro,GPTNeoXModel:()=>to,GPTNeoXPreTrainedModel:()=>Si,Gemma2ForCausalLM:()=>fo,Gemma2Model:()=>ho,Gemma2PreTrainedModel:()=>kn,GemmaForCausalLM:()=>po,GemmaModel:()=>co,GemmaPreTrainedModel:()=>$i,HieraForImageClassification:()=>Jo,HieraModel:()=>Yo,HieraPreTrainedModel:()=>Wi,HubertForCTC:()=>Il,HubertForSequenceClassification:()=>id,HubertModel:()=>Al,HubertPreTrainedModel:()=>Qd,ImageMattingOutput:()=>Ru,JAISLMHeadModel:()=>Ja,JAISModel:()=>Ya,JAISPreTrainedModel:()=>Tn,LlamaForCausalLM:()=>oo,LlamaModel:()=>ao,LlamaPreTrainedModel:()=>Ci,LlavaForConditionalGeneration:()=>hs,LlavaPreTrainedModel:()=>Ra,LongT5ForConditionalGeneration:()=>$s,LongT5Model:()=>Es,LongT5PreTrainedModel:()=>cs,M2M100ForConditionalGeneration:()=>ia,M2M100Model:()=>on,M2M100PreTrainedModel:()=>Un,MBartForCausalLM:()=>Mt,MBartForConditionalGeneration:()=>pe,MBartForSequenceClassification:()=>ze,MBartModel:()=>ue,MBartPreTrainedModel:()=>Y,MPNetForMaskedLM:()=>vs,MPNetForQuestionAnswering:()=>Ss,MPNetForSequenceClassification:()=>xs,MPNetForTokenClassification:()=>Ts,MPNetModel:()=>qs,MPNetPreTrainedModel:()=>Nn,MT5ForConditionalGeneration:()=>jr,MT5Model:()=>Ps,MT5PreTrainedModel:()=>ps,MarianMTModel:()=>sa,MarianModel:()=>Zn,MarianPreTrainedModel:()=>Vn,MaskedLMOutput:()=>rn,MistralForCausalLM:()=>Rl,MistralModel:()=>Ll,MistralPreTrainedModel:()=>ha,MobileBertForMaskedLM:()=>Fn,MobileBertForQuestionAnswering:()=>Xn,MobileBertForSequenceClassification:()=>Or,MobileBertModel:()=>Ur,MobileBertPreTrainedModel:()=>sn,MobileNetV1ForImageClassification:()=>Jl,MobileNetV1Model:()=>ba,MobileNetV1PreTrainedModel:()=>_s,MobileNetV2ForImageClassification:()=>eu,MobileNetV2Model:()=>Zl,MobileNetV2PreTrainedModel:()=>Ma,MobileNetV3ForImageClassification:()=>ru,MobileNetV3Model:()=>tu,MobileNetV3PreTrainedModel:()=>ci,MobileNetV4ForImageClassification:()=>nu,MobileNetV4Model:()=>dd,MobileNetV4PreTrainedModel:()=>va,MobileViTForImageClassification:()=>Io,MobileViTModel:()=>td,MobileViTPreTrainedModel:()=>Di,MobileViTV2ForImageClassification:()=>Oo,MobileViTV2Model:()=>Fo,MobileViTV2PreTrainedModel:()=>Mr,ModelOutput:()=>Xe,Moondream1ForConditionalGeneration:()=>or,MptForCausalLM:()=>To,MptModel:()=>xo,MptPreTrainedModel:()=>Oi,MusicgenForCausalLM:()=>Yd,MusicgenForConditionalGeneration:()=>Bs,MusicgenModel:()=>ud,MusicgenPreTrainedModel:()=>ya,NomicBertModel:()=>Ee,NomicBertPreTrainedModel:()=>te,OPTForCausalLM:()=>ko,OPTModel:()=>So,OPTPreTrainedModel:()=>ms,OpenELMForCausalLM:()=>_o,OpenELMModel:()=>mo,OpenELMPreTrainedModel:()=>Pi,OwlViTForObjectDetection:()=>Do,OwlViTModel:()=>zo,OwlViTPreTrainedModel:()=>Bi,Owlv2ForObjectDetection:()=>Lo,Owlv2Model:()=>Bo,Owlv2PreTrainedModel:()=>Li,Phi3ForCausalLM:()=>Mo,Phi3Model:()=>bo,Phi3PreTrainedModel:()=>Ys,PhiForCausalLM:()=>Fi,PhiModel:()=>yo,PhiPreTrainedModel:()=>Ii,PreTrainedModel:()=>Z,PretrainedMixin:()=>Ir,PyAnnoteForAudioFrameClassification:()=>vl,PyAnnoteModel:()=>oa,PyAnnotePreTrainedModel:()=>Fs,QuestionAnsweringModelOutput:()=>ln,Qwen2ForCausalLM:()=>wo,Qwen2Model:()=>go,Qwen2PreTrainedModel:()=>Ai,RTDetrForObjectDetection:()=>Wo,RTDetrModel:()=>Uo,RTDetrObjectDetectionOutput:()=>Go,RTDetrPreTrainedModel:()=>ji,ResNetForImageClassification:()=>qi,ResNetModel:()=>Zo,ResNetPreTrainedModel:()=>Gi,RoFormerForMaskedLM:()=>We,RoFormerForQuestionAnswering:()=>gt,RoFormerForSequenceClassification:()=>Qe,RoFormerForTokenClassification:()=>ut,RoFormerModel:()=>He,RoFormerPreTrainedModel:()=>Ue,RobertaForMaskedLM:()=>cn,RobertaForQuestionAnswering:()=>xn,RobertaForSequenceClassification:()=>tn,RobertaForTokenClassification:()=>$e,RobertaModel:()=>_r,RobertaPreTrainedModel:()=>Gt,SamImageSegmentationOutput:()=>Jn,SamModel:()=>sd,SamPreTrainedModel:()=>wl,SapiensForDepthEstimation:()=>rd,SapiensForNormalEstimation:()=>al,SapiensForSemanticSegmentation:()=>il,SapiensPreTrainedModel:()=>ri,SegformerForImageClassification:()=>od,SegformerForSemanticSegmentation:()=>Kl,SegformerModel:()=>ad,SegformerPreTrainedModel:()=>di,Seq2SeqLMOutput:()=>Sd,SequenceClassifierOutput:()=>ur,SiglipModel:()=>fs,SiglipPreTrainedModel:()=>Mi,SiglipTextModel:()=>Ua,SiglipVisionModel:()=>Wa,SpeechT5ForSpeechToText:()=>da,SpeechT5ForTextToSpeech:()=>ca,SpeechT5HifiGan:()=>Dl,SpeechT5Model:()=>ua,SpeechT5PreTrainedModel:()=>li,SqueezeBertForMaskedLM:()=>ls,SqueezeBertForQuestionAnswering:()=>Yn,SqueezeBertForSequenceClassification:()=>On,SqueezeBertModel:()=>Hs,SqueezeBertPreTrainedModel:()=>Qn,StableLmForCausalLM:()=>ld,StableLmModel:()=>Xl,StableLmPreTrainedModel:()=>ga,Starcoder2ForCausalLM:()=>fa,Starcoder2Model:()=>jl,Starcoder2PreTrainedModel:()=>Nl,Swin2SRForImageSuperResolution:()=>tl,Swin2SRModel:()=>el,Swin2SRPreTrainedModel:()=>Qi,SwinForImageClassification:()=>Xi,SwinModel:()=>Ki,SwinPreTrainedModel:()=>Hi,T5ForConditionalGeneration:()=>Cs,T5Model:()=>ks,T5PreTrainedModel:()=>ts,TableTransformerForObjectDetection:()=>Ho,TableTransformerModel:()=>qo,TableTransformerObjectDetectionOutput:()=>Ko,TableTransformerPreTrainedModel:()=>Vi,TokenClassifierOutput:()=>Zr,TrOCRForCausalLM:()=>pa,TrOCRPreTrainedModel:()=>Bl,UniSpeechForCTC:()=>Tl,UniSpeechForSequenceClassification:()=>Sl,UniSpeechModel:()=>si,UniSpeechPreTrainedModel:()=>Os,UniSpeechSatForAudioFrameClassification:()=>Cl,UniSpeechSatForCTC:()=>la,UniSpeechSatForSequenceClassification:()=>zs,UniSpeechSatModel:()=>kl,UniSpeechSatPreTrainedModel:()=>ii,ViTForImageClassification:()=>Eo,ViTModel:()=>Co,ViTPreTrainedModel:()=>Zs,VisionEncoderDecoderModel:()=>yi,VitMatteForImageMatting:()=>Ao,VitMattePreTrainedModel:()=>Po,VitsModel:()=>_a,VitsModelOutput:()=>Nu,VitsPreTrainedModel:()=>Hl,Wav2Vec2BertForCTC:()=>$l,Wav2Vec2BertForSequenceClassification:()=>Pl,Wav2Vec2BertModel:()=>El,Wav2Vec2BertPreTrainedModel:()=>Ds,Wav2Vec2ForAudioFrameClassification:()=>Ml,Wav2Vec2ForCTC:()=>yl,Wav2Vec2ForSequenceClassification:()=>bl,Wav2Vec2Model:()=>aa,Wav2Vec2PreTrainedModel:()=>Dn,WavLMForAudioFrameClassification:()=>oi,WavLMForCTC:()=>Ol,WavLMForSequenceClassification:()=>zl,WavLMForXVector:()=>ai,WavLMModel:()=>Fl,WavLMPreTrainedModel:()=>rs,WeSpeakerResNetModel:()=>xl,WeSpeakerResNetPreTrainedModel:()=>ni,WhisperForConditionalGeneration:()=>wi,WhisperModel:()=>Ut,WhisperPreTrainedModel:()=>rt,XLMForQuestionAnswering:()=>an,XLMForSequenceClassification:()=>Yt,XLMForTokenClassification:()=>Mn,XLMModel:()=>Yr,XLMPreTrainedModel:()=>Sr,XLMRobertaForMaskedLM:()=>It,XLMRobertaForQuestionAnswering:()=>Wr,XLMRobertaForSequenceClassification:()=>Cr,XLMRobertaForTokenClassification:()=>zr,XLMRobertaModel:()=>kr,XLMRobertaPreTrainedModel:()=>$r,XLMWithLMHeadModel:()=>mn,XVectorOutput:()=>kd,YolosForObjectDetection:()=>_l,YolosModel:()=>ml,YolosObjectDetectionOutput:()=>gl,YolosPreTrainedModel:()=>na});var E=I(\"./src/configs.js\"),ie=I(\"./src/backends/onnx.js\"),we=I(\"./src/utils/dtypes.js\"),ve=I(\"./src/utils/generic.js\"),xe=I(\"./src/utils/core.js\"),N=I(\"./src/utils/hub.js\"),T=I(\"./src/generation/logits_process.js\"),V=I(\"./src/generation/configuration_utils.js\"),P=I(\"./src/utils/tensor.js\"),K=I(\"./src/utils/maths.js\"),ee=I(\"./src/generation/stopping_criteria.js\"),ne=I(\"./src/generation/logits_sampler.js\"),me=I(\"./src/env.js\"),F=I(\"./src/models/whisper/generation_whisper.js\"),J=I(\"./src/models/whisper/common_whisper.js\");const re={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7},le=new Map,ae=new Map,j=new Map;async function O(f,_,C){let H=C.device;H&&typeof H!=\"string\"&&(H.hasOwnProperty(_)?H=H[_]:(console.warn(`device not specified for \"${_}\". Using the default device.`),H=null));const Ie=H??(me.apis.IS_NODE_ENV?\"cpu\":\"wasm\"),Le=(0,ie.deviceToExecutionProviders)(Ie);let lt=C.dtype;typeof lt!=\"string\"&&(lt&&lt.hasOwnProperty(_)?lt=lt[_]:(lt=we.DEFAULT_DEVICE_DTYPE_MAPPING[Ie]??we.DATA_TYPES.fp32,console.warn(`dtype not specified for \"${_}\". Using the default dtype (${lt}) for this device (${Ie}).`)));const Pt=lt;if(we.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Pt)){if(Pt===we.DATA_TYPES.fp16&&Ie===\"webgpu\"&&!await(0,we.isWebGpuFp16Supported)())throw new Error(`The device (${Ie}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Pt}. Should be one of: ${Object.keys(we.DATA_TYPES).join(\", \")}`);const qt=we.DEFAULT_DTYPE_SUFFIX_MAPPING[Pt],dr=`${C.subfolder??\"\"}/${_}${qt}.onnx`,hr={...C.session_options};hr.executionProviders??(hr.executionProviders=Le);const Fr=(0,N.getModelFile)(f,dr,!0,C);let fr=[];if(C.use_external_data_format&&(C.use_external_data_format===!0||typeof C.use_external_data_format==\"object\"&&C.use_external_data_format.hasOwnProperty(_)&&C.use_external_data_format[_]===!0)){if(me.apis.IS_NODE_ENV)throw new Error(\"External data format is not yet supported in Node.js\");const pr=`${_}${qt}.onnx_data`,gr=`${C.subfolder??\"\"}/${pr}`;fr.push(new Promise(async(vr,Br)=>{const _n=await(0,N.getModelFile)(f,gr,!0,C);vr({path:pr,data:_n})}))}else hr.externalData!==void 0&&(fr=hr.externalData.map(async pr=>{if(typeof pr.data==\"string\"){const gr=await(0,N.getModelFile)(f,pr.data,!0,C);return{...pr,data:gr}}return pr}));if(fr.length>0&&(hr.externalData=await Promise.all(fr)),Ie===\"webgpu\"){const pr=(0,E.getKeyValueShapes)(C.config,{prefix:\"present\"});if(Object.keys(pr).length>0&&!(0,ie.isONNXProxy)()){const gr={};for(const vr in pr)gr[vr]=\"gpu-buffer\";hr.preferredOutputLocation=gr}}return{buffer:await Fr,session_options:hr}}async function R(f,_,C){return Object.fromEntries(await Promise.all(Object.keys(_).map(async H=>{const{buffer:Ie,session_options:Le}=await O(f,_[H],C),lt=await(0,ie.createInferenceSession)(Ie,Le);return[H,lt]})))}function A(f,_){const C=Object.create(null),H=[];for(const lt of f.inputNames){const Pt=_[lt];if(!(Pt instanceof P.Tensor)){H.push(lt);continue}C[lt]=(0,ie.isONNXProxy)()?Pt.clone():Pt}if(H.length>0)throw new Error(`An error occurred during model execution: \"Missing the following inputs: ${H.join(\", \")}.`);const Ie=Object.keys(_).length,Le=f.inputNames.length;if(Ie>Le){let lt=Object.keys(_).filter(Pt=>!f.inputNames.includes(Pt));console.warn(`WARNING: Too many inputs were provided (${Ie} > ${Le}). The following inputs will be ignored: \"${lt.join(\", \")}\".`)}return C}async function _e(f,_){const C=A(f,_);try{const H=Object.fromEntries(Object.entries(C).map(([Le,lt])=>[Le,lt.ort_tensor]));let Ie=await f.run(H);return Ie=Me(Ie),Ie}catch(H){throw console.error(`An error occurred during model execution: \"${H}\".`),console.error(\"Inputs given to model:\",C),H}}function Me(f){for(let _ in f)(0,ie.isONNXTensor)(f[_])?f[_]=new P.Tensor(f[_]):typeof f[_]==\"object\"&&Me(f[_]);return f}function ke(f){if(f instanceof P.Tensor)return f;if(f.length===0)throw Error(\"items must be non-empty\");if(Array.isArray(f[0])){if(f.some(_=>_.length!==f[0].length))throw Error(\"Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.\");return new P.Tensor(\"int64\",BigInt64Array.from(f.flat().map(_=>BigInt(_))),[f.length,f[0].length])}else return new P.Tensor(\"int64\",BigInt64Array.from(f.map(_=>BigInt(_))),[1,f.length])}function Oe(f){return new P.Tensor(\"bool\",[f],[1])}async function Pe(f,_){let{encoder_outputs:C,input_ids:H,decoder_input_ids:Ie,...Le}=_;if(!C){const Pt=(0,xe.pick)(_,f.sessions.model.inputNames);C=(await st(f,Pt)).last_hidden_state}return Le.input_ids=Ie,Le.encoder_hidden_states=C,f.sessions.decoder_model_merged.inputNames.includes(\"encoder_attention_mask\")&&(Le.encoder_attention_mask=_.attention_mask),await Ye(f,Le,!0)}async function st(f,_){const C=f.sessions.model,H=(0,xe.pick)(_,C.inputNames);if(C.inputNames.includes(\"inputs_embeds\")&&!H.inputs_embeds){if(!_.input_ids)throw new Error(\"Both `input_ids` and `inputs_embeds` are missing in the model inputs.\");H.inputs_embeds=await f.encode_text({input_ids:_.input_ids})}return C.inputNames.includes(\"token_type_ids\")&&!H.token_type_ids&&(H.token_type_ids=new P.Tensor(\"int64\",new BigInt64Array(H.input_ids.data.length),H.input_ids.dims)),await _e(C,H)}async function Ye(f,_,C=!1){const H=f.sessions[C?\"decoder_model_merged\":\"model\"],{past_key_values:Ie,...Le}=_;H.inputNames.includes(\"use_cache_branch\")&&(Le.use_cache_branch=Oe(!!Ie)),H.inputNames.includes(\"position_ids\")&&Le.attention_mask&&!Le.position_ids&&(Le.position_ids=ye(Le,Ie)),f.addPastKeyValues(Le,Ie);const lt=(0,xe.pick)(Le,H.inputNames);return await _e(H,lt)}async function pt(f,{input_ids:_=null,attention_mask:C=null,pixel_values:H=null,position_ids:Ie=null,inputs_embeds:Le=null,past_key_values:lt=null,generation_config:Pt=null,logits_processor:qt=null,...dr}){if(!Le){if(Le=await f.encode_text({input_ids:_}),H&&_.dims[1]!==1){const Fr=await f.encode_image({pixel_values:H});({inputs_embeds:Le,attention_mask:C}=f._merge_input_ids_with_image_features({image_features:Fr,inputs_embeds:Le,input_ids:_,attention_mask:C}))}else if(lt&&H&&_.dims[1]===1){const Fr=_.dims[1],fr=Object.values(lt)[0].dims.at(-2);C=(0,P.cat)([(0,P.ones)([_.dims[0],fr]),C.slice(null,[C.dims[1]-Fr,C.dims[1]])],1)}}return await Ye(f,{inputs_embeds:Le,past_key_values:lt,attention_mask:C,position_ids:Ie,generation_config:Pt,logits_processor:qt},!0)}function ye(f,_=null){const{input_ids:C,inputs_embeds:H,attention_mask:Ie}=f,[Le,lt]=Ie.dims,Pt=new BigInt64Array(Ie.data.length);for(let dr=0;dr<Le;++dr){const hr=dr*lt;let Fr=BigInt(0);for(let fr=0;fr<lt;++fr){const br=hr+fr;Ie.data[br]===0n?Pt[br]=BigInt(1):(Pt[br]=Fr,Fr+=Ie.data[br])}}let qt=new P.Tensor(\"int64\",Pt,Ie.dims);if(_){const dr=-(C??H).dims.at(1);qt=qt.slice(null,[dr,null])}return qt}function W(f,_,C,H){if(C.past_key_values){const Ie=Object.values(C.past_key_values)[0].dims.at(-2),{input_ids:Le,attention_mask:lt}=C;if(!(lt&&lt.dims[1]>Le.dims[1])){if(Ie<Le.dims[1])C.input_ids=Le.slice(null,[Ie,null]);else if(f.config.image_token_index!=null&&Le.data.some(Pt=>Pt==f.config.image_token_index)){const Pt=f.config.num_image_tokens;if(!Pt)throw new Error(\"`num_image_tokens` is missing in the model configuration.\");const qt=Le.dims[1]-(Ie-Pt);C.input_ids=Le.slice(null,[-qt,null]),C.attention_mask=(0,P.ones)([1,Ie+qt])}}}return C}function he(f,_,C,H){return C.past_key_values&&(_=_.map(Ie=>[Ie.at(-1)])),{...C,decoder_input_ids:ke(_)}}function Ce(f,..._){return f.config.is_encoder_decoder?he(f,..._):W(f,..._)}class Z extends ve.Callable{constructor(C,H){super();Te(this,\"main_input_name\",\"input_ids\");Te(this,\"forward_params\",[\"input_ids\",\"attention_mask\"]);this.config=C,this.sessions=H;const Ie=j.get(this.constructor),Le=le.get(Ie);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,Le){case re.DecoderOnly:this.can_generate=!0,this._forward=Ye,this._prepare_inputs_for_generation=W;break;case re.Seq2Seq:case re.Vision2Seq:case re.Musicgen:this.can_generate=!0,this._forward=Pe,this._prepare_inputs_for_generation=he;break;case re.EncoderDecoder:this._forward=Pe;break;case re.ImageTextToText:this.can_generate=!0,this._forward=pt,this._prepare_inputs_for_generation=Ce;break;default:this._forward=st;break}this.can_generate&&this.forward_params.push(\"past_key_values\"),this.custom_config=this.config[\"transformers.js_config\"]??{}}async dispose(){var H;const C=[];for(const Ie of Object.values(this.sessions))(H=Ie==null?void 0:Ie.handler)!=null&&H.dispose&&C.push(Ie.handler.dispose());return await Promise.all(C)}static async from_pretrained(C,{progress_callback:H=null,config:Ie=null,cache_dir:Le=null,local_files_only:lt=!1,revision:Pt=\"main\",model_file_name:qt=null,subfolder:dr=\"onnx\",device:hr=null,dtype:Fr=null,use_external_data_format:fr=null,session_options:br={}}={}){let pr={progress_callback:H,config:Ie,cache_dir:Le,local_files_only:lt,revision:Pt,model_file_name:qt,subfolder:dr,device:hr,dtype:Fr,use_external_data_format:fr,session_options:br};const gr=j.get(this),vr=le.get(gr);Ie=pr.config=await E.AutoConfig.from_pretrained(C,pr);let Br;if(vr===re.DecoderOnly)Br=await Promise.all([R(C,{model:pr.model_file_name??\"model\"},pr),(0,N.getModelJSON)(C,\"generation_config.json\",!1,pr)]);else if(vr===re.Seq2Seq||vr===re.Vision2Seq)Br=await Promise.all([R(C,{model:\"encoder_model\",decoder_model_merged:\"decoder_model_merged\"},pr),(0,N.getModelJSON)(C,\"generation_config.json\",!1,pr)]);else if(vr===re.MaskGeneration)Br=await Promise.all([R(C,{model:\"vision_encoder\",prompt_encoder_mask_decoder:\"prompt_encoder_mask_decoder\"},pr)]);else if(vr===re.EncoderDecoder)Br=await Promise.all([R(C,{model:\"encoder_model\",decoder_model_merged:\"decoder_model_merged\"},pr)]);else if(vr===re.ImageTextToText){const _n={embed_tokens:\"embed_tokens\",vision_encoder:\"vision_encoder\",decoder_model_merged:\"decoder_model_merged\"};Ie.is_encoder_decoder&&(_n.model=\"encoder_model\"),Br=await Promise.all([R(C,_n,pr),(0,N.getModelJSON)(C,\"generation_config.json\",!1,pr)])}else vr===re.Musicgen?Br=await Promise.all([R(C,{model:\"text_encoder\",decoder_model_merged:\"decoder_model_merged\",encodec_decode:\"encodec_decode\"},pr),(0,N.getModelJSON)(C,\"generation_config.json\",!1,pr)]):(vr!==re.EncoderOnly&&console.warn(`Model type for '${gr??(Ie==null?void 0:Ie.model_type)}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`),Br=await Promise.all([R(C,{model:pr.model_file_name??\"model\"},pr)]));return new this(Ie,...Br)}async _call(C){return await this.forward(C)}async forward(C){return await this._forward(this,C)}_get_logits_warper(C){const H=new T.LogitsProcessorList;return C.temperature!==null&&C.temperature!==1&&H.push(new T.TemperatureLogitsWarper(C.temperature)),C.top_k!==null&&C.top_k!==0&&H.push(new T.TopKLogitsWarper(C.top_k)),C.top_p!==null&&C.top_p<1&&H.push(new T.TopPLogitsWarper(C.top_p)),H}_get_logits_processor(C,H,Ie=null){const Le=new T.LogitsProcessorList;if(C.repetition_penalty!==null&&C.repetition_penalty!==1&&Le.push(new T.RepetitionPenaltyLogitsProcessor(C.repetition_penalty)),C.no_repeat_ngram_size!==null&&C.no_repeat_ngram_size>0&&Le.push(new T.NoRepeatNGramLogitsProcessor(C.no_repeat_ngram_size)),C.bad_words_ids!==null&&Le.push(new T.NoBadWordsLogitsProcessor(C.bad_words_ids,C.eos_token_id)),C.min_length!==null&&C.eos_token_id!==null&&C.min_length>0&&Le.push(new T.MinLengthLogitsProcessor(C.min_length,C.eos_token_id)),C.min_new_tokens!==null&&C.eos_token_id!==null&&C.min_new_tokens>0&&Le.push(new T.MinNewTokensLengthLogitsProcessor(H,C.min_new_tokens,C.eos_token_id)),C.forced_bos_token_id!==null&&Le.push(new T.ForcedBOSTokenLogitsProcessor(C.forced_bos_token_id)),C.forced_eos_token_id!==null&&Le.push(new T.ForcedEOSTokenLogitsProcessor(C.max_length,C.forced_eos_token_id)),C.begin_suppress_tokens!==null){const lt=H>1||C.forced_bos_token_id===null?H:H+1;Le.push(new T.SuppressTokensAtBeginLogitsProcessor(C.begin_suppress_tokens,lt))}return C.guidance_scale!==null&&C.guidance_scale>1&&Le.push(new T.ClassifierFreeGuidanceLogitsProcessor(C.guidance_scale)),Ie!==null&&Le.extend(Ie),Le}_prepare_generation_config(C,H,Ie=V.GenerationConfig){const Le={...this.config};for(const Pt of[\"decoder\",\"generator\",\"text_config\"])Pt in Le&&Object.assign(Le,Le[Pt]);const lt=new Ie(Le);return\"generation_config\"in this&&Object.assign(lt,this.generation_config),C&&Object.assign(lt,C),H&&Object.assign(lt,(0,xe.pick)(H,Object.getOwnPropertyNames(lt))),lt}_get_stopping_criteria(C,H=null){const Ie=new ee.StoppingCriteriaList;return C.max_length!==null&&Ie.push(new ee.MaxLengthCriteria(C.max_length,this.config.max_position_embeddings??null)),C.eos_token_id!==null&&Ie.push(new ee.EosTokenCriteria(C.eos_token_id)),H&&Ie.extend(H),Ie}_validate_model_class(){if(!this.can_generate){const C=[Ta,Sa,xa,su],H=j.get(this.constructor),Ie=new Set,Le=this.config.model_type;for(const Pt of C){const qt=Pt.get(Le);qt&&Ie.add(qt[0])}let lt=`The current model class (${H}) is not compatible with \\`.generate()\\`, as it doesn't have a language model head.`;throw Ie.size>0&&(lt+=` Please use the following class instead: ${[...Ie].join(\", \")}`),Error(lt)}}prepare_inputs_for_generation(...C){return this._prepare_inputs_for_generation(this,...C)}_update_model_kwargs_for_generation({generated_input_ids:C,outputs:H,model_inputs:Ie,is_encoder_decoder:Le}){return Ie.past_key_values=this.getPastKeyValues(H,Ie.past_key_values),Ie.input_ids=new P.Tensor(\"int64\",C.flat(),[C.length,1]),Le||(Ie.attention_mask=(0,P.cat)([Ie.attention_mask,(0,P.ones)([Ie.attention_mask.dims[0],1])],1)),Ie.position_ids=null,Ie}_prepare_model_inputs({inputs:C,bos_token_id:H,model_kwargs:Ie}){const Le=(0,xe.pick)(Ie,this.forward_params),lt=this.main_input_name;if(lt in Le){if(C)throw new Error(\"`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...\")}else Le[lt]=C;return{inputs_tensor:Le[lt],model_inputs:Le,model_input_name:lt}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:C,model_inputs:H,model_input_name:Ie,generation_config:Le}){if(this.sessions.model.inputNames.includes(\"inputs_embeds\")&&!H.inputs_embeds&&\"_prepare_inputs_embeds\"in this){const{input_ids:Pt,pixel_values:qt,attention_mask:dr,...hr}=H,Fr=await this._prepare_inputs_embeds(H);H={...hr,...(0,xe.pick)(Fr,[\"inputs_embeds\",\"attention_mask\"])}}let{last_hidden_state:lt}=await st(this,H);if(Le.guidance_scale!==null&&Le.guidance_scale>1)lt=(0,P.cat)([lt,(0,P.full_like)(lt,0)],0),\"attention_mask\"in H&&(H.attention_mask=(0,P.cat)([H.attention_mask,(0,P.zeros_like)(H.attention_mask)],0));else if(H.decoder_input_ids){const Pt=ke(H.decoder_input_ids).dims[0];if(Pt!==lt.dims[0]){if(lt.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${lt.dims[0]}) than the decoder inputs (${Pt}).`);lt=(0,P.cat)(Array.from({length:Pt},()=>lt),0)}}return H.encoder_outputs=lt,H}_prepare_decoder_input_ids_for_generation({batch_size:C,model_input_name:H,model_kwargs:Ie,decoder_start_token_id:Le,bos_token_id:lt,generation_config:Pt}){let{decoder_input_ids:qt,...dr}=Ie;if(qt)Array.isArray(qt[0])||(qt=Array.from({length:C},()=>qt));else if(Le??(Le=lt),this.config.model_type===\"musicgen\")qt=Array.from({length:C*this.config.decoder.num_codebooks},()=>[Le]);else if(Array.isArray(Le)){if(Le.length!==C)throw new Error(`\\`decoder_start_token_id\\` expcted to have length ${C} but got ${Le.length}`);qt=Le}else qt=Array.from({length:C},()=>[Le]);return qt=ke(qt),Ie.decoder_attention_mask=(0,P.ones_like)(qt),{input_ids:qt,model_inputs:dr}}async generate({inputs:C=null,generation_config:H=null,logits_processor:Ie=null,stopping_criteria:Le=null,streamer:lt=null,...Pt}){this._validate_model_class(),H=this._prepare_generation_config(H,Pt);let{inputs_tensor:qt,model_inputs:dr,model_input_name:hr}=this._prepare_model_inputs({inputs:C,model_kwargs:Pt});const Fr=this.config.is_encoder_decoder;Fr&&(\"encoder_outputs\"in dr||(dr=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:qt,model_inputs:dr,model_input_name:hr,generation_config:H})));let fr;Fr?{input_ids:fr,model_inputs:dr}=this._prepare_decoder_input_ids_for_generation({batch_size:dr[hr].dims.at(0),model_input_name:hr,model_kwargs:dr,decoder_start_token_id:H.decoder_start_token_id,bos_token_id:H.bos_token_id,generation_config:H}):fr=dr[hr];let br=fr.dims.at(-1);H.max_new_tokens!==null&&(H.max_length=br+H.max_new_tokens);const pr=this._get_logits_processor(H,br,Ie),gr=this._get_stopping_criteria(H,Le),vr=dr[hr].dims.at(0),Br=ne.LogitsSampler.getSampler(H),_n=new Array(vr).fill(0),gn=fr.tolist();lt&&lt.put(gn);let Wn=null,hn={};for(;;){dr=this.prepare_inputs_for_generation(gn,dr,H);const un=await this.forward(dr);if(H.output_attentions&&H.return_dict_in_generate){const Bn=this.getAttentions(un);for(const ws in Bn)ws in hn||(hn[ws]=[]),hn[ws].push(Bn[ws])}const Aa=un.logits.slice(null,-1,null),pi=pr(gn,Aa),Ia=[];for(let Bn=0;Bn<pi.dims.at(0);++Bn){const ws=pi[Bn],Ed=await Br(ws);for(const[Jd,$d]of Ed){const ju=BigInt(Jd);_n[Bn]+=$d,gn[Bn].push(ju),Ia.push([ju]);break}}if(lt&&lt.put(Ia),gr(gn).every(Bn=>Bn)){H.return_dict_in_generate&&(Wn=this.getPastKeyValues(un,dr.past_key_values,!1));break}dr=this._update_model_kwargs_for_generation({generated_input_ids:Ia,outputs:un,model_inputs:dr,is_encoder_decoder:Fr})}lt&&lt.end();const en=new P.Tensor(\"int64\",gn.flat(),[gn.length,gn[0].length]);return H.return_dict_in_generate?{sequences:en,past_key_values:Wn,...hn}:en}getPastKeyValues(C,H,Ie=!0){const Le=Object.create(null);for(const lt in C)if(lt.startsWith(\"present\")){const Pt=lt.replace(\"present\",\"past_key_values\");if(H&&lt.includes(\"encoder\"))Le[Pt]=H[Pt];else{if(Ie&&H){const qt=H[Pt];qt.location===\"gpu-buffer\"&&qt.dispose()}Le[Pt]=C[lt]}}return Le}getAttentions(C){const H={};for(const Ie of[\"cross_attentions\",\"encoder_attentions\",\"decoder_attentions\"])for(const Le in C)Le.startsWith(Ie)&&(Ie in H||(H[Ie]=[]),H[Ie].push(C[Le]));return H}addPastKeyValues(C,H){if(H)Object.assign(C,H);else{const Ie=this.custom_config.kv_cache_dtype??\"float32\",Le=Ie===\"float16\"?new Uint16Array:[],lt=(0,E.getKeyValueShapes)(this.config);for(const Pt in lt)C[Pt]=new P.Tensor(Ie,Le,lt[Pt])}}async encode_image({pixel_values:C}){const H=(await _e(this.sessions.vision_encoder,{pixel_values:C})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${H.dims[1]}).`),this.config.num_image_tokens=H.dims[1]),H}async encode_text({input_ids:C}){return(await _e(this.sessions.embed_tokens,{input_ids:C})).inputs_embeds}}class Xe{}class ht extends Xe{constructor({last_hidden_state:_,hidden_states:C=null,attentions:H=null}){super(),this.last_hidden_state=_,this.hidden_states=C,this.attentions=H}}class it extends Z{}class dt extends it{}class Ne extends it{async _call(_){return new rn(await super._call(_))}}class at extends it{async _call(_){return new ur(await super._call(_))}}class Et extends it{async _call(_){return new Zr(await super._call(_))}}class Be extends it{async _call(_){return new ln(await super._call(_))}}class te extends Z{}class Ee extends te{}class Ue extends Z{}class He extends Ue{}class We extends Ue{async _call(_){return new rn(await super._call(_))}}class Qe extends Ue{async _call(_){return new ur(await super._call(_))}}class ut extends Ue{async _call(_){return new Zr(await super._call(_))}}class gt extends Ue{async _call(_){return new ln(await super._call(_))}}class vt extends Z{}class Ct extends vt{}class M extends vt{async _call(_){return new rn(await super._call(_))}}class G extends vt{async _call(_){return new ur(await super._call(_))}}class k extends vt{async _call(_){return new Zr(await super._call(_))}}class Q extends vt{async _call(_){return new ln(await super._call(_))}}class ge extends Z{}class Ze extends ge{}class tt extends ge{async _call(_){return new rn(await super._call(_))}}class zt extends ge{async _call(_){return new ur(await super._call(_))}}class yt extends ge{async _call(_){return new Zr(await super._call(_))}}class Tt extends ge{async _call(_){return new ln(await super._call(_))}}class bt extends Z{}class Ae extends bt{}class D extends bt{async _call(_){return new rn(await super._call(_))}}class ce extends bt{async _call(_){return new ur(await super._call(_))}}class Se extends bt{async _call(_){return new Zr(await super._call(_))}}class Ge extends bt{async _call(_){return new ln(await super._call(_))}}class Fe extends Z{}class et extends Fe{}class mt extends Fe{async _call(_){return new rn(await super._call(_))}}class ct extends Fe{async _call(_){return new ur(await super._call(_))}}class $t extends Fe{async _call(_){return new Zr(await super._call(_))}}class _t extends Fe{async _call(_){return new ln(await super._call(_))}}class Re extends Z{}class Nt extends Re{}class Lt extends Re{async _call(_){return new rn(await super._call(_))}}class Ht extends Re{async _call(_){return new ur(await super._call(_))}}class Rt extends Re{async _call(_){return new Zr(await super._call(_))}}class Wt extends Re{async _call(_){return new ln(await super._call(_))}}class Xt extends Z{}class cr extends Xt{}class sr extends Xt{async _call(_){return new ur(await super._call(_))}}class yr extends Xt{async _call(_){return new Zr(await super._call(_))}}class Je extends Xt{async _call(_){return new ln(await super._call(_))}}class wt extends Xt{async _call(_){return new rn(await super._call(_))}}class Dt extends Z{}class Kr extends Dt{}class In extends Dt{async _call(_){return new rn(await super._call(_))}}class Rn extends Dt{async _call(_){return new ur(await super._call(_))}}class Vr extends Dt{async _call(_){return new Zr(await super._call(_))}}class sn extends Z{}class Ur extends sn{}class Fn extends sn{async _call(_){return new rn(await super._call(_))}}class Or extends sn{async _call(_){return new ur(await super._call(_))}}class Xn extends sn{async _call(_){return new ln(await super._call(_))}}class Nn extends Z{}class qs extends Nn{}class vs extends Nn{async _call(_){return new rn(await super._call(_))}}class xs extends Nn{async _call(_){return new ur(await super._call(_))}}class Ts extends Nn{async _call(_){return new Zr(await super._call(_))}}class Ss extends Nn{async _call(_){return new ln(await super._call(_))}}class Qn extends Z{}class Hs extends Qn{}class ls extends Qn{async _call(_){return new rn(await super._call(_))}}class On extends Qn{async _call(_){return new ur(await super._call(_))}}class Yn extends Qn{async _call(_){return new ln(await super._call(_))}}class jn extends Z{}class es extends jn{}class us extends jn{async _call(_){return new ur(await super._call(_))}}class ds extends jn{async _call(_){return new ln(await super._call(_))}}class Qt extends jn{async _call(_){return new rn(await super._call(_))}}class ts extends Z{constructor(C,H,Ie){super(C,H);Te(this,\"forward_params\",[\"input_ids\",\"attention_mask\",\"encoder_outputs\",\"decoder_input_ids\",\"decoder_attention_mask\",\"past_key_values\"]);this.generation_config=Ie}}class ks extends ts{}class Cs extends ts{}class cs extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class Es extends cs{}class $s extends cs{}class ps extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class Ps extends ps{}class jr extends ps{}class bn extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class be extends bn{}class m extends bn{}class z extends bn{async _call(_){return new ur(await super._call(_))}}class Y extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class ue extends Y{}class pe extends Y{}class ze extends Y{async _call(_){return new ur(await super._call(_))}}class Mt extends Y{}class St extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class xt extends St{}class Ft extends St{}class rr extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class Ar extends rr{}class ar extends rr{}class Gt extends Z{}class _r extends Gt{}class cn extends Gt{async _call(_){return new rn(await super._call(_))}}class tn extends Gt{async _call(_){return new ur(await super._call(_))}}class $e extends Gt{async _call(_){return new Zr(await super._call(_))}}class xn extends Gt{async _call(_){return new ln(await super._call(_))}}class Sr extends Z{}class Yr extends Sr{}class mn extends Sr{async _call(_){return new rn(await super._call(_))}}class Yt extends Sr{async _call(_){return new ur(await super._call(_))}}class Mn extends Sr{async _call(_){return new Zr(await super._call(_))}}class an extends Sr{async _call(_){return new ln(await super._call(_))}}class $r extends Z{}class kr extends $r{}class It extends $r{async _call(_){return new rn(await super._call(_))}}class Cr extends $r{async _call(_){return new ur(await super._call(_))}}class zr extends $r{async _call(_){return new Zr(await super._call(_))}}class Wr extends $r{async _call(_){return new ln(await super._call(_))}}class vn extends Z{}class jt extends vn{}class Ks extends vn{}class rt extends Z{constructor(C,H,Ie){super(C,H);Te(this,\"requires_attention_mask\",!1);Te(this,\"main_input_name\",\"input_features\");Te(this,\"forward_params\",[\"input_features\",\"attention_mask\",\"decoder_input_ids\",\"decoder_attention_mask\",\"past_key_values\"]);this.generation_config=Ie}}class Ut extends rt{}class wi extends rt{_prepare_generation_config(_,C){return super._prepare_generation_config(_,C,F.WhisperGenerationConfig)}_retrieve_init_tokens(_){const C=[_.decoder_start_token_id];let H=_.language;const Ie=_.task;if(_.is_multilingual){H||(console.warn(\"No language specified - defaulting to English (en).\"),H=\"en\");const lt=`<|${(0,J.whisper_language_to_code)(H)}|>`;C.push(_.lang_to_id[lt]),C.push(_.task_to_id[Ie??\"transcribe\"])}else if(H||Ie)throw new Error(\"Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.\");return!_.return_timestamps&&_.no_timestamps_token_id&&C.at(-1)!==_.no_timestamps_token_id?C.push(_.no_timestamps_token_id):_.return_timestamps&&C.at(-1)===_.no_timestamps_token_id&&(console.warn(\"<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`.\"),C.pop()),C.filter(Le=>Le!=null)}async generate({inputs:_=null,generation_config:C=null,logits_processor:H=null,stopping_criteria:Ie=null,...Le}){C=this._prepare_generation_config(C,Le);const lt=Le.decoder_input_ids??this._retrieve_init_tokens(C);if(C.return_timestamps&&(H??(H=new T.LogitsProcessorList),H.push(new T.WhisperTimeStampLogitsProcessor(C,lt))),C.begin_suppress_tokens&&(H??(H=new T.LogitsProcessorList),H.push(new T.SuppressTokensAtBeginLogitsProcessor(C.begin_suppress_tokens,lt.length))),C.return_token_timestamps){if(!C.alignment_heads)throw new Error(\"Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.\");C.task===\"translate\"&&console.warn(\"Token-level timestamps may not be reliable for task 'translate'.\"),C.output_attentions=!0,C.return_dict_in_generate=!0}const Pt=await super.generate({inputs:_,generation_config:C,logits_processor:H,decoder_input_ids:lt,...Le});return C.return_token_timestamps&&(Pt.token_timestamps=this._extract_token_timestamps(Pt,C.alignment_heads,C.num_frames)),Pt}_extract_token_timestamps(_,C,H=null,Ie=.02){if(!_.cross_attentions)throw new Error(\"Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.\");H==null&&console.warn(\"`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).\");let Le=this.config.median_filter_width;Le===void 0&&(console.warn(\"Model config has no `median_filter_width`, using default value of 7.\"),Le=7);const lt=_.cross_attentions,Pt=Array.from({length:this.config.decoder_layers},(gr,vr)=>(0,P.cat)(lt.map(Br=>Br[vr]),2)),qt=(0,P.stack)(C.map(([gr,vr])=>{if(gr>=Pt.length)throw new Error(`Layer index ${gr} is out of bounds for cross attentions (length ${Pt.length}).`);return H?Pt[gr].slice(null,vr,null,[0,H]):Pt[gr].slice(null,vr)})).transpose(1,0,2,3),[dr,hr]=(0,P.std_mean)(qt,-2,0,!0),Fr=qt.clone();for(let gr=0;gr<Fr.dims[0];++gr){const vr=Fr[gr];for(let Br=0;Br<vr.dims[0];++Br){const _n=vr[Br],gn=dr[gr][Br][0].data,Wn=hr[gr][Br][0].data;for(let hn=0;hn<_n.dims[0];++hn){let en=_n[hn].data;for(let un=0;un<en.length;++un)en[un]=(en[un]-Wn[un])/gn[un];en.set((0,K.medianFilter)(en,Le))}}}const fr=[(0,P.mean)(Fr,1)],br=_.sequences.dims,pr=new P.Tensor(\"float32\",new Float32Array(br[0]*br[1]),br);for(let gr=0;gr<br[0];++gr){const vr=fr[gr].neg().squeeze_(0),[Br,_n]=(0,K.dynamic_time_warping)(vr.tolist()),gn=Array.from({length:Br.length-1},(en,un)=>Br[un+1]-Br[un]),Wn=(0,xe.mergeArrays)([1],gn).map(en=>!!en),hn=[];for(let en=0;en<Wn.length;++en)Wn[en]&&hn.push(_n[en]*Ie);pr[gr].data.set(hn,1)}return pr}}class yi extends Z{constructor(C,H,Ie){super(C,H);Te(this,\"main_input_name\",\"pixel_values\");Te(this,\"forward_params\",[\"pixel_values\",\"input_ids\",\"encoder_hidden_states\",\"past_key_values\"]);this.generation_config=Ie}}class Ra extends Z{constructor(C,H,Ie){super(C,H);Te(this,\"forward_params\",[\"input_ids\",\"pixel_values\",\"attention_mask\",\"position_ids\",\"past_key_values\"]);this.generation_config=Ie}}class hs extends Ra{_merge_input_ids_with_image_features({inputs_embeds:_,image_features:C,input_ids:H,attention_mask:Ie}){const Le=this.config.image_token_index,Pt=H.tolist().map(fr=>fr.findIndex(br=>br==Le)),qt=Pt.every(fr=>fr===-1),dr=Pt.every(fr=>fr!==-1);if(!qt&&!dr)throw new Error(\"Every input should contain either 0 or 1 image token.\");if(qt)return{inputs_embeds:_,attention_mask:Ie};const hr=[],Fr=[];for(let fr=0;fr<Pt.length;++fr){const br=Pt[fr],pr=_[fr],gr=C[fr],vr=Ie[fr];hr.push((0,P.cat)([pr.slice([0,br]),gr,pr.slice([br+1,pr.dims[0]])],0)),Fr.push((0,P.cat)([vr.slice([0,br]),(0,P.ones)([gr.dims[0]]),vr.slice([br+1,vr.dims[0]])],0))}return{inputs_embeds:(0,P.stack)(hr,0),attention_mask:(0,P.stack)(Fr,0)}}}class or extends hs{}class Na extends Z{constructor(C,H,Ie){super(C,H);Te(this,\"forward_params\",[\"input_ids\",\"inputs_embeds\",\"attention_mask\",\"pixel_values\",\"encoder_outputs\",\"decoder_input_ids\",\"decoder_inputs_embeds\",\"decoder_attention_mask\",\"past_key_values\"]);Te(this,\"main_input_name\",\"inputs_embeds\");this.generation_config=Ie}}class bi extends Na{_merge_input_ids_with_image_features({inputs_embeds:_,image_features:C,input_ids:H,attention_mask:Ie}){return{inputs_embeds:(0,P.cat)([C,_],1),attention_mask:(0,P.cat)([(0,P.ones)(C.dims.slice(0,2)),Ie],1)}}async _prepare_inputs_embeds({input_ids:_,pixel_values:C,inputs_embeds:H,attention_mask:Ie}){if(!_&&!C)throw new Error(\"Either `input_ids` or `pixel_values` should be provided.\");let Le,lt;return _&&(Le=await this.encode_text({input_ids:_})),C&&(lt=await this.encode_image({pixel_values:C})),Le&&lt?{inputs_embeds:H,attention_mask:Ie}=this._merge_input_ids_with_image_features({inputs_embeds:Le,image_features:lt,input_ids:_,attention_mask:Ie}):H=Le||lt,{inputs_embeds:H,attention_mask:Ie}}async forward({input_ids:_,pixel_values:C,attention_mask:H,decoder_input_ids:Ie,decoder_attention_mask:Le,encoder_outputs:lt,past_key_values:Pt,inputs_embeds:qt,decoder_inputs_embeds:dr}){if(qt||({inputs_embeds:qt,attention_mask:H}=await this._prepare_inputs_embeds({input_ids:_,pixel_values:C,inputs_embeds:qt,attention_mask:H})),!lt){let{last_hidden_state:fr}=await st(this,{inputs_embeds:qt,attention_mask:H});lt=fr}if(!dr){if(!Ie)throw new Error(\"Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.\");dr=await this.encode_text({input_ids:Ie})}return await Ye(this,{inputs_embeds:dr,attention_mask:Le,encoder_attention_mask:H,encoder_hidden_states:lt,past_key_values:Pt},!0)}}class As extends Z{}class ja extends As{}class zn extends As{static async from_pretrained(_,C={}){return C.model_file_name??(C.model_file_name=\"text_model\"),super.from_pretrained(_,C)}}class Va extends As{static async from_pretrained(_,C={}){return C.model_file_name??(C.model_file_name=\"vision_model\"),super.from_pretrained(_,C)}}class Mi extends Z{}class fs extends Mi{}class Ua extends Mi{static async from_pretrained(_,C={}){return C.model_file_name??(C.model_file_name=\"text_model\"),super.from_pretrained(_,C)}}class Wa extends As{static async from_pretrained(_,C={}){return C.model_file_name??(C.model_file_name=\"vision_model\"),super.from_pretrained(_,C)}}class Ga extends Z{}class qa extends Ga{}class vi extends Z{}class Ha extends vi{}class Ka extends vi{}class xi extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class Xa extends xi{}class Qa extends xi{}class Tn extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class Ya extends Tn{}class Ja extends Tn{}class Ti extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class Za extends Ti{}class eo extends Ti{}class Si extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class to extends Si{}class ro extends Si{}class ki extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class no extends ki{}class Ju extends ki{}class Sn extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class so extends Sn{}class Xs extends Sn{}class Qs extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class En extends Qs{}class io extends Qs{}class Ci extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class ao extends Ci{}class oo extends Ci{}class Ei extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class lo extends Ei{}class uo extends Ei{}class $i extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class co extends $i{}class po extends $i{}class kn extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class ho extends kn{}class fo extends kn{}class Pi extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class mo extends Pi{}class _o extends Pi{}class Ai extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class go extends Ai{}class wo extends Ai{}class Ii extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class yo extends Ii{}class Fi extends Ii{}class Ys extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class bo extends Ys{}class Mo extends Ys{}class Js extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class Zu extends Js{}class vo extends Js{}class Oi extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class xo extends Oi{}class To extends Oi{}class ms extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class So extends ms{}class ko extends ms{}class Zs extends Z{}class Co extends Zs{}class Eo extends Zs{async _call(_){return new ur(await super._call(_))}}class zi extends Z{}class $o extends zi{}class ed extends zi{async _call(_){return new ur(await super._call(_))}}class Po extends Z{}class Ao extends Po{async _call(_){return new Ru(await super._call(_))}}class Di extends Z{}class td extends Di{}class Io extends Di{async _call(_){return new ur(await super._call(_))}}class Mr extends Z{}class Fo extends Mr{}class Oo extends Mr{async _call(_){return new ur(await super._call(_))}}class Bi extends Z{}class zo extends Bi{}class Do extends Bi{}class Li extends Z{}class Bo extends Li{}class Lo extends Li{}class Ri extends Z{}class Ro extends Ri{}class No extends Ri{async _call(_){return new ur(await super._call(_))}}class ei extends Z{}class jo extends ei{}class Vo extends ei{async _call(_){return new Ni(await super._call(_))}}class Is extends ei{async _call(_){return new ti(await super._call(_))}}class Ni extends Xe{constructor({logits:_,pred_boxes:C}){super(),this.logits=_,this.pred_boxes=C}}class ti extends Xe{constructor({logits:_,pred_boxes:C,pred_masks:H}){super(),this.logits=_,this.pred_boxes=C,this.pred_masks=H}}class ji extends Z{}class Uo extends ji{}class Wo extends ji{async _call(_){return new Go(await super._call(_))}}class Go extends Xe{constructor({logits:_,pred_boxes:C}){super(),this.logits=_,this.pred_boxes=C}}class Vi extends Z{}class qo extends Vi{}class Ho extends Vi{async _call(_){return new Ko(await super._call(_))}}class Ko extends Ni{}class Ui extends Z{}class Xo extends Ui{}class Qo extends Ui{async _call(_){return new ur(await super._call(_))}}class Wi extends Z{}class Yo extends Wi{}class Jo extends Wi{async _call(_){return new ur(await super._call(_))}}class Gi extends Z{}class Zo extends Gi{}class qi extends Gi{async _call(_){return new ur(await super._call(_))}}class Hi extends Z{}class Ki extends Hi{}class Xi extends Hi{async _call(_){return new ur(await super._call(_))}}class Qi extends Z{}class el extends Qi{}class tl extends Qi{}class Yi extends Z{}class rl extends Yi{}class nl extends Yi{}class Ji extends Z{}class sl extends Ji{}class ri extends Z{}class il extends ri{}class rd extends ri{}class al extends ri{}class Zi extends Z{}class $n extends Zi{}class ol extends Zi{}class ll extends Z{}class ul extends ll{}class ea extends Z{}class dl extends ea{}class cl extends ea{async _call(_){return new ur(await super._call(_))}}class ta extends Z{}class pl extends ta{}class hl extends ta{async _call(_){return new ur(await super._call(_))}}class ra extends Z{}class nd extends ra{}class fl extends ra{async _call(_){return new ur(await super._call(_))}}class na extends Z{}class ml extends na{}class _l extends na{async _call(_){return new gl(await super._call(_))}}class gl extends Xe{constructor({logits:_,pred_boxes:C}){super(),this.logits=_,this.pred_boxes=C}}class wl extends Z{}class sd extends wl{async get_image_embeddings({pixel_values:_}){return await st(this,{pixel_values:_})}async forward(_){if((!_.image_embeddings||!_.image_positional_embeddings)&&(_={..._,...await this.get_image_embeddings(_)}),!_.input_labels&&_.input_points){const H=_.input_points.dims.slice(0,-1),Ie=H.reduce((Le,lt)=>Le*lt,1);_.input_labels=new P.Tensor(\"int64\",new BigInt64Array(Ie).fill(1n),H)}const C={image_embeddings:_.image_embeddings,image_positional_embeddings:_.image_positional_embeddings};return _.input_points&&(C.input_points=_.input_points),_.input_labels&&(C.input_labels=_.input_labels),_.input_boxes&&(C.input_boxes=_.input_boxes),await _e(this.sessions.prompt_encoder_mask_decoder,C)}async _call(_){return new Jn(await super._call(_))}}class Jn extends Xe{constructor({iou_scores:_,pred_masks:C}){super(),this.iou_scores=_,this.pred_masks=C}}class Vn extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class Zn extends Vn{}class sa extends Vn{}class Un extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class on extends Un{}class ia extends Un{}class Dn extends Z{}class aa extends Dn{}class yl extends Dn{async _call(_){return new ns(await super._call(_))}}class bl extends Dn{async _call(_){return new ur(await super._call(_))}}class Ml extends Dn{async _call(_){return new Zr(await super._call(_))}}class Fs extends Z{}class oa extends Fs{}class vl extends Fs{async _call(_){return new Zr(await super._call(_))}}class ni extends Z{}class xl extends ni{}class Os extends Z{}class si extends Os{}class Tl extends Os{async _call(_){return new ns(await super._call(_))}}class Sl extends Os{async _call(_){return new ur(await super._call(_))}}class ii extends Z{}class kl extends ii{}class la extends ii{async _call(_){return new ns(await super._call(_))}}class zs extends ii{async _call(_){return new ur(await super._call(_))}}class Cl extends ii{async _call(_){return new Zr(await super._call(_))}}class Ds extends Z{}class El extends Ds{}class $l extends Ds{async _call(_){return new ns(await super._call(_))}}class Pl extends Ds{async _call(_){return new ur(await super._call(_))}}class Qd extends Z{}class Al extends Dn{}class Il extends Dn{async _call(_){return new ns(await super._call(_))}}class id extends Dn{async _call(_){return new ur(await super._call(_))}}class rs extends Z{}class Fl extends rs{}class Ol extends rs{async _call(_){return new ns(await super._call(_))}}class zl extends rs{async _call(_){return new ur(await super._call(_))}}class ai extends rs{async _call(_){return new kd(await super._call(_))}}class oi extends rs{async _call(_){return new Zr(await super._call(_))}}class li extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class ua extends li{}class da extends li{}class ca extends li{async generate_speech(_,C,{threshold:H=.5,minlenratio:Ie=0,maxlenratio:Le=20,vocoder:lt=null}={}){const Pt={input_ids:_},{encoder_outputs:qt,encoder_attention_mask:dr}=await st(this,Pt),hr=qt.dims[1]/this.config.reduction_factor,Fr=Math.floor(hr*Le),fr=Math.floor(hr*Ie),br=this.config.num_mel_bins;let pr=[],gr=null,vr=null,Br=0;for(;;){++Br;const Wn=Oe(!!vr);let hn;vr?hn=vr.output_sequence_out:hn=new P.Tensor(\"float32\",new Float32Array(br),[1,1,br]);let en={use_cache_branch:Wn,output_sequence:hn,encoder_attention_mask:dr,speaker_embeddings:C,encoder_hidden_states:qt};this.addPastKeyValues(en,gr),vr=await _e(this.sessions.decoder_model_merged,en),gr=this.getPastKeyValues(vr,gr);const{prob:un,spectrum:Aa}=vr;if(pr.push(Aa),Br>=fr&&(Array.from(un.data).filter(pi=>pi>=H).length>0||Br>=Fr))break}const _n=(0,P.cat)(pr),{waveform:gn}=await _e(lt.sessions.model,{spectrogram:_n});return{spectrogram:_n,waveform:gn}}}class Dl extends Z{constructor(){super(...arguments);Te(this,\"main_input_name\",\"spectrogram\")}}class Bl extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class pa extends Bl{}class ha extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class Ll extends ha{}class Rl extends ha{}class Nl extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class jl extends Nl{}class fa extends Nl{}class Vl extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class Ul extends Vl{}class Wl extends Vl{}class ui extends Z{}class ma extends ui{}class Gl extends ui{static async from_pretrained(_,C={}){return C.model_file_name??(C.model_file_name=\"text_model\"),super.from_pretrained(_,C)}}class ql extends ui{static async from_pretrained(_,C={}){return C.model_file_name??(C.model_file_name=\"audio_model\"),super.from_pretrained(_,C)}}class Hl extends Z{}class _a extends Hl{async _call(_){return new Nu(await super._call(_))}}class di extends Z{}class ad extends di{}class od extends di{}class Kl extends di{}class ga extends Z{constructor(_,C,H){super(_,C),this.generation_config=H}}class Xl extends ga{}class ld extends ga{}class wa extends Z{}class Ql extends wa{}class Yl extends wa{async _call(_){return new ur(await super._call(_))}}class ya extends Z{}class ud extends ya{}class Yd extends ya{}class Bs extends Z{constructor(C,H,Ie){super(C,H);Te(this,\"forward_params\",[\"input_ids\",\"attention_mask\",\"encoder_outputs\",\"decoder_input_ids\",\"decoder_attention_mask\",\"past_key_values\"]);this.generation_config=Ie}_apply_and_filter_by_delay_pattern_mask(C){const[H,Ie]=C.dims,Le=this.config.decoder.num_codebooks,lt=Ie-Le;let Pt=0;for(let hr=0;hr<C.size;++hr){if(C.data[hr]===this.config.decoder.pad_token_id)continue;const Fr=hr%Ie,fr=Math.floor(hr/Ie)%Le,br=Fr-fr;br>0&&br<=lt&&(C.data[Pt++]=C.data[hr])}const qt=Math.floor(H/Le),dr=Pt/(qt*Le);return new P.Tensor(C.type,C.data.slice(0,Pt),[qt,Le,dr])}prepare_inputs_for_generation(C,H,Ie){let Le=structuredClone(C);for(let Pt=0;Pt<Le.length;++Pt)for(let qt=0;qt<Le[Pt].length;++qt)Pt%this.config.decoder.num_codebooks>=qt&&(Le[Pt][qt]=BigInt(this.config.decoder.pad_token_id));return Ie.guidance_scale!==null&&Ie.guidance_scale>1&&(Le=Le.concat(Le)),super.prepare_inputs_for_generation(Le,H,Ie)}async generate(C){const H=await super.generate(C),Ie=this._apply_and_filter_by_delay_pattern_mask(H).unsqueeze_(0),{audio_values:Le}=await _e(this.sessions.encodec_decode,{audio_codes:Ie});return Le}}class _s extends Z{}class ba extends _s{}class Jl extends _s{async _call(_){return new ur(await super._call(_))}}class Ma extends Z{}class Zl extends Ma{}class eu extends Ma{async _call(_){return new ur(await super._call(_))}}class ci extends Z{}class tu extends ci{}class ru extends ci{async _call(_){return new ur(await super._call(_))}}class va extends Z{}class dd extends va{}class nu extends va{async _call(_){return new ur(await super._call(_))}}class Ir{static async from_pretrained(_,{progress_callback:C=null,config:H=null,cache_dir:Ie=null,local_files_only:Le=!1,revision:lt=\"main\",model_file_name:Pt=null,subfolder:qt=\"onnx\",device:dr=null,dtype:hr=null,use_external_data_format:Fr=null,session_options:fr={}}={}){let br={progress_callback:C,config:H,cache_dir:Ie,local_files_only:Le,revision:lt,model_file_name:Pt,subfolder:qt,device:dr,dtype:hr,use_external_data_format:Fr,session_options:fr};if(br.config=await E.AutoConfig.from_pretrained(_,br),!this.MODEL_CLASS_MAPPINGS)throw new Error(\"`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: \"+this.name);for(let pr of this.MODEL_CLASS_MAPPINGS){const gr=pr.get(br.config.model_type);if(gr)return await gr[1].from_pretrained(_,br)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class \"${br.config.model_type}\", attempting to construct from base class.`),await Z.from_pretrained(_,br);throw Error(`Unsupported model type: ${br.config.model_type}`)}}Te(Ir,\"MODEL_CLASS_MAPPINGS\",null),Te(Ir,\"BASE_IF_FAIL\",!1);const cd=new Map([[\"bert\",[\"BertModel\",dt]],[\"nomic_bert\",[\"NomicBertModel\",Ee]],[\"roformer\",[\"RoFormerModel\",He]],[\"electra\",[\"ElectraModel\",Ze]],[\"esm\",[\"EsmModel\",Kr]],[\"convbert\",[\"ConvBertModel\",Ct]],[\"camembert\",[\"CamembertModel\",Ae]],[\"deberta\",[\"DebertaModel\",et]],[\"deberta-v2\",[\"DebertaV2Model\",Nt]],[\"mpnet\",[\"MPNetModel\",qs]],[\"albert\",[\"AlbertModel\",es]],[\"distilbert\",[\"DistilBertModel\",cr]],[\"roberta\",[\"RobertaModel\",_r]],[\"xlm\",[\"XLMModel\",Yr]],[\"xlm-roberta\",[\"XLMRobertaModel\",kr]],[\"clap\",[\"ClapModel\",ma]],[\"clip\",[\"CLIPModel\",ja]],[\"clipseg\",[\"CLIPSegModel\",Ha]],[\"chinese_clip\",[\"ChineseCLIPModel\",qa]],[\"siglip\",[\"SiglipModel\",fs]],[\"mobilebert\",[\"MobileBertModel\",Ur]],[\"squeezebert\",[\"SqueezeBertModel\",Hs]],[\"wav2vec2\",[\"Wav2Vec2Model\",aa]],[\"wav2vec2-bert\",[\"Wav2Vec2BertModel\",El]],[\"unispeech\",[\"UniSpeechModel\",si]],[\"unispeech-sat\",[\"UniSpeechSatModel\",kl]],[\"hubert\",[\"HubertModel\",Al]],[\"wavlm\",[\"WavLMModel\",Fl]],[\"audio-spectrogram-transformer\",[\"ASTModel\",jt]],[\"vits\",[\"VitsModel\",_a]],[\"pyannote\",[\"PyAnnoteModel\",oa]],[\"wespeaker-resnet\",[\"WeSpeakerResNetModel\",xl]],[\"detr\",[\"DetrModel\",jo]],[\"rt_detr\",[\"RTDetrModel\",Uo]],[\"table-transformer\",[\"TableTransformerModel\",qo]],[\"vit\",[\"ViTModel\",Co]],[\"fastvit\",[\"FastViTModel\",$o]],[\"mobilevit\",[\"MobileViTModel\",td]],[\"mobilevitv2\",[\"MobileViTV2Model\",Fo]],[\"owlvit\",[\"OwlViTModel\",zo]],[\"owlv2\",[\"Owlv2Model\",Bo]],[\"beit\",[\"BeitModel\",Ro]],[\"deit\",[\"DeiTModel\",Xo]],[\"hiera\",[\"HieraModel\",Yo]],[\"convnext\",[\"ConvNextModel\",dl]],[\"convnextv2\",[\"ConvNextV2Model\",pl]],[\"dinov2\",[\"Dinov2Model\",nd]],[\"resnet\",[\"ResNetModel\",Zo]],[\"swin\",[\"SwinModel\",Ki]],[\"swin2sr\",[\"Swin2SRModel\",el]],[\"donut-swin\",[\"DonutSwinModel\",ul]],[\"yolos\",[\"YolosModel\",ml]],[\"dpt\",[\"DPTModel\",rl]],[\"glpn\",[\"GLPNModel\",$n]],[\"hifigan\",[\"SpeechT5HifiGan\",Dl]],[\"efficientnet\",[\"EfficientNetModel\",Ql]],[\"mobilenet_v1\",[\"MobileNetV1Model\",ba]],[\"mobilenet_v2\",[\"MobileNetV2Model\",Zl]],[\"mobilenet_v3\",[\"MobileNetV3Model\",tu]],[\"mobilenet_v4\",[\"MobileNetV4Model\",dd]]]),pd=new Map([[\"t5\",[\"T5Model\",ks]],[\"longt5\",[\"LongT5Model\",Es]],[\"mt5\",[\"MT5Model\",Ps]],[\"bart\",[\"BartModel\",be]],[\"mbart\",[\"MBartModel\",ue]],[\"marian\",[\"MarianModel\",Zn]],[\"whisper\",[\"WhisperModel\",Ut]],[\"m2m_100\",[\"M2M100Model\",on]],[\"blenderbot\",[\"BlenderbotModel\",xt]],[\"blenderbot-small\",[\"BlenderbotSmallModel\",Ar]]]),hd=new Map([[\"bloom\",[\"BloomModel\",Zu]],[\"jais\",[\"JAISModel\",Ya]],[\"gpt2\",[\"GPT2Model\",Xa]],[\"gptj\",[\"GPTJModel\",no]],[\"gpt_bigcode\",[\"GPTBigCodeModel\",so]],[\"gpt_neo\",[\"GPTNeoModel\",Za]],[\"gpt_neox\",[\"GPTNeoXModel\",to]],[\"codegen\",[\"CodeGenModel\",En]],[\"llama\",[\"LlamaModel\",ao]],[\"cohere\",[\"CohereModel\",lo]],[\"gemma\",[\"GemmaModel\",co]],[\"gemma2\",[\"Gemma2Model\",ho]],[\"openelm\",[\"OpenELMModel\",mo]],[\"qwen2\",[\"Qwen2Model\",go]],[\"phi\",[\"PhiModel\",yo]],[\"phi3\",[\"Phi3Model\",bo]],[\"mpt\",[\"MptModel\",xo]],[\"opt\",[\"OPTModel\",So]],[\"mistral\",[\"MistralModel\",Ll]],[\"starcoder2\",[\"Starcoder2Model\",jl]],[\"falcon\",[\"FalconModel\",Ul]],[\"stablelm\",[\"StableLmModel\",Xl]]]),su=new Map([[\"speecht5\",[\"SpeechT5ForSpeechToText\",da]],[\"whisper\",[\"WhisperForConditionalGeneration\",wi]]]),iu=new Map([[\"speecht5\",[\"SpeechT5ForTextToSpeech\",ca]]]),au=new Map([[\"vits\",[\"VitsModel\",_a]],[\"musicgen\",[\"MusicgenForConditionalGeneration\",Bs]]]),fd=new Map([[\"bert\",[\"BertForSequenceClassification\",at]],[\"roformer\",[\"RoFormerForSequenceClassification\",Qe]],[\"electra\",[\"ElectraForSequenceClassification\",zt]],[\"esm\",[\"EsmForSequenceClassification\",Rn]],[\"convbert\",[\"ConvBertForSequenceClassification\",G]],[\"camembert\",[\"CamembertForSequenceClassification\",ce]],[\"deberta\",[\"DebertaForSequenceClassification\",ct]],[\"deberta-v2\",[\"DebertaV2ForSequenceClassification\",Ht]],[\"mpnet\",[\"MPNetForSequenceClassification\",xs]],[\"albert\",[\"AlbertForSequenceClassification\",us]],[\"distilbert\",[\"DistilBertForSequenceClassification\",sr]],[\"roberta\",[\"RobertaForSequenceClassification\",tn]],[\"xlm\",[\"XLMForSequenceClassification\",Yt]],[\"xlm-roberta\",[\"XLMRobertaForSequenceClassification\",Cr]],[\"bart\",[\"BartForSequenceClassification\",z]],[\"mbart\",[\"MBartForSequenceClassification\",ze]],[\"mobilebert\",[\"MobileBertForSequenceClassification\",Or]],[\"squeezebert\",[\"SqueezeBertForSequenceClassification\",On]]]),ou=new Map([[\"bert\",[\"BertForTokenClassification\",Et]],[\"roformer\",[\"RoFormerForTokenClassification\",ut]],[\"electra\",[\"ElectraForTokenClassification\",yt]],[\"esm\",[\"EsmForTokenClassification\",Vr]],[\"convbert\",[\"ConvBertForTokenClassification\",k]],[\"camembert\",[\"CamembertForTokenClassification\",Se]],[\"deberta\",[\"DebertaForTokenClassification\",$t]],[\"deberta-v2\",[\"DebertaV2ForTokenClassification\",Rt]],[\"mpnet\",[\"MPNetForTokenClassification\",Ts]],[\"distilbert\",[\"DistilBertForTokenClassification\",yr]],[\"roberta\",[\"RobertaForTokenClassification\",$e]],[\"xlm\",[\"XLMForTokenClassification\",Mn]],[\"xlm-roberta\",[\"XLMRobertaForTokenClassification\",zr]]]),xa=new Map([[\"t5\",[\"T5ForConditionalGeneration\",Cs]],[\"longt5\",[\"LongT5ForConditionalGeneration\",$s]],[\"mt5\",[\"MT5ForConditionalGeneration\",jr]],[\"bart\",[\"BartForConditionalGeneration\",m]],[\"mbart\",[\"MBartForConditionalGeneration\",pe]],[\"marian\",[\"MarianMTModel\",sa]],[\"m2m_100\",[\"M2M100ForConditionalGeneration\",ia]],[\"blenderbot\",[\"BlenderbotForConditionalGeneration\",Ft]],[\"blenderbot-small\",[\"BlenderbotSmallForConditionalGeneration\",ar]]]),Ta=new Map([[\"bloom\",[\"BloomForCausalLM\",vo]],[\"gpt2\",[\"GPT2LMHeadModel\",Qa]],[\"jais\",[\"JAISLMHeadModel\",Ja]],[\"gptj\",[\"GPTJForCausalLM\",Ju]],[\"gpt_bigcode\",[\"GPTBigCodeForCausalLM\",Xs]],[\"gpt_neo\",[\"GPTNeoForCausalLM\",eo]],[\"gpt_neox\",[\"GPTNeoXForCausalLM\",ro]],[\"codegen\",[\"CodeGenForCausalLM\",io]],[\"llama\",[\"LlamaForCausalLM\",oo]],[\"cohere\",[\"CohereForCausalLM\",uo]],[\"gemma\",[\"GemmaForCausalLM\",po]],[\"gemma2\",[\"Gemma2ForCausalLM\",fo]],[\"openelm\",[\"OpenELMForCausalLM\",_o]],[\"qwen2\",[\"Qwen2ForCausalLM\",wo]],[\"phi\",[\"PhiForCausalLM\",Fi]],[\"phi3\",[\"Phi3ForCausalLM\",Mo]],[\"mpt\",[\"MptForCausalLM\",To]],[\"opt\",[\"OPTForCausalLM\",ko]],[\"mbart\",[\"MBartForCausalLM\",Mt]],[\"mistral\",[\"MistralForCausalLM\",Rl]],[\"starcoder2\",[\"Starcoder2ForCausalLM\",fa]],[\"falcon\",[\"FalconForCausalLM\",Wl]],[\"trocr\",[\"TrOCRForCausalLM\",pa]],[\"stablelm\",[\"StableLmForCausalLM\",ld]]]),lu=new Map([[\"bert\",[\"BertForMaskedLM\",Ne]],[\"roformer\",[\"RoFormerForMaskedLM\",We]],[\"electra\",[\"ElectraForMaskedLM\",tt]],[\"esm\",[\"EsmForMaskedLM\",In]],[\"convbert\",[\"ConvBertForMaskedLM\",M]],[\"camembert\",[\"CamembertForMaskedLM\",D]],[\"deberta\",[\"DebertaForMaskedLM\",mt]],[\"deberta-v2\",[\"DebertaV2ForMaskedLM\",Lt]],[\"mpnet\",[\"MPNetForMaskedLM\",vs]],[\"albert\",[\"AlbertForMaskedLM\",Qt]],[\"distilbert\",[\"DistilBertForMaskedLM\",wt]],[\"roberta\",[\"RobertaForMaskedLM\",cn]],[\"xlm\",[\"XLMWithLMHeadModel\",mn]],[\"xlm-roberta\",[\"XLMRobertaForMaskedLM\",It]],[\"mobilebert\",[\"MobileBertForMaskedLM\",Fn]],[\"squeezebert\",[\"SqueezeBertForMaskedLM\",ls]]]),md=new Map([[\"bert\",[\"BertForQuestionAnswering\",Be]],[\"roformer\",[\"RoFormerForQuestionAnswering\",gt]],[\"electra\",[\"ElectraForQuestionAnswering\",Tt]],[\"convbert\",[\"ConvBertForQuestionAnswering\",Q]],[\"camembert\",[\"CamembertForQuestionAnswering\",Ge]],[\"deberta\",[\"DebertaForQuestionAnswering\",_t]],[\"deberta-v2\",[\"DebertaV2ForQuestionAnswering\",Wt]],[\"mpnet\",[\"MPNetForQuestionAnswering\",Ss]],[\"albert\",[\"AlbertForQuestionAnswering\",ds]],[\"distilbert\",[\"DistilBertForQuestionAnswering\",Je]],[\"roberta\",[\"RobertaForQuestionAnswering\",xn]],[\"xlm\",[\"XLMForQuestionAnswering\",an]],[\"xlm-roberta\",[\"XLMRobertaForQuestionAnswering\",Wr]],[\"mobilebert\",[\"MobileBertForQuestionAnswering\",Xn]],[\"squeezebert\",[\"SqueezeBertForQuestionAnswering\",Yn]]]),Sa=new Map([[\"vision-encoder-decoder\",[\"VisionEncoderDecoderModel\",yi]]]),_d=new Map([[\"llava\",[\"LlavaForConditionalGeneration\",hs]],[\"moondream1\",[\"Moondream1ForConditionalGeneration\",or]],[\"florence2\",[\"Florence2ForConditionalGeneration\",bi]]]),gd=new Map([[\"vision-encoder-decoder\",[\"VisionEncoderDecoderModel\",yi]]]),uu=new Map([[\"vit\",[\"ViTForImageClassification\",Eo]],[\"fastvit\",[\"FastViTForImageClassification\",ed]],[\"mobilevit\",[\"MobileViTForImageClassification\",Io]],[\"mobilevitv2\",[\"MobileViTV2ForImageClassification\",Oo]],[\"beit\",[\"BeitForImageClassification\",No]],[\"deit\",[\"DeiTForImageClassification\",Qo]],[\"hiera\",[\"HieraForImageClassification\",Jo]],[\"convnext\",[\"ConvNextForImageClassification\",cl]],[\"convnextv2\",[\"ConvNextV2ForImageClassification\",hl]],[\"dinov2\",[\"Dinov2ForImageClassification\",fl]],[\"resnet\",[\"ResNetForImageClassification\",qi]],[\"swin\",[\"SwinForImageClassification\",Xi]],[\"segformer\",[\"SegformerForImageClassification\",od]],[\"efficientnet\",[\"EfficientNetForImageClassification\",Yl]],[\"mobilenet_v1\",[\"MobileNetV1ForImageClassification\",Jl]],[\"mobilenet_v2\",[\"MobileNetV2ForImageClassification\",eu]],[\"mobilenet_v3\",[\"MobileNetV3ForImageClassification\",ru]],[\"mobilenet_v4\",[\"MobileNetV4ForImageClassification\",nu]]]),wd=new Map([[\"detr\",[\"DetrForObjectDetection\",Vo]],[\"rt_detr\",[\"RTDetrForObjectDetection\",Wo]],[\"table-transformer\",[\"TableTransformerForObjectDetection\",Ho]],[\"yolos\",[\"YolosForObjectDetection\",_l]]]),du=new Map([[\"owlvit\",[\"OwlViTForObjectDetection\",Do]],[\"owlv2\",[\"Owlv2ForObjectDetection\",Lo]]]),cu=new Map([[\"detr\",[\"DetrForSegmentation\",Is]],[\"clipseg\",[\"CLIPSegForImageSegmentation\",Ka]]]),pu=new Map([[\"segformer\",[\"SegformerForSemanticSegmentation\",Kl]],[\"sapiens\",[\"SapiensForSemanticSegmentation\",il]]]),hu=new Map([[\"sam\",[\"SamModel\",sd]]]),yd=new Map([[\"wav2vec2\",[\"Wav2Vec2ForCTC\",yl]],[\"wav2vec2-bert\",[\"Wav2Vec2BertForCTC\",$l]],[\"unispeech\",[\"UniSpeechForCTC\",Tl]],[\"unispeech-sat\",[\"UniSpeechSatForCTC\",la]],[\"wavlm\",[\"WavLMForCTC\",Ol]],[\"hubert\",[\"HubertForCTC\",Il]]]),fu=new Map([[\"wav2vec2\",[\"Wav2Vec2ForSequenceClassification\",bl]],[\"wav2vec2-bert\",[\"Wav2Vec2BertForSequenceClassification\",Pl]],[\"unispeech\",[\"UniSpeechForSequenceClassification\",Sl]],[\"unispeech-sat\",[\"UniSpeechSatForSequenceClassification\",zs]],[\"wavlm\",[\"WavLMForSequenceClassification\",zl]],[\"hubert\",[\"HubertForSequenceClassification\",id]],[\"audio-spectrogram-transformer\",[\"ASTForAudioClassification\",Ks]]]),mu=new Map([[\"wavlm\",[\"WavLMForXVector\",ai]]]),_u=new Map([[\"unispeech-sat\",[\"UniSpeechSatForAudioFrameClassification\",Cl]],[\"wavlm\",[\"WavLMForAudioFrameClassification\",oi]],[\"wav2vec2\",[\"Wav2Vec2ForAudioFrameClassification\",Ml]],[\"pyannote\",[\"PyAnnoteForAudioFrameClassification\",vl]]]),gu=new Map([[\"vitmatte\",[\"VitMatteForImageMatting\",Ao]]]),bd=new Map([[\"swin2sr\",[\"Swin2SRForImageSuperResolution\",tl]]]),pn=new Map([[\"dpt\",[\"DPTForDepthEstimation\",nl]],[\"depth_anything\",[\"DepthAnythingForDepthEstimation\",sl]],[\"glpn\",[\"GLPNForDepthEstimation\",ol]],[\"sapiens\",[\"SapiensForDepthEstimation\",rd]]]),wu=new Map([[\"sapiens\",[\"SapiensForNormalEstimation\",al]]]),yu=new Map([[\"clip\",[\"CLIPVisionModelWithProjection\",Va]],[\"siglip\",[\"SiglipVisionModel\",Wa]]]),ka=[[cd,re.EncoderOnly],[pd,re.EncoderDecoder],[hd,re.DecoderOnly],[fd,re.EncoderOnly],[ou,re.EncoderOnly],[xa,re.Seq2Seq],[su,re.Seq2Seq],[Ta,re.DecoderOnly],[lu,re.EncoderOnly],[md,re.EncoderOnly],[Sa,re.Vision2Seq],[_d,re.ImageTextToText],[uu,re.EncoderOnly],[cu,re.EncoderOnly],[pu,re.EncoderOnly],[gu,re.EncoderOnly],[bd,re.EncoderOnly],[pn,re.EncoderOnly],[wu,re.EncoderOnly],[wd,re.EncoderOnly],[du,re.EncoderOnly],[hu,re.MaskGeneration],[yd,re.EncoderOnly],[fu,re.EncoderOnly],[iu,re.Seq2Seq],[au,re.EncoderOnly],[mu,re.EncoderOnly],[_u,re.EncoderOnly],[yu,re.EncoderOnly]];for(const[f,_]of ka)for(const[C,H]of f.values())le.set(C,_),j.set(H,C),ae.set(C,H);const Md=[[\"MusicgenForConditionalGeneration\",Bs,re.Musicgen],[\"CLIPTextModelWithProjection\",zn,re.EncoderOnly],[\"SiglipTextModel\",Ua,re.EncoderOnly],[\"ClapTextModelWithProjection\",Gl,re.EncoderOnly],[\"ClapAudioModelWithProjection\",ql,re.EncoderOnly]];for(const[f,_,C]of Md)le.set(f,C),j.set(_,f),ae.set(f,_);class gs extends Ir{}Te(gs,\"MODEL_CLASS_MAPPINGS\",ka.map(_=>_[0])),Te(gs,\"BASE_IF_FAIL\",!0);class bu extends Ir{}Te(bu,\"MODEL_CLASS_MAPPINGS\",[fd]);class Mu extends Ir{}Te(Mu,\"MODEL_CLASS_MAPPINGS\",[ou]);class Ca extends Ir{}Te(Ca,\"MODEL_CLASS_MAPPINGS\",[xa]);class vu extends Ir{}Te(vu,\"MODEL_CLASS_MAPPINGS\",[su]);class xu extends Ir{}Te(xu,\"MODEL_CLASS_MAPPINGS\",[iu]);class Ea extends Ir{}Te(Ea,\"MODEL_CLASS_MAPPINGS\",[au]);class Tu extends Ir{}Te(Tu,\"MODEL_CLASS_MAPPINGS\",[Ta]);class Su extends Ir{}Te(Su,\"MODEL_CLASS_MAPPINGS\",[lu]);class ku extends Ir{}Te(ku,\"MODEL_CLASS_MAPPINGS\",[md]);class $a extends Ir{}Te($a,\"MODEL_CLASS_MAPPINGS\",[Sa]);class Cu extends Ir{}Te(Cu,\"MODEL_CLASS_MAPPINGS\",[uu]);class Eu extends Ir{}Te(Eu,\"MODEL_CLASS_MAPPINGS\",[cu]);class Pa extends Ir{}Te(Pa,\"MODEL_CLASS_MAPPINGS\",[pu]);class $u extends Ir{}Te($u,\"MODEL_CLASS_MAPPINGS\",[wd]);class vd extends Ir{}Te(vd,\"MODEL_CLASS_MAPPINGS\",[du]);class Pu extends Ir{}Te(Pu,\"MODEL_CLASS_MAPPINGS\",[hu]);class Au extends Ir{}Te(Au,\"MODEL_CLASS_MAPPINGS\",[yd]);class Iu extends Ir{}Te(Iu,\"MODEL_CLASS_MAPPINGS\",[fu]);class Fu extends Ir{}Te(Fu,\"MODEL_CLASS_MAPPINGS\",[mu]);class xd extends Ir{}Te(xd,\"MODEL_CLASS_MAPPINGS\",[_u]);class Ou extends Ir{}Te(Ou,\"MODEL_CLASS_MAPPINGS\",[gd]);class zu extends Ir{}Te(zu,\"MODEL_CLASS_MAPPINGS\",[gu]);class Du extends Ir{}Te(Du,\"MODEL_CLASS_MAPPINGS\",[bd]);class Td extends Ir{}Te(Td,\"MODEL_CLASS_MAPPINGS\",[pn]);class Bu extends Ir{}Te(Bu,\"MODEL_CLASS_MAPPINGS\",[wu]);class Lu extends Ir{}Te(Lu,\"MODEL_CLASS_MAPPINGS\",[yu]);class Sd extends Xe{constructor({logits:_,past_key_values:C,encoder_outputs:H,decoder_attentions:Ie=null,cross_attentions:Le=null}){super(),this.logits=_,this.past_key_values=C,this.encoder_outputs=H,this.decoder_attentions=Ie,this.cross_attentions=Le}}class ur extends Xe{constructor({logits:_}){super(),this.logits=_}}class kd extends Xe{constructor({logits:_,embeddings:C}){super(),this.logits=_,this.embeddings=C}}class Zr extends Xe{constructor({logits:_}){super(),this.logits=_}}class rn extends Xe{constructor({logits:_}){super(),this.logits=_}}class ln extends Xe{constructor({start_logits:_,end_logits:C}){super(),this.start_logits=_,this.end_logits=C}}class ns extends Xe{constructor({logits:_}){super(),this.logits=_}}class Cd extends Xe{constructor({logits:_,past_key_values:C}){super(),this.logits=_,this.past_key_values=C}}class Ru extends Xe{constructor({alphas:_}){super(),this.alphas=_}}class Nu extends Xe{constructor({waveform:_,spectrogram:C}){super(),this.waveform=_,this.spectrogram=C}}},\"./src/models/whisper/common_whisper.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{WHISPER_LANGUAGE_MAPPING:()=>ie,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>we,whisper_language_to_code:()=>ve});const E=[[\"en\",\"english\"],[\"zh\",\"chinese\"],[\"de\",\"german\"],[\"es\",\"spanish\"],[\"ru\",\"russian\"],[\"ko\",\"korean\"],[\"fr\",\"french\"],[\"ja\",\"japanese\"],[\"pt\",\"portuguese\"],[\"tr\",\"turkish\"],[\"pl\",\"polish\"],[\"ca\",\"catalan\"],[\"nl\",\"dutch\"],[\"ar\",\"arabic\"],[\"sv\",\"swedish\"],[\"it\",\"italian\"],[\"id\",\"indonesian\"],[\"hi\",\"hindi\"],[\"fi\",\"finnish\"],[\"vi\",\"vietnamese\"],[\"he\",\"hebrew\"],[\"uk\",\"ukrainian\"],[\"el\",\"greek\"],[\"ms\",\"malay\"],[\"cs\",\"czech\"],[\"ro\",\"romanian\"],[\"da\",\"danish\"],[\"hu\",\"hungarian\"],[\"ta\",\"tamil\"],[\"no\",\"norwegian\"],[\"th\",\"thai\"],[\"ur\",\"urdu\"],[\"hr\",\"croatian\"],[\"bg\",\"bulgarian\"],[\"lt\",\"lithuanian\"],[\"la\",\"latin\"],[\"mi\",\"maori\"],[\"ml\",\"malayalam\"],[\"cy\",\"welsh\"],[\"sk\",\"slovak\"],[\"te\",\"telugu\"],[\"fa\",\"persian\"],[\"lv\",\"latvian\"],[\"bn\",\"bengali\"],[\"sr\",\"serbian\"],[\"az\",\"azerbaijani\"],[\"sl\",\"slovenian\"],[\"kn\",\"kannada\"],[\"et\",\"estonian\"],[\"mk\",\"macedonian\"],[\"br\",\"breton\"],[\"eu\",\"basque\"],[\"is\",\"icelandic\"],[\"hy\",\"armenian\"],[\"ne\",\"nepali\"],[\"mn\",\"mongolian\"],[\"bs\",\"bosnian\"],[\"kk\",\"kazakh\"],[\"sq\",\"albanian\"],[\"sw\",\"swahili\"],[\"gl\",\"galician\"],[\"mr\",\"marathi\"],[\"pa\",\"punjabi\"],[\"si\",\"sinhala\"],[\"km\",\"khmer\"],[\"sn\",\"shona\"],[\"yo\",\"yoruba\"],[\"so\",\"somali\"],[\"af\",\"afrikaans\"],[\"oc\",\"occitan\"],[\"ka\",\"georgian\"],[\"be\",\"belarusian\"],[\"tg\",\"tajik\"],[\"sd\",\"sindhi\"],[\"gu\",\"gujarati\"],[\"am\",\"amharic\"],[\"yi\",\"yiddish\"],[\"lo\",\"lao\"],[\"uz\",\"uzbek\"],[\"fo\",\"faroese\"],[\"ht\",\"haitian creole\"],[\"ps\",\"pashto\"],[\"tk\",\"turkmen\"],[\"nn\",\"nynorsk\"],[\"mt\",\"maltese\"],[\"sa\",\"sanskrit\"],[\"lb\",\"luxembourgish\"],[\"my\",\"myanmar\"],[\"bo\",\"tibetan\"],[\"tl\",\"tagalog\"],[\"mg\",\"malagasy\"],[\"as\",\"assamese\"],[\"tt\",\"tatar\"],[\"haw\",\"hawaiian\"],[\"ln\",\"lingala\"],[\"ha\",\"hausa\"],[\"ba\",\"bashkir\"],[\"jw\",\"javanese\"],[\"su\",\"sundanese\"]],ie=new Map(E),we=new Map([...E.map(([xe,N])=>[N,xe]),[\"burmese\",\"my\"],[\"valencian\",\"ca\"],[\"flemish\",\"nl\"],[\"haitian\",\"ht\"],[\"letzeburgesch\",\"lb\"],[\"pushto\",\"ps\"],[\"panjabi\",\"pa\"],[\"moldavian\",\"ro\"],[\"moldovan\",\"ro\"],[\"sinhalese\",\"si\"],[\"castilian\",\"es\"]]);function ve(xe){xe=xe.toLowerCase();let N=we.get(xe);if(N===void 0)if(ie.has(xe))N=xe;else{const V=xe.length===2?ie.keys():ie.values();throw new Error(`Language \"${xe}\" is not supported. Must be one of: ${JSON.stringify(V)}`)}return N}},\"./src/models/whisper/generation_whisper.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{WhisperGenerationConfig:()=>ie});var E=I(\"./src/generation/configuration_utils.js\");class ie extends E.GenerationConfig{constructor(){super(...arguments);Te(this,\"return_timestamps\",null);Te(this,\"return_token_timestamps\",null);Te(this,\"num_frames\",null);Te(this,\"alignment_heads\",null);Te(this,\"task\",null);Te(this,\"language\",null);Te(this,\"no_timestamps_token_id\",null);Te(this,\"prompt_ids\",null);Te(this,\"is_multilingual\",null);Te(this,\"lang_to_id\",null);Te(this,\"task_to_id\",null);Te(this,\"max_initial_timestamp_index\",1)}}},\"./src/ops/registry.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{TensorOpRegistry:()=>ve});var E=I(\"./src/backends/onnx.js\"),ie=I(\"./src/utils/tensor.js\");const we=async(xe,N,T)=>{const V=await(0,E.createInferenceSession)(new Uint8Array(xe),N);return async P=>{const K=Object.fromEntries(Object.entries(P).map(([ne,me])=>[ne,me.ort_tensor])),ee=await V.run(K);return Array.isArray(T)?T.map(ne=>new ie.Tensor(ee[ne])):new ie.Tensor(ee[T])}};class ve{static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=we([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,\"y\")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=we([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,\"y\")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=we([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,\"c\")),this._matmul}static get stft(){return this._stft||(this._stft=we([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,\"o\")),this._stft}static get rfft(){return this._rfft||(this._rfft=we([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,\"y\")),this._rfft}static get top_k(){return this._top_k||(this._top_k=we([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,[\"v\",\"i\"])),this._top_k}}Te(ve,\"session_options\",{})},\"./src/pipelines.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{AudioClassificationPipeline:()=>Oe,AutomaticSpeechRecognitionPipeline:()=>st,DepthEstimationPipeline:()=>it,DocumentQuestionAnsweringPipeline:()=>Z,FeatureExtractionPipeline:()=>Me,FillMaskPipeline:()=>le,ImageClassificationPipeline:()=>pt,ImageFeatureExtractionPipeline:()=>ke,ImageSegmentationPipeline:()=>ye,ImageToImagePipeline:()=>ht,ImageToTextPipeline:()=>Ye,ObjectDetectionPipeline:()=>he,Pipeline:()=>me,QuestionAnsweringPipeline:()=>re,SummarizationPipeline:()=>j,Text2TextGenerationPipeline:()=>ae,TextClassificationPipeline:()=>F,TextGenerationPipeline:()=>A,TextToAudioPipeline:()=>Xe,TokenClassificationPipeline:()=>J,TranslationPipeline:()=>O,ZeroShotAudioClassificationPipeline:()=>Pe,ZeroShotClassificationPipeline:()=>_e,ZeroShotImageClassificationPipeline:()=>W,ZeroShotObjectDetectionPipeline:()=>Ce,pipeline:()=>at});var E=I(\"./src/tokenizers.js\"),ie=I(\"./src/models.js\"),we=I(\"./src/processors.js\"),ve=I(\"./src/utils/generic.js\"),xe=I(\"./src/utils/core.js\"),N=I(\"./src/utils/maths.js\"),T=I(\"./src/utils/audio.js\"),V=I(\"./src/utils/tensor.js\"),P=I(\"./src/utils/image.js\");async function K(Be){return Array.isArray(Be)||(Be=[Be]),await Promise.all(Be.map(te=>P.RawImage.read(te)))}async function ee(Be,te){return Array.isArray(Be)||(Be=[Be]),await Promise.all(Be.map(Ee=>typeof Ee==\"string\"||Ee instanceof URL?(0,T.read_audio)(Ee,te):Ee instanceof Float64Array?new Float32Array(Ee):Ee))}function ne(Be,te){te&&(Be=Be.map(Qe=>Qe|0));const[Ee,Ue,He,We]=Be;return{xmin:Ee,ymin:Ue,xmax:He,ymax:We}}class me extends ve.Callable{constructor({task:te,model:Ee,tokenizer:Ue=null,processor:He=null}){super(),this.task=te,this.model=Ee,this.tokenizer=Ue,this.processor=He}async dispose(){await this.model.dispose()}}class F extends me{constructor(te){super(te)}async _call(te,{top_k:Ee=1}={}){const Ue=this.tokenizer(te,{padding:!0,truncation:!0}),He=await this.model(Ue),We=this.model.config.problem_type===\"multi_label_classification\"?gt=>gt.sigmoid():gt=>new V.Tensor(\"float32\",(0,N.softmax)(gt.data),gt.dims),Qe=this.model.config.id2label,ut=[];for(const gt of He.logits){const vt=We(gt),Ct=await(0,V.topk)(vt,Ee),M=Ct[0].tolist(),k=Ct[1].tolist().map((Q,ge)=>({label:Qe?Qe[Q]:`LABEL_${Q}`,score:M[ge]}));Ee===1?ut.push(...k):ut.push(k)}return Array.isArray(te)||Ee===1?ut:ut[0]}}class J extends me{constructor(te){super(te)}async _call(te,{ignore_labels:Ee=[\"O\"]}={}){const Ue=Array.isArray(te),He=this.tokenizer(Ue?te:[te],{padding:!0,truncation:!0}),Qe=(await this.model(He)).logits,ut=this.model.config.id2label,gt=[];for(let vt=0;vt<Qe.dims[0];++vt){const Ct=He.input_ids[vt],M=Qe[vt],G=[];for(let k=0;k<M.dims[0];++k){const Q=M[k],ge=(0,N.max)(Q.data)[1],Ze=ut?ut[ge]:`LABEL_${ge}`;if(Ee.includes(Ze))continue;const tt=this.tokenizer.decode([Ct[k].item()],{skip_special_tokens:!0});if(tt===\"\")continue;const zt=(0,N.softmax)(Q.data);G.push({entity:Ze,score:zt[ge],index:k,word:tt})}gt.push(G)}return Ue?gt:gt[0]}}class re extends me{constructor(te){super(te)}async _call(te,Ee,{top_k:Ue=1}={}){const He=this.tokenizer(te,{text_pair:Ee,padding:!0,truncation:!0}),{start_logits:We,end_logits:Qe}=await this.model(He),ut=He.input_ids.tolist(),gt=He.attention_mask.tolist(),vt=this.tokenizer.all_special_ids,Ct=[];for(let M=0;M<We.dims[0];++M){const G=ut[M],k=G.findIndex(yt=>yt==this.tokenizer.sep_token_id);gt[M].map((yt,Tt)=>yt==1&&(Tt===0||Tt>k&&vt.findIndex(bt=>bt==G[Tt])===-1));const Q=We[M].tolist(),ge=Qe[M].tolist();for(let yt=1;yt<Q.length;++yt)(gt[M]==0||yt<=k||vt.findIndex(Tt=>Tt==G[yt])!==-1)&&(Q[yt]=-1/0,ge[yt]=-1/0);const Ze=(0,N.softmax)(Q).map((yt,Tt)=>[yt,Tt]),tt=(0,N.softmax)(ge).map((yt,Tt)=>[yt,Tt]);Ze[0][0]=0,tt[0][0]=0;const zt=(0,xe.product)(Ze,tt).filter(yt=>yt[0][1]<=yt[1][1]).map(yt=>[yt[0][1],yt[1][1],yt[0][0]*yt[1][0]]).sort((yt,Tt)=>Tt[2]-yt[2]);for(let yt=0;yt<Math.min(zt.length,Ue);++yt){const[Tt,bt,Ae]=zt[yt],D=G.slice(Tt,bt+1),ce=this.tokenizer.decode(D,{skip_special_tokens:!0});Ct.push({answer:ce,score:Ae})}}return Ue===1?Ct[0]:Ct}}class le extends me{constructor(te){super(te)}async _call(te,{top_k:Ee=5}={}){const Ue=this.tokenizer(te,{padding:!0,truncation:!0}),{logits:He}=await this.model(Ue),We=[],Qe=Ue.input_ids.tolist();for(let ut=0;ut<Qe.length;++ut){const gt=Qe[ut],vt=gt.findIndex(Q=>Q==this.tokenizer.mask_token_id);if(vt===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const Ct=He[ut][vt],M=await(0,V.topk)(new V.Tensor(\"float32\",(0,N.softmax)(Ct.data),Ct.dims),Ee),G=M[0].tolist(),k=M[1].tolist();We.push(k.map((Q,ge)=>{const Ze=gt.slice();return Ze[vt]=Q,{score:G[ge],token:Number(Q),token_str:this.tokenizer.model.vocab[Q],sequence:this.tokenizer.decode(Ze,{skip_special_tokens:!0})}}))}return Array.isArray(te)?We:We[0]}}class ae extends me{constructor(Ee){super(Ee);Te(this,\"_key\",\"generated_text\")}async _call(Ee,Ue={}){Array.isArray(Ee)||(Ee=[Ee]),this.model.config.prefix&&(Ee=Ee.map(vt=>this.model.config.prefix+vt));const He=this.model.config.task_specific_params;He&&He[this.task]&&He[this.task].prefix&&(Ee=Ee.map(vt=>He[this.task].prefix+vt));const We=this.tokenizer,Qe={padding:!0,truncation:!0};let ut;this instanceof O&&\"_build_translation_inputs\"in We?ut=We._build_translation_inputs(Ee,Qe,Ue):ut=We(Ee,Qe);const gt=await this.model.generate({...ut,...Ue});return We.batch_decode(gt,{skip_special_tokens:!0}).map(vt=>({[this._key]:vt}))}}class j extends ae{constructor(Ee){super(Ee);Te(this,\"_key\",\"summary_text\")}}class O extends ae{constructor(Ee){super(Ee);Te(this,\"_key\",\"translation_text\")}}function R(Be){return Array.isArray(Be)&&Be.every(te=>\"role\"in te&&\"content\"in te)}class A extends me{constructor(te){super(te)}async _call(te,Ee={}){let Ue=!1,He=!1,We;if(typeof te==\"string\")We=te=[te];else if(Array.isArray(te)&&te.every(k=>typeof k==\"string\"))Ue=!0,We=te;else{if(R(te))te=[te];else if(Array.isArray(te)&&te.every(R))Ue=!0;else throw new Error(\"Input must be a string, an array of strings, a Chat, or an array of Chats\");He=!0,We=te.map(k=>this.tokenizer.apply_chat_template(k,{tokenize:!1,add_generation_prompt:!0}))}const Qe=Ee.add_special_tokens??!1,ut=He?!1:Ee.return_full_text??!0;this.tokenizer.padding_side=\"left\";const gt=this.tokenizer(We,{add_special_tokens:Qe,padding:!0,truncation:!0}),vt=await this.model.generate({...gt,...Ee}),Ct=this.tokenizer.batch_decode(vt,{skip_special_tokens:!0});let M;!ut&&gt.input_ids.dims.at(-1)>0&&(M=this.tokenizer.batch_decode(gt.input_ids,{skip_special_tokens:!0}).map(k=>k.length));const G=Array.from({length:te.length},k=>[]);for(let k=0;k<Ct.length;++k){const Q=Math.floor(k/vt.dims[0]*te.length);M&&(Ct[k]=Ct[k].slice(M[Q])),G[Q].push({generated_text:He?[...te[Q],{role:\"assistant\",content:Ct[k]}]:Ct[k]})}return!Ue&&G.length===1?G[0]:G}}class _e extends me{constructor(te){super(te),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([Ee,Ue])=>[Ee.toLowerCase(),Ue])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn(\"Could not find 'entailment' in label2id mapping. Using 2 as entailment_id.\"),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn(\"Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id.\"),this.contradiction_id=0)}async _call(te,Ee,{hypothesis_template:Ue=\"This example is {}.\",multi_label:He=!1}={}){const We=Array.isArray(te);We||(te=[te]),Array.isArray(Ee)||(Ee=[Ee]);const Qe=Ee.map(vt=>Ue.replace(\"{}\",vt)),ut=He||Ee.length===1,gt=[];for(const vt of te){const Ct=[];for(const k of Qe){const Q=this.tokenizer(vt,{text_pair:k,padding:!0,truncation:!0}),ge=await this.model(Q);ut?Ct.push([ge.logits.data[this.contradiction_id],ge.logits.data[this.entailment_id]]):Ct.push(ge.logits.data[this.entailment_id])}const G=(ut?Ct.map(k=>(0,N.softmax)(k)[1]):(0,N.softmax)(Ct)).map((k,Q)=>[k,Q]).sort((k,Q)=>Q[0]-k[0]);gt.push({sequence:vt,labels:G.map(k=>Ee[k[1]]),scores:G.map(k=>k[0])})}return We?gt:gt[0]}}class Me extends me{constructor(te){super(te)}async _call(te,{pooling:Ee=\"none\",normalize:Ue=!1,quantize:He=!1,precision:We=\"binary\"}={}){const Qe=this.tokenizer(te,{padding:!0,truncation:!0}),ut=await this.model(Qe);let gt=ut.last_hidden_state??ut.logits??ut.token_embeddings;if(Ee!==\"none\")if(Ee===\"mean\")gt=(0,V.mean_pooling)(gt,Qe.attention_mask);else if(Ee===\"cls\")gt=gt.slice(null,0);else throw Error(`Pooling method '${Ee}' not supported.`);return Ue&&(gt=gt.normalize(2,-1)),He&&(gt=(0,V.quantize_embeddings)(gt,We)),gt}}class ke extends me{constructor(te){super(te)}async _call(te,{pool:Ee=null}={}){const Ue=await K(te),{pixel_values:He}=await this.processor(Ue),We=await this.model({pixel_values:He});let Qe;if(Ee){if(!(\"pooler_output\"in We))throw Error(\"No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.\");Qe=We.pooler_output}else Qe=We.last_hidden_state??We.logits??We.image_embeds;return Qe}}class Oe extends me{constructor(te){super(te)}async _call(te,{top_k:Ee=5}={}){const Ue=this.processor.feature_extractor.config.sampling_rate,He=await ee(te,Ue),We=this.model.config.id2label,Qe=[];for(const ut of He){const gt=await this.processor(ut),Ct=(await this.model(gt)).logits[0],M=await(0,V.topk)(new V.Tensor(\"float32\",(0,N.softmax)(Ct.data),Ct.dims),Ee),G=M[0].tolist(),Q=M[1].tolist().map((ge,Ze)=>({label:We?We[ge]:`LABEL_${ge}`,score:G[Ze]}));Qe.push(Q)}return Array.isArray(te)?Qe:Qe[0]}}class Pe extends me{constructor(te){super(te)}async _call(te,Ee,{hypothesis_template:Ue=\"This is a sound of {}.\"}={}){const He=!Array.isArray(te);He&&(te=[te]);const We=Ee.map(Ct=>Ue.replace(\"{}\",Ct)),Qe=this.tokenizer(We,{padding:!0,truncation:!0}),ut=this.processor.feature_extractor.config.sampling_rate,gt=await ee(te,ut),vt=[];for(const Ct of gt){const M=await this.processor(Ct),G=await this.model({...Qe,...M}),k=(0,N.softmax)(G.logits_per_audio.data);vt.push([...k].map((Q,ge)=>({score:Q,label:Ee[ge]})))}return He?vt[0]:vt}}class st extends me{constructor(te){super(te)}async _call(te,Ee={}){switch(this.model.config.model_type){case\"whisper\":return this._call_whisper(te,Ee);case\"wav2vec2\":case\"wav2vec2-bert\":case\"unispeech\":case\"unispeech-sat\":case\"hubert\":return this._call_wav2vec2(te,Ee);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(te,Ee){Ee.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to \"English\".'),Ee.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to \"transcribe\".');const Ue=!Array.isArray(te);Ue&&(te=[te]);const He=this.processor.feature_extractor.config.sampling_rate,We=await ee(te,He),Qe=[];for(const ut of We){const gt=await this.processor(ut),Ct=(await this.model(gt)).logits[0],M=[];for(const k of Ct)M.push((0,N.max)(k.data)[1]);const G=this.tokenizer.decode(M);Qe.push({text:G})}return Ue?Qe[0]:Qe}async _call_whisper(te,Ee){const Ue=Ee.return_timestamps??!1,He=Ee.chunk_length_s??0,We=Ee.force_full_sequences??!1;let Qe=Ee.stride_length_s??null;const ut={...Ee};Ue===\"word\"&&(ut.return_token_timestamps=!0,ut.return_timestamps=!1);const gt=!Array.isArray(te);gt&&(te=[te]);const vt=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,Ct=this.processor.feature_extractor.config.hop_length,M=this.processor.feature_extractor.config.sampling_rate,G=await ee(te,M),k=[];for(const Q of G){let ge=[];if(He>0){if(Qe===null)Qe=He/6;else if(He<=Qe)throw Error(\"`chunk_length_s` must be larger than `stride_length_s`.\");const zt=M*He,yt=M*Qe,Tt=zt-2*yt;let bt=0;for(;;){const Ae=bt+zt,D=Q.subarray(bt,Ae),ce=await this.processor(D),Se=bt===0,Ge=Ae>=Q.length;if(ge.push({stride:[D.length,Se?0:yt,Ge?0:yt],input_features:ce.input_features,is_last:Ge}),Ge)break;bt+=Tt}}else ge=[{stride:[Q.length,0,0],input_features:(await this.processor(Q)).input_features,is_last:!0}];for(const zt of ge){ut.num_frames=Math.floor(zt.stride[0]/Ct);const yt=await this.model.generate({inputs:zt.input_features,...ut});Ue===\"word\"?(zt.tokens=yt.sequences.tolist()[0],zt.token_timestamps=yt.token_timestamps.tolist()[0].map(Tt=>(0,N.round)(Tt,2))):zt.tokens=yt[0].tolist(),zt.stride=zt.stride.map(Tt=>Tt/M)}const[Ze,tt]=this.tokenizer._decode_asr(ge,{time_precision:vt,return_timestamps:Ue,force_full_sequences:We});k.push({text:Ze,...tt})}return gt?k[0]:k}}class Ye extends me{constructor(te){super(te)}async _call(te,Ee={}){const Ue=Array.isArray(te),He=await K(te),{pixel_values:We}=await this.processor(He),Qe=[];for(const ut of We){ut.dims=[1,...ut.dims];const gt=await this.model.generate({inputs:ut,...Ee}),vt=this.tokenizer.batch_decode(gt,{skip_special_tokens:!0}).map(Ct=>({generated_text:Ct.trim()}));Qe.push(vt)}return Ue?Qe:Qe[0]}}class pt extends me{constructor(te){super(te)}async _call(te,{top_k:Ee=5}={}){const Ue=await K(te),{pixel_values:He}=await this.processor(Ue),We=await this.model({pixel_values:He}),Qe=this.model.config.id2label,ut=[];for(const gt of We.logits){const vt=await(0,V.topk)(new V.Tensor(\"float32\",(0,N.softmax)(gt.data),gt.dims),Ee),Ct=vt[0].tolist(),G=vt[1].tolist().map((k,Q)=>({label:Qe?Qe[k]:`LABEL_${k}`,score:Ct[Q]}));ut.push(G)}return Array.isArray(te)?ut:ut[0]}}class ye extends me{constructor(te){super(te),this.subtasks_mapping={panoptic:\"post_process_panoptic_segmentation\",instance:\"post_process_instance_segmentation\",semantic:\"post_process_semantic_segmentation\"}}async _call(te,{threshold:Ee=.5,mask_threshold:Ue=.5,overlap_mask_area_threshold:He=.8,label_ids_to_fuse:We=null,target_sizes:Qe=null,subtask:ut=null}={}){if(Array.isArray(te)&&te.length!==1)throw Error(\"Image segmentation pipeline currently only supports a batch size of 1.\");const vt=await K(te),Ct=vt.map(tt=>[tt.height,tt.width]),{pixel_values:M,pixel_mask:G}=await this.processor(vt),k=await this.model({pixel_values:M,pixel_mask:G});let Q=null;if(ut!==null)Q=this.subtasks_mapping[ut];else for(let[tt,zt]of Object.entries(this.subtasks_mapping))if(zt in this.processor.feature_extractor){Q=this.processor.feature_extractor[zt].bind(this.processor.feature_extractor),ut=tt;break}const ge=this.model.config.id2label,Ze=[];if(ut===\"panoptic\"||ut===\"instance\"){const tt=Q(k,Ee,Ue,He,We,Qe??Ct)[0],zt=tt.segmentation;for(const yt of tt.segments_info){const Tt=new Uint8ClampedArray(zt.data.length);for(let Ae=0;Ae<zt.data.length;++Ae)zt.data[Ae]===yt.id&&(Tt[Ae]=255);const bt=new P.RawImage(Tt,zt.dims[1],zt.dims[0],1);Ze.push({score:yt.score,label:ge[yt.label_id],mask:bt})}}else if(ut===\"semantic\"){const{segmentation:tt,labels:zt}=Q(k,Qe??Ct)[0];for(const yt of zt){const Tt=new Uint8ClampedArray(tt.data.length);for(let Ae=0;Ae<tt.data.length;++Ae)tt.data[Ae]===yt&&(Tt[Ae]=255);const bt=new P.RawImage(Tt,tt.dims[1],tt.dims[0],1);Ze.push({score:null,label:ge[yt],mask:bt})}}else throw Error(`Subtask ${ut} not supported.`);return Ze}}class W extends me{constructor(te){super(te)}async _call(te,Ee,{hypothesis_template:Ue=\"This is a photo of {}\"}={}){const He=Array.isArray(te),We=await K(te),Qe=Ee.map(G=>Ue.replace(\"{}\",G)),ut=this.tokenizer(Qe,{padding:this.model.config.model_type===\"siglip\"?\"max_length\":!0,truncation:!0}),{pixel_values:gt}=await this.processor(We),vt=await this.model({...ut,pixel_values:gt}),Ct=this.model.config.model_type===\"siglip\"?G=>G.sigmoid().data:G=>(0,N.softmax)(G.data),M=[];for(const G of vt.logits_per_image){const Q=[...Ct(G)].map((ge,Ze)=>({score:ge,label:Ee[Ze]}));Q.sort((ge,Ze)=>Ze.score-ge.score),M.push(Q)}return He?M:M[0]}}class he extends me{constructor(te){super(te)}async _call(te,{threshold:Ee=.9,percentage:Ue=!1}={}){const He=Array.isArray(te);if(He&&te.length!==1)throw Error(\"Object detection pipeline currently only supports a batch size of 1.\");const We=await K(te),Qe=Ue?null:We.map(k=>[k.height,k.width]),{pixel_values:ut,pixel_mask:gt}=await this.processor(We),vt=await this.model({pixel_values:ut,pixel_mask:gt}),Ct=this.processor.feature_extractor.post_process_object_detection(vt,Ee,Qe),M=this.model.config.id2label,G=Ct.map(k=>k.boxes.map((Q,ge)=>({score:k.scores[ge],label:M[k.classes[ge]],box:ne(Q,!Ue)})));return He?G:G[0]}}class Ce extends me{constructor(te){super(te)}async _call(te,Ee,{threshold:Ue=.1,top_k:He=null,percentage:We=!1}={}){const Qe=Array.isArray(te),ut=await K(te),gt=this.tokenizer(Ee,{padding:!0,truncation:!0}),vt=await this.processor(ut),Ct=[];for(let M=0;M<ut.length;++M){const G=ut[M],k=We?null:[[G.height,G.width]],Q=vt.pixel_values[M].unsqueeze_(0),ge=await this.model({...gt,pixel_values:Q}),Ze=this.processor.feature_extractor.post_process_object_detection(ge,Ue,k,!0)[0];let tt=Ze.boxes.map((zt,yt)=>({score:Ze.scores[yt],label:Ee[Ze.classes[yt]],box:ne(zt,!We)})).sort((zt,yt)=>yt.score-zt.score);He!==null&&(tt=tt.slice(0,He)),Ct.push(tt)}return Qe?Ct:Ct[0]}}class Z extends me{constructor(te){super(te)}async _call(te,Ee,Ue={}){throw new Error(\"This pipeline is not yet supported in Transformers.js v3.\")}}class Xe extends me{constructor(Ee){super(Ee);Te(this,\"DEFAULT_VOCODER_ID\",\"Xenova/speecht5_hifigan\");this.vocoder=Ee.vocoder??null}async _call(Ee,{speaker_embeddings:Ue=null}={}){return this.processor?this._call_text_to_spectrogram(Ee,{speaker_embeddings:Ue}):this._call_text_to_waveform(Ee)}async _call_text_to_waveform(Ee){const Ue=this.tokenizer(Ee,{padding:!0,truncation:!0}),{waveform:He}=await this.model(Ue),We=this.model.config.sampling_rate;return{audio:He.data,sampling_rate:We}}async _call_text_to_spectrogram(Ee,{speaker_embeddings:Ue}){if(this.vocoder||(console.log(\"No vocoder specified, using default HifiGan vocoder.\"),this.vocoder=await ie.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:\"fp32\"})),(typeof Ue==\"string\"||Ue instanceof URL)&&(Ue=new Float32Array(await(await fetch(Ue)).arrayBuffer())),Ue instanceof Float32Array)Ue=new V.Tensor(\"float32\",Ue,[1,Ue.length]);else if(!(Ue instanceof V.Tensor))throw new Error(\"Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.\");const{input_ids:He}=this.tokenizer(Ee,{padding:!0,truncation:!0}),{waveform:We}=await this.model.generate_speech(He,Ue,{vocoder:this.vocoder}),Qe=this.processor.feature_extractor.config.sampling_rate;return{audio:We.data,sampling_rate:Qe}}}class ht extends me{constructor(te){super(te)}async _call(te){const Ee=await K(te),Ue=await this.processor(Ee),He=await this.model(Ue),We=[];for(const Qe of He.reconstruction){const ut=Qe.squeeze().clamp_(0,1).mul_(255).round_().to(\"uint8\");We.push(P.RawImage.fromTensor(ut))}return We.length>1?We:We[0]}}class it extends me{constructor(te){super(te)}async _call(te){const Ee=await K(te),Ue=await this.processor(Ee),{predicted_depth:He}=await this.model(Ue),We=[];for(let Qe=0;Qe<Ee.length;++Qe){const ut=(0,V.interpolate)(He[Qe],Ee[Qe].size.reverse(),\"bilinear\",!1),gt=ut.mul_(255/(0,N.max)(ut.data)[0]).to(\"uint8\");We.push({predicted_depth:He[Qe],depth:P.RawImage.fromTensor(gt)})}return We.length>1?We:We[0]}}const dt=Object.freeze({\"text-classification\":{tokenizer:E.AutoTokenizer,pipeline:F,model:ie.AutoModelForSequenceClassification,default:{model:\"Xenova/distilbert-base-uncased-finetuned-sst-2-english\"},type:\"text\"},\"token-classification\":{tokenizer:E.AutoTokenizer,pipeline:J,model:ie.AutoModelForTokenClassification,default:{model:\"Xenova/bert-base-multilingual-cased-ner-hrl\"},type:\"text\"},\"question-answering\":{tokenizer:E.AutoTokenizer,pipeline:re,model:ie.AutoModelForQuestionAnswering,default:{model:\"Xenova/distilbert-base-cased-distilled-squad\"},type:\"text\"},\"fill-mask\":{tokenizer:E.AutoTokenizer,pipeline:le,model:ie.AutoModelForMaskedLM,default:{model:\"Xenova/bert-base-uncased\"},type:\"text\"},summarization:{tokenizer:E.AutoTokenizer,pipeline:j,model:ie.AutoModelForSeq2SeqLM,default:{model:\"Xenova/distilbart-cnn-6-6\"},type:\"text\"},translation:{tokenizer:E.AutoTokenizer,pipeline:O,model:ie.AutoModelForSeq2SeqLM,default:{model:\"Xenova/t5-small\"},type:\"text\"},\"text2text-generation\":{tokenizer:E.AutoTokenizer,pipeline:ae,model:ie.AutoModelForSeq2SeqLM,default:{model:\"Xenova/flan-t5-small\"},type:\"text\"},\"text-generation\":{tokenizer:E.AutoTokenizer,pipeline:A,model:ie.AutoModelForCausalLM,default:{model:\"Xenova/gpt2\"},type:\"text\"},\"zero-shot-classification\":{tokenizer:E.AutoTokenizer,pipeline:_e,model:ie.AutoModelForSequenceClassification,default:{model:\"Xenova/distilbert-base-uncased-mnli\"},type:\"text\"},\"audio-classification\":{pipeline:Oe,model:ie.AutoModelForAudioClassification,processor:we.AutoProcessor,default:{model:\"Xenova/wav2vec2-base-superb-ks\"},type:\"audio\"},\"zero-shot-audio-classification\":{tokenizer:E.AutoTokenizer,pipeline:Pe,model:ie.AutoModel,processor:we.AutoProcessor,default:{model:\"Xenova/clap-htsat-unfused\"},type:\"multimodal\"},\"automatic-speech-recognition\":{tokenizer:E.AutoTokenizer,pipeline:st,model:[ie.AutoModelForSpeechSeq2Seq,ie.AutoModelForCTC],processor:we.AutoProcessor,default:{model:\"Xenova/whisper-tiny.en\"},type:\"multimodal\"},\"text-to-audio\":{tokenizer:E.AutoTokenizer,pipeline:Xe,model:[ie.AutoModelForTextToWaveform,ie.AutoModelForTextToSpectrogram],processor:[we.AutoProcessor,null],default:{model:\"Xenova/speecht5_tts\"},type:\"text\"},\"image-to-text\":{tokenizer:E.AutoTokenizer,pipeline:Ye,model:ie.AutoModelForVision2Seq,processor:we.AutoProcessor,default:{model:\"Xenova/vit-gpt2-image-captioning\"},type:\"multimodal\"},\"image-classification\":{pipeline:pt,model:ie.AutoModelForImageClassification,processor:we.AutoProcessor,default:{model:\"Xenova/vit-base-patch16-224\"},type:\"multimodal\"},\"image-segmentation\":{pipeline:ye,model:[ie.AutoModelForImageSegmentation,ie.AutoModelForSemanticSegmentation],processor:we.AutoProcessor,default:{model:\"Xenova/detr-resnet-50-panoptic\"},type:\"multimodal\"},\"zero-shot-image-classification\":{tokenizer:E.AutoTokenizer,pipeline:W,model:ie.AutoModel,processor:we.AutoProcessor,default:{model:\"Xenova/clip-vit-base-patch32\"},type:\"multimodal\"},\"object-detection\":{pipeline:he,model:ie.AutoModelForObjectDetection,processor:we.AutoProcessor,default:{model:\"Xenova/detr-resnet-50\"},type:\"multimodal\"},\"zero-shot-object-detection\":{tokenizer:E.AutoTokenizer,pipeline:Ce,model:ie.AutoModelForZeroShotObjectDetection,processor:we.AutoProcessor,default:{model:\"Xenova/owlvit-base-patch32\"},type:\"multimodal\"},\"document-question-answering\":{tokenizer:E.AutoTokenizer,pipeline:Z,model:ie.AutoModelForDocumentQuestionAnswering,processor:we.AutoProcessor,default:{model:\"Xenova/donut-base-finetuned-docvqa\"},type:\"multimodal\"},\"image-to-image\":{pipeline:ht,model:ie.AutoModelForImageToImage,processor:we.AutoProcessor,default:{model:\"Xenova/swin2SR-classical-sr-x2-64\"},type:\"image\"},\"depth-estimation\":{pipeline:it,model:ie.AutoModelForDepthEstimation,processor:we.AutoProcessor,default:{model:\"Xenova/dpt-large\"},type:\"image\"},\"feature-extraction\":{tokenizer:E.AutoTokenizer,pipeline:Me,model:ie.AutoModel,default:{model:\"Xenova/all-MiniLM-L6-v2\"},type:\"text\"},\"image-feature-extraction\":{processor:we.AutoProcessor,pipeline:ke,model:[ie.AutoModelForImageFeatureExtraction,ie.AutoModel],default:{model:\"Xenova/vit-base-patch16-224-in21k\"},type:\"image\"}}),Ne=Object.freeze({\"sentiment-analysis\":\"text-classification\",ner:\"token-classification\",asr:\"automatic-speech-recognition\",\"text-to-speech\":\"text-to-audio\",embeddings:\"feature-extraction\"});async function at(Be,te=null,{progress_callback:Ee=null,config:Ue=null,cache_dir:He=null,local_files_only:We=!1,revision:Qe=\"main\",device:ut=null,dtype:gt=null,model_file_name:vt=null,session_options:Ct={}}={}){Be=Ne[Be]??Be;const M=dt[Be.split(\"_\",1)[0]];if(!M)throw Error(`Unsupported pipeline: ${Be}. Must be one of [${Object.keys(dt)}]`);te||(te=M.default.model,console.log(`No model specified. Using default model: \"${te}\".`));const G={progress_callback:Ee,config:Ue,cache_dir:He,local_files_only:We,revision:Qe,device:ut,dtype:gt,model_file_name:vt,session_options:Ct},k=new Map([[\"tokenizer\",M.tokenizer],[\"model\",M.model],[\"processor\",M.processor]]),Q=await Et(k,te,G);Q.task=Be,(0,xe.dispatchCallback)(Ee,{status:\"ready\",task:Be,model:te});const ge=M.pipeline;return new ge(Q)}async function Et(Be,te,Ee){const Ue=Object.create(null),He=[];for(let[We,Qe]of Be.entries()){if(!Qe)continue;let ut;Array.isArray(Qe)?ut=new Promise(async(gt,vt)=>{var M,G;let Ct;for(let k of Qe){if(k===null){gt(null);return}try{gt(await k.from_pretrained(te,Ee));return}catch(Q){if((M=Q.message)!=null&&M.includes(\"Unsupported model type\"))Ct=Q;else if((G=Q.message)!=null&&G.includes(\"Could not locate file\"))Ct=Q;else{vt(Q);return}}}vt(Ct)}):ut=Qe.from_pretrained(te,Ee),Ue[We]=ut,He.push(ut)}await Promise.all(He);for(let[We,Qe]of Object.entries(Ue))Ue[We]=await Qe;return Ue}},\"./src/processors.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{ASTFeatureExtractor:()=>gt,AutoProcessor:()=>bt,BeitFeatureExtractor:()=>Ne,BitImageProcessor:()=>j,CLIPFeatureExtractor:()=>R,CLIPImageProcessor:()=>A,ChineseCLIPFeatureExtractor:()=>_e,ClapFeatureExtractor:()=>vt,ConvNextFeatureExtractor:()=>ke,ConvNextImageProcessor:()=>Oe,DPTFeatureExtractor:()=>le,DPTImageProcessor:()=>ae,DeiTFeatureExtractor:()=>dt,DetrFeatureExtractor:()=>Be,DonutFeatureExtractor:()=>at,EfficientNetImageProcessor:()=>Ye,FeatureExtractor:()=>me,Florence2Processor:()=>Tt,GLPNFeatureExtractor:()=>O,ImageFeatureExtractor:()=>F,MobileNetV1FeatureExtractor:()=>pt,MobileNetV2FeatureExtractor:()=>ye,MobileNetV3FeatureExtractor:()=>W,MobileNetV4FeatureExtractor:()=>he,MobileViTFeatureExtractor:()=>Ce,MobileViTImageProcessor:()=>Z,NougatImageProcessor:()=>Et,OwlViTFeatureExtractor:()=>Xe,OwlViTProcessor:()=>yt,Owlv2ImageProcessor:()=>ht,Processor:()=>k,PyAnnoteFeatureExtractor:()=>Ct,PyAnnoteProcessor:()=>tt,RTDetrImageProcessor:()=>it,SamImageProcessor:()=>Ee,SamProcessor:()=>Q,SapiensFeatureExtractor:()=>J,SeamlessM4TFeatureExtractor:()=>ut,SegformerFeatureExtractor:()=>re,SiglipImageProcessor:()=>Me,SpeechT5FeatureExtractor:()=>G,SpeechT5Processor:()=>zt,Swin2SRImageProcessor:()=>Ue,ViTFeatureExtractor:()=>Pe,ViTImageProcessor:()=>st,VitMatteImageProcessor:()=>He,Wav2Vec2FeatureExtractor:()=>Qe,Wav2Vec2ProcessorWithLM:()=>Ze,WeSpeakerFeatureExtractor:()=>M,WhisperFeatureExtractor:()=>We,WhisperProcessor:()=>ge,YolosFeatureExtractor:()=>te});var E=I(\"./src/utils/generic.js\"),ie=I(\"./src/utils/core.js\"),we=I(\"./src/utils/hub.js\"),ve=I(\"./src/utils/maths.js\"),xe=I(\"./src/utils/tensor.js\");I(\"./src/utils/image.js\");var N=I(\"./src/utils/audio.js\");function T([Ae,D,ce,Se]){return[Ae-ce/2,D-Se/2,Ae+ce/2,D+Se/2]}function V(Ae,D=.5,ce=null,Se=!1){const Ge=Ae.logits,Fe=Ae.pred_boxes,[et,mt,ct]=Ge.dims;if(ce!==null&&ce.length!==et)throw Error(\"Make sure that you pass in as many target sizes as the batch dimension of the logits\");let $t=[];for(let _t=0;_t<et;++_t){let Re=ce!==null?ce[_t]:null,Nt={boxes:[],classes:[],scores:[]},Lt=Ge[_t],Ht=Fe[_t];for(let Rt=0;Rt<mt;++Rt){let Wt=Lt[Rt],Xt=[],cr;if(Se){cr=Wt.sigmoid().data;for(let sr=0;sr<cr.length;++sr)cr[sr]>D&&Xt.push(sr)}else{let sr=(0,ve.max)(Wt.data)[1];if(sr===ct-1||(cr=(0,ve.softmax)(Wt.data),cr[sr]<D))continue;Xt.push(sr)}for(const sr of Xt){let yr=Ht[Rt].data;yr=T(yr),Re!==null&&(yr=yr.map((Je,wt)=>Je*Re[(wt+1)%2])),Nt.boxes.push(yr),Nt.classes.push(sr),Nt.scores.push(cr[sr])}}$t.push(Nt)}return $t}function P(Ae,D=null){const ce=Ae.logits,Se=ce.dims[0];if(D!==null&&D.length!==Se)throw Error(\"Make sure that you pass in as many target sizes as the batch dimension of the logits\");const Ge=[];for(let Fe=0;Fe<Se;++Fe){const et=D!==null?D[Fe]:null;let mt=ce[Fe];et!==null&&(mt=(0,xe.interpolate)(mt,et,\"bilinear\",!1));const[ct,$t]=et??mt.dims.slice(-2),_t=new xe.Tensor(\"int32\",new Int32Array(ct*$t),[ct,$t]),Re=mt[0].data,Nt=_t.data;for(let Rt=1;Rt<mt.dims[0];++Rt){const Wt=mt[Rt].data;for(let Xt=0;Xt<Wt.length;++Xt)Wt[Xt]>Re[Xt]&&(Re[Xt]=Wt[Xt],Nt[Xt]=Rt)}const Lt=new Array(mt.dims[0]);for(let Rt=0;Rt<Nt.length;++Rt){const Wt=Nt[Rt];Lt[Wt]=Wt}const Ht=Lt.filter(Rt=>Rt!==void 0);Ge.push({segmentation:_t,labels:Ht})}return Ge}function K(Ae,D){var ce;if(!(Ae instanceof Float32Array||Ae instanceof Float64Array))throw new Error(`${D} expects input to be a Float32Array or a Float64Array, but got ${((ce=Ae==null?void 0:Ae.constructor)==null?void 0:ce.name)??typeof Ae} instead. If using the feature extractor directly, remember to use \\`read_audio(url, sampling_rate)\\` to obtain the raw audio data of the file/url.`)}function ee(Ae,D,ce=0,Se=null){const Ge=Ae/D;let Fe=(0,ve.bankers_round)(Ge)*D;return Se!==null&&Fe>Se&&(Fe=Math.floor(Ge)*D),Fe<ce&&(Fe=Math.ceil(Ge)*D),Fe}function ne([Ae,D],ce){return[Math.max(Math.floor(Ae/ce),1)*ce,Math.max(Math.floor(D/ce),1)*ce]}class me extends E.Callable{constructor(D){super(),this.config=D}}class F extends me{constructor(D){super(D),this.image_mean=this.config.image_mean??this.config.mean,this.image_std=this.config.image_std??this.config.std,this.resample=this.config.resample??2,this.do_rescale=this.config.do_rescale??!0,this.rescale_factor=this.config.rescale_factor??1/255,this.do_normalize=this.config.do_normalize,this.do_resize=this.config.do_resize,this.do_thumbnail=this.config.do_thumbnail,this.size=this.config.size,this.size_divisibility=this.config.size_divisibility??this.config.size_divisor,this.do_center_crop=this.config.do_center_crop,this.crop_size=this.config.crop_size,this.do_convert_rgb=this.config.do_convert_rgb??!0,this.do_crop_margin=this.config.do_crop_margin,this.pad_size=this.config.pad_size,this.do_pad=this.config.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=this.config.do_flip_channel_order??!1}async thumbnail(D,ce,Se=2){const Ge=D.height,Fe=D.width,et=ce.height,mt=ce.width;let ct=Math.min(Ge,et),$t=Math.min(Fe,mt);return ct===Ge&&$t===Fe?D:(Ge>Fe?$t=Math.floor(Fe*ct/Ge):Fe>Ge&&(ct=Math.floor(Ge*$t/Fe)),await D.resize($t,ct,{resample:Se}))}async crop_margin(D,ce=200){const Se=D.clone().grayscale(),Ge=(0,ve.min)(Se.data)[0],et=(0,ve.max)(Se.data)[0]-Ge;if(et===0)return D;const mt=ce/255;let ct=Se.width,$t=Se.height,_t=0,Re=0;const Nt=Se.data;for(let Lt=0;Lt<Se.height;++Lt){const Ht=Lt*Se.width;for(let Rt=0;Rt<Se.width;++Rt)(Nt[Ht+Rt]-Ge)/et<mt&&(ct=Math.min(ct,Rt),$t=Math.min($t,Lt),_t=Math.max(_t,Rt),Re=Math.max(Re,Lt))}return D=await D.crop([ct,$t,_t,Re]),D}pad_image(D,ce,Se,{mode:Ge=\"constant\",center:Fe=!1,constant_values:et=0}={}){const[mt,ct,$t]=ce;let _t,Re;if(typeof Se==\"number\"?(_t=Se,Re=Se):(_t=Se.width,Re=Se.height),_t!==ct||Re!==mt){const Nt=new Float32Array(_t*Re*$t);if(Array.isArray(et))for(let Rt=0;Rt<Nt.length;++Rt)Nt[Rt]=et[Rt%$t];else et!==0&&Nt.fill(et);const[Lt,Ht]=Fe?[Math.floor((_t-ct)/2),Math.floor((Re-mt)/2)]:[0,0];for(let Rt=0;Rt<mt;++Rt){const Wt=(Rt+Ht)*_t,Xt=Rt*ct;for(let cr=0;cr<ct;++cr){const sr=(Wt+cr+Lt)*$t,yr=(Xt+cr)*$t;for(let Je=0;Je<$t;++Je)Nt[sr+Je]=D[yr+Je]}}if(Ge===\"symmetric\"){if(Fe)throw new Error(\"`center` padding is not supported when `mode` is set to `symmetric`.\");const Rt=mt-1,Wt=ct-1;for(let Xt=0;Xt<Re;++Xt){const cr=Xt*_t,sr=(0,ie.calculateReflectOffset)(Xt,Rt)*ct;for(let yr=0;yr<_t;++yr){if(Xt<mt&&yr<ct)continue;const Je=(cr+yr)*$t,wt=(sr+(0,ie.calculateReflectOffset)(yr,Wt))*$t;for(let Dt=0;Dt<$t;++Dt)Nt[Je+Dt]=D[wt+Dt]}}}D=Nt,ce=[Re,_t,$t]}return[D,ce]}rescale(D){for(let ce=0;ce<D.length;++ce)D[ce]=this.rescale_factor*D[ce]}get_resize_output_image_size(D,ce){const[Se,Ge]=D.size;let Fe,et;if(this.do_thumbnail){const{height:mt,width:ct}=ce;Fe=Math.min(mt,ct)}else Number.isInteger(ce)?(Fe=ce,et=this.config.max_size??Fe):ce!==void 0&&(Fe=ce.shortest_edge,et=ce.longest_edge);if(Fe!==void 0||et!==void 0){const mt=Fe===void 0?1:Math.max(Fe/Se,Fe/Ge),ct=Se*mt,$t=Ge*mt,_t=et===void 0?1:Math.min(et/ct,et/$t);let Re=Math.floor(Number((ct*_t).toFixed(2))),Nt=Math.floor(Number(($t*_t).toFixed(2)));return this.size_divisibility!==void 0&&([Re,Nt]=ne([Re,Nt],this.size_divisibility)),[Re,Nt]}else if(ce!==void 0&&ce.width!==void 0&&ce.height!==void 0){let mt=ce.width,ct=ce.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let $t=ct/Ge,_t=mt/Se;Math.abs(1-_t)<Math.abs(1-$t)?$t=_t:_t=$t,ct=ee($t*Ge,this.config.ensure_multiple_of),mt=ee(_t*Se,this.config.ensure_multiple_of)}return[mt,ct]}else{if(this.size_divisibility!==void 0)return ne([Se,Ge],this.size_divisibility);throw new Error(`Could not resize image due to unsupported \\`this.size\\` option in config: ${JSON.stringify(ce)}`)}}async resize(D){const[ce,Se]=this.get_resize_output_image_size(D,this.size);return await D.resize(ce,Se,{resample:this.resample})}async preprocess(D,{do_normalize:ce=null,do_pad:Se=null,do_convert_rgb:Ge=null,do_convert_grayscale:Fe=null,do_flip_channel_order:et=null}={}){this.do_crop_margin&&(D=await this.crop_margin(D));const[mt,ct]=D.size;if(Ge??this.do_convert_rgb?D=D.rgb():Fe&&(D=D.grayscale()),this.do_resize&&(D=await this.resize(D)),this.do_thumbnail&&(D=await this.thumbnail(D,this.size,this.resample)),this.do_center_crop){let Lt,Ht;Number.isInteger(this.crop_size)?(Lt=this.crop_size,Ht=this.crop_size):(Lt=this.crop_size.width,Ht=this.crop_size.height),D=await D.center_crop(Lt,Ht)}const $t=[D.height,D.width];let _t=Float32Array.from(D.data),Re=[D.height,D.width,D.channels];if(this.do_rescale&&this.rescale(_t),ce??this.do_normalize){let Lt=this.image_mean;Array.isArray(this.image_mean)||(Lt=new Array(D.channels).fill(Lt));let Ht=this.image_std;if(Array.isArray(this.image_std)||(Ht=new Array(D.channels).fill(Lt)),Lt.length!==D.channels||Ht.length!==D.channels)throw new Error(`When set to arrays, the length of \\`image_mean\\` (${Lt.length}) and \\`image_std\\` (${Ht.length}) must match the number of channels in the image (${D.channels}).`);for(let Rt=0;Rt<_t.length;Rt+=D.channels)for(let Wt=0;Wt<D.channels;++Wt)_t[Rt+Wt]=(_t[Rt+Wt]-Lt[Wt])/Ht[Wt]}if(Se??this.do_pad){if(this.pad_size)[_t,Re]=this.pad_image(_t,[D.height,D.width,D.channels],this.pad_size);else if(this.size_divisibility){const[Lt,Ht]=ne([Re[1],Re[0]],this.size_divisibility);[_t,Re]=this.pad_image(_t,Re,{width:Lt,height:Ht})}}if(et??this.do_flip_channel_order){if(Re[2]!==3)throw new Error(\"Flipping channel order is only supported for RGB images.\");for(let Lt=0;Lt<_t.length;Lt+=3){const Ht=_t[Lt];_t[Lt]=_t[Lt+2],_t[Lt+2]=Ht}}const Nt=new xe.Tensor(\"float32\",_t,Re).permute(2,0,1);return{original_size:[ct,mt],reshaped_input_size:$t,pixel_values:Nt}}async _call(D,...ce){Array.isArray(D)||(D=[D]);const Se=await Promise.all(D.map(Fe=>this.preprocess(Fe)));return{pixel_values:(0,xe.stack)(Se.map(Fe=>Fe.pixel_values),0),original_sizes:Se.map(Fe=>Fe.original_size),reshaped_input_sizes:Se.map(Fe=>Fe.reshaped_input_size)}}}class J extends F{post_process_semantic_segmentation(...D){return P(...D)}}class re extends F{post_process_semantic_segmentation(...D){return P(...D)}}class le extends F{}class ae extends le{}class j extends F{}class O extends F{}class R extends F{}class A extends R{}class _e extends F{}class Me extends F{}class ke extends F{constructor(D){super(D),this.crop_pct=this.config.crop_pct??224/256}async resize(D){var Se;const ce=(Se=this.size)==null?void 0:Se.shortest_edge;if(ce===void 0)throw new Error(\"Size dictionary must contain 'shortest_edge' key.\");if(ce<384){const Ge=Math.floor(ce/this.crop_pct),[Fe,et]=this.get_resize_output_image_size(D,{shortest_edge:Ge});D=await D.resize(Fe,et,{resample:this.resample}),D=await D.center_crop(ce,ce)}else D=await D.resize(ce,ce,{resample:this.resample});return D}}class Oe extends ke{}class Pe extends F{}class st extends F{}class Ye extends F{constructor(D){super(D),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(ce=>ce*ce))}}class pt extends F{}class ye extends F{}class W extends F{}class he extends F{}class Ce extends F{}class Z extends Ce{}class Xe extends F{post_process_object_detection(...D){return V(...D)}}class ht extends Xe{}class it extends F{post_process_object_detection(...D){return V(...D)}}class dt extends F{}class Ne extends F{}class at extends F{pad_image(D,ce,Se,Ge={}){const[Fe,et,mt]=ce;let ct=this.image_mean;Array.isArray(this.image_mean)||(ct=new Array(mt).fill(ct));let $t=this.image_std;Array.isArray($t)||($t=new Array(mt).fill(ct));const _t=ct.map((Re,Nt)=>-Re/$t[Nt]);return super.pad_image(D,ce,Se,{center:!0,constant_values:_t,...Ge})}}class Et extends at{}class Be extends F{async _call(D){const ce=await super._call(D),Se=[ce.pixel_values.dims[0],64,64],Ge=new xe.Tensor(\"int64\",new BigInt64Array(Se.reduce((Fe,et)=>Fe*et)).fill(1n),Se);return{...ce,pixel_mask:Ge}}post_process_object_detection(...D){return V(...D)}remove_low_and_no_objects(D,ce,Se,Ge){let Fe=[],et=[],mt=[];for(let ct=0;ct<D.dims[0];++ct){let $t=D[ct],_t=ce[ct],Re=(0,ve.max)($t.data)[1];if(Re===Ge)continue;let Lt=(0,ve.softmax)($t.data)[Re];Lt>Se&&(Fe.push(_t),et.push(Lt),mt.push(Re))}return[Fe,et,mt]}check_segment_validity(D,ce,Se,Ge=.5,Fe=.8){let et=[],mt=0,ct=0;const $t=ce[Se].data;for(let Re=0;Re<D.length;++Re)D[Re]===Se&&(et.push(Re),++mt),$t[Re]>=Ge&&++ct;let _t=mt>0&&ct>0;return _t&&(_t=mt/ct>Fe),[_t,et]}compute_segments(D,ce,Se,Ge,Fe,et=null,mt=null){let[ct,$t]=mt??D[0].dims,_t=new xe.Tensor(\"int32\",new Int32Array(ct*$t),[ct,$t]),Re=[];if(mt!==null)for(let Wt=0;Wt<D.length;++Wt)D[Wt]=(0,xe.interpolate)(D[Wt],mt,\"bilinear\",!1);let Nt=new Int32Array(D[0].data.length),Lt=new Float32Array(D[0].data.length);for(let Wt=0;Wt<D.length;++Wt){let Xt=ce[Wt];const cr=D[Wt].data;for(let sr=0;sr<cr.length;++sr)cr[sr]*=Xt,cr[sr]>Lt[sr]&&(Nt[sr]=Wt,Lt[sr]=cr[sr])}let Ht=0;const Rt=_t.data;for(let Wt=0;Wt<Se.length;++Wt){let Xt=Se[Wt],[cr,sr]=this.check_segment_validity(Nt,D,Wt,Ge,Fe);if(cr){++Ht;for(let yr of sr)Rt[yr]=Ht;Re.push({id:Ht,label_id:Xt,score:ce[Wt]})}}return[_t,Re]}post_process_panoptic_segmentation(D,ce=.5,Se=.5,Ge=.8,Fe=null,et=null){Fe===null&&(console.warn(\"`label_ids_to_fuse` unset. No instance will be fused.\"),Fe=new Set);const mt=D.logits,$t=D.pred_masks.sigmoid();let[_t,Re,Nt]=mt.dims;if(Nt-=1,et!==null&&et.length!==_t)throw Error(\"Make sure that you pass in as many target sizes as the batch dimension of the logits\");let Lt=[];for(let Ht=0;Ht<_t;++Ht){let Rt=et!==null?et[Ht]:null,Wt=mt[Ht],Xt=$t[Ht],[cr,sr,yr]=this.remove_low_and_no_objects(Wt,Xt,ce,Nt);if(yr.length===0){let[Dt,Kr]=Rt??Xt.dims.slice(-2),In=new xe.Tensor(\"int32\",new Int32Array(Dt*Kr).fill(-1),[Dt,Kr]);Lt.push({segmentation:In,segments_info:[]});continue}let[Je,wt]=this.compute_segments(cr,sr,yr,Se,Ge,Fe,Rt);Lt.push({segmentation:Je,segments_info:wt})}return Lt}post_process_instance_segmentation(){throw Error(\"Not implemented yet\")}}class te extends F{post_process_object_detection(...D){return V(...D)}}class Ee extends F{reshape_input_points(D,ce,Se,Ge=!1){D=structuredClone(D);let Fe=(0,ie.calculateDimensions)(D);if(Fe.length===3)Ge||(Fe=[1,...Fe]),D=[D];else if(Fe.length!==4)throw Error(\"The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.\");for(let et=0;et<D.length;++et){let mt=ce[et],ct=Se[et],$t=[ct[0]/mt[0],ct[1]/mt[1]];for(let _t=0;_t<D[et].length;++_t)for(let Re=0;Re<D[et][_t].length;++Re)for(let Nt=0;Nt<D[et][_t][Re].length;++Nt)D[et][_t][Re][Nt]*=$t[Nt%2]}return new xe.Tensor(\"float32\",Float32Array.from(D.flat(1/0)),Fe)}add_input_labels(D,ce){let Se=(0,ie.calculateDimensions)(D);if(Se.length===2)Se=[1,...Se],D=[D];else if(Se.length!==3)throw Error(\"The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.\");if(Se.some((Ge,Fe)=>Ge!==ce.dims[Fe]))throw Error(`The first ${Se.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new xe.Tensor(\"int64\",D.flat(1/0).map(BigInt),Se)}async _call(D,{input_points:ce=null,input_labels:Se=null,input_boxes:Ge=null}={}){const Fe=await super._call(D);if(ce&&(Fe.input_points=this.reshape_input_points(ce,Fe.original_sizes,Fe.reshaped_input_sizes)),Se){if(!Fe.input_points)throw Error(\"`input_points` must be provided if `input_labels` are provided.\");Fe.input_labels=this.add_input_labels(Se,Fe.input_points)}return Ge&&(Fe.input_boxes=this.reshape_input_points(Ge,Fe.original_sizes,Fe.reshaped_input_sizes,!0)),Fe}async post_process_masks(D,ce,Se,{mask_threshold:Ge=0,binarize:Fe=!0,pad_size:et=null}={}){const mt=[];et=et??this.pad_size;const ct=[et.height,et.width];for(let $t=0;$t<ce.length;++$t){const _t=ce[$t],Re=Se[$t];let Nt=await(0,xe.interpolate_4d)(D[$t],{mode:\"bilinear\",size:ct});if(Nt=Nt.slice(null,null,[0,Re[0]],[0,Re[1]]),Nt=await(0,xe.interpolate_4d)(Nt,{mode:\"bilinear\",size:_t}),Fe){const Lt=Nt.data,Ht=new Uint8Array(Lt.length);for(let Rt=0;Rt<Lt.length;++Rt)Lt[Rt]>Ge&&(Ht[Rt]=1);Nt=new xe.Tensor(\"bool\",Ht,Nt.dims)}mt.push(Nt)}return mt}generate_crop_boxes(D,ce,{crop_n_layers:Se=0,overlap_ratio:Ge=512/1500,points_per_crop:Fe=32,crop_n_points_downscale_factor:et=1}={}){}}class Ue extends F{pad_image(D,ce,Se,Ge={}){const[Fe,et,mt]=ce;return super.pad_image(D,ce,{width:et+(Se-et%Se)%Se,height:Fe+(Se-Fe%Se)%Se},{mode:\"symmetric\",center:!1,constant_values:-1,...Ge})}}class He extends F{async _call(D,ce){Array.isArray(D)||(D=[D]),Array.isArray(ce)||(ce=[ce]);const Se=await Promise.all(D.map(et=>this.preprocess(et))),Ge=await Promise.all(ce.map(et=>this.preprocess(et,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,xe.stack)(Se.map((et,mt)=>(0,xe.cat)([et.pixel_values,Ge[mt].pixel_values],0)),0),original_sizes:Se.map(et=>et.original_size),reshaped_input_sizes:Se.map(et=>et.reshaped_input_size)}}}class We extends me{constructor(D){var ce;super(D),(ce=this.config).mel_filters??(ce.mel_filters=(0,N.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,\"slaney\",\"slaney\")),this.window=(0,N.window_function)(this.config.n_fft,\"hann\")}async _extract_fbank_features(D){const ce=await(0,N.spectrogram)(D,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:\"log10\",max_num_frames:this.config.nb_max_frames}),Se=ce.data,Ge=(0,ve.max)(Se)[0];for(let Fe=0;Fe<Se.length;++Fe)Se[Fe]=(Math.max(Se[Fe],Ge-8)+4)/4;return ce}async _call(D){K(D,\"WhisperFeatureExtractor\");let ce;return D.length>this.config.n_samples?(console.warn(\"Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`.\"),ce=D.slice(0,this.config.n_samples)):(ce=new Float32Array(this.config.n_samples),ce.set(D)),{input_features:(await this._extract_fbank_features(ce)).unsqueeze_(0)}}}class Qe extends me{_zero_mean_unit_var_norm(D){const Se=D.reduce((Fe,et)=>Fe+et,0)/D.length,Ge=D.reduce((Fe,et)=>Fe+(et-Se)**2,0)/D.length;return D.map(Fe=>(Fe-Se)/Math.sqrt(Ge+1e-7))}async _call(D){K(D,\"Wav2Vec2FeatureExtractor\"),D instanceof Float64Array&&(D=new Float32Array(D));let ce=D;this.config.do_normalize&&(ce=this._zero_mean_unit_var_norm(ce));const Se=[1,ce.length];return{input_values:new xe.Tensor(\"float32\",ce,Se),attention_mask:new xe.Tensor(\"int64\",new BigInt64Array(ce.length).fill(1n),Se)}}}class ut extends me{constructor(D){super(D);const ce=this.config.sampling_rate,Se=(0,N.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(ce/2),ce,null,\"kaldi\",!0);for(let Ge=0;Ge<Se.length;++Ge)Se[Ge].push(0);this.mel_filters=Se,this.window=(0,N.window_function)(400,\"povey\",{periodic:!1})}async _extract_fbank_features(D,ce){return D=D.map(Se=>Se*32768),(0,N.spectrogram)(D,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:\"log\",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:ce,transpose:!0})}async _call(D,{padding:ce=!0,pad_to_multiple_of:Se=2,do_normalize_per_mel_bins:Ge=!0,return_attention_mask:Fe=!0}={}){K(D,\"SeamlessM4TFeatureExtractor\");let et=await this._extract_fbank_features(D,this.config.max_length);if(Ge){const[Ht,Rt]=et.dims,Wt=et.data;for(let Xt=0;Xt<Rt;++Xt){let cr=0;for(let wt=0;wt<Ht;++wt)cr+=Wt[wt*Rt+Xt];const sr=cr/Ht;let yr=0;for(let wt=0;wt<Ht;++wt)yr+=(Wt[wt*Rt+Xt]-sr)**2;yr/=Ht-1;const Je=Math.sqrt(yr+1e-7);for(let wt=0;wt<Ht;++wt){const Dt=wt*Rt+Xt;Wt[Dt]=(Wt[Dt]-sr)/Je}}}let mt;if(ce){const[Ht,Rt]=et.dims,Wt=et.data,Xt=Ht%Se;if(Xt>0){const cr=new Float32Array(Rt*(Ht+Xt));cr.set(Wt),cr.fill(this.config.padding_value,Wt.length);const sr=Ht+Xt;et=new xe.Tensor(et.type,cr,[sr,Rt]),Fe&&(mt=new xe.Tensor(\"int64\",new BigInt64Array(sr),[1,sr]),mt.data.fill(1n,0,Ht))}}const[ct,$t]=et.dims,_t=this.config.stride;if(ct%_t!==0)throw new Error(`The number of frames (${ct}) must be a multiple of the stride (${_t}).`);const Nt=et.view(1,Math.floor(ct/_t),$t*_t),Lt={input_features:Nt};if(Fe){const Ht=Nt.dims[1],Rt=new BigInt64Array(Ht);if(mt){const Wt=mt.data;for(let Xt=1,cr=0;Xt<ct;Xt+=_t,++cr)Rt[cr]=Wt[Xt]}else Rt.fill(1n);Lt.attention_mask=new xe.Tensor(\"int64\",Rt,[1,Ht])}return Lt}}class gt extends me{constructor(D){super(D);const ce=this.config.sampling_rate,Se=(0,N.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(ce/2),ce,null,\"kaldi\",!0);for(let Ge=0;Ge<Se.length;++Ge)Se[Ge].push(0);this.mel_filters=Se,this.window=(0,N.window_function)(400,\"hann\",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(D,ce){return(0,N.spectrogram)(D,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:\"log\",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:ce,transpose:!0})}async _call(D){K(D,\"ASTFeatureExtractor\");const ce=await this._extract_fbank_features(D,this.config.max_length);if(this.config.do_normalize){const Se=this.std*2,Ge=ce.data;for(let Fe=0;Fe<Ge.length;++Fe)Ge[Fe]=(Ge[Fe]-this.mean)/Se}return{input_values:ce.unsqueeze_(0)}}}class vt extends me{constructor(D){super(D),this.mel_filters=(0,N.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,\"htk\"),this.mel_filters_slaney=(0,N.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,\"slaney\",\"slaney\"),this.window=(0,N.window_function)(this.config.fft_window_size,\"hann\")}async _get_input_mel(D,ce,Se,Ge){let Fe;const et=D.length-ce;if(et>0)if(Se===\"rand_trunc\"){const mt=Math.floor(Math.random()*(et+1));D=D.subarray(mt,mt+ce),Fe=await this._extract_fbank_features(D,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy \"${Se}\" not implemented`);else{if(et<0){let mt=new Float64Array(ce);if(mt.set(D),Ge===\"repeat\")for(let ct=D.length;ct<ce;ct+=D.length)mt.set(D.subarray(0,Math.min(D.length,ce-ct)),ct);else if(Ge===\"repeatpad\")for(let ct=D.length;ct<-et;ct+=D.length)mt.set(D,ct);D=mt}if(Se===\"fusion\")throw new Error(`Truncation strategy \"${Se}\" not implemented`);Fe=await this._extract_fbank_features(D,this.mel_filters_slaney,this.config.nb_max_samples)}return Fe.unsqueeze_(0)}async _extract_fbank_features(D,ce,Se=null){return(0,N.spectrogram)(D,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:ce,log_mel:\"dB\",max_num_frames:Se,do_pad:!1,transpose:!0})}async _call(D,{max_length:ce=null}={}){return K(D,\"ClapFeatureExtractor\"),{input_features:(await this._get_input_mel(D,ce??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}class Ct extends me{async _call(D){K(D,\"PyAnnoteFeatureExtractor\"),D instanceof Float64Array&&(D=new Float32Array(D));const ce=[1,1,D.length];return{input_values:new xe.Tensor(\"float32\",D,ce)}}samples_to_frames(D){return(D-this.config.offset)/this.config.step}post_process_speaker_diarization(D,ce){const Se=ce/this.samples_to_frames(ce)/this.config.sampling_rate,Ge=[];for(const Fe of D.tolist()){const et=[];let mt=-1;for(let ct=0;ct<Fe.length;++ct){const $t=(0,ve.softmax)(Fe[ct]),[_t,Re]=(0,ve.max)($t),[Nt,Lt]=[ct,ct+1];Re!==mt?(mt=Re,et.push({id:Re,start:Nt,end:Lt,score:_t})):(et.at(-1).end=Lt,et.at(-1).score+=_t)}Ge.push(et.map(({id:ct,start:$t,end:_t,score:Re})=>({id:ct,start:$t*Se,end:_t*Se,confidence:Re/(_t-$t)})))}return Ge}}class M extends me{constructor(D){super(D);const ce=this.config.sampling_rate,Se=(0,N.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(ce/2),ce,null,\"kaldi\",!0);for(let Ge=0;Ge<Se.length;++Ge)Se[Ge].push(0);this.mel_filters=Se,this.window=(0,N.window_function)(400,\"hamming\",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(D){return D=D.map(ce=>ce*32768),(0,N.spectrogram)(D,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:\"log\",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(D){K(D,\"WeSpeakerFeatureExtractor\");const ce=(await this._extract_fbank_features(D)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const Se=ce.mean(1).data,Ge=ce.data,[Fe,et,mt]=ce.dims;for(let ct=0;ct<Fe;++ct){const $t=ct*et*mt,_t=ct*mt;for(let Re=0;Re<et;++Re){const Nt=$t+Re*mt;for(let Lt=0;Lt<mt;++Lt)Ge[Nt+Lt]-=Se[_t+Lt]}}}return{input_features:ce}}}class G extends me{}class k extends E.Callable{constructor(D){super(),this.feature_extractor=D}async _call(D,...ce){return await this.feature_extractor(D,...ce)}}class Q extends k{async _call(...D){return await this.feature_extractor(...D)}post_process_masks(...D){return this.feature_extractor.post_process_masks(...D)}reshape_input_points(...D){return this.feature_extractor.reshape_input_points(...D)}}class ge extends k{async _call(D){return await this.feature_extractor(D)}}class Ze extends k{async _call(D){return await this.feature_extractor(D)}}class tt extends k{async _call(D){return await this.feature_extractor(D)}post_process_speaker_diarization(...D){return this.feature_extractor.post_process_speaker_diarization(...D)}}class zt extends k{async _call(D){return await this.feature_extractor(D)}}class yt extends k{}class Tt extends k{constructor(D){super(D);const{tasks_answer_post_processing_type:ce,task_prompts_without_inputs:Se,task_prompts_with_input:Ge}=D.config;this.tasks_answer_post_processing_type=new Map(Object.entries(ce??{})),this.task_prompts_without_inputs=new Map(Object.entries(Se??{})),this.task_prompts_with_input=new Map(Object.entries(Ge??{})),this.regexes={quad_boxes:/(.+?)<loc_(\\d+)><loc_(\\d+)><loc_(\\d+)><loc_(\\d+)><loc_(\\d+)><loc_(\\d+)><loc_(\\d+)><loc_(\\d+)>/gm,bboxes:/([^<]+)?<loc_(\\d+)><loc_(\\d+)><loc_(\\d+)><loc_(\\d+)>/gm},this.size_per_bin=1e3}construct_prompts(D){typeof D==\"string\"&&(D=[D]);const ce=[];for(const Se of D)if(this.task_prompts_without_inputs.has(Se))ce.push(this.task_prompts_without_inputs.get(Se));else{for(const[Ge,Fe]of this.task_prompts_with_input)if(Se.includes(Ge)){ce.push(Fe.replaceAll(\"{input}\",Se).replaceAll(Ge,\"\"));break}ce.length!==D.length&&ce.push(Se)}return ce}post_process_generation(D,ce,Se){const Ge=this.tasks_answer_post_processing_type.get(ce)??\"pure_text\";D=D.replaceAll(\"<s>\",\"\").replaceAll(\"</s>\",\"\");let Fe;switch(Ge){case\"pure_text\":Fe=D;break;case\"description_with_bboxes\":case\"bboxes\":case\"phrase_grounding\":case\"ocr\":const et=Ge===\"ocr\"?\"quad_boxes\":\"bboxes\",mt=D.matchAll(this.regexes[et]),ct=[],$t=[];for(const[_t,Re,...Nt]of mt)ct.push(Re?Re.trim():ct.at(-1)??\"\"),$t.push(Nt.map((Lt,Ht)=>(Number(Lt)+.5)/this.size_per_bin*Se[Ht%2]));Fe={labels:ct,[et]:$t};break;default:throw new Error(`Task \"${ce}\" (of type \"${Ge}\") not yet implemented.`)}return{[ce]:Fe}}}class bt{static async from_pretrained(D,{progress_callback:ce=null,config:Se=null,cache_dir:Ge=null,local_files_only:Fe=!1,revision:et=\"main\"}={}){let mt=Se??await(0,we.getModelJSON)(D,\"preprocessor_config.json\",!0,{progress_callback:ce,config:Se,cache_dir:Ge,local_files_only:Fe,revision:et}),ct=mt.feature_extractor_type??mt.image_processor_type,$t=this.FEATURE_EXTRACTOR_CLASS_MAPPING[ct];if(!$t)if(mt.size!==void 0)console.warn(`Feature extractor type \"${ct}\" not found, assuming ImageFeatureExtractor due to size parameter in config.`),$t=F;else throw new Error(`Unknown Feature Extractor type: ${ct}`);let _t=this.PROCESSOR_CLASS_MAPPING[mt.processor_class]??k,Re=new $t(mt);return new _t(Re)}}Te(bt,\"FEATURE_EXTRACTOR_CLASS_MAPPING\",{ImageFeatureExtractor:F,WhisperFeatureExtractor:We,ViTFeatureExtractor:Pe,MobileViTFeatureExtractor:Ce,MobileViTImageProcessor:Z,MobileNetV1FeatureExtractor:pt,MobileNetV2FeatureExtractor:ye,MobileNetV3FeatureExtractor:W,MobileNetV4FeatureExtractor:he,OwlViTFeatureExtractor:Xe,Owlv2ImageProcessor:ht,CLIPFeatureExtractor:R,CLIPImageProcessor:A,Florence2Processor:Tt,ChineseCLIPFeatureExtractor:_e,SiglipImageProcessor:Me,ConvNextFeatureExtractor:ke,ConvNextImageProcessor:Oe,SegformerFeatureExtractor:re,SapiensFeatureExtractor:J,BitImageProcessor:j,DPTImageProcessor:ae,DPTFeatureExtractor:le,GLPNFeatureExtractor:O,BeitFeatureExtractor:Ne,DeiTFeatureExtractor:dt,DetrFeatureExtractor:Be,RTDetrImageProcessor:it,YolosFeatureExtractor:te,DonutFeatureExtractor:at,NougatImageProcessor:Et,EfficientNetImageProcessor:Ye,ViTImageProcessor:st,VitMatteImageProcessor:He,SamImageProcessor:Ee,Swin2SRImageProcessor:Ue,Wav2Vec2FeatureExtractor:Qe,SeamlessM4TFeatureExtractor:ut,SpeechT5FeatureExtractor:G,ASTFeatureExtractor:gt,ClapFeatureExtractor:vt,PyAnnoteFeatureExtractor:Ct,WeSpeakerFeatureExtractor:M}),Te(bt,\"PROCESSOR_CLASS_MAPPING\",{WhisperProcessor:ge,Wav2Vec2ProcessorWithLM:Ze,PyAnnoteProcessor:tt,SamProcessor:Q,SpeechT5Processor:zt,OwlViTProcessor:yt,Florence2Processor:Tt})},\"./src/tokenizers.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{AlbertTokenizer:()=>Lt,AutoTokenizer:()=>bn,BartTokenizer:()=>Vr,BertTokenizer:()=>Nt,BlenderbotSmallTokenizer:()=>Es,BlenderbotTokenizer:()=>cs,BloomTokenizer:()=>Or,CLIPTokenizer:()=>Qt,CamembertTokenizer:()=>wt,CodeGenTokenizer:()=>ds,CodeLlamaTokenizer:()=>qs,CohereTokenizer:()=>jr,ConvBertTokenizer:()=>sr,DebertaTokenizer:()=>Wt,DebertaV2Tokenizer:()=>Xt,DistilBertTokenizer:()=>Je,ElectraTokenizer:()=>Kr,EsmTokenizer:()=>Qn,FalconTokenizer:()=>Ts,GPT2Tokenizer:()=>Rn,GPTNeoXTokenizer:()=>Ss,GemmaTokenizer:()=>ls,Grok1Tokenizer:()=>On,HerbertTokenizer:()=>cr,LlamaTokenizer:()=>Nn,M2M100Tokenizer:()=>es,MBart50Tokenizer:()=>Ur,MBartTokenizer:()=>sn,MPNetTokenizer:()=>xs,MarianTokenizer:()=>ks,MobileBertTokenizer:()=>Ht,NllbTokenizer:()=>jn,NougatTokenizer:()=>ps,PreTrainedTokenizer:()=>Re,Qwen2Tokenizer:()=>Hs,RoFormerTokenizer:()=>yr,RobertaTokenizer:()=>Fn,SiglipTokenizer:()=>ts,SpeechT5Tokenizer:()=>$s,SqueezeBertTokenizer:()=>Rt,T5Tokenizer:()=>In,TokenizerModel:()=>ke,VitsTokenizer:()=>Ps,Wav2Vec2CTCTokenizer:()=>Cs,WhisperTokenizer:()=>us,XLMRobertaTokenizer:()=>vs,XLMTokenizer:()=>Dt,is_chinese_char:()=>ae});var E=I(\"./src/utils/generic.js\"),ie=I(\"./src/utils/core.js\"),we=I(\"./src/utils/hub.js\"),ve=I(\"./src/utils/maths.js\"),xe=I(\"./src/utils/tensor.js\"),N=I(\"./src/utils/data-structures.js\"),T=I(\"./node_modules/@huggingface/jinja/dist/index.js\"),V=I(\"./src/models/whisper/common_whisper.js\"),P=I(\"./src/utils/constants.js\");async function K(be,m){const z=await Promise.all([(0,we.getModelJSON)(be,\"tokenizer.json\",!0,m),(0,we.getModelJSON)(be,\"tokenizer_config.json\",!0,m)]);return m.legacy!==null&&(z[1].legacy=m.legacy),z}function ee(be,m){const z=[];let Y=0;for(const ue of be.matchAll(m)){const pe=ue[0];Y<ue.index&&z.push(be.slice(Y,ue.index)),pe.length>0&&z.push(pe),Y=ue.index+pe.length}return Y<be.length&&z.push(be.slice(Y)),z}function ne(be,m=!0){if(be.Regex!==void 0){let z=be.Regex.replace(/\\\\([#&~])/g,\"$1\");for(const[Y,ue]of _e)z=z.replaceAll(Y,ue);return new RegExp(z,\"gu\")}else if(be.String!==void 0){const z=(0,ie.escapeRegExp)(be.String);return new RegExp(m?z:`(${z})`,\"gu\")}else return console.warn(\"Unknown pattern type:\",be),null}function me(be){return new Map(Object.entries(be))}function F(be){const m=be.dims;switch(m.length){case 1:return be.tolist();case 2:if(m[0]!==1)throw new Error(\"Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.\");return be.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${m.length}.`)}}function J(be){return be.replace(/ \\./g,\".\").replace(/ \\?/g,\"?\").replace(/ \\!/g,\"!\").replace(/ ,/g,\",\").replace(/ \\' /g,\"'\").replace(/ n\\'t/g,\"n't\").replace(/ \\'m/g,\"'m\").replace(/ \\'s/g,\"'s\").replace(/ \\'ve/g,\"'ve\").replace(/ \\'re/g,\"'re\")}function re(be){return be.replace(/[\\u0300-\\u036f]/g,\"\")}function le(be){return re(be.toLowerCase())}function ae(be){return be>=19968&&be<=40959||be>=13312&&be<=19903||be>=131072&&be<=173791||be>=173824&&be<=177983||be>=177984&&be<=178207||be>=178208&&be<=183983||be>=63744&&be<=64255||be>=194560&&be<=195103}function j(be,m,z){const Y=[];let ue=0;for(;ue<be.length;){if(Y.push(be[ue]),(z.get(be[ue])??m)!==m){++ue;continue}for(;ue<be.length&&(z.get(be[ue])??m)===m;)++ue}return Y}function O(be){return be.match(/\\S+/g)||[]}const R=\"\\\\p{P}\\\\u0021-\\\\u002F\\\\u003A-\\\\u0040\\\\u005B-\\\\u0060\\\\u007B-\\\\u007E\",A=new RegExp(`^[${R}]+$`,\"gu\"),_e=new Map([[\"(?i:'s|'t|'re|'ve|'m|'ll|'d)\",\"(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))\"]]);class Me{constructor(m){this.content=m.content,this.id=m.id,this.single_word=m.single_word??!1,this.lstrip=m.lstrip??!1,this.rstrip=m.rstrip??!1,this.special=m.special??!1,this.normalized=m.normalized??null}}class ke extends E.Callable{constructor(m){super(),this.config=m,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(m,...z){switch(m.type){case\"WordPiece\":return new Oe(m);case\"Unigram\":return new Pe(m,...z);case\"BPE\":return new pt(m);default:if(m.vocab)return new ye(m,...z);throw new Error(`Unknown TokenizerModel type: ${m.type}`)}}_call(m){let z=this.encode(m);return this.fuse_unk&&(z=j(z,this.unk_token_id,this.tokens_to_ids)),z}encode(m){throw Error(\"encode should be implemented in subclass.\")}convert_tokens_to_ids(m){return m.map(z=>this.tokens_to_ids.get(z)??this.unk_token_id)}convert_ids_to_tokens(m){return m.map(z=>this.vocab[z]??this.unk_token)}}class Oe extends ke{constructor(m){super(m),this.tokens_to_ids=me(m.vocab),this.unk_token_id=this.tokens_to_ids.get(m.unk_token),this.unk_token=m.unk_token,this.max_input_chars_per_word=m.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[z,Y]of this.tokens_to_ids)this.vocab[Y]=z}encode(m){const z=[];for(const Y of m){const ue=[...Y];if(ue.length>this.max_input_chars_per_word){z.push(this.unk_token);continue}let pe=!1,ze=0;const Mt=[];for(;ze<ue.length;){let St=ue.length,xt=null;for(;ze<St;){let Ft=ue.slice(ze,St).join(\"\");if(ze>0&&(Ft=this.config.continuing_subword_prefix+Ft),this.tokens_to_ids.has(Ft)){xt=Ft;break}--St}if(xt===null){pe=!0;break}Mt.push(xt),ze=St}pe?z.push(this.unk_token):z.push(...Mt)}return z}}class Pe extends ke{constructor(m,z){super(m);const Y=m.vocab.length;this.vocab=new Array(Y),this.scores=new Array(Y);for(let ue=0;ue<Y;++ue){const pe=m.vocab[ue];this.vocab[ue]=pe[0],this.scores[ue]=pe[1]}this.unk_token_id=m.unk_id,this.unk_token=this.vocab[m.unk_id],this.tokens_to_ids=new Map(this.vocab.map((ue,pe)=>[ue,pe])),this.bosToken=\" \",this.bosTokenId=this.tokens_to_ids.get(this.bosToken),this.eosToken=z.eos_token,this.eosTokenId=this.tokens_to_ids.get(this.eosToken),this.unkToken=this.vocab[this.unk_token_id],this.minScore=(0,ve.min)(this.scores)[0],this.unkScore=this.minScore-10,this.scores[this.unk_token_id]=this.unkScore,this.trie=new N.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(m){const z=m.sentence,Y=z.length;let ue=0;for(;ue<Y;){let ze=!1;for(let Mt of this.trie.commonPrefixSearch(z.slice(ue))){const St=this.tokens_to_ids.get(Mt),xt=this.scores[St],Ft=Mt.length;m.insert(ue,Ft,xt,St),!ze&&Ft===1&&(ze=!0)}ze||m.insert(ue,1,this.unkScore,this.unk_token_id),ue+=1}}tokenize(m){const z=new N.TokenLattice(m,this.bosTokenId,this.eosTokenId);return this.populateNodes(z),z.tokens()}encode(m){const z=[];for(const Y of m){const ue=this.tokenize(Y);z.push(...ue)}return z}}const st=(()=>{const be=[...Array.from({length:94},(ue,pe)=>pe+33),...Array.from({length:12},(ue,pe)=>pe+161),...Array.from({length:82},(ue,pe)=>pe+174)],m=be.slice();let z=0;for(let ue=0;ue<256;++ue)be.includes(ue)||(be.push(ue),m.push(256+z),z+=1);const Y=m.map(ue=>String.fromCharCode(ue));return Object.fromEntries(be.map((ue,pe)=>[ue,Y[pe]]))})(),Ye=(0,ie.reverseDictionary)(st);class pt extends ke{constructor(m){super(m),this.BPE_SPLIT_TOKEN=\" \",this.tokens_to_ids=me(m.vocab),this.unk_token_id=this.tokens_to_ids.get(m.unk_token),this.unk_token=m.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[z,Y]of this.tokens_to_ids)this.vocab[Y]=z;this.bpe_ranks=new Map(m.merges.map((z,Y)=>[z,Y])),this.merges=m.merges.map(z=>z.split(this.BPE_SPLIT_TOKEN)),this.end_of_word_suffix=m.end_of_word_suffix,this.continuing_subword_suffix=m.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(m){if(m.length===0)return[];const z=this.cache.get(m);if(z!==void 0)return z;const Y=Array.from(m);this.end_of_word_suffix&&(Y[Y.length-1]+=this.end_of_word_suffix);let ue=[];if(Y.length>1){const pe=new N.PriorityQueue((St,xt)=>St.score<xt.score);let ze={token:Y[0],bias:0,prev:null,next:null},Mt=ze;for(let St=1;St<Y.length;++St){const xt={bias:St/Y.length,token:Y[St],prev:Mt,next:null};Mt.next=xt,this._add_node(pe,Mt),Mt=xt}for(;!pe.isEmpty();){const St=pe.pop();if(St.deleted||!St.next||St.next.deleted)continue;if(St.deleted=!0,St.next.deleted=!0,St.prev){const Ft={...St.prev};St.prev.deleted=!0,St.prev=Ft,Ft.prev?Ft.prev.next=Ft:ze=Ft}const xt={token:St.token+St.next.token,bias:St.bias,prev:St.prev,next:St.next.next};xt.prev?(xt.prev.next=xt,this._add_node(pe,xt.prev)):ze=xt,xt.next&&(xt.next.prev=xt,this._add_node(pe,xt))}for(let St=ze;St!==null;St=St.next)ue.push(St.token)}else ue=Y;if(this.continuing_subword_suffix)for(let pe=0;pe<ue.length-1;++pe)ue[pe]+=this.continuing_subword_suffix;return this.cache.set(m,ue),ue}_add_node(m,z){const Y=this.bpe_ranks.get(z.token+this.BPE_SPLIT_TOKEN+z.next.token);Y!==void 0&&(z.score=Y+z.bias,m.push(z))}encode(m){const z=[];for(const Y of m){if(this.ignore_merges&&this.tokens_to_ids.has(Y)){z.push(Y);continue}const ue=this.bpe(Y);for(const pe of ue)this.tokens_to_ids.has(pe)?z.push(pe):this.byte_fallback?z.push(...Array.from(this.text_encoder.encode(pe)).map(ze=>`<0x${ze.toString(16).toUpperCase().padStart(2,\"0\")}>`)):z.push(this.unk_token)}return z}}class ye extends ke{constructor(m,z){super(m),this.tokens_to_ids=me(z.target_lang?m.vocab[z.target_lang]:m.vocab),this.bos_token=z.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=z.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=z.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=z.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[Y,ue]of this.tokens_to_ids)this.vocab[ue]=Y}encode(m){return m}}class W extends E.Callable{constructor(m){super(),this.config=m}static fromConfig(m){if(m===null)return null;switch(m.type){case\"BertNormalizer\":return new Et(m);case\"Precompiled\":return new Se(m);case\"Sequence\":return new at(m);case\"Replace\":return new he(m);case\"NFC\":return new Ce(m);case\"NFKC\":return new Z(m);case\"NFKD\":return new Xe(m);case\"Strip\":return new ht(m);case\"StripAccents\":return new it(m);case\"Lowercase\":return new dt(m);case\"Prepend\":return new Ne(m);default:throw new Error(`Unknown Normalizer type: ${m.type}`)}}normalize(m){throw Error(\"normalize should be implemented in subclass.\")}_call(m){return this.normalize(m)}}class he extends W{normalize(m){const z=ne(this.config.pattern);return z===null?m:m.replaceAll(z,this.config.content)}}class Ce extends W{normalize(m){return m=m.normalize(\"NFC\"),m}}class Z extends W{normalize(m){return m=m.normalize(\"NFKC\"),m}}class Xe extends W{normalize(m){return m=m.normalize(\"NFKD\"),m}}class ht extends W{normalize(m){return this.config.strip_left&&this.config.strip_right?m=m.trim():(this.config.strip_left&&(m=m.trimStart()),this.config.strip_right&&(m=m.trimEnd())),m}}class it extends W{normalize(m){return m=re(m),m}}class dt extends W{normalize(m){return m=m.toLowerCase(),m}}class Ne extends W{normalize(m){return m=this.config.prepend+m,m}}class at extends W{constructor(m){super(m),this.normalizers=m.normalizers.map(z=>W.fromConfig(z))}normalize(m){return this.normalizers.reduce((z,Y)=>Y.normalize(z),m)}}class Et extends W{_tokenize_chinese_chars(m){const z=[];for(let Y=0;Y<m.length;++Y){const ue=m[Y],pe=ue.charCodeAt(0);ae(pe)?(z.push(\" \"),z.push(ue),z.push(\" \")):z.push(ue)}return z.join(\"\")}stripAccents(m){return m.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")}_is_control(m){switch(m){case\"\t\":case`\n`:case\"\\r\":return!1;default:return new RegExp(\"^\\\\p{Cc}|\\\\p{Cf}|\\\\p{Co}|\\\\p{Cs}$\",\"u\").test(m)}}_clean_text(m){const z=[];for(const Y of m){const ue=Y.charCodeAt(0);ue===0||ue===65533||this._is_control(Y)||(/^\\s$/.test(Y)?z.push(\" \"):z.push(Y))}return z.join(\"\")}normalize(m){return this.config.clean_text&&(m=this._clean_text(m)),this.config.handle_chinese_chars&&(m=this._tokenize_chinese_chars(m)),this.config.lowercase?(m=m.toLowerCase(),this.config.strip_accents!==!1&&(m=this.stripAccents(m))):this.config.strip_accents&&(m=this.stripAccents(m)),m}}class Be extends E.Callable{static fromConfig(m){if(m===null)return null;switch(m.type){case\"BertPreTokenizer\":return new te(m);case\"Sequence\":return new Ge(m);case\"Whitespace\":return new Fe(m);case\"WhitespaceSplit\":return new et(m);case\"Metaspace\":return new D(m);case\"ByteLevel\":return new Ee(m);case\"Split\":return new Ue(m);case\"Punctuation\":return new He(m);case\"Digits\":return new We(m);case\"Replace\":return new mt(m);default:throw new Error(`Unknown PreTokenizer type: ${m.type}`)}}pre_tokenize_text(m,z){throw Error(\"pre_tokenize_text should be implemented in subclass.\")}pre_tokenize(m,z){return(Array.isArray(m)?m.map(Y=>this.pre_tokenize_text(Y,z)):this.pre_tokenize_text(m,z)).flat()}_call(m,z){return this.pre_tokenize(m,z)}}class te extends Be{constructor(m){super(),this.pattern=new RegExp(`[^\\\\s${R}]+|[${R}]`,\"gu\")}pre_tokenize_text(m,z){return m.trim().match(this.pattern)||[]}}class Ee extends Be{constructor(m){super(),this.config=m,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp(\"'s|'t|'re|'ve|'m|'ll|'d| ?\\\\p{L}+| ?\\\\p{N}+| ?[^\\\\s\\\\p{L}\\\\p{N}]+|\\\\s+(?!\\\\S)|\\\\s+\",\"gu\"),this.byte_encoder=st,this.text_encoder=new TextEncoder}pre_tokenize_text(m,z){return this.add_prefix_space&&!m.startsWith(\" \")&&(m=\" \"+m),(this.use_regex?m.match(this.pattern)||[]:[m]).map(ue=>Array.from(this.text_encoder.encode(ue),pe=>this.byte_encoder[pe]).join(\"\"))}}class Ue extends Be{constructor(m){super(),this.config=m,this.pattern=ne(this.config.pattern,this.config.invert)}pre_tokenize_text(m,z){return this.pattern===null?[]:this.config.invert?m.match(this.pattern)||[]:ee(m,this.pattern)}}class He extends Be{constructor(m){super(),this.config=m,this.pattern=new RegExp(`[^${R}]+|[${R}]+`,\"gu\")}pre_tokenize_text(m,z){return m.match(this.pattern)||[]}}class We extends Be{constructor(m){super(),this.config=m;const z=`[^\\\\d]+|\\\\d${this.config.individual_digits?\"\":\"+\"}`;this.pattern=new RegExp(z,\"gu\")}pre_tokenize_text(m,z){return m.match(this.pattern)||[]}}class Qe extends E.Callable{constructor(m){super(),this.config=m}static fromConfig(m){if(m===null)return null;switch(m.type){case\"TemplateProcessing\":return new vt(m);case\"ByteLevel\":return new Ct(m);case\"RobertaProcessing\":return new gt(m);case\"BertProcessing\":return new ut(m);case\"Sequence\":return new M(m);default:throw new Error(`Unknown PostProcessor type: ${m.type}`)}}post_process(m,...z){throw Error(\"post_process should be implemented in subclass.\")}_call(m,...z){return this.post_process(m,...z)}}class ut extends Qe{constructor(m){super(m),this.cls=m.cls[0],this.sep=m.sep[0]}post_process(m,z=null,{add_special_tokens:Y=!0}={}){Y&&(m=(0,ie.mergeArrays)([this.cls],m,[this.sep]));let ue=new Array(m.length).fill(0);if(z!==null){const pe=Y&&this instanceof gt?[this.sep]:[],ze=Y?[this.sep]:[];m=(0,ie.mergeArrays)(m,pe,z,ze),ue=(0,ie.mergeArrays)(ue,new Array(z.length+pe.length+ze.length).fill(1))}return{tokens:m,token_type_ids:ue}}}class gt extends ut{}class vt extends Qe{constructor(m){super(m),this.single=m.single,this.pair=m.pair}post_process(m,z=null,{add_special_tokens:Y=!0}={}){const ue=z===null?this.single:this.pair;let pe=[],ze=[];for(const Mt of ue)\"SpecialToken\"in Mt?Y&&(pe.push(Mt.SpecialToken.id),ze.push(Mt.SpecialToken.type_id)):\"Sequence\"in Mt&&(Mt.Sequence.id===\"A\"?(pe=(0,ie.mergeArrays)(pe,m),ze=(0,ie.mergeArrays)(ze,new Array(m.length).fill(Mt.Sequence.type_id))):Mt.Sequence.id===\"B\"&&(pe=(0,ie.mergeArrays)(pe,z),ze=(0,ie.mergeArrays)(ze,new Array(z.length).fill(Mt.Sequence.type_id))));return{tokens:pe,token_type_ids:ze}}}class Ct extends Qe{post_process(m,z=null){return z&&(m=(0,ie.mergeArrays)(m,z)),{tokens:m}}}class M extends Qe{constructor(m){super(m),this.processors=m.processors.map(z=>Qe.fromConfig(z))}post_process(m,z=null,Y={}){let ue;for(const pe of this.processors)if(pe instanceof Ct)m=pe.post_process(m).tokens,z&&(z=pe.post_process(z).tokens);else{const ze=pe.post_process(m,z,Y);m=ze.tokens,ue=ze.token_type_ids}return{tokens:m,token_type_ids:ue}}}class G extends E.Callable{constructor(m){super(),this.config=m,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=m.trim_offsets}static fromConfig(m){if(m===null)return null;switch(m.type){case\"WordPiece\":return new tt(m);case\"Metaspace\":return new ce(m);case\"ByteLevel\":return new zt(m);case\"Replace\":return new k(m);case\"ByteFallback\":return new Q(m);case\"Fuse\":return new ge(m);case\"Strip\":return new Ze(m);case\"Sequence\":return new Tt(m);case\"CTC\":return new yt(m);case\"BPEDecoder\":return new bt(m);default:throw new Error(`Unknown Decoder type: ${m.type}`)}}_call(m){return this.decode(m)}decode(m){return this.decode_chain(m).join(\"\")}decode_chain(m){throw Error(\"`decode_chain` should be implemented in subclass.\")}}class k extends G{decode_chain(m){const z=ne(this.config.pattern);return z===null?m:m.map(Y=>Y.replaceAll(z,this.config.content))}}class Q extends G{constructor(m){super(m),this.text_decoder=new TextDecoder}decode_chain(m){const z=[];let Y=[];for(const ue of m){let pe=null;if(ue.length===6&&ue.startsWith(\"<0x\")&&ue.endsWith(\">\")){const ze=parseInt(ue.slice(3,5),16);isNaN(ze)||(pe=ze)}if(pe!==null)Y.push(pe);else{if(Y.length>0){const ze=this.text_decoder.decode(Uint8Array.from(Y));z.push(ze),Y=[]}z.push(ue)}}if(Y.length>0){const ue=this.text_decoder.decode(Uint8Array.from(Y));z.push(ue),Y=[]}return z}}class ge extends G{decode_chain(m){return[m.join(\"\")]}}class Ze extends G{constructor(m){super(m),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(m){return m.map(z=>{let Y=0;for(let pe=0;pe<this.start&&z[pe]===this.content;++pe){Y=pe+1;continue}let ue=z.length;for(let pe=0;pe<this.stop;++pe){const ze=z.length-pe-1;if(z[ze]===this.content){ue=ze;continue}else break}return z.slice(Y,ue)})}}class tt extends G{constructor(m){super(m),this.cleanup=m.cleanup}decode_chain(m){return m.map((z,Y)=>(Y!==0&&(z.startsWith(this.config.prefix)?z=z.replace(this.config.prefix,\"\"):z=\" \"+z),this.cleanup&&(z=J(z)),z))}}class zt extends G{constructor(m){super(m),this.byte_decoder=Ye,this.text_decoder=new TextDecoder(\"utf-8\",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(m){const z=m.join(\"\"),Y=new Uint8Array([...z].map(pe=>this.byte_decoder[pe]));return this.text_decoder.decode(Y)}decode_chain(m){const z=[];let Y=[];for(const ue of m)this.added_tokens.find(pe=>pe.content===ue)!==void 0?(Y.length>0&&(z.push(this.convert_tokens_to_string(Y)),Y=[]),z.push(ue)):Y.push(ue);return Y.length>0&&z.push(this.convert_tokens_to_string(Y)),z}}class yt extends G{constructor(m){super(m),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(m){if(m.length===0)return\"\";const z=[m[0]];for(let pe=1;pe<m.length;++pe)m[pe]!==z.at(-1)&&z.push(m[pe]);let ue=z.filter(pe=>pe!==this.pad_token).join(\"\");return this.cleanup&&(ue=J(ue).replaceAll(this.word_delimiter_token,\" \").trim()),ue}decode_chain(m){return[this.convert_tokens_to_string(m)]}}class Tt extends G{constructor(m){super(m),this.decoders=m.decoders.map(z=>G.fromConfig(z))}decode_chain(m){return this.decoders.reduce((z,Y)=>Y.decode_chain(z),m)}}class bt extends G{constructor(m){super(m),this.suffix=this.config.suffix}decode_chain(m){return m.map((z,Y)=>z.replaceAll(this.suffix,Y===m.length-1?\"\":\" \"))}}class Ae extends G{decode_chain(m){let z=\"\";for(let Y=1;Y<m.length;Y+=2)z+=m[Y];return[z]}}class D extends Be{constructor(m){super(),this.addPrefixSpace=m.add_prefix_space,this.replacement=m.replacement,this.strRep=m.str_rep||this.replacement,this.prepend_scheme=m.prepend_scheme??\"always\"}pre_tokenize_text(m,{section_index:z=void 0}={}){let Y=m.replaceAll(\" \",this.strRep);return this.addPrefixSpace&&!Y.startsWith(this.replacement)&&(this.prepend_scheme===\"always\"||this.prepend_scheme===\"first\"&&z===0)&&(Y=this.strRep+Y),[Y]}}class ce extends G{constructor(m){super(m),this.addPrefixSpace=m.add_prefix_space,this.replacement=m.replacement}decode_chain(m){const z=[];for(let Y=0;Y<m.length;++Y){let ue=m[Y].replaceAll(this.replacement,\" \");this.addPrefixSpace&&Y==0&&ue.startsWith(\" \")&&(ue=ue.substring(1)),z.push(ue)}return z}}class Se extends W{constructor(m){super(m),this.charsmap=m.precompiled_charsmap}normalize(m){return m=m.replace(/[\\u0001-\\u0008\\u000B\\u000E-\\u001F\\u007F\\u008F\\u009F]/gm,\"\"),m=m.replace(/[\\u0009\\u000A\\u000C\\u000D\\u1680\\u200B\\u200C\\u200E\\u200F\\u2028\\u2029\\u2581\\uFEFF\\uFFFD]/gm,\" \"),m.includes(\"～\")?m=m.split(\"～\").map(Y=>Y.normalize(\"NFKC\")).join(\"～\"):m=m.normalize(\"NFKC\"),m}}class Ge extends Be{constructor(m){super(),this.tokenizers=m.pretokenizers.map(z=>Be.fromConfig(z))}pre_tokenize_text(m,z){return this.tokenizers.reduce((Y,ue)=>ue.pre_tokenize(Y,z),[m])}}class Fe extends Be{constructor(m){super()}pre_tokenize_text(m,z){return m.match(/\\w+|[^\\w\\s]+/g)||[]}}class et extends Be{constructor(m){super()}pre_tokenize_text(m,z){return O(m)}}class mt extends Be{constructor(m){super(),this.config=m,this.pattern=ne(this.config.pattern),this.content=this.config.content}pre_tokenize_text(m,z){return this.pattern===null?[m]:[m.replaceAll(this.pattern,this.config.content)]}}const ct=[\"bos_token\",\"eos_token\",\"unk_token\",\"sep_token\",\"pad_token\",\"cls_token\",\"mask_token\"];function $t(be,m,z,Y){for(const ue of Object.keys(be)){const pe=m-be[ue].length,ze=z(ue),Mt=new Array(pe).fill(ze);be[ue]=Y===\"right\"?(0,ie.mergeArrays)(be[ue],Mt):(0,ie.mergeArrays)(Mt,be[ue])}}function _t(be,m){for(const z of Object.keys(be))be[z].length=m}class Re extends E.Callable{constructor(z,Y){super();Te(this,\"return_token_type_ids\",!1);Te(this,\"padding_side\",\"right\");this._tokenizer_config=Y,this.normalizer=W.fromConfig(z.normalizer),this.pre_tokenizer=Be.fromConfig(z.pre_tokenizer),this.model=ke.fromConfig(z.model,Y),this.post_processor=Qe.fromConfig(z.post_processor),this.decoder=G.fromConfig(z.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const ue of z.added_tokens){const pe=new Me(ue);this.added_tokens.push(pe),this.model.tokens_to_ids.set(pe.content,pe.id),this.model.vocab[pe.id]=pe.content,pe.special&&(this.special_tokens.push(pe.content),this.all_special_ids.push(pe.id))}if(this.additional_special_tokens=Y.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.toSorted((ue,pe)=>pe.content.length-ue.content.length).map(ue=>`${ue.lstrip?\"\\\\s*\":\"\"}(${(0,ie.escapeRegExp)(ue.content)})${ue.rstrip?\"\\\\s*\":\"\"}`).join(\"|\")):null,this.mask_token=this.getToken(\"mask_token\"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken(\"pad_token\",\"eos_token\"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken(\"sep_token\"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken(\"unk_token\"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=Y.model_max_length,this.remove_space=Y.remove_space,this.clean_up_tokenization_spaces=Y.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=Y.do_lowercase_and_remove_accent??!1,Y.padding_side&&(this.padding_side=Y.padding_side),this.legacy=!1,this.chat_template=Y.chat_template??null,Array.isArray(this.chat_template)){const ue=Object.create(null);for(const{name:pe,template:ze}of this.chat_template){if(typeof pe!=\"string\"||typeof ze!=\"string\")throw new Error('Chat template must be a list of objects with \"name\" and \"template\" properties');ue[pe]=ze}this.chat_template=ue}this._compiled_template_cache=new Map}getToken(...z){for(const Y of z){const ue=this._tokenizer_config[Y];if(ue)if(typeof ue==\"object\"){if(ue.__type===\"AddedToken\")return ue.content;throw Error(`Unknown token: ${ue}`)}else return ue}return null}static async from_pretrained(z,{progress_callback:Y=null,config:ue=null,cache_dir:pe=null,local_files_only:ze=!1,revision:Mt=\"main\",legacy:St=null}={}){const xt=await K(z,{progress_callback:Y,config:ue,cache_dir:pe,local_files_only:ze,revision:Mt,legacy:St});return new this(...xt)}_call(z,{text_pair:Y=null,add_special_tokens:ue=!0,padding:pe=!1,truncation:ze=null,max_length:Mt=null,return_tensor:St=!0,return_token_type_ids:xt=null}={}){const Ft=Array.isArray(z);let rr;if(Ft){if(z.length===0)throw Error(\"text array must be non-empty\");if(Y!==null){if(Array.isArray(Y)){if(z.length!==Y.length)throw Error(\"text and text_pair must have the same length\")}else throw Error(\"text_pair must also be an array\");rr=z.map((ar,Gt)=>this._encode_plus(ar,{text_pair:Y[Gt],add_special_tokens:ue,return_token_type_ids:xt}))}else rr=z.map(ar=>this._encode_plus(ar,{add_special_tokens:ue,return_token_type_ids:xt}))}else{if(z==null)throw Error(\"text may not be null or undefined\");if(Array.isArray(Y))throw Error(\"When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).\");rr=[this._encode_plus(z,{text_pair:Y,add_special_tokens:ue,return_token_type_ids:xt})]}if(Mt===null?pe===\"max_length\"?Mt=this.model_max_length:Mt=(0,ve.max)(rr.map(ar=>ar.input_ids.length))[0]:ze||console.warn(\"Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length.\"),Mt=Math.min(Mt,this.model_max_length??1/0),pe||ze)for(let ar=0;ar<rr.length;++ar)rr[ar].input_ids.length!==Mt&&(rr[ar].input_ids.length>Mt?ze&&_t(rr[ar],Mt):pe&&$t(rr[ar],Mt,Gt=>Gt===\"input_ids\"?this.pad_token_id:0,this.padding_side));const Ar={};if(St){if(!(pe&&ze)&&rr.some(Gt=>{var _r;for(const cn of Object.keys(Gt))if(Gt[cn].length!==((_r=rr[0][cn])==null?void 0:_r.length))return!0;return!1}))throw Error(\"Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.\");const ar=[rr.length,rr[0].input_ids.length];for(const Gt of Object.keys(rr[0]))Ar[Gt]=new xe.Tensor(\"int64\",BigInt64Array.from(rr.flatMap(_r=>_r[Gt]).map(BigInt)),ar)}else{for(const ar of Object.keys(rr[0]))Ar[ar]=rr.map(Gt=>Gt[ar]);if(!Ft)for(const ar of Object.keys(Ar))Ar[ar]=Ar[ar][0]}return Ar}_encode_text(z){return z===null?null:(this.added_tokens_regex?z.split(this.added_tokens_regex).filter(pe=>pe):[z]).map((pe,ze)=>{if(this.added_tokens.find(St=>St.content===pe)!==void 0)return pe;{if(this.remove_space===!0&&(pe=pe.trim().split(/\\s+/).join(\" \")),this.do_lowercase_and_remove_accent&&(pe=le(pe)),this.normalizer!==null&&(pe=this.normalizer(pe)),pe.length===0)return[];const St=this.pre_tokenizer!==null?this.pre_tokenizer(pe,{section_index:ze}):[pe];return this.model(St)}}).flat()}_encode_plus(z,{text_pair:Y=null,add_special_tokens:ue=!0,return_token_type_ids:pe=null}={}){const{tokens:ze,token_type_ids:Mt}=this._tokenize_helper(z,{pair:Y,add_special_tokens:ue}),St=this.model.convert_tokens_to_ids(ze),xt={input_ids:St,attention_mask:new Array(St.length).fill(1)};return(pe??this.return_token_type_ids)&&Mt&&(xt.token_type_ids=Mt),xt}_tokenize_helper(z,{pair:Y=null,add_special_tokens:ue=!1}={}){const pe=this._encode_text(z),ze=this._encode_text(Y);return this.post_processor?this.post_processor(pe,ze,{add_special_tokens:ue}):{tokens:(0,ie.mergeArrays)(pe??[],ze??[])}}tokenize(z,{pair:Y=null,add_special_tokens:ue=!1}={}){return this._tokenize_helper(z,{pair:Y,add_special_tokens:ue}).tokens}encode(z,{text_pair:Y=null,add_special_tokens:ue=!0,return_token_type_ids:pe=null}={}){return this._encode_plus(z,{text_pair:Y,add_special_tokens:ue,return_token_type_ids:pe}).input_ids}batch_decode(z,Y={}){return z instanceof xe.Tensor&&(z=z.tolist()),z.map(ue=>this.decode(ue,Y))}decode(z,Y={}){if(z instanceof xe.Tensor&&(z=F(z)),!Array.isArray(z)||z.length===0||!(0,ie.isIntegralNumber)(z[0]))throw Error(\"token_ids must be a non-empty array of integers.\");return this.decode_single(z,Y)}decode_single(z,{skip_special_tokens:Y=!1,clean_up_tokenization_spaces:ue=null}){let pe=this.model.convert_ids_to_tokens(z);Y&&(pe=pe.filter(Mt=>!this.special_tokens.includes(Mt)));let ze=this.decoder?this.decoder(pe):pe.join(\" \");return this.decoder&&this.decoder.end_of_word_suffix&&(ze=ze.replaceAll(this.decoder.end_of_word_suffix,\" \"),Y&&(ze=ze.trim())),(ue??this.clean_up_tokenization_spaces)&&(ze=J(ze)),ze}apply_chat_template(z,{tools:Y=null,documents:ue=null,chat_template:pe=null,add_generation_prompt:ze=!1,tokenize:Mt=!0,padding:St=!1,truncation:xt=!1,max_length:Ft=null,return_tensor:rr=!0,return_dict:Ar=!1,tokenizer_kwargs:ar={},...Gt}={}){if(this.chat_template&&typeof this.chat_template==\"object\"||this.chat_template===null){const $e=this.chat_template;if(pe!==null&&Object.hasOwn($e,pe))pe=$e[pe];else if(pe===null&&\"default\"in $e)pe=$e.default;else if(pe===null)throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys($e).sort()}.`)}else if(this.chat_template)pe=this.chat_template;else throw Error(\"Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating\");if(typeof pe!=\"string\")throw Error(`chat_template must be a string, but got ${typeof pe}`);let _r=this._compiled_template_cache.get(pe);_r===void 0&&(_r=new T.Template(pe),this._compiled_template_cache.set(pe,_r));const cn=Object.create(null);for(const $e of ct){const xn=this.getToken($e);xn&&(cn[$e]=xn)}const tn=_r.render({messages:z,add_generation_prompt:ze,tools:Y,documents:ue,...cn,...Gt});if(Mt){const $e=this._call(tn,{add_special_tokens:!1,padding:St,truncation:xt,max_length:Ft,return_tensor:rr,...ar});return Ar?$e:$e.input_ids}return tn}}class Nt extends Re{constructor(){super(...arguments);Te(this,\"return_token_type_ids\",!0)}}class Lt extends Re{constructor(){super(...arguments);Te(this,\"return_token_type_ids\",!0)}}class Ht extends Re{constructor(){super(...arguments);Te(this,\"return_token_type_ids\",!0)}}class Rt extends Re{constructor(){super(...arguments);Te(this,\"return_token_type_ids\",!0)}}class Wt extends Re{constructor(){super(...arguments);Te(this,\"return_token_type_ids\",!0)}}class Xt extends Re{constructor(){super(...arguments);Te(this,\"return_token_type_ids\",!0)}}class cr extends Re{constructor(){super(...arguments);Te(this,\"return_token_type_ids\",!0)}}class sr extends Re{constructor(){super(...arguments);Te(this,\"return_token_type_ids\",!0)}}class yr extends Re{constructor(){super(...arguments);Te(this,\"return_token_type_ids\",!0)}}class Je extends Re{}class wt extends Re{}class Dt extends Re{constructor(z,Y){super(z,Y);Te(this,\"return_token_type_ids\",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\\'s \"fast\" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Kr extends Re{constructor(){super(...arguments);Te(this,\"return_token_type_ids\",!0)}}class In extends Re{}class Rn extends Re{}class Vr extends Re{}class sn extends Re{constructor(m,z){super(m,z),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(Y=>this.languageRegex.test(Y)),this.lang_to_token=Y=>Y}_build_translation_inputs(m,z,Y){return Yn(this,m,z,Y)}}class Ur extends sn{}class Fn extends Re{}class Or extends Re{constructor(m,z){var pe,ze;const Y=\".,!?…。，、।۔،\",ue=(ze=(pe=m.pre_tokenizer)==null?void 0:pe.pretokenizers[0])==null?void 0:ze.pattern;ue&&ue.Regex===` ?[^(\\\\s|[${Y}])]+`&&(ue.Regex=` ?[^\\\\s${Y}]+`),super(m,z)}}const Xn=\"▁\";class Nn extends Re{constructor(z,Y){super(z,Y);Te(this,\"padding_side\",\"left\");this.legacy=Y.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new D({replacement:Xn,add_prefix_space:!0,prepend_scheme:\"first\"}))}_encode_text(z){if(z===null)return null;if(this.legacy||z.length===0)return super._encode_text(z);let Y=super._encode_text(Xn+z.replaceAll(Xn,\" \"));return Y.length>1&&Y[0]===Xn&&this.special_tokens.includes(Y[1])&&(Y=Y.slice(1)),Y}}class qs extends Re{}class vs extends Re{}class xs extends Re{}class Ts extends Re{}class Ss extends Re{}class Qn extends Re{}class Hs extends Re{}class ls extends Re{}class On extends Re{}function Yn(be,m,z,Y){if(!(\"language_codes\"in be)||!Array.isArray(be.language_codes))throw new Error(\"Tokenizer must have `language_codes` attribute set and it should be an array of language ids.\");if(!(\"languageRegex\"in be)||!(be.languageRegex instanceof RegExp))throw new Error(\"Tokenizer must have `languageRegex` attribute set and it should be a regular expression.\");if(!(\"lang_to_token\"in be)||typeof be.lang_to_token!=\"function\")throw new Error(\"Tokenizer must have `lang_to_token` attribute set and it should be a function.\");const ue=Y.src_lang,pe=Y.tgt_lang;if(!be.language_codes.includes(pe))throw new Error(`Target language code \"${pe}\" is not valid. Must be one of: {${be.language_codes.join(\", \")}}`);if(ue!==void 0){if(!be.language_codes.includes(ue))throw new Error(`Source language code \"${ue}\" is not valid. Must be one of: {${be.language_codes.join(\", \")}}`);for(const ze of be.post_processor.config.single)if(\"SpecialToken\"in ze&&be.languageRegex.test(ze.SpecialToken.id)){ze.SpecialToken.id=be.lang_to_token(ue);break}}return Y.forced_bos_token_id=be.model.convert_tokens_to_ids([be.lang_to_token(pe)])[0],be._call(m,z)}class jn extends Re{constructor(m,z){super(m,z),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(Y=>this.languageRegex.test(Y)),this.lang_to_token=Y=>Y}_build_translation_inputs(m,z,Y){return Yn(this,m,z,Y)}}class es extends Re{constructor(m,z){super(m,z),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(Y=>this.languageRegex.test(Y)).map(Y=>Y.slice(2,-2)),this.lang_to_token=Y=>`__${Y}__`}_build_translation_inputs(m,z,Y){return Yn(this,m,z,Y)}}class us extends Re{get timestamp_begin(){return this.model.convert_tokens_to_ids([\"<|notimestamps|>\"])[0]+1}_decode_asr(m,{return_timestamps:z=!1,return_language:Y=!1,time_precision:ue=null,force_full_sequences:pe=!0}={}){if(ue===null)throw Error(\"Must specify time_precision\");let ze=null;const Mt=z===\"word\";function St(){return{language:ze,timestamp:[null,null],text:\"\"}}const xt=[];let Ft=St(),rr=0;const Ar=this.timestamp_begin;let ar=[],Gt=[],_r=!1,cn=null;const tn=new Set(this.all_special_ids);for(const Sr of m){const Yr=Sr.tokens,mn=Mt?Sr.token_timestamps:null;let Yt=null,Mn=Ar;if(\"stride\"in Sr){const[kr,It,Cr]=Sr.stride;if(rr-=It,cn=kr-Cr,It&&(Mn=It/ue+Ar),Cr)for(let zr=Yr.length-1;zr>=0;--zr){const Wr=Number(Yr[zr]);if(Wr>=Ar){if(Yt!==null&&(Wr-Ar)*ue<cn)break;Yt=Wr}}}let an=[],$r=[];for(let kr=0;kr<Yr.length;++kr){const It=Number(Yr[kr]);if(tn.has(It)){const Cr=this.decode([It]),zr=V.WHISPER_LANGUAGE_MAPPING.get(Cr.slice(2,-2));if(zr!==void 0){if(ze!==null&&zr!==ze&&!z){ar.push(an);const Wr=this.findLongestCommonSequence(ar)[0],vn=this.decode(Wr);Ft.text=vn,xt.push(Ft),ar=[],an=[],Ft=St()}ze=Ft.language=zr}}else if(It>=Ar){const Cr=(It-Ar)*ue+rr,zr=(0,ve.round)(Cr,2);if(Yt!==null&&It>=Yt)_r=!0;else if(_r||ar.length>0&&It<Mn)_r=!1;else if(Ft.timestamp[0]===null)Ft.timestamp[0]=zr;else if(zr!==Ft.timestamp[0]){Ft.timestamp[1]=zr,ar.push(an),Mt&&Gt.push($r);const[Wr,vn]=this.findLongestCommonSequence(ar,Gt),jt=this.decode(Wr);Ft.text=jt,Mt&&(Ft.words=this.collateWordTimestamps(Wr,vn,ze)),xt.push(Ft),ar=[],an=[],Gt=[],$r=[],Ft=St()}}else if(an.push(It),Mt){let Cr=(0,ve.round)(mn[kr]+rr,2),zr;if(kr+1<mn.length){zr=(0,ve.round)(mn[kr+1]+rr,2);const Wr=this.decode([It]);A.test(Wr)&&(zr=(0,ve.round)(Math.min(Cr+ue,zr),2))}else zr=null;$r.push([Cr,zr])}}if(\"stride\"in Sr){const[kr,It,Cr]=Sr.stride;rr+=kr-Cr}an.length>0?(ar.push(an),Mt&&Gt.push($r)):ar.every(kr=>kr.length===0)&&(Ft=St(),ar=[],an=[],Gt=[],$r=[])}if(ar.length>0){if(pe&&z)throw new Error(\"Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.\");const[Sr,Yr]=this.findLongestCommonSequence(ar,Gt),mn=this.decode(Sr);Ft.text=mn,Mt&&(Ft.words=this.collateWordTimestamps(Sr,Yr,ze)),xt.push(Ft)}let $e=Object.create(null);const xn=xt.map(Sr=>Sr.text).join(\"\");if(z||Y){for(let Sr=0;Sr<xt.length;++Sr){const Yr=xt[Sr];z||delete Yr.timestamp,Y||delete Yr.language}if(Mt){const Sr=[];for(const Yr of xt)for(const mn of Yr.words)Sr.push(mn);$e={chunks:Sr}}else $e={chunks:xt}}return[xn,$e]}findLongestCommonSequence(m,z=null){let Y=m[0],ue=Y.length,pe=[];const ze=Array.isArray(z)&&z.length>0;let Mt=ze?[]:null,St=ze?z[0]:null;for(let xt=1;xt<m.length;++xt){const Ft=m[xt];let rr=0,Ar=[ue,ue,0,0];const ar=Ft.length;for(let Sr=1;Sr<ue+ar;++Sr){const Yr=Math.max(0,ue-Sr),mn=Math.min(ue,ue+ar-Sr),Yt=Y.slice(Yr,mn),Mn=Math.max(0,Sr-ue),an=Math.min(ar,Sr),$r=Ft.slice(Mn,an);if(Yt.length!==$r.length)throw new Error(\"There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.\");let kr;ze?kr=Yt.filter((zr,Wr)=>zr===$r[Wr]&&St[Yr+Wr]<=z[xt][Mn+Wr]).length:kr=Yt.filter((zr,Wr)=>zr===$r[Wr]).length;const It=Sr/1e4,Cr=kr/Sr+It;kr>1&&Cr>rr&&(rr=Cr,Ar=[Yr,mn,Mn,an])}const[Gt,_r,cn,tn]=Ar,$e=Math.floor((_r+Gt)/2),xn=Math.floor((tn+cn)/2);pe.push(...Y.slice(0,$e)),Y=Ft.slice(xn),ue=Y.length,ze&&(Mt.push(...St.slice(0,$e)),St=z[xt].slice(xn))}return pe.push(...Y),ze?(Mt.push(...St),[pe,Mt]):[pe,[]]}collateWordTimestamps(m,z,Y){const[ue,pe,ze]=this.combineTokensIntoWords(m,Y),Mt=[];for(let St=0;St<ue.length;++St){const xt=ze[St];Mt.push({text:ue[St],timestamp:[z[xt.at(0)][0],z[xt.at(-1)][1]]})}return Mt}combineTokensIntoWords(m,z,Y=`\"'“¡¿([{-`,ue=`\"'.。,，!！?？:：”)]}、`){z=z??\"english\";let pe,ze,Mt;return[\"chinese\",\"japanese\",\"thai\",\"lao\",\"myanmar\"].includes(z)?[pe,ze,Mt]=this.splitTokensOnUnicode(m):[pe,ze,Mt]=this.splitTokensOnSpaces(m),this.mergePunctuations(pe,ze,Mt,Y,ue)}decode(m,z){let Y;return z!=null&&z.decode_with_timestamps?(m instanceof xe.Tensor&&(m=F(m)),Y=this.decodeWithTimestamps(m,z)):Y=super.decode(m,z),Y}decodeWithTimestamps(m,z){const Y=(z==null?void 0:z.time_precision)??.02,ue=Array.from(this.all_special_ids).at(-1)+1;let pe=[[]];for(let ze of m)if(ze=Number(ze),ze>=ue){const Mt=((ze-ue)*Y).toFixed(2);pe.push(`<|${Mt}|>`),pe.push([])}else pe[pe.length-1].push(ze);return pe=pe.map(ze=>typeof ze==\"string\"?ze:super.decode(ze,z)),pe.join(\"\")}splitTokensOnUnicode(m){const z=this.decode(m,{decode_with_timestamps:!0}),Y=\"�\",ue=[],pe=[],ze=[];let Mt=[],St=[],xt=0;for(let Ft=0;Ft<m.length;++Ft){const rr=m[Ft];Mt.push(rr),St.push(Ft);const Ar=this.decode(Mt,{decode_with_timestamps:!0});(!Ar.includes(Y)||z[xt+Ar.indexOf(Y)]===Y)&&(ue.push(Ar),pe.push(Mt),ze.push(St),Mt=[],St=[],xt+=Ar.length)}return[ue,pe,ze]}splitTokensOnSpaces(m){const[z,Y,ue]=this.splitTokensOnUnicode(m),pe=[],ze=[],Mt=[],St=new RegExp(`^[${R}]$`,\"gu\");for(let xt=0;xt<z.length;++xt){const Ft=z[xt],rr=Y[xt],Ar=ue[xt],ar=rr[0]>=this.model.tokens_to_ids.get(\"<|endoftext|>\"),Gt=Ft.startsWith(\" \"),_r=Ft.trim(),cn=St.test(_r);if(ar||Gt||cn||pe.length===0)pe.push(Ft),ze.push(rr),Mt.push(Ar);else{const tn=pe.length-1;pe[tn]+=Ft,ze[tn].push(...rr),Mt[tn].push(...Ar)}}return[pe,ze,Mt]}mergePunctuations(m,z,Y,ue,pe){const ze=structuredClone(m),Mt=structuredClone(z),St=structuredClone(Y);let xt=ze.length-2,Ft=ze.length-1;for(;xt>=0;)ze[xt].startsWith(\" \")&&ue.includes(ze[xt].trim())?(ze[Ft]=ze[xt]+ze[Ft],Mt[Ft]=(0,ie.mergeArrays)(Mt[xt],Mt[Ft]),St[Ft]=(0,ie.mergeArrays)(St[xt],St[Ft]),ze[xt]=\"\",Mt[xt]=[],St[xt]=[]):Ft=xt,--xt;for(xt=0,Ft=1;Ft<ze.length;)!ze[xt].endsWith(\" \")&&pe.includes(ze[Ft])?(ze[xt]+=ze[Ft],Mt[xt]=(0,ie.mergeArrays)(Mt[xt],Mt[Ft]),St[xt]=(0,ie.mergeArrays)(St[xt],St[Ft]),ze[Ft]=\"\",Mt[Ft]=[],St[Ft]=[]):xt=Ft,++Ft;return[ze.filter(rr=>rr),Mt.filter(rr=>rr.length>0),St.filter(rr=>rr.length>0)]}get_decoder_prompt_ids({language:m=null,task:z=null,no_timestamps:Y=!0}={}){const ue=[];if(m){const pe=(0,V.whisper_language_to_code)(m),ze=this.model.tokens_to_ids.get(`<|${pe}|>`);if(ze===void 0)throw new Error(`Unable to find language \"${pe}\" in model vocabulary. Please report this issue at ${P.GITHUB_ISSUE_URL}.`);ue.push(ze)}else ue.push(null);if(z){if(z=z.toLowerCase(),z!==\"transcribe\"&&z!==\"translate\")throw new Error(`Task \"${z}\" is not supported. Must be one of: [\"transcribe\", \"translate\"]`);const pe=this.model.tokens_to_ids.get(`<|${z}|>`);if(pe===void 0)throw new Error(`Unable to find task \"${z}\" in model vocabulary. Please report this issue at ${P.GITHUB_ISSUE_URL}.`);ue.push(pe)}else ue.push(null);if(Y){const pe=this.model.tokens_to_ids.get(\"<|notimestamps|>\");if(pe===void 0)throw new Error(`Unable to find \"<|notimestamps|>\" in model vocabulary. Please report this issue at ${P.GITHUB_ISSUE_URL}.`);ue.push(pe)}return ue.map((pe,ze)=>[ze+1,pe]).filter(pe=>pe[1]!==null)}}class ds extends Re{}class Qt extends Re{}class ts extends Re{}class ks extends Re{constructor(m,z){super(m,z),this.languageRegex=/^(>>\\w+<<)\\s*/g,this.supported_language_codes=this.model.vocab.filter(Y=>this.languageRegex.test(Y)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\\'s \"fast\" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(m){if(m===null)return null;const[z,...Y]=m.trim().split(this.languageRegex);if(Y.length===0)return super._encode_text(z);if(Y.length===2){const[ue,pe]=Y;return this.supported_language_codes.includes(ue)||console.warn(`Unsupported language code \"${ue}\" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,ie.mergeArrays)([ue],super._encode_text(pe))}}}class Cs extends Re{}class cs extends Re{}class Es extends Re{}class $s extends Re{}class ps extends Re{}class Ps extends Re{constructor(m,z){super(m,z),this.decoder=new Ae({})}}class jr extends Re{}class bn{static async from_pretrained(m,{progress_callback:z=null,config:Y=null,cache_dir:ue=null,local_files_only:pe=!1,revision:ze=\"main\",legacy:Mt=null}={}){var Ar;const[St,xt]=await K(m,{progress_callback:z,config:Y,cache_dir:ue,local_files_only:pe,revision:ze,legacy:Mt}),Ft=((Ar=xt.tokenizer_class)==null?void 0:Ar.replace(/Fast$/,\"\"))??\"PreTrainedTokenizer\";let rr=this.TOKENIZER_CLASS_MAPPING[Ft];return rr||(console.warn(`Unknown tokenizer class \"${Ft}\", attempting to construct from base class.`),rr=Re),new rr(St,xt)}}Te(bn,\"TOKENIZER_CLASS_MAPPING\",{T5Tokenizer:In,DistilBertTokenizer:Je,CamembertTokenizer:wt,DebertaTokenizer:Wt,DebertaV2Tokenizer:Xt,BertTokenizer:Nt,HerbertTokenizer:cr,ConvBertTokenizer:sr,RoFormerTokenizer:yr,XLMTokenizer:Dt,ElectraTokenizer:Kr,MobileBertTokenizer:Ht,SqueezeBertTokenizer:Rt,AlbertTokenizer:Lt,GPT2Tokenizer:Rn,BartTokenizer:Vr,MBartTokenizer:sn,MBart50Tokenizer:Ur,RobertaTokenizer:Fn,WhisperTokenizer:us,CodeGenTokenizer:ds,CLIPTokenizer:Qt,SiglipTokenizer:ts,MarianTokenizer:ks,BloomTokenizer:Or,NllbTokenizer:jn,M2M100Tokenizer:es,LlamaTokenizer:Nn,CodeLlamaTokenizer:qs,XLMRobertaTokenizer:vs,MPNetTokenizer:xs,FalconTokenizer:Ts,GPTNeoXTokenizer:Ss,EsmTokenizer:Qn,Wav2Vec2CTCTokenizer:Cs,BlenderbotTokenizer:cs,BlenderbotSmallTokenizer:Es,SpeechT5Tokenizer:$s,NougatTokenizer:ps,VitsTokenizer:Ps,Qwen2Tokenizer:Hs,GemmaTokenizer:ls,Grok1Tokenizer:On,CohereTokenizer:jr,PreTrainedTokenizer:Re})},\"./src/utils/audio.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{hamming:()=>V,hanning:()=>T,mel_filter_bank:()=>J,read_audio:()=>xe,spectrogram:()=>O,window_function:()=>R});var E=I(\"./src/utils/hub.js\"),ie=I(\"./src/utils/maths.js\"),we=I(\"./src/utils/core.js\"),ve=I(\"./src/utils/tensor.js\");async function xe(A,_e){if(typeof AudioContext>\"u\")throw Error(\"Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.\");const Me=await(await(0,E.getFile)(A)).arrayBuffer(),ke=new AudioContext({sampleRate:_e});typeof _e>\"u\"&&console.warn(`No sampling rate provided, using default of ${ke.sampleRate}Hz.`);const Oe=await ke.decodeAudioData(Me);let Pe;if(Oe.numberOfChannels===2){const st=Math.sqrt(2),Ye=Oe.getChannelData(0),pt=Oe.getChannelData(1);Pe=new Float32Array(Ye.length);for(let ye=0;ye<Oe.length;++ye)Pe[ye]=st*(Ye[ye]+pt[ye])/2}else Pe=Oe.getChannelData(0);return Pe}function N(A,_e){if(A<1)return new Float64Array;if(A===1)return new Float64Array([1]);const Me=1-_e,ke=2*Math.PI/(A-1),Oe=new Float64Array(A);for(let Pe=0;Pe<A;++Pe)Oe[Pe]=_e-Me*Math.cos(Pe*ke);return Oe}function T(A){return N(A,.5)}function V(A){return N(A,.54)}const P={htk:A=>2595*Math.log10(1+A/700),kaldi:A=>1127*Math.log(1+A/700),slaney:(A,_e=1e3,Me=15,ke=27/Math.log(6.4))=>A>=_e?Me+Math.log(A/_e)*ke:3*A/200};function K(A,_e=\"htk\"){const Me=P[_e];if(!Me)throw new Error('mel_scale should be one of \"htk\", \"slaney\" or \"kaldi\".');return typeof A==\"number\"?Me(A):A.map(ke=>Me(ke))}const ee={htk:A=>700*(10**(A/2595)-1),kaldi:A=>700*(Math.exp(A/1127)-1),slaney:(A,_e=1e3,Me=15,ke=Math.log(6.4)/27)=>A>=Me?_e*Math.exp(ke*(A-Me)):200*A/3};function ne(A,_e=\"htk\"){const Me=ee[_e];if(!Me)throw new Error('mel_scale should be one of \"htk\", \"slaney\" or \"kaldi\".');return typeof A==\"number\"?Me(A):A.map(ke=>Me(ke))}function me(A,_e){const Me=Float64Array.from({length:_e.length-1},(st,Ye)=>_e[Ye+1]-_e[Ye]),ke=Array.from({length:A.length},()=>new Array(_e.length));for(let st=0;st<A.length;++st){const Ye=ke[st];for(let pt=0;pt<_e.length;++pt)Ye[pt]=_e[pt]-A[st]}const Oe=_e.length-2,Pe=Array.from({length:Oe},()=>new Array(A.length));for(let st=0;st<A.length;++st){const Ye=ke[st];for(let pt=0;pt<Oe;++pt){const ye=-Ye[pt]/Me[pt],W=Ye[pt+2]/Me[pt+1];Pe[pt][st]=Math.max(0,Math.min(ye,W))}}return Pe}function F(A,_e,Me){const ke=(_e-A)/(Me-1);return Float64Array.from({length:Me},(Oe,Pe)=>A+ke*Pe)}function J(A,_e,Me,ke,Oe,Pe=null,st=\"htk\",Ye=!1){if(Pe!==null&&Pe!==\"slaney\")throw new Error('norm must be one of null or \"slaney\"');const pt=K(Me,st),ye=K(ke,st),W=F(pt,ye,_e+2);let he=ne(W,st),Ce;if(Ye){const Xe=Oe/(A*2);Ce=K(Float64Array.from({length:A},(ht,it)=>it*Xe),st),he=W}else Ce=F(0,Math.floor(Oe/2),A);const Z=me(Ce,he);if(Pe!==null&&Pe===\"slaney\")for(let Xe=0;Xe<_e;++Xe){const ht=Z[Xe],it=2/(he[Xe+2]-he[Xe]);for(let dt=0;dt<A;++dt)ht[dt]*=it}return Z}function re(A,_e,Me){const ke=new A.constructor(A.length+_e+Me),Oe=A.length-1;for(let Pe=0;Pe<A.length;++Pe)ke[_e+Pe]=A[Pe];for(let Pe=1;Pe<=_e;++Pe)ke[_e-Pe]=A[(0,we.calculateReflectOffset)(Pe,Oe)];for(let Pe=1;Pe<=Me;++Pe)ke[Oe+_e+Pe]=A[(0,we.calculateReflectOffset)(Oe-Pe,Oe)];return ke}function le(A,_e,Me,ke,Oe){if(Me<=0)throw new Error(\"reference must be greater than zero\");if(ke<=0)throw new Error(\"min_value must be greater than zero\");Me=Math.max(ke,Me);const Pe=Math.log10(Me);for(let st=0;st<A.length;++st)A[st]=_e*Math.log10(Math.max(ke,A[st])-Pe);if(Oe!==null){if(Oe<=0)throw new Error(\"db_range must be greater than zero\");const st=(0,ie.max)(A)[0]-Oe;for(let Ye=0;Ye<A.length;++Ye)A[Ye]=Math.max(A[Ye],st)}return A}function ae(A,_e=1,Me=1e-5,ke=null){return le(A,20,_e,Me,ke)}function j(A,_e=1,Me=1e-10,ke=null){return le(A,10,_e,Me,ke)}async function O(A,_e,Me,ke,{fft_length:Oe=null,power:Pe=1,center:st=!0,pad_mode:Ye=\"reflect\",onesided:pt=!0,preemphasis:ye=null,mel_filters:W=null,mel_floor:he=1e-10,log_mel:Ce=null,reference:Z=1,min_value:Xe=1e-10,db_range:ht=null,remove_dc_offset:it=null,min_num_frames:dt=null,max_num_frames:Ne=null,do_pad:at=!0,transpose:Et=!1}={}){const Be=_e.length;if(Oe===null&&(Oe=Me),Me>Oe)throw Error(`frame_length (${Me}) may not be larger than fft_length (${Oe})`);if(Be!==Me)throw new Error(`Length of the window (${Be}) must equal frame_length (${Me})`);if(ke<=0)throw new Error(\"hop_length must be greater than zero\");if(Pe===null&&W!==null)throw new Error(\"You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.\");if(st){if(Ye!==\"reflect\")throw new Error(`pad_mode=\"${Ye}\" not implemented yet.`);const G=Math.floor((Oe-1)/2)+1;A=re(A,G,G)}let te=Math.floor(1+Math.floor((A.length-Me)/ke));dt!==null&&te<dt&&(te=dt);const Ee=pt?Math.floor(Oe/2)+1:Oe;let Ue=te,He=te;Ne!==null&&(Ne>te?at&&(He=Ne):He=Ue=Ne);const We=new ie.FFT(Oe),Qe=new Float64Array(Oe),ut=new Float64Array(We.outputBufferSize),gt=new Float32Array(Ee*He);for(let G=0;G<Ue;++G){const k=G*ke,Q=Math.min(A.length-k,Me);Q!==Me&&Qe.fill(0,0,Me);for(let ge=0;ge<Q;++ge)Qe[ge]=A[k+ge];if(it){let ge=0;for(let tt=0;tt<Q;++tt)ge+=Qe[tt];const Ze=ge/Q;for(let tt=0;tt<Q;++tt)Qe[tt]-=Ze}if(ye!==null){for(let ge=Q-1;ge>=1;--ge)Qe[ge]-=ye*Qe[ge-1];Qe[0]*=1-ye}for(let ge=0;ge<_e.length;++ge)Qe[ge]*=_e[ge];We.realTransform(ut,Qe);for(let ge=0;ge<Ee;++ge){const Ze=ge<<1;gt[ge*He+G]=ut[Ze]**2+ut[Ze+1]**2}}if(Pe!==null&&Pe!==2){const G=2/Pe;for(let k=0;k<gt.length;++k)gt[k]**=G}const vt=W.length;let Ct=await(0,ve.matmul)(new ve.Tensor(\"float32\",W.flat(),[vt,Ee]),new ve.Tensor(\"float32\",gt,[Ee,He]));Et&&(Ct=Ct.transpose(1,0));const M=Ct.data;for(let G=0;G<M.length;++G)M[G]=Math.max(he,M[G]);if(Pe!==null&&Ce!==null){const G=Math.min(M.length,Ue*vt);switch(Ce){case\"log\":for(let k=0;k<G;++k)M[k]=Math.log(M[k]);break;case\"log10\":for(let k=0;k<G;++k)M[k]=Math.log10(M[k]);break;case\"dB\":if(Pe===1)ae(M,Z,Xe,ht);else if(Pe===2)j(M,Z,Xe,ht);else throw new Error(`Cannot use log_mel option '${Ce}' with power ${Pe}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${Ce}'`)}}return Ct}function R(A,_e,{periodic:Me=!0,frame_length:ke=null,center:Oe=!0}={}){const Pe=Me?A+1:A;let st;switch(_e){case\"boxcar\":st=new Float64Array(Pe).fill(1);break;case\"hann\":case\"hann_window\":st=T(Pe);break;case\"hamming\":st=V(Pe);break;case\"povey\":st=T(Pe).map(Ye=>Math.pow(Ye,.85));break;default:throw new Error(`Unknown window type ${_e}.`)}if(Me&&(st=st.subarray(0,A)),ke===null)return st;if(A>ke)throw new Error(`Length of the window (${A}) may not be larger than frame_length (${ke})`);return st}},\"./src/utils/constants.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{GITHUB_ISSUE_URL:()=>E});const E=\"https://github.com/xenova/transformers.js/issues/new/choose\"},\"./src/utils/core.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{calculateDimensions:()=>N,calculateReflectOffset:()=>K,dispatchCallback:()=>E,escapeRegExp:()=>we,isIntegralNumber:()=>xe,isTypedArray:()=>ve,mergeArrays:()=>V,pick:()=>ee,pop:()=>T,product:()=>P,reverseDictionary:()=>ie});function E(ne,me){ne&&ne(me)}function ie(ne){return Object.fromEntries(Object.entries(ne).map(([me,F])=>[F,me]))}function we(ne){return ne.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function ve(ne){var me,F,J;return((J=(F=(me=ne==null?void 0:ne.prototype)==null?void 0:me.__proto__)==null?void 0:F.constructor)==null?void 0:J.name)===\"TypedArray\"}function xe(ne){return Number.isInteger(ne)||typeof ne==\"bigint\"}function N(ne){const me=[];let F=ne;for(;Array.isArray(F);)me.push(F.length),F=F[0];return me}function T(ne,me,F=void 0){const J=ne[me];if(J!==void 0)return delete ne[me],J;if(F===void 0)throw Error(`Key ${me} does not exist in object.`);return F}function V(...ne){return Array.prototype.concat.apply([],ne)}function P(...ne){return ne.reduce((me,F)=>me.flatMap(J=>F.map(re=>[J,re])))}function K(ne,me){return Math.abs((ne+me)%(2*me)-me)}function ee(ne,me){return Object.assign({},...me.map(F=>{if(ne[F]!==void 0)return{[F]:ne[F]}}))}},\"./src/utils/data-structures.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{CharTrie:()=>ie,PriorityQueue:()=>E,TokenLattice:()=>ve});class E{constructor(T=(P,K)=>P>K,V=1/0){this._heap=[],this._comparator=T,this._maxSize=V}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...T){return this.extend(T)}extend(T){for(const V of T)if(this.size<this._maxSize)this._heap.push(V),this._siftUp();else{const P=this._smallest();this._comparator(V,this._heap[P])&&(this._heap[P]=V,this._siftUpFrom(P))}return this.size}pop(){const T=this.peek(),V=this.size-1;return V>0&&this._swap(0,V),this._heap.pop(),this._siftDown(),T}replace(T){const V=this.peek();return this._heap[0]=T,this._siftDown(),V}_parent(T){return(T+1>>>1)-1}_left(T){return(T<<1)+1}_right(T){return T+1<<1}_greater(T,V){return this._comparator(this._heap[T],this._heap[V])}_swap(T,V){const P=this._heap[T];this._heap[T]=this._heap[V],this._heap[V]=P}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(T){for(;T>0&&this._greater(T,this._parent(T));)this._swap(T,this._parent(T)),T=this._parent(T)}_siftDown(){let T=0;for(;this._left(T)<this.size&&this._greater(this._left(T),T)||this._right(T)<this.size&&this._greater(this._right(T),T);){const V=this._right(T)<this.size&&this._greater(this._right(T),this._left(T))?this._right(T):this._left(T);this._swap(T,V),T=V}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class ie{constructor(){this.root=we.default()}extend(T){for(let V of T)this.push(V)}push(T){let V=this.root;for(let P of T){let K=V.children.get(P);K===void 0&&(K=we.default(),V.children.set(P,K)),V=K}V.isLeaf=!0}*commonPrefixSearch(T){let V=this.root,P=\"\";for(let K=0;K<T.length&&V!==void 0;++K){const ee=T[K];P+=ee,V=V.children.get(ee),V!==void 0&&V.isLeaf&&(yield P)}}}class we{constructor(T,V){this.isLeaf=T,this.children=V}static default(){return new we(!1,new Map)}}class ve{constructor(T,V,P){this.sentence=T,this.len=T.length,this.bosTokenId=V,this.eosTokenId=P,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const K=new xe(this.bosTokenId,0,0,0,0),ee=new xe(this.eosTokenId,1,this.len,0,0);this.nodes.push(K.clone()),this.nodes.push(ee.clone()),this.beginNodes[this.len].push(ee),this.endNodes[0].push(K)}insert(T,V,P,K){const ee=this.nodes.length,ne=new xe(K,ee,T,V,P);this.beginNodes[T].push(ne),this.endNodes[T+V].push(ne),this.nodes.push(ne)}viterbi(){const T=this.len;let V=0;for(;V<=T;){if(this.beginNodes[V].length==0)return[];for(let me of this.beginNodes[V]){me.prev=null;let F=0,J=null;for(let re of this.endNodes[V]){const le=re.backtraceScore+me.score;(J===null||le>F)&&(J=re.clone(),F=le)}if(J!==null)me.prev=J,me.backtraceScore=F;else return[]}++V}const P=[],ee=this.beginNodes[T][0].prev;if(ee===null)return[];let ne=ee.clone();for(;ne.prev!==null;)P.push(ne.clone()),ne=ne.clone().prev.clone();return P.reverse(),P}piece(T){return this.sentence.slice(T.pos,T.pos+T.length)}tokens(){return this.viterbi().map(V=>this.piece(V))}tokenIds(){return this.viterbi().map(V=>V.tokenId)}}class xe{constructor(T,V,P,K,ee){this.tokenId=T,this.nodeId=V,this.pos=P,this.length=K,this.score=ee,this.prev=null,this.backtraceScore=0}clone(){const T=new xe(this.tokenId,this.nodeId,this.pos,this.length,this.score);return T.prev=this.prev,T.backtraceScore=this.backtraceScore,T}}},\"./src/utils/devices.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{DEVICE_TYPES:()=>E});const E=Object.freeze({auto:\"auto\",gpu:\"gpu\",cpu:\"cpu\",wasm:\"wasm\",webgpu:\"webgpu\",cuda:\"cuda\",dml:\"dml\",webnn:\"webnn\",\"webnn-npu\":\"webnn-npu\",\"webnn-gpu\":\"webnn-gpu\",\"webnn-cpu\":\"webnn-cpu\"})},\"./src/utils/dtypes.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{DATA_TYPES:()=>ve,DEFAULT_DEVICE_DTYPE_MAPPING:()=>xe,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>N,isWebGpuFp16Supported:()=>we});var E=I(\"./src/env.js\"),ie=I(\"./src/utils/devices.js\");const we=function(){let T;return async function(){if(T===void 0)if(!E.apis.IS_WEBGPU_AVAILABLE)T=!1;else try{T=(await navigator.gpu.requestAdapter()).features.has(\"shader-f16\")}catch{T=!1}return T}}(),ve=Object.freeze({fp32:\"fp32\",fp16:\"fp16\",q8:\"q8\",int8:\"int8\",uint8:\"uint8\",q4:\"q4\",bnb4:\"bnb4\",q4f16:\"q4f16\"}),xe=Object.freeze({[ie.DEVICE_TYPES.wasm]:ve.q8}),N=Object.freeze({[ve.fp32]:\"\",[ve.fp16]:\"_fp16\",[ve.int8]:\"_int8\",[ve.uint8]:\"_uint8\",[ve.q8]:\"_quantized\",[ve.q4]:\"_q4\",[ve.q4f16]:\"_q4f16\",[ve.bnb4]:\"_bnb4\"})},\"./src/utils/generic.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{Callable:()=>E});const E=class{constructor(){let ie=function(...we){return ie._call(...we)};return Object.setPrototypeOf(ie,new.target.prototype)}_call(...ie){throw Error(\"Must implement _call method in subclass\")}}},\"./src/utils/hub.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{getFile:()=>V,getModelFile:()=>me,getModelJSON:()=>F});var E=I(\"?7a2c\"),ie=I(\"?a42a\"),we=I(\"./src/env.js\"),ve=I(\"./src/utils/core.js\");const xe={txt:\"text/plain\",html:\"text/html\",css:\"text/css\",js:\"text/javascript\",json:\"application/json\",png:\"image/png\",jpg:\"image/jpeg\",jpeg:\"image/jpeg\",gif:\"image/gif\"};class N{constructor(ae){if(this.filePath=ae,this.headers=new Headers,this.exists=E.existsSync(ae),this.exists){this.status=200,this.statusText=\"OK\";let j=E.statSync(ae);this.headers.set(\"content-length\",j.size.toString()),this.updateContentType();let O=this;this.body=new ReadableStream({start(R){O.arrayBuffer().then(A=>{R.enqueue(new Uint8Array(A)),R.close()})}})}else this.status=404,this.statusText=\"Not Found\",this.body=null}updateContentType(){const ae=this.filePath.toString().split(\".\").pop().toLowerCase();this.headers.set(\"content-type\",xe[ae]??\"application/octet-stream\")}clone(){let ae=new N(this.filePath);return ae.exists=this.exists,ae.status=this.status,ae.statusText=this.statusText,ae.headers=new Headers(this.headers),ae}async arrayBuffer(){return(await E.promises.readFile(this.filePath)).buffer}async blob(){const ae=await E.promises.readFile(this.filePath);return new Blob([ae],{type:this.headers.get(\"content-type\")})}async text(){return await E.promises.readFile(this.filePath,\"utf8\")}async json(){return JSON.parse(await this.text())}}function T(le,ae=null,j=null){let O;try{O=new URL(le)}catch{return!1}return!(ae&&!ae.includes(O.protocol)||j&&!j.includes(O.hostname))}async function V(le){var ae;if(we.env.useFS&&!T(le,[\"http:\",\"https:\",\"blob:\"]))return new N(le);if(typeof process<\"u\"&&((ae=process==null?void 0:process.release)==null?void 0:ae.name)===\"node\"){const j=!!(Ms!=null&&Ms.TESTING_REMOTELY),O=we.env.version,R=new Headers;if(R.set(\"User-Agent\",`transformers.js/${O}; is_ci/${j};`),T(le,[\"http:\",\"https:\"],[\"huggingface.co\",\"hf.co\"])){const _e=(Ms==null?void 0:Ms.HF_TOKEN)??(Ms==null?void 0:Ms.HF_ACCESS_TOKEN);_e&&R.set(\"Authorization\",`Bearer ${_e}`)}return fetch(le,{headers:R})}else return fetch(le)}const P={400:\"Bad request error occurred while trying to load file\",401:\"Unauthorized access to file\",403:\"Forbidden access to file\",404:\"Could not locate file\",408:\"Request timeout error occurred while trying to load file\",500:\"Internal server error error occurred while trying to load file\",502:\"Bad gateway error occurred while trying to load file\",503:\"Service unavailable error occurred while trying to load file\",504:\"Gateway timeout error occurred while trying to load file\"};function K(le,ae,j){if(!j)return null;const O=P[le]??`Error (${le}) occurred while trying to load file`;throw Error(`${O}: \"${ae}\".`)}class ee{constructor(ae){this.path=ae}async match(ae){let j=ie.join(this.path,ae),O=new N(j);if(O.exists)return O}async put(ae,j){const O=Buffer.from(await j.arrayBuffer());let R=ie.join(this.path,ae);try{await E.promises.mkdir(ie.dirname(R),{recursive:!0}),await E.promises.writeFile(R,O)}catch(A){console.warn(\"An error occurred while writing the file to cache:\",A)}}}async function ne(le,...ae){for(let j of ae)try{let O=await le.match(j);if(O)return O}catch{continue}}async function me(le,ae,j=!0,O={}){if(!we.env.allowLocalModels){if(O.local_files_only)throw Error(\"Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).\");if(!we.env.allowRemoteModels)throw Error(\"Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.\")}(0,ve.dispatchCallback)(O.progress_callback,{status:\"initiate\",name:le,file:ae});let R;if(!R&&we.env.useBrowserCache){if(typeof caches>\"u\")throw Error(\"Browser cache is not available in this environment.\");try{R=await caches.open(\"transformers-cache\")}catch(Ce){console.warn(\"An error occurred while opening the browser cache:\",Ce)}}if(!R&&we.env.useFSCache&&(R=new ee(O.cache_dir??we.env.cacheDir)),!R&&we.env.useCustomCache){if(!we.env.customCache)throw Error(\"`env.useCustomCache=true`, but `env.customCache` is not defined.\");if(!we.env.customCache.match||!we.env.customCache.put)throw new Error(\"`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache\");R=we.env.customCache}const A=O.revision??\"main\";let _e=re(le,ae),Me=re(we.env.localModelPath,_e),ke=re(we.env.remoteHost,we.env.remotePathTemplate.replaceAll(\"{model}\",le).replaceAll(\"{revision}\",encodeURIComponent(A)),ae),Oe=A===\"main\"?_e:re(le,A,ae),Pe,st=R instanceof ee?Oe:ke,Ye=!1,pt;R&&(pt=await ne(R,Me,st));const ye=pt!==void 0;if(pt===void 0){if(we.env.allowLocalModels)if(T(_e,[\"http:\",\"https:\"])){if(O.local_files_only)throw new Error(`\\`local_files_only=true\\`, but attempted to load a remote file from: ${_e}.`);if(!we.env.allowRemoteModels)throw new Error(`\\`env.allowRemoteModels=false\\`, but attempted to load a remote file from: ${_e}.`)}else try{pt=await V(Me),Pe=Me}catch(Z){console.warn(`Unable to load from local path \"${Me}\": \"${Z}\"`)}if(pt===void 0||pt.status===404){if(O.local_files_only||!we.env.allowRemoteModels){if(j)throw Error(`\\`local_files_only=true\\` or \\`env.allowRemoteModels=false\\` and file was not found locally at \"${Me}\".`);return null}if(pt=await V(ke),pt.status!==200)return K(pt.status,ke,j);Pe=st}Ye=R&&typeof Response<\"u\"&&pt instanceof Response&&pt.status===200}(0,ve.dispatchCallback)(O.progress_callback,{status:\"download\",name:le,file:ae});const W={status:\"progress\",name:le,file:ae};let he;return O.progress_callback?ye&&typeof navigator<\"u\"&&/firefox/i.test(navigator.userAgent)?(he=new Uint8Array(await pt.arrayBuffer()),(0,ve.dispatchCallback)(O.progress_callback,{...W,progress:100,loaded:he.length,total:he.length})):he=await J(pt,Ce=>{(0,ve.dispatchCallback)(O.progress_callback,{...W,...Ce})}):he=new Uint8Array(await pt.arrayBuffer()),Ye&&Pe&&await R.match(Pe)===void 0&&await R.put(Pe,new Response(he,{headers:pt.headers})).catch(Ce=>{console.warn(`Unable to add response to browser cache: ${Ce}.`)}),(0,ve.dispatchCallback)(O.progress_callback,{status:\"done\",name:le,file:ae}),he}async function F(le,ae,j=!0,O={}){let R=await me(le,ae,j,O);if(R===null)return{};let _e=new TextDecoder(\"utf-8\").decode(R);return JSON.parse(_e)}async function J(le,ae){const j=le.headers.get(\"Content-Length\");j===null&&console.warn(\"Unable to determine content-length from response headers. Will expand buffer when needed.\");let O=parseInt(j??\"0\"),R=new Uint8Array(O),A=0;const _e=le.body.getReader();async function Me(){const{done:ke,value:Oe}=await _e.read();if(ke)return;let Pe=A+Oe.length;if(Pe>O){O=Pe;let Ye=new Uint8Array(O);Ye.set(R),R=Ye}R.set(Oe,A),A=Pe;const st=A/O*100;return ae({progress:st,loaded:A,total:O}),Me()}return await Me(),R}function re(...le){return le=le.map((ae,j)=>(j&&(ae=ae.replace(new RegExp(\"^/\"),\"\")),j!==le.length-1&&(ae=ae.replace(new RegExp(\"/$\"),\"\")),ae)),le.join(\"/\")}},\"./src/utils/image.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{RawImage:()=>ne});var E=I(\"./src/utils/hub.js\"),ie=I(\"./src/env.js\"),we=I(\"./src/utils/tensor.js\"),ve=I(\"?2b25\");const xe=typeof self<\"u\",N=xe&&self.constructor.name===\"DedicatedWorkerGlobalScope\";let T,V,P;if(xe)T=(me,F)=>{if(!self.OffscreenCanvas)throw new Error(\"OffscreenCanvas not supported by this browser.\");return new self.OffscreenCanvas(me,F)},P=self.createImageBitmap,V=self.ImageData;else if(ve)P=async me=>{const J=(await me.metadata()).channels,{data:re,info:le}=await me.rotate().raw().toBuffer({resolveWithObject:!0}),ae=new ne(new Uint8ClampedArray(re),le.width,le.height,le.channels);return J!==void 0&&J!==le.channels&&ae.convert(J),ae};else throw new Error(\"Unable to load image processing library.\");const K={0:\"nearest\",1:\"lanczos\",2:\"bilinear\",3:\"bicubic\",4:\"box\",5:\"hamming\"},ee=new Map([[\"png\",\"image/png\"],[\"jpg\",\"image/jpeg\"],[\"jpeg\",\"image/jpeg\"],[\"gif\",\"image/gif\"]]);class ne{constructor(F,J,re,le){this.data=F,this.width=J,this.height=re,this.channels=le}get size(){return[this.width,this.height]}static async read(F){if(F instanceof ne)return F;if(typeof F==\"string\"||F instanceof URL)return await this.fromURL(F);throw new Error(`Unsupported input type: ${typeof F}`)}static fromCanvas(F){if(!xe)throw new Error(\"fromCanvas() is only supported in browser environments.\");const re=F.getContext(\"2d\").getImageData(0,0,F.width,F.height).data;return new ne(re,F.width,F.height,4)}static async fromURL(F){const J=await(0,E.getFile)(F);if(J.status!==200)throw new Error(`Unable to read image from \"${F}\" (${J.status} ${J.statusText})`);const re=await J.blob();return this.fromBlob(re)}static async fromBlob(F){if(xe){const J=await P(F),re=T(J.width,J.height).getContext(\"2d\");return re.drawImage(J,0,0),new this(re.getImageData(0,0,J.width,J.height).data,J.width,J.height,4)}else{const J=ve(await F.arrayBuffer());return await P(J)}}static fromTensor(F,J=\"CHW\"){if(F.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${F.dims.length} dimensions.`);if(J===\"CHW\")F=F.transpose(1,2,0);else if(J!==\"HWC\")throw new Error(`Unsupported channel format: ${J}`);if(!(F.data instanceof Uint8ClampedArray||F.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${F.type}`);switch(F.dims[2]){case 1:case 2:case 3:case 4:return new ne(F.data,F.dims[1],F.dims[0],F.dims[2]);default:throw new Error(`Unsupported number of channels: ${F.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const F=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let J=0,re=0;J<this.data.length;J+=this.channels){const le=this.data[J],ae=this.data[J+1],j=this.data[J+2];F[re++]=Math.round(.2989*le+.587*ae+.114*j)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(F,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const F=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let J=0,re=0;J<this.data.length;++J)F[re++]=this.data[J],F[re++]=this.data[J],F[re++]=this.data[J];break;case 4:for(let J=0,re=0;J<this.data.length;J+=4)F[re++]=this.data[J],F[re++]=this.data[J+1],F[re++]=this.data[J+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(F,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const F=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let J=0,re=0;J<this.data.length;++J)F[re++]=this.data[J],F[re++]=this.data[J],F[re++]=this.data[J],F[re++]=255;break;case 3:for(let J=0,re=0;J<this.data.length;J+=3)F[re++]=this.data[J],F[re++]=this.data[J+1],F[re++]=this.data[J+2],F[re++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(F,this.width,this.height,4)}async resize(F,J,{resample:re=2}={}){let le=K[re]??re;if(xe){const ae=this.channels,j=this.toCanvas(),O=T(F,J).getContext(\"2d\");return O.drawImage(j,0,0,F,J),new ne(O.getImageData(0,0,F,J).data,F,J,4).convert(ae)}else{let ae=this.toSharp();switch(le){case\"box\":case\"hamming\":(le===\"box\"||le===\"hamming\")&&(console.warn(`Resampling method ${le} is not yet supported. Using bilinear instead.`),le=\"bilinear\");case\"nearest\":case\"bilinear\":case\"bicubic\":ae=ae.affine([F/this.width,0,0,J/this.height],{interpolator:le});break;case\"lanczos\":ae=ae.resize({width:F,height:J,fit:\"fill\",kernel:\"lanczos3\"});break;default:throw new Error(`Resampling method ${le} is not supported.`)}return await P(ae)}}async pad([F,J,re,le]){if(F=Math.max(F,0),J=Math.max(J,0),re=Math.max(re,0),le=Math.max(le,0),F===0&&J===0&&re===0&&le===0)return this;if(xe){const ae=this.channels,j=this.toCanvas(),O=this.width+F+J,R=this.height+re+le,A=T(O,R).getContext(\"2d\");return A.drawImage(j,0,0,this.width,this.height,F,re,O,R),new ne(A.getImageData(0,0,O,R).data,O,R,4).convert(ae)}else{const ae=this.toSharp().extend({left:F,right:J,top:re,bottom:le});return await P(ae)}}async crop([F,J,re,le]){if(F=Math.max(F,0),J=Math.max(J,0),re=Math.min(re,this.width-1),le=Math.min(le,this.height-1),F===0&&J===0&&re===this.width-1&&le===this.height-1)return this;const ae=re-F+1,j=le-J+1;if(xe){const O=this.channels,R=this.toCanvas(),A=T(ae,j).getContext(\"2d\");return A.drawImage(R,F,J,ae,j,0,0,ae,j),new ne(A.getImageData(0,0,ae,j).data,ae,j,4).convert(O)}else{const O=this.toSharp().extract({left:F,top:J,width:ae,height:j});return await P(O)}}async center_crop(F,J){if(this.width===F&&this.height===J)return this;const re=(this.width-F)/2,le=(this.height-J)/2;if(xe){const ae=this.channels,j=this.toCanvas(),O=T(F,J).getContext(\"2d\");let R=0,A=0,_e=0,Me=0;return re>=0?R=re:_e=-re,le>=0?A=le:Me=-le,O.drawImage(j,R,A,F,J,_e,Me,F,J),new ne(O.getImageData(0,0,F,J).data,F,J,4).convert(ae)}else{let ae=this.toSharp();if(re>=0&&le>=0)ae=ae.extract({left:Math.floor(re),top:Math.floor(le),width:F,height:J});else if(re<=0&&le<=0){const j=Math.floor(-le),O=Math.floor(-re);ae=ae.extend({top:j,left:O,right:F-this.width-O,bottom:J-this.height-j})}else{let j=[0,0],O=0;le<0?(j[0]=Math.floor(-le),j[1]=J-this.height-j[0]):O=Math.floor(le);let R=[0,0],A=0;re<0?(R[0]=Math.floor(-re),R[1]=F-this.width-R[0]):A=Math.floor(re),ae=ae.extend({top:j[0],bottom:j[1],left:R[0],right:R[1]}).extract({left:A,top:O,width:F,height:J})}return await P(ae)}}async toBlob(F=\"image/png\",J=1){if(!xe)throw new Error(\"toBlob() is only supported in browser environments.\");return await this.toCanvas().convertToBlob({type:F,quality:J})}toTensor(F=\"CHW\"){let J=new we.Tensor(\"uint8\",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(F!==\"HWC\")if(F===\"CHW\")J=J.permute(2,0,1);else throw new Error(`Unsupported channel format: ${F}`);return J}toCanvas(){if(!xe)throw new Error(\"toCanvas() is only supported in browser environments.\");const F=this.clone().rgba(),J=T(F.width,F.height),re=new V(F.data,F.width,F.height);return J.getContext(\"2d\").putImageData(re,0,0),J}_update(F,J,re,le=null){return this.data=F,this.width=J,this.height=re,le!==null&&(this.channels=le),this}clone(){return new ne(this.data.slice(),this.width,this.height,this.channels)}convert(F){if(this.channels===F)return this;switch(F){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(F){if(xe){if(N)throw new Error(\"Unable to save an image from a Web Worker.\");const J=F.split(\".\").pop().toLowerCase(),re=ee.get(J)??\"image/png\",le=await this.toBlob(re),ae=URL.createObjectURL(le),j=document.createElement(\"a\");j.href=ae,j.download=F,j.click(),j.remove()}else{if(ie.env.useFS)return await this.toSharp().toFile(F);throw new Error(\"Unable to save the image because filesystem is disabled in this environment.\")}}toSharp(){if(xe)throw new Error(\"toSharp() is only supported in server-side environments.\");return ve(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}},\"./src/utils/maths.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{FFT:()=>me,bankers_round:()=>re,cos_sim:()=>N,dot:()=>xe,dynamic_time_warping:()=>le,interpolate_data:()=>E,log_softmax:()=>ve,magnitude:()=>T,max:()=>P,medianFilter:()=>F,min:()=>V,permute_data:()=>ie,round:()=>J,softmax:()=>we});function E(ae,[j,O,R],[A,_e],Me=\"bilinear\",ke=!1){const Oe=_e/R,Pe=A/O,st=new ae.constructor(A*_e*j),Ye=O*R,pt=A*_e;for(let ye=0;ye<A;++ye)for(let W=0;W<_e;++W){const he=ye*_e+W,Ce=(W+.5)/Oe-.5,Z=(ye+.5)/Pe-.5;let Xe=Math.floor(Ce),ht=Math.floor(Z);const it=Math.min(Xe+1,R-1),dt=Math.min(ht+1,O-1);Xe=Math.max(Xe,0),ht=Math.max(ht,0);const Ne=Ce-Xe,at=Z-ht,Et=(1-Ne)*(1-at),Be=Ne*(1-at),te=(1-Ne)*at,Ee=Ne*at,Ue=ht*R,He=dt*R,We=Ue+Xe,Qe=Ue+it,ut=He+Xe,gt=He+it;for(let vt=0;vt<j;++vt){const Ct=vt*Ye;st[vt*pt+he]=Et*ae[Ct+We]+Be*ae[Ct+Qe]+te*ae[Ct+ut]+Ee*ae[Ct+gt]}}return st}function ie(ae,j,O){const R=new Array(O.length),A=new Array(O.length);for(let ke=O.length-1,Oe=1;ke>=0;--ke)A[ke]=Oe,R[ke]=j[O[ke]],Oe*=R[ke];const _e=O.map((ke,Oe)=>A[O.indexOf(Oe)]),Me=new ae.constructor(ae.length);for(let ke=0;ke<ae.length;++ke){let Oe=0;for(let Pe=j.length-1,st=ke;Pe>=0;--Pe)Oe+=st%j[Pe]*_e[Pe],st=Math.floor(st/j[Pe]);Me[Oe]=ae[ke]}return[Me,R]}function we(ae){const j=P(ae)[0],O=ae.map(_e=>Math.exp(_e-j)),R=O.reduce((_e,Me)=>_e+Me,0);return O.map(_e=>_e/R)}function ve(ae){return we(ae).map(R=>Math.log(R))}function xe(ae,j){let O=0;for(let R=0;R<ae.length;++R)O+=ae[R]*j[R];return O}function N(ae,j){const O=xe(ae,j),R=T(ae),A=T(j);return O/(R*A)}function T(ae){return Math.sqrt(ae.reduce((j,O)=>j+O*O,0))}function V(ae){if(ae.length===0)throw Error(\"Array must not be empty\");let j=ae[0],O=0;for(let R=1;R<ae.length;++R)ae[R]<j&&(j=ae[R],O=R);return[j,O]}function P(ae){if(ae.length===0)throw Error(\"Array must not be empty\");let j=ae[0],O=0;for(let R=1;R<ae.length;++R)ae[R]>j&&(j=ae[R],O=R);return[Number(j),O]}function K(ae){return ae>0&&(ae&ae-1)===0}class ee{constructor(j){if(this.size=j|0,this.size<=1||!K(this.size))throw new Error(\"FFT size must be a power of two larger than 1\");this._csize=j<<1,this.table=new Float64Array(this.size*2);for(let R=0;R<this.table.length;R+=2){const A=Math.PI*R/this.size;this.table[R]=Math.cos(A),this.table[R+1]=-Math.sin(A)}let O=0;for(let R=1;this.size>R;R<<=1)++O;this._width=O%2===0?O-1:O,this._bitrev=new Int32Array(1<<this._width);for(let R=0;R<this._bitrev.length;++R){this._bitrev[R]=0;for(let A=0;A<this._width;A+=2){const _e=this._width-A-2;this._bitrev[R]|=(R>>>A&3)<<_e}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(j,O){const R=O||new Array(j.length>>>1);for(let A=0;A<j.length;A+=2)R[A>>>1]=j[A];return R}toComplexArray(j,O){const R=O||this.createComplexArray();for(let A=0;A<R.length;A+=2)R[A]=j[A>>>1],R[A+1]=0;return R}transform(j,O){if(j===O)throw new Error(\"Input and output buffers must be different\");this._transform4(j,O,1)}realTransform(j,O){if(j===O)throw new Error(\"Input and output buffers must be different\");this._realTransform4(j,O,1)}inverseTransform(j,O){if(j===O)throw new Error(\"Input and output buffers must be different\");this._transform4(j,O,-1);for(let R=0;R<j.length;++R)j[R]/=this.size}_transform4(j,O,R){const A=this._csize;let Me=1<<this._width,ke=A/Me<<1,Oe,Pe;const st=this._bitrev;if(ke===4)for(Oe=0,Pe=0;Oe<A;Oe+=ke,++Pe){const pt=st[Pe];this._singleTransform2(O,j,Oe,pt,Me)}else for(Oe=0,Pe=0;Oe<A;Oe+=ke,++Pe){const pt=st[Pe];this._singleTransform4(O,j,Oe,pt,Me,R)}const Ye=this.table;for(Me>>=2;Me>=2;Me>>=2){ke=A/Me<<1;const pt=ke>>>2;for(Oe=0;Oe<A;Oe+=ke){const ye=Oe+pt-1;for(let W=Oe,he=0;W<ye;W+=2,he+=Me){const Ce=W,Z=Ce+pt,Xe=Z+pt,ht=Xe+pt,it=j[Ce],dt=j[Ce+1],Ne=j[Z],at=j[Z+1],Et=j[Xe],Be=j[Xe+1],te=j[ht],Ee=j[ht+1],Ue=Ye[he],He=R*Ye[he+1],We=Ne*Ue-at*He,Qe=Ne*He+at*Ue,ut=Ye[2*he],gt=R*Ye[2*he+1],vt=Et*ut-Be*gt,Ct=Et*gt+Be*ut,M=Ye[3*he],G=R*Ye[3*he+1],k=te*M-Ee*G,Q=te*G+Ee*M,ge=it+vt,Ze=dt+Ct,tt=it-vt,zt=dt-Ct,yt=We+k,Tt=Qe+Q,bt=R*(We-k),Ae=R*(Qe-Q);j[Ce]=ge+yt,j[Ce+1]=Ze+Tt,j[Z]=tt+Ae,j[Z+1]=zt-bt,j[Xe]=ge-yt,j[Xe+1]=Ze-Tt,j[ht]=tt-Ae,j[ht+1]=zt+bt}}}}_singleTransform2(j,O,R,A,_e){const Me=j[A],ke=j[A+1],Oe=j[A+_e],Pe=j[A+_e+1];O[R]=Me+Oe,O[R+1]=ke+Pe,O[R+2]=Me-Oe,O[R+3]=ke-Pe}_singleTransform4(j,O,R,A,_e,Me){const ke=_e*2,Oe=_e*3,Pe=j[A],st=j[A+1],Ye=j[A+_e],pt=j[A+_e+1],ye=j[A+ke],W=j[A+ke+1],he=j[A+Oe],Ce=j[A+Oe+1],Z=Pe+ye,Xe=st+W,ht=Pe-ye,it=st-W,dt=Ye+he,Ne=pt+Ce,at=Me*(Ye-he),Et=Me*(pt-Ce);O[R]=Z+dt,O[R+1]=Xe+Ne,O[R+2]=ht+Et,O[R+3]=it-at,O[R+4]=Z-dt,O[R+5]=Xe-Ne,O[R+6]=ht-Et,O[R+7]=it+at}_realTransform4(j,O,R){const A=this._csize;let Me=1<<this._width,ke=A/Me<<1,Oe,Pe;const st=this._bitrev;if(ke===4)for(Oe=0,Pe=0;Oe<A;Oe+=ke,++Pe){const ye=st[Pe];this._singleRealTransform2(O,j,Oe,ye>>>1,Me>>>1)}else for(Oe=0,Pe=0;Oe<A;Oe+=ke,++Pe){const ye=st[Pe];this._singleRealTransform4(O,j,Oe,ye>>>1,Me>>>1,R)}const Ye=this.table;for(Me>>=2;Me>=2;Me>>=2){ke=A/Me<<1;const ye=ke>>>1,W=ye>>>1,he=W>>>1;for(Oe=0;Oe<A;Oe+=ke)for(let Ce=0,Z=0;Ce<=he;Ce+=2,Z+=Me){const Xe=Oe+Ce,ht=Xe+W,it=ht+W,dt=it+W,Ne=j[Xe],at=j[Xe+1],Et=j[ht],Be=j[ht+1],te=j[it],Ee=j[it+1],Ue=j[dt],He=j[dt+1],We=Ne,Qe=at,ut=Ye[Z],gt=R*Ye[Z+1],vt=Et*ut-Be*gt,Ct=Et*gt+Be*ut,M=Ye[2*Z],G=R*Ye[2*Z+1],k=te*M-Ee*G,Q=te*G+Ee*M,ge=Ye[3*Z],Ze=R*Ye[3*Z+1],tt=Ue*ge-He*Ze,zt=Ue*Ze+He*ge,yt=We+k,Tt=Qe+Q,bt=We-k,Ae=Qe-Q,D=vt+tt,ce=Ct+zt,Se=R*(vt-tt),Ge=R*(Ct-zt);if(j[Xe]=yt+D,j[Xe+1]=Tt+ce,j[ht]=bt+Ge,j[ht+1]=Ae-Se,Ce===0){j[it]=yt-D,j[it+1]=Tt-ce;continue}if(Ce===he)continue;const Fe=Oe+W-Ce,et=Oe+ye-Ce;j[Fe]=bt-R*Ge,j[Fe+1]=-Ae-R*Se,j[et]=yt-R*D,j[et+1]=-Tt+R*ce}}const pt=A>>>1;for(let ye=2;ye<pt;ye+=2)j[A-ye]=j[ye],j[A-ye+1]=-j[ye+1]}_singleRealTransform2(j,O,R,A,_e){const Me=j[A],ke=j[A+_e];O[R]=Me+ke,O[R+1]=0,O[R+2]=Me-ke,O[R+3]=0}_singleRealTransform4(j,O,R,A,_e,Me){const ke=_e*2,Oe=_e*3,Pe=j[A],st=j[A+_e],Ye=j[A+ke],pt=j[A+Oe],ye=Pe+Ye,W=Pe-Ye,he=st+pt,Ce=Me*(st-pt);O[R]=ye+he,O[R+1]=0,O[R+2]=W,O[R+3]=-Ce,O[R+4]=ye-he,O[R+5]=0,O[R+6]=W,O[R+7]=Ce}}class ne{constructor(j){const O=2*(j-1),R=2*(2*j-1),A=2**Math.ceil(Math.log2(R));this.bufferSize=A,this._a=O;const _e=new Float64Array(R),Me=new Float64Array(A);this._chirpBuffer=new Float64Array(A),this._buffer1=new Float64Array(A),this._buffer2=new Float64Array(A),this._outBuffer1=new Float64Array(A),this._outBuffer2=new Float64Array(A);const ke=-2*Math.PI/j,Oe=Math.cos(ke),Pe=Math.sin(ke);for(let st=0;st<R>>1;++st){const Ye=(st+1-j)**2/2,pt=Math.sqrt(Oe**2+Pe**2)**Ye,ye=Ye*Math.atan2(Pe,Oe),W=2*st;_e[W]=pt*Math.cos(ye),_e[W+1]=pt*Math.sin(ye),Me[W]=_e[W],Me[W+1]=-_e[W+1]}this._slicedChirpBuffer=_e.subarray(O,R),this._f=new ee(A>>1),this._f.transform(this._chirpBuffer,Me)}_transform(j,O,R){const A=this._buffer1,_e=this._buffer2,Me=this._outBuffer1,ke=this._outBuffer2,Oe=this._chirpBuffer,Pe=this._slicedChirpBuffer,st=this._a;if(R)for(let Ye=0;Ye<Pe.length;Ye+=2){const pt=Ye+1,ye=Ye>>1,W=O[ye];A[Ye]=W*Pe[Ye],A[pt]=W*Pe[pt]}else for(let Ye=0;Ye<Pe.length;Ye+=2){const pt=Ye+1;A[Ye]=O[Ye]*Pe[Ye]-O[pt]*Pe[pt],A[pt]=O[Ye]*Pe[pt]+O[pt]*Pe[Ye]}this._f.transform(Me,A);for(let Ye=0;Ye<Oe.length;Ye+=2){const pt=Ye+1;_e[Ye]=Me[Ye]*Oe[Ye]-Me[pt]*Oe[pt],_e[pt]=Me[Ye]*Oe[pt]+Me[pt]*Oe[Ye]}this._f.inverseTransform(ke,_e);for(let Ye=0;Ye<ke.length;Ye+=2){const pt=ke[Ye+st],ye=ke[Ye+st+1],W=Pe[Ye],he=Pe[Ye+1];j[Ye]=pt*W-ye*he,j[Ye+1]=pt*he+ye*W}}transform(j,O){this._transform(j,O,!1)}realTransform(j,O){this._transform(j,O,!0)}}class me{constructor(j){this.fft_length=j,this.isPowerOfTwo=K(j),this.isPowerOfTwo?(this.fft=new ee(j),this.outputBufferSize=2*j):(this.fft=new ne(j),this.outputBufferSize=this.fft.bufferSize)}realTransform(j,O){this.fft.realTransform(j,O)}transform(j,O){this.fft.transform(j,O)}}function F(ae,j){if(j%2===0||j<=0)throw new Error(\"Window size must be a positive odd number\");const O=new ae.constructor(ae.length),R=new ae.constructor(j),A=Math.floor(j/2);for(let _e=0;_e<ae.length;++_e){let Me=0;for(let ke=-A;ke<=A;++ke){let Oe=_e+ke;Oe<0?Oe=Math.abs(Oe):Oe>=ae.length&&(Oe=2*(ae.length-1)-Oe),R[Me++]=ae[Oe]}R.sort(),O[_e]=R[A]}return O}function J(ae,j){const O=Math.pow(10,j);return Math.round(ae*O)/O}function re(ae){const j=Math.round(ae);return Math.abs(ae)%1===.5?j%2===0?j:j-1:j}function le(ae){const j=ae.length,O=ae[0].length,R=[j+1,O+1],A=Array.from({length:R[0]},()=>Array(R[1]).fill(1/0));A[0][0]=0;const _e=Array.from({length:R[0]},()=>Array(R[1]).fill(-1));for(let st=1;st<R[1];++st)for(let Ye=1;Ye<R[0];++Ye){const pt=A[Ye-1][st-1],ye=A[Ye-1][st],W=A[Ye][st-1];let he,Ce;pt<ye&&pt<W?(he=pt,Ce=0):ye<pt&&ye<W?(he=ye,Ce=1):(he=W,Ce=2),A[Ye][st]=ae[Ye-1][st-1]+he,_e[Ye][st]=Ce}for(let st=0;st<R[1];++st)_e[0][st]=2;for(let st=0;st<R[0];++st)_e[st][0]=1;let Me=j,ke=O,Oe=[],Pe=[];for(;Me>0||ke>0;)switch(Oe.push(Me-1),Pe.push(ke-1),_e[Me][ke]){case 0:--Me,--ke;break;case 1:--Me;break;case 2:--ke;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${Me}, ${ke}]. Please file a bug report.`)}return Oe.reverse(),Pe.reverse(),[Oe,Pe]}},\"./src/utils/tensor.js\":(nt,fe,I)=>{I.r(fe),I.d(fe,{Tensor:()=>xe,cat:()=>ae,full:()=>Me,full_like:()=>ke,interpolate:()=>V,interpolate_4d:()=>P,layer_norm:()=>F,matmul:()=>K,mean:()=>R,mean_pooling:()=>me,ones:()=>Oe,ones_like:()=>Pe,permute:()=>T,quantize_embeddings:()=>pt,rfft:()=>ee,stack:()=>j,std_mean:()=>O,topk:()=>ne,zeros:()=>st,zeros_like:()=>Ye});var E=I(\"./src/utils/maths.js\"),ie=I(\"./src/backends/onnx.js\"),we=I(\"./src/ops/registry.js\");const ve=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array});class xe{constructor(...W){Te(this,\"ort_tensor\");return(0,ie.isONNXTensor)(W[0])?this.ort_tensor=W[0]:this.ort_tensor=new ie.Tensor(W[0],W[1],W[2]),new Proxy(this,{get:(he,Ce)=>{if(typeof Ce==\"string\"){let Z=Number(Ce);if(Number.isInteger(Z))return he._getitem(Z)}return he[Ce]},set:(he,Ce,Z)=>he[Ce]=Z})}get dims(){return this.ort_tensor.dims}set dims(W){this.ort_tensor.dims=W}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[W,...he]=this.dims;if(he.length>0){const Ce=he.reduce((Z,Xe)=>Z*Xe);for(let Z=0;Z<W;++Z)yield this._subarray(Z,Ce,he)}else yield*this.data}_getitem(W){const[he,...Ce]=this.dims;if(W=le(W,he),Ce.length>0){const Z=Ce.reduce((Xe,ht)=>Xe*ht);return this._subarray(W,Z,Ce)}else return new xe(this.type,[this.data[W]],Ce)}indexOf(W){const he=this.data;for(let Ce=0;Ce<he.length;++Ce)if(he[Ce]==W)return Ce;return-1}_subarray(W,he,Ce){const Z=W*he,Xe=(W+1)*he,ht=\"subarray\"in this.data?this.data.subarray(Z,Xe):this.data.slice(Z,Xe);return new xe(this.type,ht,Ce)}item(){const W=this.data;if(W.length!==1)throw new Error(`a Tensor with ${W.length} elements cannot be converted to Scalar`);return W[0]}tolist(){return N(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const W=this.data;for(let he=0;he<W.length;++he)W[he]=1/(1+Math.exp(-W[he]));return this}mul(W){return this.clone().mul_(W)}mul_(W){const he=this.data;for(let Ce=0;Ce<he.length;++Ce)he[Ce]*=W;return this}div(W){return this.clone().div_(W)}div_(W){const he=this.data;for(let Ce=0;Ce<he.length;++Ce)he[Ce]/=W;return this}add(W){return this.clone().add_(W)}add_(W){const he=this.data;for(let Ce=0;Ce<he.length;++Ce)he[Ce]+=W;return this}sub(W){return this.clone().sub_(W)}sub_(W){const he=this.data;for(let Ce=0;Ce<he.length;++Ce)he[Ce]-=W;return this}clone(){return new xe(this.type,this.data.slice(),this.dims.slice())}slice(...W){const he=[],Ce=[];for(let Ne=0;Ne<this.dims.length;++Ne){let at=W[Ne];if(at==null)Ce.push([0,this.dims[Ne]]),he.push(this.dims[Ne]);else if(typeof at==\"number\")at=le(at,this.dims[Ne],Ne),Ce.push([at,at+1]);else if(Array.isArray(at)&&at.length===2){let[Et,Be]=at;if(Et=Et===null?0:le(Et,this.dims[Ne],Ne,!1),Be=Be===null?this.dims[Ne]:le(Be,this.dims[Ne],Ne,!1),Et>Be)throw new Error(`Invalid slice: ${at}`);const te=[Math.max(Et,0),Math.min(Be,this.dims[Ne])];Ce.push(te),he.push(te[1]-te[0])}else throw new Error(`Invalid slice: ${at}`)}const Z=Ce.map(([Ne,at])=>at-Ne),Xe=Z.reduce((Ne,at)=>Ne*at),ht=this.data,it=new ht.constructor(Xe),dt=this.stride();for(let Ne=0;Ne<Xe;++Ne){let at=0;for(let Et=Z.length-1,Be=Ne;Et>=0;--Et){const te=Z[Et];at+=(Be%te+Ce[Et][0])*dt[Et],Be=Math.floor(Be/te)}it[Ne]=ht[at]}return new xe(this.type,it,he)}permute(...W){return T(this,W)}transpose(...W){return this.permute(...W)}sum(W=null,he=!1){return this.norm(1,W,he)}norm(W=\"fro\",he=null,Ce=!1){if(W===\"fro\")W=2;else if(typeof W==\"string\")throw Error(`Unsupported norm: ${W}`);const Z=this.data;if(he===null){let it=Z.reduce((dt,Ne)=>dt+Ne**W,0)**(1/W);return new xe(this.type,[it],[])}he=le(he,this.dims.length);const Xe=this.dims.slice();Xe[he]=1;const ht=new Z.constructor(Z.length/this.dims[he]);for(let it=0;it<Z.length;++it){let dt=0;for(let Ne=this.dims.length-1,at=it,Et=1;Ne>=0;--Ne){const Be=this.dims[Ne];if(Ne!==he){const te=at%Be;dt+=te*Et,Et*=Xe[Ne]}at=Math.floor(at/Be)}ht[dt]+=Z[it]**W}if(W!==1)for(let it=0;it<ht.length;++it)ht[it]=ht[it]**(1/W);return Ce||Xe.splice(he,1),new xe(this.type,ht,Xe)}normalize_(W=2,he=1){he=le(he,this.dims.length);const Ce=this.norm(W,he,!0),Z=this.data,Xe=Ce.data;for(let ht=0;ht<Z.length;++ht){let it=0;for(let dt=this.dims.length-1,Ne=ht,at=1;dt>=0;--dt){const Et=this.dims[dt];if(dt!==he){const Be=Ne%Et;it+=Be*at,at*=this.dims[dt]}Ne=Math.floor(Ne/Et)}Z[ht]/=Xe[it]}return this}normalize(W=2,he=1){return this.clone().normalize_(W,he)}stride(){return A(this.dims)}squeeze(W=null){return new xe(this.type,this.data,J(this.dims,W))}squeeze_(W=null){return this.dims=J(this.dims,W),this}unsqueeze(W=null){return new xe(this.type,this.data,re(this.dims,W))}unsqueeze_(W=null){return this.dims=re(this.dims,W),this}flatten_(W=0,he=-1){he=(he+this.dims.length)%this.dims.length;let Ce=this.dims.slice(0,W),Z=this.dims.slice(W,he+1),Xe=this.dims.slice(he+1);return this.dims=[...Ce,Z.reduce((ht,it)=>ht*it,1),...Xe],this}flatten(W=0,he=-1){return this.clone().flatten_(W,he)}view(...W){let he=-1;for(let Z=0;Z<W.length;++Z)if(W[Z]===-1){if(he!==-1)throw new Error(\"Only one dimension can be inferred\");he=Z}const Ce=this.data;if(he!==-1){const Z=W.reduce((Xe,ht,it)=>it!==he?Xe*ht:Xe,1);W[he]=Ce.length/Z}return new xe(this.type,Ce,W)}neg_(){const W=this.data;for(let he=0;he<W.length;++he)W[he]=-W[he];return this}neg(){return this.clone().neg_()}clamp_(W,he){const Ce=this.data;for(let Z=0;Z<Ce.length;++Z)Ce[Z]=Math.min(Math.max(Ce[Z],W),he);return this}clamp(W,he){return this.clone().clamp_(W,he)}round_(){const W=this.data;for(let he=0;he<W.length;++he)W[he]=Math.round(W[he]);return this}round(){return this.clone().round_()}mean(W=null,he=!1){return R(this,W,he)}to(W){if(this.type===W)return this;if(!ve.hasOwnProperty(W))throw new Error(`Unsupported type: ${W}`);return new xe(W,ve[W].from(this.data),this.dims)}}function N(ye,W){const he=ye.length,Ce=W.reduce((Xe,ht)=>Xe*ht);if(he!==Ce)throw Error(`cannot reshape array of size ${he} into shape (${W})`);let Z=ye;for(let Xe=W.length-1;Xe>=0;Xe--)Z=Z.reduce((ht,it)=>{let dt=ht[ht.length-1];return dt.length<W[Xe]?dt.push(it):ht.push([it]),ht},[[]]);return Z[0]}function T(ye,W){const[he,Ce]=(0,E.permute_data)(ye.data,ye.dims,W);return new xe(ye.type,he,Ce)}function V(ye,[W,he],Ce=\"bilinear\",Z=!1){const Xe=ye.dims.at(-3)??1,ht=ye.dims.at(-2),it=ye.dims.at(-1);let dt=(0,E.interpolate_data)(ye.data,[Xe,ht,it],[W,he],Ce,Z);return new xe(ye.type,dt,[Xe,W,he])}async function P(ye,{size:W=null,mode:he=\"bilinear\"}={}){if(ye.dims.length!==4)throw new Error(\"`interpolate_4d` currently only supports 4D input.\");if(!W)throw new Error(\"`interpolate_4d` requires a `size` argument.\");let Ce;if(W.length===2)Ce=[...ye.dims.slice(0,2),...W];else if(W.length===3)Ce=[ye.dims[0],...W];else if(W.length===4)Ce=W;else throw new Error(\"`size` must be of length 2, 3, or 4.\");let Z;if(he===\"bilinear\")Z=await we.TensorOpRegistry.bilinear_interpolate_4d;else if(he===\"bicubic\")Z=await we.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${he}`);const Xe=new xe(\"int64\",new BigInt64Array(Ce.map(BigInt)),[Ce.length]);return await Z({x:ye,s:Xe})}async function K(ye,W){return await(await we.TensorOpRegistry.matmul)({a:ye,b:W})}async function ee(ye,W){return await(await we.TensorOpRegistry.rfft)({x:ye,a:W})}async function ne(ye,W){const he=await we.TensorOpRegistry.top_k;return W===null?W=ye.dims.at(-1):W=Math.min(W,ye.dims.at(-1)),await he({x:ye,k:new xe(\"int64\",[BigInt(W)],[1])})}function me(ye,W){const he=ye.data,Ce=W.data,Z=[ye.dims[0],ye.dims[2]],Xe=new he.constructor(Z[0]*Z[1]),[ht,it,dt]=ye.dims;let Ne=0;for(let at=0;at<ht;++at){const Et=at*dt*it;for(let Be=0;Be<dt;++Be){let te=0,Ee=0;const Ue=at*it,He=Et+Be;for(let Qe=0;Qe<it;++Qe){const ut=Number(Ce[Ue+Qe]);Ee+=ut,te+=he[He+Qe*dt]*ut}const We=te/Ee;Xe[Ne++]=We}}return new xe(ye.type,Xe,Z)}function F(ye,W,{eps:he=1e-5}={}){if(ye.dims.length!==2)throw new Error(\"`layer_norm` currently only supports 2D input.\");const[Ce,Z]=ye.dims;if(W.length!==1&&W[0]!==Z)throw new Error(\"`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.\");const[Xe,ht]=O(ye,1,0,!0),it=Xe.data,dt=ht.data,Ne=ye.data,at=new Ne.constructor(Ne.length);for(let Et=0;Et<Ce;++Et){const Be=Et*Z;for(let te=0;te<Z;++te){const Ee=Be+te;at[Ee]=(Ne[Ee]-dt[Et])/(it[Et]+he)}}return new xe(ye.type,at,ye.dims)}function J(ye,W){return ye=ye.slice(),W===null?ye=ye.filter(he=>he!==1):typeof W==\"number\"?ye[W]===1&&ye.splice(W,1):Array.isArray(W)&&(ye=ye.filter((he,Ce)=>he!==1||!W.includes(Ce))),ye}function re(ye,W){return W=le(W,ye.length+1),ye=ye.slice(),ye.splice(W,0,1),ye}function le(ye,W,he=null,Ce=!0){if(Ce&&(ye<-W||ye>=W))throw new Error(`IndexError: index ${ye} is out of bounds for dimension${he===null?\"\":\" \"+he} with size ${W}`);return ye<0&&(ye=(ye%W+W)%W),ye}function ae(ye,W=0){W=le(W,ye[0].dims.length);const he=ye[0].dims.slice();he[W]=ye.reduce((ht,it)=>ht+it.dims[W],0);const Ce=he.reduce((ht,it)=>ht*it,1),Z=new ye[0].data.constructor(Ce),Xe=ye[0].type;if(W===0){let ht=0;for(const it of ye){const dt=it.data;Z.set(dt,ht),ht+=dt.length}}else{let ht=0;for(let it=0;it<ye.length;++it){const{data:dt,dims:Ne}=ye[it];for(let at=0;at<dt.length;++at){let Et=0;for(let Be=Ne.length-1,te=at,Ee=1;Be>=0;--Be){const Ue=Ne[Be];let He=te%Ue;Be===W&&(He+=ht),Et+=He*Ee,Ee*=he[Be],te=Math.floor(te/Ue)}Z[Et]=dt[at]}ht+=Ne[W]}}return new xe(Xe,Z,he)}function j(ye,W=0){return ae(ye.map(he=>he.unsqueeze(W)),W)}function O(ye,W=null,he=1,Ce=!1){const Z=ye.data,Xe=ye.dims;if(W===null){const Be=Z.reduce((He,We)=>He+We,0)/Z.length,te=Math.sqrt(Z.reduce((He,We)=>He+(We-Be)**2,0)/(Z.length-he)),Ee=new xe(ye.type,[Be],[]);return[new xe(ye.type,[te],[]),Ee]}W=le(W,Xe.length);const ht=R(ye,W,Ce),it=ht.data,dt=Xe.slice();dt[W]=1;const Ne=new Z.constructor(Z.length/Xe[W]);for(let Et=0;Et<Z.length;++Et){let Be=0;for(let te=Xe.length-1,Ee=Et,Ue=1;te>=0;--te){const He=Xe[te];if(te!==W){const We=Ee%He;Be+=We*Ue,Ue*=dt[te]}Ee=Math.floor(Ee/He)}Ne[Be]+=(Z[Et]-it[Be])**2}for(let Et=0;Et<Ne.length;++Et)Ne[Et]=Math.sqrt(Ne[Et]/(Xe[W]-he));return Ce||dt.splice(W,1),[new xe(ye.type,Ne,dt),ht]}function R(ye,W=null,he=!1){const Ce=ye.data;if(W===null){const it=Ce.reduce((dt,Ne)=>dt+Ne,0);return new xe(ye.type,[it/Ce.length],[])}const Z=ye.dims;W=le(W,Z.length);const Xe=Z.slice();Xe[W]=1;const ht=new Ce.constructor(Ce.length/Z[W]);for(let it=0;it<Ce.length;++it){let dt=0;for(let Ne=Z.length-1,at=it,Et=1;Ne>=0;--Ne){const Be=Z[Ne];if(Ne!==W){const te=at%Be;dt+=te*Et,Et*=Xe[Ne]}at=Math.floor(at/Be)}ht[dt]+=Ce[it]}if(Z[W]!==1)for(let it=0;it<ht.length;++it)ht[it]=ht[it]/Z[W];return he||Xe.splice(W,1),new xe(ye.type,ht,Xe)}function A(ye){const W=new Array(ye.length);for(let he=ye.length-1,Ce=1;he>=0;--he)W[he]=Ce,Ce*=ye[he];return W}function _e(ye,W,he,Ce){const Z=ye.reduce((Xe,ht)=>Xe*ht,1);return new xe(he,new Ce(Z).fill(W),ye)}function Me(ye,W){let he,Ce;if(typeof W==\"number\")he=\"float32\",Ce=Float32Array;else if(typeof W==\"bigint\")he=\"int64\",Ce=BigInt64Array;else throw new Error(`Unsupported data type: ${typeof W}`);return _e(ye,W,he,Ce)}function ke(ye,W){return Me(ye.dims,W)}function Oe(ye){return _e(ye,1n,\"int64\",BigInt64Array)}function Pe(ye){return Oe(ye.dims)}function st(ye){return _e(ye,0n,\"int64\",BigInt64Array)}function Ye(ye){return st(ye.dims)}function pt(ye,W){if(ye.dims.length!==2)throw new Error(\"The tensor must have 2 dimensions\");if(ye.dims.at(-1)%8!==0)throw new Error(\"The last dimension of the tensor must be a multiple of 8\");if(![\"binary\",\"ubinary\"].includes(W))throw new Error(\"The precision must be either 'binary' or 'ubinary'\");const he=W===\"binary\",Ce=he?\"int8\":\"uint8\",Z=he?Int8Array:Uint8Array,Xe=ye.data,ht=new Z(Xe.length/8);for(let it=0;it<Xe.length;++it){const dt=Xe[it]>0?1:0,Ne=Math.floor(it/8),at=it%8;ht[Ne]|=dt<<7-at,he&&at===0&&(ht[Ne]-=128)}return new xe(Ce,ht,[ye.dims[0],ye.dims[1]/8])}}},Sf={};function Hr(nt){var fe=Sf[nt];if(fe!==void 0)return fe.exports;var I=Sf[nt]={exports:{}};return Ef[nt](I,I.exports,Hr),I.exports}Hr.m=Ef;(()=>{var nt=Object.getPrototypeOf?I=>Object.getPrototypeOf(I):I=>I.__proto__,fe;Hr.t=function(I,E){if(E&1&&(I=this(I)),E&8||typeof I==\"object\"&&I&&(E&4&&I.__esModule||E&16&&typeof I.then==\"function\"))return I;var ie=Object.create(null);Hr.r(ie);var we={};fe=fe||[null,nt({}),nt([]),nt(nt)];for(var ve=E&2&&I;typeof ve==\"object\"&&!~fe.indexOf(ve);ve=nt(ve))Object.getOwnPropertyNames(ve).forEach(xe=>we[xe]=()=>I[xe]);return we.default=()=>I,Hr.d(ie,we),ie}})();Hr.d=(nt,fe)=>{for(var I in fe)Hr.o(fe,I)&&!Hr.o(nt,I)&&Object.defineProperty(nt,I,{enumerable:!0,get:fe[I]})};Hr.o=(nt,fe)=>Object.prototype.hasOwnProperty.call(nt,fe);Hr.r=nt=>{typeof Symbol<\"u\"&&Symbol.toStringTag&&Object.defineProperty(nt,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(nt,\"__esModule\",{value:!0})};(()=>{var nt;if(typeof import.meta.url==\"string\"&&(nt=import.meta.url),!nt)throw new Error(\"Automatic publicPath is not supported in this browser\");nt=nt.replace(/#.*$/,\"\").replace(/\\?.*$/,\"\").replace(/\\/[^\\/]+$/,\"/\"),Hr.p=nt})();Hr.b=new URL(\"./\",import.meta.url);var p={};/*!*****************************!*\\\n  !*** ./src/transformers.js ***!\n  \\*****************************/Hr.r(p);Hr.d(p,{ASTFeatureExtractor:()=>tr.ASTFeatureExtractor,ASTForAudioClassification:()=>b.ASTForAudioClassification,ASTModel:()=>b.ASTModel,ASTPreTrainedModel:()=>b.ASTPreTrainedModel,AlbertForMaskedLM:()=>b.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>b.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>b.AlbertForSequenceClassification,AlbertModel:()=>b.AlbertModel,AlbertPreTrainedModel:()=>b.AlbertPreTrainedModel,AlbertTokenizer:()=>ir.AlbertTokenizer,AudioClassificationPipeline:()=>qr.AudioClassificationPipeline,AutoConfig:()=>Dc.AutoConfig,AutoModel:()=>b.AutoModel,AutoModelForAudioClassification:()=>b.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>b.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>b.AutoModelForCTC,AutoModelForCausalLM:()=>b.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>b.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>b.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>b.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>b.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>b.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>b.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>b.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>b.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>b.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>b.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>b.AutoModelForObjectDetection,AutoModelForQuestionAnswering:()=>b.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>b.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>b.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>b.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>b.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>b.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>b.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>b.AutoModelForTokenClassification,AutoModelForVision2Seq:()=>b.AutoModelForVision2Seq,AutoModelForXVector:()=>b.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>b.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>tr.AutoProcessor,AutoTokenizer:()=>ir.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>qr.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>b.BartForConditionalGeneration,BartForSequenceClassification:()=>b.BartForSequenceClassification,BartModel:()=>b.BartModel,BartPretrainedModel:()=>b.BartPretrainedModel,BartTokenizer:()=>ir.BartTokenizer,BaseModelOutput:()=>b.BaseModelOutput,BaseStreamer:()=>Bc.BaseStreamer,BeitFeatureExtractor:()=>tr.BeitFeatureExtractor,BeitForImageClassification:()=>b.BeitForImageClassification,BeitModel:()=>b.BeitModel,BeitPreTrainedModel:()=>b.BeitPreTrainedModel,BertForMaskedLM:()=>b.BertForMaskedLM,BertForQuestionAnswering:()=>b.BertForQuestionAnswering,BertForSequenceClassification:()=>b.BertForSequenceClassification,BertForTokenClassification:()=>b.BertForTokenClassification,BertModel:()=>b.BertModel,BertPreTrainedModel:()=>b.BertPreTrainedModel,BertTokenizer:()=>ir.BertTokenizer,BitImageProcessor:()=>tr.BitImageProcessor,BlenderbotForConditionalGeneration:()=>b.BlenderbotForConditionalGeneration,BlenderbotModel:()=>b.BlenderbotModel,BlenderbotPreTrainedModel:()=>b.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>b.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>b.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>b.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>ir.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>ir.BlenderbotTokenizer,BloomForCausalLM:()=>b.BloomForCausalLM,BloomModel:()=>b.BloomModel,BloomPreTrainedModel:()=>b.BloomPreTrainedModel,BloomTokenizer:()=>ir.BloomTokenizer,CLIPFeatureExtractor:()=>tr.CLIPFeatureExtractor,CLIPImageProcessor:()=>tr.CLIPImageProcessor,CLIPModel:()=>b.CLIPModel,CLIPPreTrainedModel:()=>b.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>b.CLIPSegForImageSegmentation,CLIPSegModel:()=>b.CLIPSegModel,CLIPSegPreTrainedModel:()=>b.CLIPSegPreTrainedModel,CLIPTextModelWithProjection:()=>b.CLIPTextModelWithProjection,CLIPTokenizer:()=>ir.CLIPTokenizer,CLIPVisionModelWithProjection:()=>b.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>b.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>b.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>b.CamembertForSequenceClassification,CamembertForTokenClassification:()=>b.CamembertForTokenClassification,CamembertModel:()=>b.CamembertModel,CamembertPreTrainedModel:()=>b.CamembertPreTrainedModel,CamembertTokenizer:()=>ir.CamembertTokenizer,CausalLMOutput:()=>b.CausalLMOutput,CausalLMOutputWithPast:()=>b.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>tr.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>b.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>b.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>b.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>tr.ClapFeatureExtractor,ClapModel:()=>b.ClapModel,ClapPreTrainedModel:()=>b.ClapPreTrainedModel,ClapTextModelWithProjection:()=>b.ClapTextModelWithProjection,CodeGenForCausalLM:()=>b.CodeGenForCausalLM,CodeGenModel:()=>b.CodeGenModel,CodeGenPreTrainedModel:()=>b.CodeGenPreTrainedModel,CodeGenTokenizer:()=>ir.CodeGenTokenizer,CodeLlamaTokenizer:()=>ir.CodeLlamaTokenizer,CohereForCausalLM:()=>b.CohereForCausalLM,CohereModel:()=>b.CohereModel,CoherePreTrainedModel:()=>b.CoherePreTrainedModel,CohereTokenizer:()=>ir.CohereTokenizer,ConvBertForMaskedLM:()=>b.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>b.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>b.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>b.ConvBertForTokenClassification,ConvBertModel:()=>b.ConvBertModel,ConvBertPreTrainedModel:()=>b.ConvBertPreTrainedModel,ConvBertTokenizer:()=>ir.ConvBertTokenizer,ConvNextFeatureExtractor:()=>tr.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>b.ConvNextForImageClassification,ConvNextImageProcessor:()=>tr.ConvNextImageProcessor,ConvNextModel:()=>b.ConvNextModel,ConvNextPreTrainedModel:()=>b.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>b.ConvNextV2ForImageClassification,ConvNextV2Model:()=>b.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>b.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>tr.DPTFeatureExtractor,DPTForDepthEstimation:()=>b.DPTForDepthEstimation,DPTImageProcessor:()=>tr.DPTImageProcessor,DPTModel:()=>b.DPTModel,DPTPreTrainedModel:()=>b.DPTPreTrainedModel,DebertaForMaskedLM:()=>b.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>b.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>b.DebertaForSequenceClassification,DebertaForTokenClassification:()=>b.DebertaForTokenClassification,DebertaModel:()=>b.DebertaModel,DebertaPreTrainedModel:()=>b.DebertaPreTrainedModel,DebertaTokenizer:()=>ir.DebertaTokenizer,DebertaV2ForMaskedLM:()=>b.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>b.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>b.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>b.DebertaV2ForTokenClassification,DebertaV2Model:()=>b.DebertaV2Model,DebertaV2PreTrainedModel:()=>b.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>ir.DebertaV2Tokenizer,DeiTFeatureExtractor:()=>tr.DeiTFeatureExtractor,DeiTForImageClassification:()=>b.DeiTForImageClassification,DeiTModel:()=>b.DeiTModel,DeiTPreTrainedModel:()=>b.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>b.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>b.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>qr.DepthEstimationPipeline,DetrFeatureExtractor:()=>tr.DetrFeatureExtractor,DetrForObjectDetection:()=>b.DetrForObjectDetection,DetrForSegmentation:()=>b.DetrForSegmentation,DetrModel:()=>b.DetrModel,DetrObjectDetectionOutput:()=>b.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>b.DetrPreTrainedModel,DetrSegmentationOutput:()=>b.DetrSegmentationOutput,Dinov2ForImageClassification:()=>b.Dinov2ForImageClassification,Dinov2Model:()=>b.Dinov2Model,Dinov2PreTrainedModel:()=>b.Dinov2PreTrainedModel,DistilBertForMaskedLM:()=>b.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>b.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>b.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>b.DistilBertForTokenClassification,DistilBertModel:()=>b.DistilBertModel,DistilBertPreTrainedModel:()=>b.DistilBertPreTrainedModel,DistilBertTokenizer:()=>ir.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>qr.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>tr.DonutFeatureExtractor,DonutSwinModel:()=>b.DonutSwinModel,DonutSwinPreTrainedModel:()=>b.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>b.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>tr.EfficientNetImageProcessor,EfficientNetModel:()=>b.EfficientNetModel,EfficientNetPreTrainedModel:()=>b.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>b.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>b.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>b.ElectraForSequenceClassification,ElectraForTokenClassification:()=>b.ElectraForTokenClassification,ElectraModel:()=>b.ElectraModel,ElectraPreTrainedModel:()=>b.ElectraPreTrainedModel,ElectraTokenizer:()=>ir.ElectraTokenizer,EosTokenCriteria:()=>Xu.EosTokenCriteria,EsmForMaskedLM:()=>b.EsmForMaskedLM,EsmForSequenceClassification:()=>b.EsmForSequenceClassification,EsmForTokenClassification:()=>b.EsmForTokenClassification,EsmModel:()=>b.EsmModel,EsmPreTrainedModel:()=>b.EsmPreTrainedModel,EsmTokenizer:()=>ir.EsmTokenizer,FFT:()=>An.FFT,FalconForCausalLM:()=>b.FalconForCausalLM,FalconModel:()=>b.FalconModel,FalconPreTrainedModel:()=>b.FalconPreTrainedModel,FalconTokenizer:()=>ir.FalconTokenizer,FastViTForImageClassification:()=>b.FastViTForImageClassification,FastViTModel:()=>b.FastViTModel,FastViTPreTrainedModel:()=>b.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>qr.FeatureExtractionPipeline,FeatureExtractor:()=>tr.FeatureExtractor,FillMaskPipeline:()=>qr.FillMaskPipeline,Florence2ForConditionalGeneration:()=>b.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>b.Florence2PreTrainedModel,Florence2Processor:()=>tr.Florence2Processor,GLPNFeatureExtractor:()=>tr.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>b.GLPNForDepthEstimation,GLPNModel:()=>b.GLPNModel,GLPNPreTrainedModel:()=>b.GLPNPreTrainedModel,GPT2LMHeadModel:()=>b.GPT2LMHeadModel,GPT2Model:()=>b.GPT2Model,GPT2PreTrainedModel:()=>b.GPT2PreTrainedModel,GPT2Tokenizer:()=>ir.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>b.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>b.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>b.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>b.GPTJForCausalLM,GPTJModel:()=>b.GPTJModel,GPTJPreTrainedModel:()=>b.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>b.GPTNeoForCausalLM,GPTNeoModel:()=>b.GPTNeoModel,GPTNeoPreTrainedModel:()=>b.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>b.GPTNeoXForCausalLM,GPTNeoXModel:()=>b.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>b.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>ir.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>b.Gemma2ForCausalLM,Gemma2Model:()=>b.Gemma2Model,Gemma2PreTrainedModel:()=>b.Gemma2PreTrainedModel,GemmaForCausalLM:()=>b.GemmaForCausalLM,GemmaModel:()=>b.GemmaModel,GemmaPreTrainedModel:()=>b.GemmaPreTrainedModel,GemmaTokenizer:()=>ir.GemmaTokenizer,Grok1Tokenizer:()=>ir.Grok1Tokenizer,HerbertTokenizer:()=>ir.HerbertTokenizer,HieraForImageClassification:()=>b.HieraForImageClassification,HieraModel:()=>b.HieraModel,HieraPreTrainedModel:()=>b.HieraPreTrainedModel,HubertForCTC:()=>b.HubertForCTC,HubertForSequenceClassification:()=>b.HubertForSequenceClassification,HubertModel:()=>b.HubertModel,HubertPreTrainedModel:()=>b.HubertPreTrainedModel,ImageClassificationPipeline:()=>qr.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>qr.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>tr.ImageFeatureExtractor,ImageMattingOutput:()=>b.ImageMattingOutput,ImageSegmentationPipeline:()=>qr.ImageSegmentationPipeline,ImageToImagePipeline:()=>qr.ImageToImagePipeline,ImageToTextPipeline:()=>qr.ImageToTextPipeline,InterruptableStoppingCriteria:()=>Xu.InterruptableStoppingCriteria,JAISLMHeadModel:()=>b.JAISLMHeadModel,JAISModel:()=>b.JAISModel,JAISPreTrainedModel:()=>b.JAISPreTrainedModel,LlamaForCausalLM:()=>b.LlamaForCausalLM,LlamaModel:()=>b.LlamaModel,LlamaPreTrainedModel:()=>b.LlamaPreTrainedModel,LlamaTokenizer:()=>ir.LlamaTokenizer,LlavaForConditionalGeneration:()=>b.LlavaForConditionalGeneration,LlavaPreTrainedModel:()=>b.LlavaPreTrainedModel,LongT5ForConditionalGeneration:()=>b.LongT5ForConditionalGeneration,LongT5Model:()=>b.LongT5Model,LongT5PreTrainedModel:()=>b.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>b.M2M100ForConditionalGeneration,M2M100Model:()=>b.M2M100Model,M2M100PreTrainedModel:()=>b.M2M100PreTrainedModel,M2M100Tokenizer:()=>ir.M2M100Tokenizer,MBart50Tokenizer:()=>ir.MBart50Tokenizer,MBartForCausalLM:()=>b.MBartForCausalLM,MBartForConditionalGeneration:()=>b.MBartForConditionalGeneration,MBartForSequenceClassification:()=>b.MBartForSequenceClassification,MBartModel:()=>b.MBartModel,MBartPreTrainedModel:()=>b.MBartPreTrainedModel,MBartTokenizer:()=>ir.MBartTokenizer,MPNetForMaskedLM:()=>b.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>b.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>b.MPNetForSequenceClassification,MPNetForTokenClassification:()=>b.MPNetForTokenClassification,MPNetModel:()=>b.MPNetModel,MPNetPreTrainedModel:()=>b.MPNetPreTrainedModel,MPNetTokenizer:()=>ir.MPNetTokenizer,MT5ForConditionalGeneration:()=>b.MT5ForConditionalGeneration,MT5Model:()=>b.MT5Model,MT5PreTrainedModel:()=>b.MT5PreTrainedModel,MarianMTModel:()=>b.MarianMTModel,MarianModel:()=>b.MarianModel,MarianPreTrainedModel:()=>b.MarianPreTrainedModel,MarianTokenizer:()=>ir.MarianTokenizer,MaskedLMOutput:()=>b.MaskedLMOutput,MaxLengthCriteria:()=>Xu.MaxLengthCriteria,MistralForCausalLM:()=>b.MistralForCausalLM,MistralModel:()=>b.MistralModel,MistralPreTrainedModel:()=>b.MistralPreTrainedModel,MobileBertForMaskedLM:()=>b.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>b.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>b.MobileBertForSequenceClassification,MobileBertModel:()=>b.MobileBertModel,MobileBertPreTrainedModel:()=>b.MobileBertPreTrainedModel,MobileBertTokenizer:()=>ir.MobileBertTokenizer,MobileNetV1FeatureExtractor:()=>tr.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>b.MobileNetV1ForImageClassification,MobileNetV1Model:()=>b.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>b.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>tr.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>b.MobileNetV2ForImageClassification,MobileNetV2Model:()=>b.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>b.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>tr.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>b.MobileNetV3ForImageClassification,MobileNetV3Model:()=>b.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>b.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>tr.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>b.MobileNetV4ForImageClassification,MobileNetV4Model:()=>b.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>b.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>tr.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>b.MobileViTForImageClassification,MobileViTImageProcessor:()=>tr.MobileViTImageProcessor,MobileViTModel:()=>b.MobileViTModel,MobileViTPreTrainedModel:()=>b.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>b.MobileViTV2ForImageClassification,MobileViTV2Model:()=>b.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>b.MobileViTV2PreTrainedModel,ModelOutput:()=>b.ModelOutput,Moondream1ForConditionalGeneration:()=>b.Moondream1ForConditionalGeneration,MptForCausalLM:()=>b.MptForCausalLM,MptModel:()=>b.MptModel,MptPreTrainedModel:()=>b.MptPreTrainedModel,MusicgenForCausalLM:()=>b.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>b.MusicgenForConditionalGeneration,MusicgenModel:()=>b.MusicgenModel,MusicgenPreTrainedModel:()=>b.MusicgenPreTrainedModel,NllbTokenizer:()=>ir.NllbTokenizer,NomicBertModel:()=>b.NomicBertModel,NomicBertPreTrainedModel:()=>b.NomicBertPreTrainedModel,NougatImageProcessor:()=>tr.NougatImageProcessor,NougatTokenizer:()=>ir.NougatTokenizer,OPTForCausalLM:()=>b.OPTForCausalLM,OPTModel:()=>b.OPTModel,OPTPreTrainedModel:()=>b.OPTPreTrainedModel,ObjectDetectionPipeline:()=>qr.ObjectDetectionPipeline,OpenELMForCausalLM:()=>b.OpenELMForCausalLM,OpenELMModel:()=>b.OpenELMModel,OpenELMPreTrainedModel:()=>b.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>tr.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>b.OwlViTForObjectDetection,OwlViTModel:()=>b.OwlViTModel,OwlViTPreTrainedModel:()=>b.OwlViTPreTrainedModel,OwlViTProcessor:()=>tr.OwlViTProcessor,Owlv2ForObjectDetection:()=>b.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>tr.Owlv2ImageProcessor,Owlv2Model:()=>b.Owlv2Model,Owlv2PreTrainedModel:()=>b.Owlv2PreTrainedModel,Phi3ForCausalLM:()=>b.Phi3ForCausalLM,Phi3Model:()=>b.Phi3Model,Phi3PreTrainedModel:()=>b.Phi3PreTrainedModel,PhiForCausalLM:()=>b.PhiForCausalLM,PhiModel:()=>b.PhiModel,PhiPreTrainedModel:()=>b.PhiPreTrainedModel,Pipeline:()=>qr.Pipeline,PreTrainedModel:()=>b.PreTrainedModel,PreTrainedTokenizer:()=>ir.PreTrainedTokenizer,PretrainedConfig:()=>Dc.PretrainedConfig,PretrainedMixin:()=>b.PretrainedMixin,Processor:()=>tr.Processor,PyAnnoteFeatureExtractor:()=>tr.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>b.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>b.PyAnnoteModel,PyAnnotePreTrainedModel:()=>b.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>tr.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>b.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>qr.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>b.Qwen2ForCausalLM,Qwen2Model:()=>b.Qwen2Model,Qwen2PreTrainedModel:()=>b.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>ir.Qwen2Tokenizer,RTDetrForObjectDetection:()=>b.RTDetrForObjectDetection,RTDetrImageProcessor:()=>tr.RTDetrImageProcessor,RTDetrModel:()=>b.RTDetrModel,RTDetrObjectDetectionOutput:()=>b.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>b.RTDetrPreTrainedModel,RawImage:()=>M_.RawImage,ResNetForImageClassification:()=>b.ResNetForImageClassification,ResNetModel:()=>b.ResNetModel,ResNetPreTrainedModel:()=>b.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>b.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>b.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>b.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>b.RoFormerForTokenClassification,RoFormerModel:()=>b.RoFormerModel,RoFormerPreTrainedModel:()=>b.RoFormerPreTrainedModel,RoFormerTokenizer:()=>ir.RoFormerTokenizer,RobertaForMaskedLM:()=>b.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>b.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>b.RobertaForSequenceClassification,RobertaForTokenClassification:()=>b.RobertaForTokenClassification,RobertaModel:()=>b.RobertaModel,RobertaPreTrainedModel:()=>b.RobertaPreTrainedModel,RobertaTokenizer:()=>ir.RobertaTokenizer,SamImageProcessor:()=>tr.SamImageProcessor,SamImageSegmentationOutput:()=>b.SamImageSegmentationOutput,SamModel:()=>b.SamModel,SamPreTrainedModel:()=>b.SamPreTrainedModel,SamProcessor:()=>tr.SamProcessor,SapiensFeatureExtractor:()=>tr.SapiensFeatureExtractor,SapiensForDepthEstimation:()=>b.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>b.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>b.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>b.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>tr.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>tr.SegformerFeatureExtractor,SegformerForImageClassification:()=>b.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>b.SegformerForSemanticSegmentation,SegformerModel:()=>b.SegformerModel,SegformerPreTrainedModel:()=>b.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>b.Seq2SeqLMOutput,SequenceClassifierOutput:()=>b.SequenceClassifierOutput,SiglipImageProcessor:()=>tr.SiglipImageProcessor,SiglipModel:()=>b.SiglipModel,SiglipPreTrainedModel:()=>b.SiglipPreTrainedModel,SiglipTextModel:()=>b.SiglipTextModel,SiglipTokenizer:()=>ir.SiglipTokenizer,SiglipVisionModel:()=>b.SiglipVisionModel,SpeechT5FeatureExtractor:()=>tr.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>b.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>b.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>b.SpeechT5HifiGan,SpeechT5Model:()=>b.SpeechT5Model,SpeechT5PreTrainedModel:()=>b.SpeechT5PreTrainedModel,SpeechT5Processor:()=>tr.SpeechT5Processor,SpeechT5Tokenizer:()=>ir.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>b.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>b.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>b.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>b.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>b.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>ir.SqueezeBertTokenizer,StableLmForCausalLM:()=>b.StableLmForCausalLM,StableLmModel:()=>b.StableLmModel,StableLmPreTrainedModel:()=>b.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>b.Starcoder2ForCausalLM,Starcoder2Model:()=>b.Starcoder2Model,Starcoder2PreTrainedModel:()=>b.Starcoder2PreTrainedModel,StoppingCriteria:()=>Xu.StoppingCriteria,StoppingCriteriaList:()=>Xu.StoppingCriteriaList,SummarizationPipeline:()=>qr.SummarizationPipeline,Swin2SRForImageSuperResolution:()=>b.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>tr.Swin2SRImageProcessor,Swin2SRModel:()=>b.Swin2SRModel,Swin2SRPreTrainedModel:()=>b.Swin2SRPreTrainedModel,SwinForImageClassification:()=>b.SwinForImageClassification,SwinModel:()=>b.SwinModel,SwinPreTrainedModel:()=>b.SwinPreTrainedModel,T5ForConditionalGeneration:()=>b.T5ForConditionalGeneration,T5Model:()=>b.T5Model,T5PreTrainedModel:()=>b.T5PreTrainedModel,T5Tokenizer:()=>ir.T5Tokenizer,TableTransformerForObjectDetection:()=>b.TableTransformerForObjectDetection,TableTransformerModel:()=>b.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>b.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>b.TableTransformerPreTrainedModel,Tensor:()=>nn.Tensor,Text2TextGenerationPipeline:()=>qr.Text2TextGenerationPipeline,TextClassificationPipeline:()=>qr.TextClassificationPipeline,TextGenerationPipeline:()=>qr.TextGenerationPipeline,TextStreamer:()=>Bc.TextStreamer,TextToAudioPipeline:()=>qr.TextToAudioPipeline,TokenClassificationPipeline:()=>qr.TokenClassificationPipeline,TokenClassifierOutput:()=>b.TokenClassifierOutput,TokenizerModel:()=>ir.TokenizerModel,TrOCRForCausalLM:()=>b.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>b.TrOCRPreTrainedModel,TranslationPipeline:()=>qr.TranslationPipeline,UniSpeechForCTC:()=>b.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>b.UniSpeechForSequenceClassification,UniSpeechModel:()=>b.UniSpeechModel,UniSpeechPreTrainedModel:()=>b.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>b.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>b.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>b.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>b.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>b.UniSpeechSatPreTrainedModel,ViTFeatureExtractor:()=>tr.ViTFeatureExtractor,ViTForImageClassification:()=>b.ViTForImageClassification,ViTImageProcessor:()=>tr.ViTImageProcessor,ViTModel:()=>b.ViTModel,ViTPreTrainedModel:()=>b.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>b.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>b.VitMatteForImageMatting,VitMatteImageProcessor:()=>tr.VitMatteImageProcessor,VitMattePreTrainedModel:()=>b.VitMattePreTrainedModel,VitsModel:()=>b.VitsModel,VitsModelOutput:()=>b.VitsModelOutput,VitsPreTrainedModel:()=>b.VitsPreTrainedModel,VitsTokenizer:()=>ir.VitsTokenizer,Wav2Vec2BertForCTC:()=>b.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>b.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>b.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>b.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>ir.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>tr.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>b.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>b.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>b.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>b.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>b.Wav2Vec2PreTrainedModel,Wav2Vec2ProcessorWithLM:()=>tr.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>b.WavLMForAudioFrameClassification,WavLMForCTC:()=>b.WavLMForCTC,WavLMForSequenceClassification:()=>b.WavLMForSequenceClassification,WavLMForXVector:()=>b.WavLMForXVector,WavLMModel:()=>b.WavLMModel,WavLMPreTrainedModel:()=>b.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>tr.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>b.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>b.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>tr.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>b.WhisperForConditionalGeneration,WhisperModel:()=>b.WhisperModel,WhisperPreTrainedModel:()=>b.WhisperPreTrainedModel,WhisperProcessor:()=>tr.WhisperProcessor,WhisperTextStreamer:()=>Bc.WhisperTextStreamer,WhisperTokenizer:()=>ir.WhisperTokenizer,XLMForQuestionAnswering:()=>b.XLMForQuestionAnswering,XLMForSequenceClassification:()=>b.XLMForSequenceClassification,XLMForTokenClassification:()=>b.XLMForTokenClassification,XLMModel:()=>b.XLMModel,XLMPreTrainedModel:()=>b.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>b.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>b.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>b.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>b.XLMRobertaForTokenClassification,XLMRobertaModel:()=>b.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>b.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>ir.XLMRobertaTokenizer,XLMTokenizer:()=>ir.XLMTokenizer,XLMWithLMHeadModel:()=>b.XLMWithLMHeadModel,XVectorOutput:()=>b.XVectorOutput,YolosFeatureExtractor:()=>tr.YolosFeatureExtractor,YolosForObjectDetection:()=>b.YolosForObjectDetection,YolosModel:()=>b.YolosModel,YolosObjectDetectionOutput:()=>b.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>b.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>qr.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>qr.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>qr.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>qr.ZeroShotObjectDetectionPipeline,bankers_round:()=>An.bankers_round,cat:()=>nn.cat,cos_sim:()=>An.cos_sim,dot:()=>An.dot,dynamic_time_warping:()=>An.dynamic_time_warping,env:()=>b_.env,full:()=>nn.full,full_like:()=>nn.full_like,getKeyValueShapes:()=>Dc.getKeyValueShapes,hamming:()=>La.hamming,hanning:()=>La.hanning,interpolate:()=>nn.interpolate,interpolate_4d:()=>nn.interpolate_4d,interpolate_data:()=>An.interpolate_data,is_chinese_char:()=>ir.is_chinese_char,layer_norm:()=>nn.layer_norm,log_softmax:()=>An.log_softmax,magnitude:()=>An.magnitude,matmul:()=>nn.matmul,max:()=>An.max,mean:()=>nn.mean,mean_pooling:()=>nn.mean_pooling,medianFilter:()=>An.medianFilter,mel_filter_bank:()=>La.mel_filter_bank,min:()=>An.min,ones:()=>nn.ones,ones_like:()=>nn.ones_like,permute:()=>nn.permute,permute_data:()=>An.permute_data,pipeline:()=>qr.pipeline,quantize_embeddings:()=>nn.quantize_embeddings,read_audio:()=>La.read_audio,rfft:()=>nn.rfft,round:()=>An.round,softmax:()=>An.softmax,spectrogram:()=>La.spectrogram,stack:()=>nn.stack,std_mean:()=>nn.std_mean,topk:()=>nn.topk,window_function:()=>La.window_function,zeros:()=>nn.zeros,zeros_like:()=>nn.zeros_like});var b_=Hr(\"./src/env.js\"),qr=Hr(\"./src/pipelines.js\"),b=Hr(\"./src/models.js\"),ir=Hr(\"./src/tokenizers.js\"),tr=Hr(\"./src/processors.js\"),Dc=Hr(\"./src/configs.js\"),La=Hr(\"./src/utils/audio.js\"),M_=Hr(\"./src/utils/image.js\"),nn=Hr(\"./src/utils/tensor.js\"),An=Hr(\"./src/utils/maths.js\"),Bc=Hr(\"./src/generation/streamers.js\"),Xu=Hr(\"./src/generation/stopping_criteria.js\");p.ASTFeatureExtractor;p.ASTForAudioClassification;p.ASTModel;p.ASTPreTrainedModel;p.AlbertForMaskedLM;p.AlbertForQuestionAnswering;p.AlbertForSequenceClassification;p.AlbertModel;p.AlbertPreTrainedModel;p.AlbertTokenizer;p.AudioClassificationPipeline;p.AutoConfig;p.AutoModel;p.AutoModelForAudioClassification;p.AutoModelForAudioFrameClassification;p.AutoModelForCTC;p.AutoModelForCausalLM;p.AutoModelForDepthEstimation;p.AutoModelForDocumentQuestionAnswering;p.AutoModelForImageClassification;p.AutoModelForImageFeatureExtraction;p.AutoModelForImageMatting;p.AutoModelForImageSegmentation;p.AutoModelForImageToImage;p.AutoModelForMaskGeneration;p.AutoModelForMaskedLM;p.AutoModelForNormalEstimation;p.AutoModelForObjectDetection;p.AutoModelForQuestionAnswering;p.AutoModelForSemanticSegmentation;p.AutoModelForSeq2SeqLM;p.AutoModelForSequenceClassification;p.AutoModelForSpeechSeq2Seq;p.AutoModelForTextToSpectrogram;p.AutoModelForTextToWaveform;p.AutoModelForTokenClassification;p.AutoModelForVision2Seq;p.AutoModelForXVector;p.AutoModelForZeroShotObjectDetection;p.AutoProcessor;var v_=p.AutoTokenizer;p.AutomaticSpeechRecognitionPipeline;p.BartForConditionalGeneration;p.BartForSequenceClassification;p.BartModel;p.BartPretrainedModel;p.BartTokenizer;p.BaseModelOutput;p.BaseStreamer;p.BeitFeatureExtractor;p.BeitForImageClassification;p.BeitModel;p.BeitPreTrainedModel;p.BertForMaskedLM;p.BertForQuestionAnswering;p.BertForSequenceClassification;p.BertForTokenClassification;p.BertModel;p.BertPreTrainedModel;p.BertTokenizer;p.BitImageProcessor;p.BlenderbotForConditionalGeneration;p.BlenderbotModel;p.BlenderbotPreTrainedModel;p.BlenderbotSmallForConditionalGeneration;p.BlenderbotSmallModel;p.BlenderbotSmallPreTrainedModel;p.BlenderbotSmallTokenizer;p.BlenderbotTokenizer;p.BloomForCausalLM;p.BloomModel;p.BloomPreTrainedModel;p.BloomTokenizer;p.CLIPFeatureExtractor;p.CLIPImageProcessor;p.CLIPModel;p.CLIPPreTrainedModel;p.CLIPSegForImageSegmentation;p.CLIPSegModel;p.CLIPSegPreTrainedModel;p.CLIPTextModelWithProjection;p.CLIPTokenizer;p.CLIPVisionModelWithProjection;p.CamembertForMaskedLM;p.CamembertForQuestionAnswering;p.CamembertForSequenceClassification;p.CamembertForTokenClassification;p.CamembertModel;p.CamembertPreTrainedModel;p.CamembertTokenizer;p.CausalLMOutput;p.CausalLMOutputWithPast;p.ChineseCLIPFeatureExtractor;p.ChineseCLIPModel;p.ChineseCLIPPreTrainedModel;p.ClapAudioModelWithProjection;p.ClapFeatureExtractor;p.ClapModel;p.ClapPreTrainedModel;p.ClapTextModelWithProjection;p.CodeGenForCausalLM;p.CodeGenModel;p.CodeGenPreTrainedModel;p.CodeGenTokenizer;p.CodeLlamaTokenizer;p.CohereForCausalLM;p.CohereModel;p.CoherePreTrainedModel;p.CohereTokenizer;p.ConvBertForMaskedLM;p.ConvBertForQuestionAnswering;p.ConvBertForSequenceClassification;p.ConvBertForTokenClassification;p.ConvBertModel;p.ConvBertPreTrainedModel;p.ConvBertTokenizer;p.ConvNextFeatureExtractor;p.ConvNextForImageClassification;p.ConvNextImageProcessor;p.ConvNextModel;p.ConvNextPreTrainedModel;p.ConvNextV2ForImageClassification;p.ConvNextV2Model;p.ConvNextV2PreTrainedModel;p.DPTFeatureExtractor;p.DPTForDepthEstimation;p.DPTImageProcessor;p.DPTModel;p.DPTPreTrainedModel;p.DebertaForMaskedLM;p.DebertaForQuestionAnswering;p.DebertaForSequenceClassification;p.DebertaForTokenClassification;p.DebertaModel;p.DebertaPreTrainedModel;p.DebertaTokenizer;p.DebertaV2ForMaskedLM;p.DebertaV2ForQuestionAnswering;p.DebertaV2ForSequenceClassification;p.DebertaV2ForTokenClassification;p.DebertaV2Model;p.DebertaV2PreTrainedModel;p.DebertaV2Tokenizer;p.DeiTFeatureExtractor;p.DeiTForImageClassification;p.DeiTModel;p.DeiTPreTrainedModel;p.DepthAnythingForDepthEstimation;p.DepthAnythingPreTrainedModel;p.DepthEstimationPipeline;p.DetrFeatureExtractor;p.DetrForObjectDetection;p.DetrForSegmentation;p.DetrModel;p.DetrObjectDetectionOutput;p.DetrPreTrainedModel;p.DetrSegmentationOutput;p.Dinov2ForImageClassification;p.Dinov2Model;p.Dinov2PreTrainedModel;p.DistilBertForMaskedLM;p.DistilBertForQuestionAnswering;p.DistilBertForSequenceClassification;p.DistilBertForTokenClassification;p.DistilBertModel;p.DistilBertPreTrainedModel;p.DistilBertTokenizer;p.DocumentQuestionAnsweringPipeline;p.DonutFeatureExtractor;p.DonutSwinModel;p.DonutSwinPreTrainedModel;p.EfficientNetForImageClassification;p.EfficientNetImageProcessor;p.EfficientNetModel;p.EfficientNetPreTrainedModel;p.ElectraForMaskedLM;p.ElectraForQuestionAnswering;p.ElectraForSequenceClassification;p.ElectraForTokenClassification;p.ElectraModel;p.ElectraPreTrainedModel;p.ElectraTokenizer;p.EosTokenCriteria;p.EsmForMaskedLM;p.EsmForSequenceClassification;p.EsmForTokenClassification;p.EsmModel;p.EsmPreTrainedModel;p.EsmTokenizer;p.FFT;p.FalconForCausalLM;p.FalconModel;p.FalconPreTrainedModel;p.FalconTokenizer;p.FastViTForImageClassification;p.FastViTModel;p.FastViTPreTrainedModel;p.FeatureExtractionPipeline;p.FeatureExtractor;p.FillMaskPipeline;p.Florence2ForConditionalGeneration;p.Florence2PreTrainedModel;p.Florence2Processor;p.GLPNFeatureExtractor;p.GLPNForDepthEstimation;p.GLPNModel;p.GLPNPreTrainedModel;p.GPT2LMHeadModel;p.GPT2Model;p.GPT2PreTrainedModel;p.GPT2Tokenizer;p.GPTBigCodeForCausalLM;p.GPTBigCodeModel;p.GPTBigCodePreTrainedModel;p.GPTJForCausalLM;p.GPTJModel;p.GPTJPreTrainedModel;p.GPTNeoForCausalLM;p.GPTNeoModel;p.GPTNeoPreTrainedModel;p.GPTNeoXForCausalLM;p.GPTNeoXModel;p.GPTNeoXPreTrainedModel;p.GPTNeoXTokenizer;p.Gemma2ForCausalLM;p.Gemma2Model;p.Gemma2PreTrainedModel;p.GemmaForCausalLM;p.GemmaModel;p.GemmaPreTrainedModel;p.GemmaTokenizer;p.Grok1Tokenizer;p.HerbertTokenizer;p.HieraForImageClassification;p.HieraModel;p.HieraPreTrainedModel;p.HubertForCTC;p.HubertForSequenceClassification;p.HubertModel;p.HubertPreTrainedModel;p.ImageClassificationPipeline;p.ImageFeatureExtractionPipeline;p.ImageFeatureExtractor;p.ImageMattingOutput;p.ImageSegmentationPipeline;p.ImageToImagePipeline;p.ImageToTextPipeline;p.InterruptableStoppingCriteria;p.JAISLMHeadModel;p.JAISModel;p.JAISPreTrainedModel;p.LlamaForCausalLM;p.LlamaModel;p.LlamaPreTrainedModel;p.LlamaTokenizer;p.LlavaForConditionalGeneration;p.LlavaPreTrainedModel;p.LongT5ForConditionalGeneration;p.LongT5Model;p.LongT5PreTrainedModel;p.M2M100ForConditionalGeneration;p.M2M100Model;p.M2M100PreTrainedModel;p.M2M100Tokenizer;p.MBart50Tokenizer;p.MBartForCausalLM;p.MBartForConditionalGeneration;p.MBartForSequenceClassification;p.MBartModel;p.MBartPreTrainedModel;p.MBartTokenizer;p.MPNetForMaskedLM;p.MPNetForQuestionAnswering;p.MPNetForSequenceClassification;p.MPNetForTokenClassification;p.MPNetModel;p.MPNetPreTrainedModel;p.MPNetTokenizer;p.MT5ForConditionalGeneration;p.MT5Model;p.MT5PreTrainedModel;p.MarianMTModel;p.MarianModel;p.MarianPreTrainedModel;p.MarianTokenizer;p.MaskedLMOutput;p.MaxLengthCriteria;p.MistralForCausalLM;p.MistralModel;p.MistralPreTrainedModel;p.MobileBertForMaskedLM;p.MobileBertForQuestionAnswering;p.MobileBertForSequenceClassification;p.MobileBertModel;p.MobileBertPreTrainedModel;p.MobileBertTokenizer;p.MobileNetV1FeatureExtractor;p.MobileNetV1ForImageClassification;p.MobileNetV1Model;p.MobileNetV1PreTrainedModel;p.MobileNetV2FeatureExtractor;p.MobileNetV2ForImageClassification;p.MobileNetV2Model;p.MobileNetV2PreTrainedModel;p.MobileNetV3FeatureExtractor;p.MobileNetV3ForImageClassification;p.MobileNetV3Model;p.MobileNetV3PreTrainedModel;p.MobileNetV4FeatureExtractor;p.MobileNetV4ForImageClassification;p.MobileNetV4Model;p.MobileNetV4PreTrainedModel;p.MobileViTFeatureExtractor;p.MobileViTForImageClassification;p.MobileViTImageProcessor;p.MobileViTModel;p.MobileViTPreTrainedModel;p.MobileViTV2ForImageClassification;p.MobileViTV2Model;p.MobileViTV2PreTrainedModel;p.ModelOutput;p.Moondream1ForConditionalGeneration;p.MptForCausalLM;p.MptModel;p.MptPreTrainedModel;p.MusicgenForCausalLM;p.MusicgenForConditionalGeneration;p.MusicgenModel;p.MusicgenPreTrainedModel;p.NllbTokenizer;p.NomicBertModel;p.NomicBertPreTrainedModel;p.NougatImageProcessor;p.NougatTokenizer;p.OPTForCausalLM;p.OPTModel;p.OPTPreTrainedModel;p.ObjectDetectionPipeline;p.OpenELMForCausalLM;p.OpenELMModel;p.OpenELMPreTrainedModel;p.OwlViTFeatureExtractor;p.OwlViTForObjectDetection;p.OwlViTModel;p.OwlViTPreTrainedModel;p.OwlViTProcessor;p.Owlv2ForObjectDetection;p.Owlv2ImageProcessor;p.Owlv2Model;p.Owlv2PreTrainedModel;p.Phi3ForCausalLM;p.Phi3Model;p.Phi3PreTrainedModel;p.PhiForCausalLM;p.PhiModel;p.PhiPreTrainedModel;p.Pipeline;p.PreTrainedModel;var x_=p.PreTrainedTokenizer;p.PretrainedConfig;p.PretrainedMixin;p.Processor;p.PyAnnoteFeatureExtractor;p.PyAnnoteForAudioFrameClassification;p.PyAnnoteModel;p.PyAnnotePreTrainedModel;p.PyAnnoteProcessor;p.QuestionAnsweringModelOutput;p.QuestionAnsweringPipeline;p.Qwen2ForCausalLM;p.Qwen2Model;p.Qwen2PreTrainedModel;p.Qwen2Tokenizer;p.RTDetrForObjectDetection;p.RTDetrImageProcessor;p.RTDetrModel;p.RTDetrObjectDetectionOutput;p.RTDetrPreTrainedModel;p.RawImage;p.ResNetForImageClassification;p.ResNetModel;p.ResNetPreTrainedModel;p.RoFormerForMaskedLM;p.RoFormerForQuestionAnswering;p.RoFormerForSequenceClassification;p.RoFormerForTokenClassification;p.RoFormerModel;p.RoFormerPreTrainedModel;p.RoFormerTokenizer;p.RobertaForMaskedLM;p.RobertaForQuestionAnswering;p.RobertaForSequenceClassification;p.RobertaForTokenClassification;p.RobertaModel;p.RobertaPreTrainedModel;p.RobertaTokenizer;p.SamImageProcessor;p.SamImageSegmentationOutput;p.SamModel;p.SamPreTrainedModel;p.SamProcessor;p.SapiensFeatureExtractor;p.SapiensForDepthEstimation;p.SapiensForNormalEstimation;p.SapiensForSemanticSegmentation;p.SapiensPreTrainedModel;p.SeamlessM4TFeatureExtractor;p.SegformerFeatureExtractor;p.SegformerForImageClassification;p.SegformerForSemanticSegmentation;p.SegformerModel;p.SegformerPreTrainedModel;p.Seq2SeqLMOutput;p.SequenceClassifierOutput;p.SiglipImageProcessor;p.SiglipModel;p.SiglipPreTrainedModel;p.SiglipTextModel;p.SiglipTokenizer;p.SiglipVisionModel;p.SpeechT5FeatureExtractor;p.SpeechT5ForSpeechToText;p.SpeechT5ForTextToSpeech;p.SpeechT5HifiGan;p.SpeechT5Model;p.SpeechT5PreTrainedModel;p.SpeechT5Processor;p.SpeechT5Tokenizer;p.SqueezeBertForMaskedLM;p.SqueezeBertForQuestionAnswering;p.SqueezeBertForSequenceClassification;p.SqueezeBertModel;p.SqueezeBertPreTrainedModel;p.SqueezeBertTokenizer;p.StableLmForCausalLM;p.StableLmModel;p.StableLmPreTrainedModel;p.Starcoder2ForCausalLM;p.Starcoder2Model;p.Starcoder2PreTrainedModel;p.StoppingCriteria;p.StoppingCriteriaList;p.SummarizationPipeline;p.Swin2SRForImageSuperResolution;p.Swin2SRImageProcessor;p.Swin2SRModel;p.Swin2SRPreTrainedModel;p.SwinForImageClassification;p.SwinModel;p.SwinPreTrainedModel;p.T5ForConditionalGeneration;p.T5Model;p.T5PreTrainedModel;p.T5Tokenizer;p.TableTransformerForObjectDetection;p.TableTransformerModel;p.TableTransformerObjectDetectionOutput;p.TableTransformerPreTrainedModel;p.Tensor;p.Text2TextGenerationPipeline;p.TextClassificationPipeline;p.TextGenerationPipeline;p.TextStreamer;p.TextToAudioPipeline;p.TokenClassificationPipeline;p.TokenClassifierOutput;p.TokenizerModel;p.TrOCRForCausalLM;p.TrOCRPreTrainedModel;p.TranslationPipeline;p.UniSpeechForCTC;p.UniSpeechForSequenceClassification;p.UniSpeechModel;p.UniSpeechPreTrainedModel;p.UniSpeechSatForAudioFrameClassification;p.UniSpeechSatForCTC;p.UniSpeechSatForSequenceClassification;p.UniSpeechSatModel;p.UniSpeechSatPreTrainedModel;p.ViTFeatureExtractor;p.ViTForImageClassification;p.ViTImageProcessor;p.ViTModel;p.ViTPreTrainedModel;p.VisionEncoderDecoderModel;p.VitMatteForImageMatting;p.VitMatteImageProcessor;p.VitMattePreTrainedModel;p.VitsModel;p.VitsModelOutput;p.VitsPreTrainedModel;p.VitsTokenizer;p.Wav2Vec2BertForCTC;p.Wav2Vec2BertForSequenceClassification;p.Wav2Vec2BertModel;p.Wav2Vec2BertPreTrainedModel;p.Wav2Vec2CTCTokenizer;p.Wav2Vec2FeatureExtractor;p.Wav2Vec2ForAudioFrameClassification;p.Wav2Vec2ForCTC;p.Wav2Vec2ForSequenceClassification;p.Wav2Vec2Model;p.Wav2Vec2PreTrainedModel;p.Wav2Vec2ProcessorWithLM;p.WavLMForAudioFrameClassification;p.WavLMForCTC;p.WavLMForSequenceClassification;p.WavLMForXVector;p.WavLMModel;p.WavLMPreTrainedModel;p.WeSpeakerFeatureExtractor;p.WeSpeakerResNetModel;p.WeSpeakerResNetPreTrainedModel;p.WhisperFeatureExtractor;p.WhisperForConditionalGeneration;p.WhisperModel;p.WhisperPreTrainedModel;p.WhisperProcessor;p.WhisperTextStreamer;p.WhisperTokenizer;p.XLMForQuestionAnswering;p.XLMForSequenceClassification;p.XLMForTokenClassification;p.XLMModel;p.XLMPreTrainedModel;p.XLMRobertaForMaskedLM;p.XLMRobertaForQuestionAnswering;p.XLMRobertaForSequenceClassification;p.XLMRobertaForTokenClassification;p.XLMRobertaModel;p.XLMRobertaPreTrainedModel;p.XLMRobertaTokenizer;p.XLMTokenizer;p.XLMWithLMHeadModel;p.XVectorOutput;p.YolosFeatureExtractor;p.YolosForObjectDetection;p.YolosModel;p.YolosObjectDetectionOutput;p.YolosPreTrainedModel;p.ZeroShotAudioClassificationPipeline;p.ZeroShotClassificationPipeline;p.ZeroShotImageClassificationPipeline;p.ZeroShotObjectDetectionPipeline;p.bankers_round;p.cat;p.cos_sim;p.dot;p.dynamic_time_warping;p.env;p.full;p.full_like;p.getKeyValueShapes;p.hamming;p.hanning;p.interpolate;p.interpolate_4d;p.interpolate_data;p.is_chinese_char;p.layer_norm;p.log_softmax;p.magnitude;p.matmul;p.max;p.mean;p.mean_pooling;p.medianFilter;p.mel_filter_bank;p.min;p.ones;p.ones_like;p.permute;p.permute_data;p.pipeline;p.quantize_embeddings;p.read_audio;p.rfft;p.round;p.softmax;p.spectrogram;p.stack;p.std_mean;p.topk;p.window_function;p.zeros;p.zeros_like;async function T_(nt){if(typeof nt==\"string\")return await v_.from_pretrained(nt);{const{tokenizerUrl:fe,tokenizerConfigUrl:I}=nt,E=await(await fetch(fe)).json(),ie=await(await fetch(I)).json();return new x_(E,ie)}}function kf(nt){const fe=nt[6]>(nt[2]||1/0);nt[7]=fe}function Cf(nt){let fe,I,E={ctx:nt,current:null,token:null,hasCatch:!1,pending:C_,then:k_,catch:S_,value:6};return Tf(I=nt[4](nt[1]),E),{c(){fe=Xd(),E.block.c()},l(ie){fe=Xd(),E.block.l(ie)},m(ie,we){Lc(ie,fe,we),E.block.m(ie,E.anchor=we),E.mount=()=>fe.parentNode,E.anchor=fe},p(ie,we){nt=ie,E.ctx=nt,we&2&&I!==(I=nt[4](nt[1]))&&Tf(I,E)||g_(E,nt,we)},d(ie){ie&&Yu(fe),E.block.d(ie),E.token=null,E=null}}}function S_(nt){return{c:Kn,l:Kn,m:Kn,p:Kn,d:Kn}}function k_(nt){kf(nt);let fe,I,E=nt[6]+\"\",ie,we=nt[2]?`/${nt[2]}`:\"\",ve,xe,N,T,V=\"Tokens usage\";return{c(){fe=Oc(\"div\"),I=Oc(\"p\"),ie=bf(E),ve=bf(we),N=f_(),T=Oc(\"div\"),T.textContent=V,this.h()},l(P){fe=zc(P,\"DIV\",{class:!0});var K=Mf(fe);I=zc(K,\"P\",{class:!0});var ee=Mf(I);ie=vf(ee,E),ve=vf(ee,we),ee.forEach(Yu),N=m_(K),T=zc(K,\"DIV\",{class:!0,\"data-svelte-h\":!0}),__(T)!==\"svelte-1c15v31\"&&(T.textContent=V),K.forEach(Yu),this.h()},h(){Hu(I,\"class\",xe=\"peer text-sm \"+(nt[7]?\"text-red-500 opacity-100\":\"opacity-60 hover:opacity-90\")),Hu(T,\"class\",\"invisible absolute -top-6 right-0 whitespace-nowrap rounded bg-black px-1 text-sm text-white peer-hover:visible\"),Hu(fe,\"class\",nt[0])},m(P,K){Lc(P,fe,K),Ku(fe,I),Ku(I,ie),Ku(I,ve),Ku(fe,N),Ku(fe,T)},p(P,K){kf(P),K&2&&E!==(E=P[6]+\"\")&&xf(ie,E),K&4&&we!==(we=P[2]?`/${P[2]}`:\"\")&&xf(ve,we),K&6&&xe!==(xe=\"peer text-sm \"+(P[7]?\"text-red-500 opacity-100\":\"opacity-60 hover:opacity-90\"))&&Hu(I,\"class\",xe),K&1&&Hu(fe,\"class\",P[0])},d(P){P&&Yu(fe)}}}function C_(nt){return{c:Kn,l:Kn,m:Kn,p:Kn,d:Kn}}function E_(nt){let fe,I=nt[3]&&Cf(nt);return{c(){I&&I.c(),fe=Xd()},l(E){I&&I.l(E),fe=Xd()},m(E,ie){I&&I.m(E,ie),Lc(E,fe,ie)},p(E,[ie]){E[3]?I?I.p(E,ie):(I=Cf(E),I.c(),I.m(fe.parentNode,fe)):I&&(I.d(1),I=null)},i:Kn,o:Kn,d(E){E&&Yu(fe),I&&I.d(E)}}}function $_(nt,fe,I){let{classNames:E=\"\"}=fe,{prompt:ie=\"\"}=fe,{modelTokenizer:we}=fe,{truncate:ve=void 0}=fe,xe;async function N(T){if(!xe)return;const{input_ids:V}=await xe(T);return V.size}return nt.$$set=T=>{\"classNames\"in T&&I(0,E=T.classNames),\"prompt\"in T&&I(1,ie=T.prompt),\"modelTokenizer\"in T&&I(5,we=T.modelTokenizer),\"truncate\"in T&&I(2,ve=T.truncate)},nt.$$.update=()=>{nt.$$.dirty&32&&(async()=>I(3,xe=await T_(we)))()},[E,ie,ve,xe,N,we]}class O_ extends w_{constructor(fe){super(),y_(this,fe,$_,E_,h_,{classNames:0,prompt:1,modelTokenizer:5,truncate:2})}}export{O_ as T};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 163258,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:16:01.732Z",
        "time": 72.20100000267848,
        "timings": {
          "blocked": 9.837000004233794,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.3019999999999996,
          "wait": 32.961999998700804,
          "receive": 29.099999999743886,
          "_blocked_queueing": 2.8710000042337924,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "script",
          "lineNumber": 0,
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 616
              },
              {
                "functionName": "h",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 310
              },
              {
                "functionName": "",
                "scriptId": "607",
                "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
                "lineNumber": 1,
                "columnNumber": 9793
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16170
              },
              {
                "functionName": "xe",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16140
              },
              {
                "functionName": "an",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 12166
              },
              {
                "functionName": "a",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21809
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21294
              }
            ],
            "parent": {
              "description": "setTimeout",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "604",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                  "lineNumber": 0,
                  "columnNumber": 21278
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/link.Bltj-XWc.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/chat/_app/immutable/chunks/link.Bltj-XWc.js"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "priority",
              "value": "u=1"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "script"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "age",
              "value": "30709"
            },
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "content-length",
              "value": "656"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:44:13 GMT"
            },
            {
              "name": "etag",
              "value": "W/\"656-1733326797000\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "Rr30hADG-oJfsUq-e1Aia6wN9kfkXSCgfhh_QqNPFbCr3YEMgjQ4KA=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1277,
            "mimeType": "text/javascript",
            "text": "import{s as u,J as o,K as c,L as d,M as v,b as f,N as w,f as h,O as m,i as p,n as g,P as _}from\"./scheduler.CeakrPJD.js\";import{g as x}from\"./settings.qWXPmYFi.js\";import{S as L,i as A}from\"./index.Cljt5KuQ.js\";function B(s){let t,a,r='<path fill=\"currentColor\" d=\"M29.25 6.76a6 6 0 0 0-8.5 0l1.42 1.42a4 4 0 1 1 5.67 5.67l-8 8a4 4 0 1 1-5.67-5.66l1.41-1.42l-1.41-1.42l-1.42 1.42a6 6 0 0 0 0 8.5A6 6 0 0 0 17 25a6 6 0 0 0 4.27-1.76l8-8a6 6 0 0 0-.02-8.48\"/><path fill=\"currentColor\" d=\"M4.19 24.82a4 4 0 0 1 0-5.67l8-8a4 4 0 0 1 5.67 0A3.94 3.94 0 0 1 19 14a4 4 0 0 1-1.17 2.85L15.71 19l1.42 1.42l2.12-2.12a6 6 0 0 0-8.51-8.51l-8 8a6 6 0 0 0 0 8.51A6 6 0 0 0 7 28a6.07 6.07 0 0 0 4.28-1.76l-1.42-1.42a4 4 0 0 1-5.67 0\"/>',n=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},s[0]],i={};for(let e=0;e<n.length;e+=1)i=o(i,n[e]);return{c(){t=c(\"svg\"),a=new d(!0),this.h()},l(e){t=v(e,\"svg\",{viewBox:!0,width:!0,height:!0});var l=f(t);a=w(l,!0),l.forEach(h),this.h()},h(){a.a=null,m(t,i)},m(e,l){p(e,t,l),a.m(r,t)},p(e,[l]){m(t,i=x(n,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},l&1&&e[0]]))},i:g,o:g,d(e){e&&h(t)}}}function C(s,t,a){return s.$$set=r=>{a(0,t=o(o({},t),_(r)))},t=_(t),[t]}class H extends L{constructor(t){super(),A(this,t,C,B,u,{})}}export{H as L};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 1008,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:16:01.732Z",
        "time": 76.1930000007851,
        "timings": {
          "blocked": 11.692000002389774,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 1.5540000000000003,
          "wait": 59.083999993028115,
          "receive": 3.863000005367212,
          "_blocked_queueing": 3.0160000023897737,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "script",
          "lineNumber": 0,
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 616
              },
              {
                "functionName": "h",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 310
              },
              {
                "functionName": "",
                "scriptId": "607",
                "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
                "lineNumber": 1,
                "columnNumber": 9793
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16170
              },
              {
                "functionName": "xe",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16140
              },
              {
                "functionName": "an",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 12166
              },
              {
                "functionName": "a",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21809
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21294
              }
            ],
            "parent": {
              "description": "setTimeout",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "604",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                  "lineNumber": 0,
                  "columnNumber": 21278
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/chunks/chat.DHlj6XQ7.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/chat/_app/immutable/chunks/chat.DHlj6XQ7.js"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "priority",
              "value": "u=1"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "script"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "age",
              "value": "30709"
            },
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "content-length",
              "value": "566"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:44:13 GMT"
            },
            {
              "name": "etag",
              "value": "W/\"566-1733326797000\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "x4srHcXi1EW896ZAadcg8g4i_r86VQ1S0fPFFkLTl5ridQhSTVJ6Fg=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1043,
            "mimeType": "text/javascript",
            "text": "import{s as _,J as h,K as u,L as c,M as d,b as f,N as w,f as o,O as m,i as p,n as v,P as g}from\"./scheduler.CeakrPJD.js\";import{g as x}from\"./settings.qWXPmYFi.js\";import{S as H,i as C}from\"./index.Cljt5KuQ.js\";function B(i){let t,a,l='<path fill=\"currentColor\" d=\"M17.74 30L16 29l4-7h6a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h9v2H6a4 4 0 0 1-4-4V8a4 4 0 0 1 4-4h20a4 4 0 0 1 4 4v12a4 4 0 0 1-4 4h-4.84Z\"/><path fill=\"currentColor\" d=\"M8 10h16v2H8zm0 6h10v2H8z\"/>',n=[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},i[0]],r={};for(let e=0;e<n.length;e+=1)r=h(r,n[e]);return{c(){t=u(\"svg\"),a=new c(!0),this.h()},l(e){t=d(e,\"svg\",{viewBox:!0,width:!0,height:!0});var s=f(t);a=w(s,!0),s.forEach(o),this.h()},h(){a.a=null,m(t,r)},m(e,s){p(e,t,s),a.m(l,t)},p(e,[s]){m(t,r=x(n,[{viewBox:\"0 0 32 32\"},{width:\"1.2em\"},{height:\"1.2em\"},s&1&&e[0]]))},i:v,o:v,d(e){e&&o(t)}}}function M(i,t,a){return i.$$set=l=>{a(0,t=h(h({},t),g(l)))},t=g(t),[t]}class L extends H{constructor(t){super(),C(this,t,M,B,_,{})}}export{L as C};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 917,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:16:01.733Z",
        "time": 76.2070000055246,
        "timings": {
          "blocked": 12.88899999923259,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.49600000000000044,
          "wait": 58.499999998332,
          "receive": 4.322000007960014,
          "_blocked_queueing": 3.50099999923259,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "gt",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 27370
              },
              {
                "functionName": "xe",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16507
              },
              {
                "functionName": "an",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 12166
              },
              {
                "functionName": "a",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21809
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 21294
              }
            ],
            "parent": {
              "description": "setTimeout",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "604",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                  "lineNumber": 0,
                  "columnNumber": 21278
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/settings/CohereForAI/c4ai-command-r-plus-08-2024/__data.json?x-sveltekit-invalidated=0100",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/chat/settings/CohereForAI/c4ai-command-r-plus-08-2024/__data.json?x-sveltekit-invalidated=0100"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/chat/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [
            {
              "name": "x-sveltekit-invalidated",
              "value": "0100"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "private, no-store"
            },
            {
              "name": "content-length",
              "value": "139"
            },
            {
              "name": "content-security-policy",
              "value": "frame-ancestors 'none';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Thu, 05 Dec 2024 00:16:02 GMT"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "z75G3McCSYz-F3FMvVNcV_vGVsgjnva6rC7ArsRde_yG7lSyrqGVFQ=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Miss from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 139,
            "mimeType": "application/json",
            "text": "{\"type\":\"data\",\"nodes\":[{\"type\":\"skip\"},{\"type\":\"data\",\"data\":[{\"assistants\":1},[]],\"uses\":{\"parent\":1}},{\"type\":\"skip\"},{\"type\":\"skip\"}]}\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 426,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:16:01.735Z",
        "time": 232.72800000268035,
        "timings": {
          "blocked": 11.450000004339032,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.32399999999999984,
          "wait": 219.10900000675116,
          "receive": 1.8449999915901572,
          "_blocked_queueing": 2.334000004339032,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "window.fetch",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 1652
              },
              {
                "functionName": "p",
                "scriptId": "624",
                "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                "lineNumber": 0,
                "columnNumber": 1621
              },
              {
                "functionName": "E",
                "scriptId": "624",
                "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                "lineNumber": 0,
                "columnNumber": 2233
              },
              {
                "functionName": "",
                "scriptId": "605",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                "lineNumber": 0,
                "columnNumber": 8170
              },
              {
                "functionName": "",
                "scriptId": "605",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                "lineNumber": 0,
                "columnNumber": 8156
              },
              {
                "functionName": "K",
                "scriptId": "625",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                "lineNumber": 329,
                "columnNumber": 4294
              },
              {
                "functionName": "",
                "scriptId": "605",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                "lineNumber": 0,
                "columnNumber": 4055
              }
            ]
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "POST",
          "url": "https://huggingface.co/chat/conversation",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/chat/conversation"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "content-length",
              "value": "51"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/chat/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 51,
          "postData": {
            "mimeType": "application/json",
            "text": "{\"model\":\"CohereForAI/c4ai-command-r-plus-08-2024\"}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "content-security-policy",
              "value": "frame-ancestors 'none';"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "date",
              "value": "Thu, 05 Dec 2024 00:16:09 GMT"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "VEm13_RI12l7y3UCw-aWsdFaQ1ZuRVFZOBR6rNvpVaiDuzjeG3L6IA=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Miss from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 45,
            "mimeType": "application/json",
            "text": "{\"conversationId\":\"6750f0c9cbfac4f9c6998656\"}"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 404,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:16:08.381Z",
        "time": 248.7200000032317,
        "timings": {
          "blocked": 2.0820000056857246,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.33299999999999996,
          "wait": 244.34900000475812,
          "receive": 1.955999992787838,
          "_blocked_queueing": 0.8550000056857243,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "script",
          "lineNumber": 0,
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 616
              },
              {
                "functionName": "h",
                "scriptId": "608",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/13.Wxvm8eoO.js",
                "lineNumber": 0,
                "columnNumber": 310
              },
              {
                "functionName": "gt",
                "scriptId": "607",
                "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
                "lineNumber": 1,
                "columnNumber": 8878
              },
              {
                "functionName": "",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16170
              },
              {
                "functionName": "xe",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16140
              },
              {
                "functionName": "X",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 19544
              },
              {
                "functionName": "le",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 11886
              },
              {
                "functionName": "cn",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 22450
              },
              {
                "functionName": "p",
                "scriptId": "624",
                "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                "lineNumber": 0,
                "columnNumber": 2024
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "E",
                  "scriptId": "624",
                  "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                  "lineNumber": 0,
                  "columnNumber": 2233
                },
                {
                  "functionName": "",
                  "scriptId": "605",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                  "lineNumber": 0,
                  "columnNumber": 8170
                },
                {
                  "functionName": "",
                  "scriptId": "605",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                  "lineNumber": 0,
                  "columnNumber": 8156
                },
                {
                  "functionName": "K",
                  "scriptId": "625",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                  "lineNumber": 329,
                  "columnNumber": 4294
                },
                {
                  "functionName": "",
                  "scriptId": "605",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                  "lineNumber": 0,
                  "columnNumber": 4055
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/_app/immutable/nodes/9.PVin43Ht.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": ""
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "public,max-age=31536000,immutable"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"3536-1733326797000\""
            },
            {
              "name": "age",
              "value": "30307"
            },
            {
              "name": "via",
              "value": "1.1 8d1d313256de173f45b1d3b2f94b6760.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "content-length",
              "value": "3536"
            },
            {
              "name": "x-amz-cf-id",
              "value": "aUXNnKiV06rscs7tBNBUcupPkXmlOqbq2QHg4idjYNhLiFb-5TmrOA=="
            },
            {
              "name": "date",
              "value": "Wed, 04 Dec 2024 15:43:52 GMT"
            },
            {
              "name": "content-type",
              "value": "text/javascript"
            },
            {
              "name": "last-modified",
              "value": "Wed, 04 Dec 2024 15:39:57 GMT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 9676,
            "mimeType": "text/javascript",
            "text": "import{s as we,w as ye,e as be,a as oe,x as _e,c as Me,f as V,g as re,h as L,j as Se,i as ie,y as Ue,l as A,z as Ie,U as w,n as C}from\"../chunks/scheduler.CeakrPJD.js\";import{h as ee}from\"../chunks/await_block.B9GGS9dX.js\";import{S as Ae,i as ke,h as Ce,b as Ee,d as Te,m as De,t as Oe,a as Re,e as Pe}from\"../chunks/index.Cljt5KuQ.js\";import{C as je,c as Le,p as te,w as Ne,f as We,a as Ve,M as k,b as Xe,d as qe}from\"../chunks/pendingMessage.BH5nrwUr.js\";import{s as Fe,i as N,t as se}from\"../chunks/titleUpdate.CtC19nZI.js\";import{p as Ge}from\"../chunks/stores.BBDoy_q4.js\";import{b as D,g as G,i as He}from\"../chunks/entry.CNbBV9gi.js\";import{e as _,E as H}from\"../chunks/cookiesAreEnabled.CmuqkX8M.js\";import{f as z}from\"../chunks/models.BNqoyBuH.js\";import{u as Je}from\"../chunks/settings.qWXPmYFi.js\";var u=[];for(var J=0;J<256;++J)u.push((J+256).toString(16).slice(1));function Ke(e,o=0){return(u[e[o+0]]+u[e[o+1]]+u[e[o+2]]+u[e[o+3]]+\"-\"+u[e[o+4]]+u[e[o+5]]+\"-\"+u[e[o+6]]+u[e[o+7]]+\"-\"+u[e[o+8]]+u[e[o+9]]+\"-\"+u[e[o+10]]+u[e[o+11]]+u[e[o+12]]+u[e[o+13]]+u[e[o+14]]+u[e[o+15]]).toLowerCase()}var W,ze=new Uint8Array(16);function Ye(){if(!W&&(W=typeof crypto<\"u\"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!W))throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");return W(ze)}var ve=typeof crypto<\"u\"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);const ne={randomUUID:ve};function Y(e,o,t){if(ne.randomUUID&&!o&&!e)return ne.randomUUID();e=e||{};var s=e.random||(e.rng||Ye)();return s[6]=s[6]&15|64,s[8]=s[8]&63|128,Ke(s)}function K(e,o,t){var d;if(e.messages.length===0){const i=Y();return e.rootMessageId=i,e.messages.push({...o,ancestors:[],id:i}),i}if(!t)throw new Error(\"You need to specify a parentId if this is not the first message\");const s=Y();if(!e.rootMessageId){if(t&&t!==e.messages[e.messages.length-1].id)throw new Error(\"This is a legacy conversation, you can only append to the last message\");return e.messages.push({...o,id:s}),s}const l=[...((d=e.messages.find(i=>i.id===t))==null?void 0:d.ancestors)??[],t];e.messages.push({...o,ancestors:l,id:s,children:[]});const g=e.messages.find(i=>i.id===t);return g&&(g.children?g.children.push(s):g.children=[s]),s}function ae(e,o,t){var i;if(e.messages.length===0)throw new Error(\"Cannot add a sibling to an empty conversation\");if(!e.rootMessageId)throw new Error(\"Cannot add a sibling to a legacy conversation\");const s=e.messages.find(p=>p.id===t);if(!s)throw new Error(\"The sibling message doesn't exist\");if(!s.ancestors||((i=s.ancestors)==null?void 0:i.length)===0)throw new Error(\"The sibling message is the root message, therefore we can't add a sibling\");const l=Y();e.messages.push({...o,id:l,ancestors:s.ancestors,children:[]});const g=s.ancestors[s.ancestors.length-1],d=e.messages.find(p=>p.id===g);return d&&(d.children?d.children.push(l):d.children=[l]),l}function Be(e){return{c:C,l:C,m:C,d:C}}function Qe(e){let o;return document.title=e[7],{c(){o=oe()},l(t){o=re(t)},m(t,s){ie(t,o,s)},d(t){t&&V(o)}}}function Ze(e){return{c:C,l:C,m:C,d:C}}function xe(e){let o,t,s,l,g,d,i={ctx:e,current:null,token:null,hasCatch:!1,pending:Ze,then:Qe,catch:Be,value:7};ee(o=e[7],i);function p(r){e[14](r)}let S={loading:e[2],pending:e[3],messages:e[5],shared:e[0].shared,preprompt:e[0].preprompt,models:e[0].models,currentModel:z([...e[0].models,...e[0].oldModels],e[0].model),assistant:e[0].assistant};return e[4]!==void 0&&(S.files=e[4]),l=new je({props:S}),ye.push(()=>Ce(l,\"files\",p)),l.$on(\"message\",e[9]),l.$on(\"retry\",e[10]),l.$on(\"continue\",e[11]),l.$on(\"vote\",e[15]),l.$on(\"share\",e[16]),l.$on(\"stop\",e[17]),{c(){i.block.c(),t=be(\"link\"),s=oe(),Ee(l.$$.fragment),this.h()},l(r){const m=_e(\"svelte-54p0hk\",document.head);i.block.l(m),t=Me(m,\"LINK\",{rel:!0,href:!0,integrity:!0,crossorigin:!0}),m.forEach(V),s=re(r),Te(l.$$.fragment,r),this.h()},h(){L(t,\"rel\",\"stylesheet\"),L(t,\"href\",\"https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/katex.min.css\"),L(t,\"integrity\",\"sha384-GvrOXuhMATgEsSwCs4smul74iXGOixntILdUW9XmUC6+HX0sLNAK3q71HotJqlAn\"),L(t,\"crossorigin\",\"anonymous\")},m(r,m){i.block.m(document.head,i.anchor=null),i.mount=()=>t.parentNode,i.anchor=t,Se(document.head,t),ie(r,s,m),De(l,r,m),d=!0},p(r,[m]){e=r,i.ctx=e,m&128&&o!==(o=e[7])&&ee(o,i);const h={};m&4&&(h.loading=e[2]),m&8&&(h.pending=e[3]),m&32&&(h.messages=e[5]),m&1&&(h.shared=e[0].shared),m&1&&(h.preprompt=e[0].preprompt),m&1&&(h.models=e[0].models),m&1&&(h.currentModel=z([...e[0].models,...e[0].oldModels],e[0].model)),m&1&&(h.assistant=e[0].assistant),!g&&m&16&&(g=!0,h.files=e[4],Ue(()=>g=!1)),l.$set(h)},i(r){d||(Oe(l.$$.fragment,r),d=!0)},o(r){Re(l.$$.fragment,r),d=!1},d(r){r&&V(s),i.block.d(),i.token=null,i=null,V(t),Pe(l,r)}}}function $e(e,o,t){let s,l,g,d,i,p,S,r,m,h,v;A(e,Ge,n=>t(1,d=n)),A(e,N,n=>t(6,p=n)),A(e,te,n=>t(20,S=n)),A(e,_,n=>t(21,r=n)),A(e,se,n=>t(22,m=n)),A(e,Ne,n=>t(24,v=n));let{data:f}=o,U=!1,j=!1,T=[];async function X(){try{t(2,U=!0);const n=await fetch(`${D}/conversation`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({fromShare:d.params.id,model:f.model})});if(!n.ok){_.set(await n.text()),console.error(\"Error while creating conversation: \"+await n.text());return}const{conversationId:c}=await n.json();return c}catch(n){throw _.set(H.default),console.error(String(n)),n}}async function E({prompt:n,messageId:c=i.leaf??void 0,isRetry:O=!1,isContinue:R=!1}){var y,Z;try{w(N,p=!1,p),t(2,U=!0),t(3,j=!0);const M=await Promise.all((T??[]).map(a=>We(a).then(I=>({type:\"base64\",value:I,mime:a.type,name:a.name}))));let P;if(R&&c)(((Z=(y=s.find(a=>a.id===c))==null?void 0:y.children)==null?void 0:Z.length)??0)>0?w(_,r=\"Can only continue the last message\",r):P=c;else if(O&&c){const a=s.find(I=>I.id===c);if(a||w(_,r=\"Message not found\",r),(a==null?void 0:a.from)===\"user\"&&n){const I=ae({messages:s,rootMessageId:f.rootMessageId},{from:\"user\",content:n,files:a.files},c);P=K({messages:s,rootMessageId:f.rootMessageId},{from:\"assistant\",content:\"\"},I)}else(a==null?void 0:a.from)===\"assistant\"&&(P=ae({messages:s,rootMessageId:f.rootMessageId},{from:\"assistant\",content:\"\"},c))}else{const a=K({messages:s,rootMessageId:f.rootMessageId},{from:\"user\",content:n??\"\",files:M,createdAt:new Date,updatedAt:new Date},c);f.rootMessageId||t(0,f.rootMessageId=a,f),P=K({messages:s,rootMessageId:f.rootMessageId},{from:\"assistant\",content:\"\",createdAt:new Date,updatedAt:new Date},a)}t(5,s=[...s]);const F=s.find(a=>a.id===c),b=s.find(a=>a.id===P);if(!b)throw new Error(\"Message to write to not found\");const he=!!d.data.assistant,x=new AbortController,$=await Ve(d.params.id,{base:D,inputs:n,messageId:c,isRetry:O,isContinue:R,webSearch:!he&&!l.tools&&v.useSearch,tools:h.tools,files:O?F==null?void 0:F.files:M},x.signal).catch(a=>{_.set(a.message)});if($===void 0)return;t(4,T=[]);for await(const a of $){if(p){x.abort();return}if(a.type===k.Stream&&(a.token=a.token.replaceAll(\"\\0\",\"\")),b.updates=[...b.updates??[],a],a.type===k.Stream&&!h.disableStream)b.content+=a.token,t(3,j=!1),t(5,s=[...s]);else if(a.type===k.WebSearch||a.type===k.Tool)t(5,s=[...s]);else if(a.type===k.Status&&a.status===Xe.Error)w(_,r=a.message??\"An error has occurred\",r);else if(a.type===k.Title){const I=f.conversations.find(({id:ge})=>ge===d.params.id);I&&(I.title=a.title,w(se,m={title:a.title,convId:d.params.id},m))}else a.type===k.File?(b.files=[...b.files??[],{type:\"hash\",value:a.sha,mime:a.mime,name:a.name}],t(5,s=[...s])):a.type===k.Reasoning&&(b.reasoning||(b.reasoning=\"\"),a.subtype===qe.Stream?b.reasoning+=a.token:b.updates=[...b.updates??[],a],t(5,s=[...s]))}}catch(M){M instanceof Error&&M.message.includes(\"overloaded\")?w(_,r=\"Too much traffic, please try again.\",r):M instanceof Error&&M.message.includes(\"429\")?w(_,r=H.rateLimited,r):M instanceof Error?w(_,r=M.message,r):w(_,r=H.default,r),console.error(M)}finally{t(2,U=!1),t(3,j=!1),await He()}}async function B(n,c){let O=d.params.id,R;t(5,s=s.map(y=>y.id===c?(R=y.score,{...y,score:n}):y));try{await fetch(`${D}/conversation/${O}/message/${c}/vote`,{method:\"POST\",body:JSON.stringify({score:n})})}catch{t(5,s=s.map(y=>y.id!==c?y:{...y,score:R}))}}Ie(async()=>{S&&(t(4,T=S.files),await E({prompt:S.content}),w(te,S=void 0,S))});async function le(n){f.shared?await X().then(async c=>{await G(`${D}/conversation/${c}`,{invalidateAll:!0})}).then(async()=>await E({prompt:n.detail})).finally(()=>t(2,U=!1)):await E({prompt:n.detail})}async function de(n){f.shared?await X().then(async c=>{await G(`${D}/conversation/${c}`,{invalidateAll:!0})}).then(async()=>await E({prompt:n.detail.content,messageId:n.detail.id,isRetry:!0})).finally(()=>t(2,U=!1)):await E({prompt:n.detail.content,messageId:n.detail.id,isRetry:!0})}async function ce(n){f.shared?await X().then(async c=>{await G(`${D}/conversation/${c}`,{invalidateAll:!0})}).then(async()=>await E({messageId:n.detail.id,isContinue:!0})).finally(()=>t(2,U=!1)):await E({messageId:n.detail.id,isContinue:!0})}const q=Le();A(e,q,n=>t(19,i=n));const Q=Je();A(e,Q,n=>t(23,h=n));function fe(n){T=n,t(4,T)}const me=n=>B(n.detail.score,n.detail.id),ue=()=>Fe(d.params.id,f.title),pe=()=>(w(N,p=!0,p),t(2,U=!1));return e.$$set=n=>{\"data\"in n&&t(0,f=n.data)},e.$$.update=()=>{var n;e.$$.dirty&1&&t(5,{messages:s}=f,s),e.$$.dirty&1&&(l=z([...f.models,...f.oldModels],f.model)),e.$$.dirty&2&&(d.params.id,w(N,p=!0,p),t(2,U=!1),w(q,i.editing=null,i)),e.$$.dirty&3&&t(7,g=((n=f.conversations.find(c=>c.id===d.params.id))==null?void 0:n.title)??f.title)},[f,d,U,j,T,s,p,g,B,le,de,ce,q,Q,fe,me,ue,pe]}class ct extends Ae{constructor(o){super(),ke(this,o,$e,xe,we,{data:0})}}export{ct as component};\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.3",
        "startedDateTime": "2024-12-05T00:16:08.634Z",
        "time": 4.622999986167997,
        "timings": {
          "blocked": 2.1509999915082005,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.6420000008717179,
          "receive": 1.8299999937880784,
          "_blocked_queueing": 1.1569999915082008,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "gt",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 27370
              },
              {
                "functionName": "xe",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16507
              },
              {
                "functionName": "X",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 19544
              },
              {
                "functionName": "le",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 11886
              },
              {
                "functionName": "cn",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 22450
              },
              {
                "functionName": "p",
                "scriptId": "624",
                "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                "lineNumber": 0,
                "columnNumber": 2024
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "E",
                  "scriptId": "624",
                  "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                  "lineNumber": 0,
                  "columnNumber": 2233
                },
                {
                  "functionName": "",
                  "scriptId": "605",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                  "lineNumber": 0,
                  "columnNumber": 8170
                },
                {
                  "functionName": "",
                  "scriptId": "605",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                  "lineNumber": 0,
                  "columnNumber": 8156
                },
                {
                  "functionName": "K",
                  "scriptId": "625",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                  "lineNumber": 329,
                  "columnNumber": 4294
                },
                {
                  "functionName": "",
                  "scriptId": "605",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                  "lineNumber": 0,
                  "columnNumber": 4055
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/conversation/6750f0c9cbfac4f9c6998656/__data.json?x-sveltekit-invalidated=11",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/chat/conversation/6750f0c9cbfac4f9c6998656/__data.json?x-sveltekit-invalidated=11"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/chat/"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [
            {
              "name": "x-sveltekit-invalidated",
              "value": "11"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "private, no-store"
            },
            {
              "name": "content-security-policy",
              "value": "frame-ancestors 'none';"
            },
            {
              "name": "content-type",
              "value": "text/sveltekit-data"
            },
            {
              "name": "date",
              "value": "Thu, 05 Dec 2024 00:16:09 GMT"
            },
            {
              "name": "vary",
              "value": "Accept"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "nvwYXqMZUmDli60O-ryI02xr4Ybui7K3982rEscXMSjNWrD5wc-wCA=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Miss from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 15815,
            "mimeType": "text/sveltekit-data",
            "text": "{\"type\":\"data\",\"nodes\":[{\"type\":\"data\",\"data\":[{\"nConversations\":1,\"conversations\":2,\"settings\":25,\"models\":33,\"oldModels\":200,\"tools\":238,\"communityToolCount\":279,\"assistants\":280,\"user\":282,\"assistant\":286,\"enableAssistants\":26,\"enableAssistantsRAG\":26,\"enableCommunityTools\":26,\"loginRequired\":32,\"loginEnabled\":26,\"guestMode\":32},5,[3,8,12,16,21],{\"id\":4,\"title\":5,\"model\":6,\"updatedAt\":7,\"assistantId\":-1,\"avatarUrl\":-1},\"6750f0c9cbfac4f9c6998656\",\"New Chat\",\"CohereForAI/c4ai-command-r-plus-08-2024\",[\"Date\",\"2024-12-05T00:16:09.592Z\"],{\"id\":9,\"title\":10,\"model\":6,\"updatedAt\":11,\"assistantId\":-1,\"avatarUrl\":-1},\"6750ef407b6e20d6431aa367\",\"Greeting\",[\"Date\",\"2024-12-05T00:09:57.443Z\"],{\"id\":13,\"title\":10,\"model\":14,\"updatedAt\":15,\"assistantId\":-1,\"avatarUrl\":-1},\"674e8968c10eb4a02d9b2f7b\",\"Qwen/Qwen2.5-72B-Instruct\",[\"Date\",\"2024-12-05T00:09:20.559Z\"],{\"id\":17,\"title\":18,\"model\":19,\"updatedAt\":20,\"assistantId\":-1,\"avatarUrl\":-1},\"66a5765fbfe2f7b50db05dc4\",\"Hello greeting\",\"CohereForAI/c4ai-command-r-plus\",[\"Date\",\"2024-07-27T22:36:17.115Z\"],{\"id\":22,\"title\":23,\"model\":19,\"updatedAt\":24,\"assistantId\":-1,\"avatarUrl\":-1},\"668ce81d4c62815ea86889e1\",\"Hi\",[\"Date\",\"2024-07-09T07:34:56.550Z\"],{\"searchEnabled\":26,\"ethicsModalAccepted\":26,\"ethicsModalAcceptedAt\":27,\"activeModel\":6,\"hideEmojiOnSidebar\":26,\"shareConversationsWithModelAuthors\":26,\"customPrompts\":28,\"assistants\":30,\"tools\":31,\"disableStream\":32,\"directPaste\":32},true,[\"Date\",\"2024-12-05T00:09:31.944Z\"],{\"meta-llama/Meta-Llama-3-70B-Instruct\":29,\"CohereForAI/c4ai-command-r-plus\":29},\"\",[],[],false,[34,57,73,92,116,129,146,154,166,179,193],{\"id\":14,\"name\":14,\"websiteUrl\":35,\"modelUrl\":36,\"tokenizer\":14,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":14,\"description\":37,\"logoUrl\":38,\"promptExamples\":39,\"parameters\":49,\"preprompt\":56,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":26},\"https://qwenlm.github.io/blog/qwen2.5/\",\"https://huggingface.co/Qwen/Qwen2.5-72B-Instruct\",\"The latest Qwen open model with improved role-playing, long text generation and structured data understanding.\",\"https://huggingface.co/datasets/huggingchat/models-logo/resolve/main/qwen-logo.png\",[40,43,46],{\"title\":41,\"prompt\":42},\"Write an email from bullet list\",\"As a restaurant owner, write a professional email to the supplier to get these products every week: \\n\\n- Wine (x10)\\n- Eggs (x24)\\n- Bread (x12)\",{\"title\":44,\"prompt\":45},\"Code a snake game\",\"Code a basic snake game in python, give explanations for each step.\",{\"title\":47,\"prompt\":48},\"Assist in a task\",\"How do I make a delicious lemon cheesecake?\",{\"temperature\":50,\"truncate\":51,\"max_new_tokens\":52,\"stop\":53,\"stop_sequences\":53},0.6,28672,3072,[54,55],\"\\u003C|endoftext|>\",\"\\u003C|im_end|>\",\"You are Qwen, created by Alibaba Cloud. You are a helpful assistant.\",{\"id\":58,\"name\":58,\"websiteUrl\":59,\"modelUrl\":60,\"tokenizer\":61,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":58,\"description\":62,\"logoUrl\":63,\"promptExamples\":64,\"parameters\":68,\"preprompt\":29,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":26,\"unlisted\":32,\"hasInferenceAPI\":32},\"meta-llama/Meta-Llama-3.1-70B-Instruct\",\"https://llama.meta.com/\",\"https://huggingface.co/meta-llama/Meta-Llama-3.1-70B-Instruct\",\"nsarrazin/llama3.1-tokenizer\",\"Ideal for everyday use. A fast and extremely capable model matching closed source models' capabilities.\",\"https://huggingface.co/datasets/huggingchat/models-logo/resolve/main/meta-logo.png\",[65,66,67],{\"title\":41,\"prompt\":42},{\"title\":44,\"prompt\":45},{\"title\":47,\"prompt\":48},{\"temperature\":50,\"truncate\":69,\"max_new_tokens\":70,\"stop\":71,\"stop_sequences\":71},7167,1024,[54,72],\"\\u003C|eot_id|>\",{\"id\":6,\"name\":6,\"websiteUrl\":74,\"modelUrl\":75,\"tokenizer\":76,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":6,\"description\":77,\"logoUrl\":78,\"promptExamples\":79,\"parameters\":87,\"preprompt\":29,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":26,\"unlisted\":32,\"hasInferenceAPI\":32},\"https://docs.cohere.com/docs/command-r-plus\",\"https://huggingface.co/CohereForAI/c4ai-command-r-plus-08-2024\",\"nsarrazin/c4ai-command-r-v01-tokenizer\",\"Cohere's largest language model, optimized for conversational interaction and tool use. Now with the 2024 update!\",\"https://huggingface.co/datasets/huggingchat/models-logo/resolve/main/cohere-logo.png\",[80,83,86],{\"title\":81,\"prompt\":82},\"Generate a mouse portrait\",\"Generate the portrait of a scientific mouse in its laboratory.\",{\"title\":84,\"prompt\":85},\"Review a pull request\",\"Review this pull request: https://github.com/huggingface/chat-ui/pull/1131/files\",{\"title\":44,\"prompt\":45},{\"temperature\":88,\"truncate\":51,\"max_new_tokens\":89,\"stop\":90,\"stop_sequences\":90},0.3,2048,[91],\"\\u003C|END_OF_TURN_TOKEN|>\",{\"id\":93,\"name\":93,\"websiteUrl\":94,\"modelUrl\":95,\"tokenizer\":-1,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":93,\"description\":96,\"logoUrl\":38,\"promptExamples\":97,\"parameters\":107,\"preprompt\":115,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":26},\"Qwen/QwQ-32B-Preview\",\"https://qwenlm.github.io/blog/qwq-32b-preview/\",\"https://huggingface.co/Qwen/QwQ-32B-Preview\",\"QwQ is an experiment model from the Qwen Team with advanced reasoning capabilities.\",[98,101,104],{\"title\":99,\"prompt\":100},\"Rs in strawberry\",\"how many R in strawberry?\",{\"title\":102,\"prompt\":103},\"Larger number\",\"9.11 or 9.9 which number is larger?\",{\"title\":105,\"prompt\":106},\"Measuring 6 liters\",\"I have a 6- and a 12-liter jug. I want to measure exactly 6 liters.\",{\"temperature\":108,\"truncate\":109,\"max_new_tokens\":110,\"stop\":111,\"top_p\":112,\"top_k\":113,\"repetition_penalty\":114,\"stop_sequences\":111},0.7,12288,4096,[55],0.8,20,1.05,\"You are a helpful and harmless assistant. You are Qwen developed by Alibaba. You should think step-by-step.\",{\"id\":117,\"name\":117,\"websiteUrl\":118,\"modelUrl\":119,\"tokenizer\":117,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":117,\"description\":120,\"logoUrl\":121,\"promptExamples\":122,\"parameters\":126,\"preprompt\":29,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":32},\"nvidia/Llama-3.1-Nemotron-70B-Instruct-HF\",\"https://www.nvidia.com/\",\"https://huggingface.co/nvidia/Llama-3.1-Nemotron-70B-Instruct-HF\",\"Nvidia's latest Llama fine-tune, topping alignment benchmarks and optimized for instruction following.\",\"https://huggingface.co/datasets/huggingchat/models-logo/resolve/main/nvidia-logo.png\",[123,124,125],{\"title\":99,\"prompt\":100},{\"title\":102,\"prompt\":103},{\"title\":105,\"prompt\":106},{\"temperature\":127,\"truncate\":51,\"max_new_tokens\":89,\"stop\":128,\"stop_sequences\":128},0.5,[72,55],{\"id\":130,\"name\":130,\"websiteUrl\":131,\"modelUrl\":132,\"tokenizer\":-1,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":130,\"description\":133,\"logoUrl\":38,\"promptExamples\":134,\"parameters\":144,\"preprompt\":56,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":26},\"Qwen/Qwen2.5-Coder-32B-Instruct\",\"https://qwenlm.github.io/blog/qwen2.5-coder-family/\",\"https://huggingface.co/Qwen/Qwen2.5-Coder-32B-Instruct\",\"Qwen's latest coding model, in its biggest size yet. SOTA on many coding benchmarks.\",[135,138,141],{\"title\":136,\"prompt\":137},\"To-do list web app\",\"Create a simple to-do list application where users can:\\n- Add new tasks.\\n- Mark tasks as complete.\\n- Delete completed tasks.\\nThe tasks should persist in the browser's local storage so that they remain available even after a page reload.\\n\",{\"title\":139,\"prompt\":140},\"Create a REST API\",\"Build a simple REST API using Node.js, TypeScript and Express:\\n- POST /items: Accepts a JSON body with name and quantity and adds a new item.\\n- GET /items: Returns a list of all items.\\n- PUT /items/:id: Updates the name or quantity of an item by its id.\\n- DELETE /items/:id: Removes an item by its id.\\nUse an in-memory array as the data store (no need for a database). Include basic error handling (e.g., item not found).\",{\"title\":142,\"prompt\":143},\"Simple website\",\"Generate a snazzy static landing page for a local coffee shop using HTML and CSS. You can use tailwind using \\u003Cscript src='https://cdn.tailwindcss.com'>\\u003C/script>.\",{\"temperature\":50,\"truncate\":51,\"max_new_tokens\":52,\"stop\":145,\"stop_sequences\":145},[55,54],{\"id\":147,\"name\":147,\"websiteUrl\":148,\"modelUrl\":-1,\"tokenizer\":-1,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":147,\"description\":149,\"logoUrl\":63,\"promptExamples\":-1,\"parameters\":150,\"preprompt\":29,\"multimodal\":26,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":32},\"meta-llama/Llama-3.2-11B-Vision-Instruct\",\"https://llama.com/\",\"The latest multimodal model from Meta! Supports image inputs natively.\",{\"temperature\":50,\"truncate\":151,\"max_new_tokens\":152,\"stop\":153,\"stop_sequences\":153},14336,1536,[72,55],{\"id\":155,\"name\":155,\"websiteUrl\":156,\"modelUrl\":157,\"tokenizer\":155,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":155,\"description\":158,\"logoUrl\":159,\"promptExamples\":160,\"parameters\":164,\"preprompt\":29,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":26},\"NousResearch/Hermes-3-Llama-3.1-8B\",\"https://nousresearch.com/\",\"https://huggingface.co/NousResearch/Hermes-3-Llama-3.1-8B\",\"Nous Research's latest Hermes 3 release in 8B size. Follows instruction closely.\",\"https://huggingface.co/datasets/huggingchat/models-logo/resolve/main/nous-logo.png\",[161,162,163],{\"title\":41,\"prompt\":42},{\"title\":44,\"prompt\":45},{\"title\":47,\"prompt\":48},{\"temperature\":50,\"truncate\":151,\"max_new_tokens\":152,\"stop\":165,\"stop_sequences\":165},[55],{\"id\":167,\"name\":167,\"websiteUrl\":168,\"modelUrl\":169,\"tokenizer\":167,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":167,\"description\":170,\"logoUrl\":171,\"promptExamples\":172,\"parameters\":176,\"preprompt\":29,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":32},\"mistralai/Mistral-Nemo-Instruct-2407\",\"https://mistral.ai/news/mistral-nemo/\",\"https://huggingface.co/mistralai/Mistral-Nemo-Instruct-2407\",\"A small model with good capabilities in language understanding and commonsense reasoning.\",\"https://huggingface.co/datasets/huggingchat/models-logo/resolve/main/mistral-logo.png\",[173,174,175],{\"title\":41,\"prompt\":42},{\"title\":44,\"prompt\":45},{\"title\":47,\"prompt\":48},{\"temperature\":50,\"truncate\":151,\"max_new_tokens\":152,\"stop\":177,\"stop_sequences\":177},[178],\"\\u003C/s>\",{\"id\":180,\"name\":180,\"websiteUrl\":181,\"modelUrl\":182,\"tokenizer\":180,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":180,\"description\":183,\"logoUrl\":184,\"promptExamples\":185,\"parameters\":189,\"preprompt\":29,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":26},\"microsoft/Phi-3.5-mini-instruct\",\"https://techcommunity.microsoft.com/t5/ai-azure-ai-services-blog/discover-the-new-multi-lingual-high-quality-phi-3-5-slms/ba-p/4225280/\",\"https://huggingface.co/microsoft/Phi-3.5-mini-instruct\",\"One of the best small models (3.8B parameters), super fast for simple tasks.\",\"https://huggingface.co/datasets/huggingchat/models-logo/resolve/main/microsoft-logo.png\",[186,187,188],{\"title\":41,\"prompt\":42},{\"title\":44,\"prompt\":45},{\"title\":47,\"prompt\":48},{\"temperature\":50,\"truncate\":51,\"max_new_tokens\":52,\"stop\":190,\"stop_sequences\":190},[191,54,192],\"\\u003C|end|>\",\"\\u003C|assistant|>\",{\"id\":194,\"name\":194,\"websiteUrl\":-1,\"modelUrl\":-1,\"tokenizer\":195,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":194,\"description\":-1,\"logoUrl\":-1,\"promptExamples\":-1,\"parameters\":198,\"preprompt\":29,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":26,\"hasInferenceAPI\":32},\"llhf/Meta-Llama-3.1-8B-Instruct\",{\"tokenizerUrl\":196,\"tokenizerConfigUrl\":197},\"https://huggingface.co/nsarrazin/llama3.1-tokenizer/resolve/main/tokenizer.json\",\"https://huggingface.co/nsarrazin/llama3.1-tokenizer/raw/main/tokenizer_config.json\",{\"temperature\":50,\"stop\":199,\"stop_sequences\":199},[54,72],[201,203,205,207,209,211,213,215,217,219,221,223,225,227,228,230,232,234,236],{\"name\":202,\"id\":202,\"displayName\":202},\"bigcode/starcoder\",{\"name\":204,\"id\":204,\"displayName\":204},\"OpenAssistant/oasst-sft-6-llama-30b-xor\",{\"name\":206,\"id\":206,\"displayName\":206},\"HuggingFaceH4/zephyr-7b-alpha\",{\"name\":208,\"id\":208,\"displayName\":208},\"openchat/openchat_3.5\",{\"name\":210,\"id\":210,\"displayName\":210},\"openchat/openchat-3.5-1210\",{\"name\":212,\"id\":212,\"displayName\":212},\"tiiuae/falcon-180B-chat\",{\"name\":214,\"id\":214,\"displayName\":214},\"codellama/CodeLlama-34b-Instruct-hf\",{\"name\":216,\"id\":216,\"displayName\":216},\"google/gemma-7b-it\",{\"name\":218,\"id\":218,\"displayName\":218},\"meta-llama/Llama-2-70b-chat-hf\",{\"name\":220,\"id\":220,\"displayName\":220},\"codellama/CodeLlama-70b-Instruct-hf\",{\"name\":222,\"id\":222,\"displayName\":222},\"openchat/openchat-3.5-0106\",{\"name\":224,\"id\":224,\"displayName\":224},\"meta-llama/Meta-Llama-3-70B-Instruct\",{\"name\":226,\"id\":226,\"displayName\":226},\"meta-llama/Meta-Llama-3.1-405B-Instruct-FP8\",{\"name\":19,\"transferTo\":6,\"id\":19,\"displayName\":19},{\"name\":229,\"transferTo\":6,\"id\":229,\"displayName\":229},\"01-ai/Yi-1.5-34B-Chat\",{\"name\":231,\"transferTo\":167,\"id\":231,\"displayName\":231},\"mistralai/Mixtral-8x7B-Instruct-v0.1\",{\"name\":233,\"transferTo\":155,\"id\":233,\"displayName\":233},\"NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO\",{\"name\":235,\"transferTo\":167,\"id\":235,\"displayName\":235},\"mistralai/Mistral-7B-Instruct-v0.3\",{\"name\":237,\"transferTo\":180,\"id\":237,\"displayName\":237},\"microsoft/Phi-3-mini-4k-instruct\",[239,247,254,261,267,273],{\"_id\":240,\"type\":241,\"displayName\":242,\"name\":243,\"description\":244,\"mimeTypes\":245,\"isOnByDefault\":26,\"isLocked\":26,\"timeToUseMS\":246},\"000000000000000000000001\",\"config\",\"Image Generation\",\"image_generation\",\"Use this tool to generate images based on a prompt.\",[],15000,{\"_id\":248,\"type\":241,\"displayName\":249,\"name\":250,\"description\":251,\"mimeTypes\":252,\"isOnByDefault\":26,\"isLocked\":26,\"timeToUseMS\":246},\"000000000000000000000002\",\"Document Parser\",\"document_parser\",\"Use this tool to parse any document and get its content in markdown format.\",[253],\"application/*\",{\"_id\":255,\"type\":241,\"displayName\":256,\"name\":257,\"description\":258,\"mimeTypes\":259,\"isOnByDefault\":26,\"isLocked\":26,\"timeToUseMS\":246},\"000000000000000000000003\",\"Image Editor\",\"edit_image\",\"This tool lets you edit images\",[260],\"image/*\",{\"_id\":262,\"type\":241,\"displayName\":263,\"name\":264,\"description\":265,\"mimeTypes\":266,\"isOnByDefault\":26,\"isLocked\":26,\"timeToUseMS\":246},\"00000000000000000000000c\",\"Calculator\",\"calculator\",\"Calculate the result of a mathematical expression\",[],{\"_id\":268,\"type\":241,\"displayName\":269,\"name\":270,\"description\":271,\"mimeTypes\":272,\"isOnByDefault\":26,\"isLocked\":26,\"timeToUseMS\":246},\"00000000000000000000000b\",\"Fetch URL\",\"fetchUrl\",\"Fetch the contents of a URL\",[],{\"_id\":274,\"type\":241,\"displayName\":275,\"name\":276,\"description\":277,\"mimeTypes\":278,\"isOnByDefault\":26,\"isLocked\":26,\"timeToUseMS\":246},\"00000000000000000000000a\",\"Web Search\",\"websearch\",\"Search the web for answers to the user's query\",[],42,[\"Promise\",281],1,{\"id\":283,\"username\":284,\"avatarUrl\":285,\"email\":286,\"logoutDisabled\":-1,\"isAdmin\":32,\"isEarlyAccess\":32},\"666681d0f3c30ef88af3f7fe\",\"helloworld1990\",\"https://huggingface.co/avatars/88d46633ff51873d06bd5b7c25c47c70.svg\",null],\"uses\":{\"dependencies\":[\"conversation:list\"]}},{\"type\":\"data\",\"data\":[{\"messages\":1,\"title\":10,\"model\":11,\"preprompt\":5,\"rootMessageId\":3,\"assistant\":12,\"shared\":13},[2],{\"id\":3,\"from\":4,\"content\":5,\"createdAt\":6,\"updatedAt\":7,\"children\":8,\"ancestors\":9},\"7cf8c534-8d8a-443b-a8bd-189975633f77\",\"system\",\"\",[\"Date\",\"2024-12-05T00:16:09.590Z\"],[\"Date\",\"2024-12-05T00:16:09.590Z\"],[],[],\"New Chat\",\"CohereForAI/c4ai-command-r-plus-08-2024\",null,false],\"uses\":{\"dependencies\":[\"https://huggingface.co/chat/conversation/conversation\"],\"params\":[\"id\"]}}]}\n{\"type\":\"chunk\",\"id\":1,\"data\":[[]]}\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 16120,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:16:08.635Z",
        "time": 300.0929999980144,
        "timings": {
          "blocked": 1.747999997404404,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.22999999999999998,
          "wait": 296.1340000066347,
          "receive": 1.9809999939752743,
          "_blocked_queueing": 0.937999997404404,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "e",
                "scriptId": "646",
                "url": "https://huggingface.co/js/script.js",
                "lineNumber": 0,
                "columnNumber": 828
              },
              {
                "functionName": "c",
                "scriptId": "646",
                "url": "https://huggingface.co/js/script.js",
                "lineNumber": 0,
                "columnNumber": 1105
              },
              {
                "functionName": "u",
                "scriptId": "646",
                "url": "https://huggingface.co/js/script.js",
                "lineNumber": 0,
                "columnNumber": 1133
              },
              {
                "functionName": "t.pushState.t.pushState",
                "scriptId": "646",
                "url": "https://huggingface.co/js/script.js",
                "lineNumber": 0,
                "columnNumber": 1235
              },
              {
                "functionName": "X",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 20290
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "le",
                  "scriptId": "604",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                  "lineNumber": 0,
                  "columnNumber": 11886
                },
                {
                  "functionName": "cn",
                  "scriptId": "604",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                  "lineNumber": 0,
                  "columnNumber": 22450
                },
                {
                  "functionName": "p",
                  "scriptId": "624",
                  "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                  "lineNumber": 0,
                  "columnNumber": 2024
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "E",
                    "scriptId": "624",
                    "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                    "lineNumber": 0,
                    "columnNumber": 2233
                  },
                  {
                    "functionName": "",
                    "scriptId": "605",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                    "lineNumber": 0,
                    "columnNumber": 8170
                  },
                  {
                    "functionName": "",
                    "scriptId": "605",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                    "lineNumber": 0,
                    "columnNumber": 8156
                  },
                  {
                    "functionName": "K",
                    "scriptId": "625",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                    "lineNumber": 329,
                    "columnNumber": 4294
                  },
                  {
                    "functionName": "",
                    "scriptId": "605",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                    "lineNumber": 0,
                    "columnNumber": 4055
                  }
                ]
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "xhr",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "POST",
          "url": "https://huggingface.co/api/event",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/api/event"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "content-length",
              "value": "144"
            },
            {
              "name": "content-type",
              "value": "text/plain"
            },
            {
              "name": "origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/chat/conversation/6750f0c9cbfac4f9c6998656"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 144,
          "postData": {
            "mimeType": "text/plain",
            "text": "{\"n\":\"pageview\",\"u\":\"https://huggingface.co/chat/conversation/6750f0c9cbfac4f9c6998656\",\"d\":\"huggingface.co\",\"r\":\"https://huggingface.co/chat/\"}"
          }
        },
        "response": {
          "status": 202,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "application",
              "value": "127.0.0.1"
            },
            {
              "name": "cache-control",
              "value": "must-revalidate, max-age=0, private"
            },
            {
              "name": "cdn-cachedat",
              "value": "12/05/2024 00:16:10"
            },
            {
              "name": "cdn-edgestorageid",
              "value": "885"
            },
            {
              "name": "cdn-proxyver",
              "value": "1.06"
            },
            {
              "name": "cdn-pullzone",
              "value": "682664"
            },
            {
              "name": "cdn-requestcountrycode",
              "value": "US"
            },
            {
              "name": "cdn-requestid",
              "value": "114bcbe49bd8c7c4ec8d4e723feefc04"
            },
            {
              "name": "cdn-requestpullcode",
              "value": "202"
            },
            {
              "name": "cdn-requestpullsuccess",
              "value": "True"
            },
            {
              "name": "cdn-requesttime",
              "value": "0"
            },
            {
              "name": "cdn-uid",
              "value": "153cb5b1-399a-48ef-b5bf-098c03770254"
            },
            {
              "name": "content-length",
              "value": "2"
            },
            {
              "name": "content-type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Thu, 05 Dec 2024 00:16:10 GMT"
            },
            {
              "name": "permissions-policy",
              "value": "interest-cohort=()"
            },
            {
              "name": "server",
              "value": "BunnyCDN-NY1-885"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "wp5rYlj_6gCbWGSEqkanxEh5TSU72aMOmiXuqgmn3Pr3k3x7tDyBlA=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Miss from cloudfront"
            },
            {
              "name": "x-request-id",
              "value": "GA4ftVFQfzh7yI8xxJYV"
            }
          ],
          "cookies": [],
          "content": {
            "size": 2,
            "mimeType": "text/plain",
            "text": "ok"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 647,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:16:08.940Z",
        "time": 285.90499999700114,
        "timings": {
          "blocked": 12.637999998644926,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.33699999999999974,
          "wait": 270.7920000021625,
          "receive": 2.1379999961936846,
          "_blocked_queueing": 5.669999998644926,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "script",
          "lineNumber": 22,
          "stack": {
            "callFrames": [
              {
                "functionName": "X",
                "scriptId": "605",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                "lineNumber": 0,
                "columnNumber": 3407
              },
              {
                "functionName": "m",
                "scriptId": "670",
                "url": "https://huggingface.co/chat/_app/immutable/nodes/9.PVin43Ht.js",
                "lineNumber": 0,
                "columnNumber": 4225
              },
              {
                "functionName": "_t",
                "scriptId": "609",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                "lineNumber": 3,
                "columnNumber": 2516
              },
              {
                "functionName": "p",
                "scriptId": "607",
                "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
                "lineNumber": 1,
                "columnNumber": 1937
              },
              {
                "functionName": "p",
                "scriptId": "607",
                "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
                "lineNumber": 1,
                "columnNumber": 5182
              },
              {
                "functionName": "gt",
                "scriptId": "605",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                "lineNumber": 0,
                "columnNumber": 1349
              },
              {
                "functionName": "p",
                "scriptId": "610",
                "url": "https://huggingface.co/chat/_app/immutable/nodes/0.QS2KVdeN.js",
                "lineNumber": 7,
                "columnNumber": 12110
              },
              {
                "functionName": "ct",
                "scriptId": "605",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                "lineNumber": 0,
                "columnNumber": 9030
              },
              {
                "functionName": "rt",
                "scriptId": "605",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                "lineNumber": 0,
                "columnNumber": 8683
              }
            ],
            "parent": {
              "description": "Promise.then",
              "callFrames": [
                {
                  "functionName": "it",
                  "scriptId": "605",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                  "lineNumber": 0,
                  "columnNumber": 8484
                },
                {
                  "functionName": "ht",
                  "scriptId": "609",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                  "lineNumber": 3,
                  "columnNumber": 2851
                },
                {
                  "functionName": "",
                  "scriptId": "609",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                  "lineNumber": 3,
                  "columnNumber": 3388
                },
                {
                  "functionName": "r.$$set",
                  "scriptId": "607",
                  "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
                  "lineNumber": 1,
                  "columnNumber": 7432
                },
                {
                  "functionName": "$set",
                  "scriptId": "609",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                  "lineNumber": 3,
                  "columnNumber": 3947
                },
                {
                  "functionName": "X",
                  "scriptId": "604",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                  "lineNumber": 0,
                  "columnNumber": 20578
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "le",
                    "scriptId": "604",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                    "lineNumber": 0,
                    "columnNumber": 11886
                  },
                  {
                    "functionName": "cn",
                    "scriptId": "604",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                    "lineNumber": 0,
                    "columnNumber": 22450
                  },
                  {
                    "functionName": "p",
                    "scriptId": "624",
                    "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                    "lineNumber": 0,
                    "columnNumber": 2024
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "E",
                      "scriptId": "624",
                      "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                      "lineNumber": 0,
                      "columnNumber": 2233
                    },
                    {
                      "functionName": "",
                      "scriptId": "605",
                      "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                      "lineNumber": 0,
                      "columnNumber": 8170
                    },
                    {
                      "functionName": "",
                      "scriptId": "605",
                      "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                      "lineNumber": 0,
                      "columnNumber": 8156
                    },
                    {
                      "functionName": "K",
                      "scriptId": "625",
                      "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                      "lineNumber": 329,
                      "columnNumber": 4294
                    },
                    {
                      "functionName": "",
                      "scriptId": "605",
                      "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                      "lineNumber": 0,
                      "columnNumber": 4055
                    }
                  ]
                }
              }
            }
          }
        },
        "_priority": "VeryHigh",
        "_resourceType": "stylesheet",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/katex.min.css",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": "https://huggingface.co/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "access-control-expose-headers",
              "value": "*"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "cf-cache-status",
              "value": "HIT"
            },
            {
              "name": "etag",
              "value": "W/\"5a48-AAt1ReEv8GcHxqfU/2/5y7NYBhs\""
            },
            {
              "name": "age",
              "value": "284589"
            },
            {
              "name": "report-to",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=wTvhs6P5ThzwWwVRrd1uW3hITIPk9EYJciYS0jvySVOhWWPkh%2FFx3pP7ETwzm4t1bFFqVXOnZL67ifQWqkQT%2F4YEIk15HY%2F7BUypOaOXqd4BRh5u7ORHxwLYoZDNVuv3tJM%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-jsd-version-type",
              "value": "version"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "name": "x-cache",
              "value": "HIT, HIT"
            },
            {
              "name": "date",
              "value": "Tue, 03 Dec 2024 04:30:34 GMT"
            },
            {
              "name": "content-type",
              "value": "text/css; charset=utf-8"
            },
            {
              "name": "x-served-by",
              "value": "cache-fra-etou8220060-FRA, cache-lga21940-LGA"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000, s-maxage=31536000, immutable"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "nel",
              "value": "{\"success_fraction\":0.01,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "cf-ray",
              "value": "8ec0d2777b78afdb-NRT"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "content-length",
              "value": "3454"
            },
            {
              "name": "server",
              "value": "cloudflare"
            },
            {
              "name": "x-jsd-version",
              "value": "0.16.8"
            }
          ],
          "cookies": [],
          "content": {
            "size": 23112,
            "mimeType": "text/css",
            "text": "@font-face{font-family:KaTeX_AMS;font-style:normal;font-weight:400;src:url(fonts/KaTeX_AMS-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_AMS-Regular.woff) format(\"woff\"),url(fonts/KaTeX_AMS-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Caligraphic;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Caligraphic-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Caligraphic-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Caligraphic-Bold.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Caligraphic;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Caligraphic-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Caligraphic-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Caligraphic-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Fraktur;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Fraktur-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Fraktur-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Fraktur-Bold.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Fraktur;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Fraktur-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Fraktur-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Fraktur-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:normal;font-weight:700;src:url(fonts/KaTeX_Main-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Main-Bold.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:italic;font-weight:700;src:url(fonts/KaTeX_Main-BoldItalic.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-BoldItalic.woff) format(\"woff\"),url(fonts/KaTeX_Main-BoldItalic.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:italic;font-weight:400;src:url(fonts/KaTeX_Main-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Italic.woff) format(\"woff\"),url(fonts/KaTeX_Main-Italic.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Main;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Main-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Main-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Math;font-style:italic;font-weight:700;src:url(fonts/KaTeX_Math-BoldItalic.woff2) format(\"woff2\"),url(fonts/KaTeX_Math-BoldItalic.woff) format(\"woff\"),url(fonts/KaTeX_Math-BoldItalic.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Math;font-style:italic;font-weight:400;src:url(fonts/KaTeX_Math-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_Math-Italic.woff) format(\"woff\"),url(fonts/KaTeX_Math-Italic.ttf) format(\"truetype\")}@font-face{font-family:\"KaTeX_SansSerif\";font-style:normal;font-weight:700;src:url(fonts/KaTeX_SansSerif-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Bold.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Bold.ttf) format(\"truetype\")}@font-face{font-family:\"KaTeX_SansSerif\";font-style:italic;font-weight:400;src:url(fonts/KaTeX_SansSerif-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Italic.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Italic.ttf) format(\"truetype\")}@font-face{font-family:\"KaTeX_SansSerif\";font-style:normal;font-weight:400;src:url(fonts/KaTeX_SansSerif-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Regular.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Script;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Script-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Script-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Script-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size1;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size1-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size1-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size1-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size2;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size2-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size2-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size2-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size3;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size3-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size3-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size3-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Size4;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Size4-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size4-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size4-Regular.ttf) format(\"truetype\")}@font-face{font-family:KaTeX_Typewriter;font-style:normal;font-weight:400;src:url(fonts/KaTeX_Typewriter-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Typewriter-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Typewriter-Regular.ttf) format(\"truetype\")}.katex{text-rendering:auto;font:normal 1.21em KaTeX_Main,Times New Roman,serif;line-height:1.2;text-indent:0}.katex *{-ms-high-contrast-adjust:none!important;border-color:currentColor}.katex .katex-version:after{content:\"0.16.8\"}.katex .katex-mathml{clip:rect(1px,1px,1px,1px);border:0;height:1px;overflow:hidden;padding:0;position:absolute;width:1px}.katex .katex-html>.newline{display:block}.katex .base{position:relative;white-space:nowrap;width:-webkit-min-content;width:-moz-min-content;width:min-content}.katex .base,.katex .strut{display:inline-block}.katex .textbf{font-weight:700}.katex .textit{font-style:italic}.katex .textrm{font-family:KaTeX_Main}.katex .textsf{font-family:KaTeX_SansSerif}.katex .texttt{font-family:KaTeX_Typewriter}.katex .mathnormal{font-family:KaTeX_Math;font-style:italic}.katex .mathit{font-family:KaTeX_Main;font-style:italic}.katex .mathrm{font-style:normal}.katex .mathbf{font-family:KaTeX_Main;font-weight:700}.katex .boldsymbol{font-family:KaTeX_Math;font-style:italic;font-weight:700}.katex .amsrm,.katex .mathbb,.katex .textbb{font-family:KaTeX_AMS}.katex .mathcal{font-family:KaTeX_Caligraphic}.katex .mathfrak,.katex .textfrak{font-family:KaTeX_Fraktur}.katex .mathtt{font-family:KaTeX_Typewriter}.katex .mathscr,.katex .textscr{font-family:KaTeX_Script}.katex .mathsf,.katex .textsf{font-family:KaTeX_SansSerif}.katex .mathboldsf,.katex .textboldsf{font-family:KaTeX_SansSerif;font-weight:700}.katex .mathitsf,.katex .textitsf{font-family:KaTeX_SansSerif;font-style:italic}.katex .mainrm{font-family:KaTeX_Main;font-style:normal}.katex .vlist-t{border-collapse:collapse;display:inline-table;table-layout:fixed}.katex .vlist-r{display:table-row}.katex .vlist{display:table-cell;position:relative;vertical-align:bottom}.katex .vlist>span{display:block;height:0;position:relative}.katex .vlist>span>span{display:inline-block}.katex .vlist>span>.pstrut{overflow:hidden;width:0}.katex .vlist-t2{margin-right:-2px}.katex .vlist-s{display:table-cell;font-size:1px;min-width:2px;vertical-align:bottom;width:2px}.katex .vbox{align-items:baseline;display:inline-flex;flex-direction:column}.katex .hbox{width:100%}.katex .hbox,.katex .thinbox{display:inline-flex;flex-direction:row}.katex .thinbox{max-width:0;width:0}.katex .msupsub{text-align:left}.katex .mfrac>span>span{text-align:center}.katex .mfrac .frac-line{border-bottom-style:solid;display:inline-block;width:100%}.katex .hdashline,.katex .hline,.katex .mfrac .frac-line,.katex .overline .overline-line,.katex .rule,.katex .underline .underline-line{min-height:1px}.katex .mspace{display:inline-block}.katex .clap,.katex .llap,.katex .rlap{position:relative;width:0}.katex .clap>.inner,.katex .llap>.inner,.katex .rlap>.inner{position:absolute}.katex .clap>.fix,.katex .llap>.fix,.katex .rlap>.fix{display:inline-block}.katex .llap>.inner{right:0}.katex .clap>.inner,.katex .rlap>.inner{left:0}.katex .clap>.inner>span{margin-left:-50%;margin-right:50%}.katex .rule{border:0 solid;display:inline-block;position:relative}.katex .hline,.katex .overline .overline-line,.katex .underline .underline-line{border-bottom-style:solid;display:inline-block;width:100%}.katex .hdashline{border-bottom-style:dashed;display:inline-block;width:100%}.katex .sqrt>.root{margin-left:.27777778em;margin-right:-.55555556em}.katex .fontsize-ensurer.reset-size1.size1,.katex .sizing.reset-size1.size1{font-size:1em}.katex .fontsize-ensurer.reset-size1.size2,.katex .sizing.reset-size1.size2{font-size:1.2em}.katex .fontsize-ensurer.reset-size1.size3,.katex .sizing.reset-size1.size3{font-size:1.4em}.katex .fontsize-ensurer.reset-size1.size4,.katex .sizing.reset-size1.size4{font-size:1.6em}.katex .fontsize-ensurer.reset-size1.size5,.katex .sizing.reset-size1.size5{font-size:1.8em}.katex .fontsize-ensurer.reset-size1.size6,.katex .sizing.reset-size1.size6{font-size:2em}.katex .fontsize-ensurer.reset-size1.size7,.katex .sizing.reset-size1.size7{font-size:2.4em}.katex .fontsize-ensurer.reset-size1.size8,.katex .sizing.reset-size1.size8{font-size:2.88em}.katex .fontsize-ensurer.reset-size1.size9,.katex .sizing.reset-size1.size9{font-size:3.456em}.katex .fontsize-ensurer.reset-size1.size10,.katex .sizing.reset-size1.size10{font-size:4.148em}.katex .fontsize-ensurer.reset-size1.size11,.katex .sizing.reset-size1.size11{font-size:4.976em}.katex .fontsize-ensurer.reset-size2.size1,.katex .sizing.reset-size2.size1{font-size:.83333333em}.katex .fontsize-ensurer.reset-size2.size2,.katex .sizing.reset-size2.size2{font-size:1em}.katex .fontsize-ensurer.reset-size2.size3,.katex .sizing.reset-size2.size3{font-size:1.16666667em}.katex .fontsize-ensurer.reset-size2.size4,.katex .sizing.reset-size2.size4{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size2.size5,.katex .sizing.reset-size2.size5{font-size:1.5em}.katex .fontsize-ensurer.reset-size2.size6,.katex .sizing.reset-size2.size6{font-size:1.66666667em}.katex .fontsize-ensurer.reset-size2.size7,.katex .sizing.reset-size2.size7{font-size:2em}.katex .fontsize-ensurer.reset-size2.size8,.katex .sizing.reset-size2.size8{font-size:2.4em}.katex .fontsize-ensurer.reset-size2.size9,.katex .sizing.reset-size2.size9{font-size:2.88em}.katex .fontsize-ensurer.reset-size2.size10,.katex .sizing.reset-size2.size10{font-size:3.45666667em}.katex .fontsize-ensurer.reset-size2.size11,.katex .sizing.reset-size2.size11{font-size:4.14666667em}.katex .fontsize-ensurer.reset-size3.size1,.katex .sizing.reset-size3.size1{font-size:.71428571em}.katex .fontsize-ensurer.reset-size3.size2,.katex .sizing.reset-size3.size2{font-size:.85714286em}.katex .fontsize-ensurer.reset-size3.size3,.katex .sizing.reset-size3.size3{font-size:1em}.katex .fontsize-ensurer.reset-size3.size4,.katex .sizing.reset-size3.size4{font-size:1.14285714em}.katex .fontsize-ensurer.reset-size3.size5,.katex .sizing.reset-size3.size5{font-size:1.28571429em}.katex .fontsize-ensurer.reset-size3.size6,.katex .sizing.reset-size3.size6{font-size:1.42857143em}.katex .fontsize-ensurer.reset-size3.size7,.katex .sizing.reset-size3.size7{font-size:1.71428571em}.katex .fontsize-ensurer.reset-size3.size8,.katex .sizing.reset-size3.size8{font-size:2.05714286em}.katex .fontsize-ensurer.reset-size3.size9,.katex .sizing.reset-size3.size9{font-size:2.46857143em}.katex .fontsize-ensurer.reset-size3.size10,.katex .sizing.reset-size3.size10{font-size:2.96285714em}.katex .fontsize-ensurer.reset-size3.size11,.katex .sizing.reset-size3.size11{font-size:3.55428571em}.katex .fontsize-ensurer.reset-size4.size1,.katex .sizing.reset-size4.size1{font-size:.625em}.katex .fontsize-ensurer.reset-size4.size2,.katex .sizing.reset-size4.size2{font-size:.75em}.katex .fontsize-ensurer.reset-size4.size3,.katex .sizing.reset-size4.size3{font-size:.875em}.katex .fontsize-ensurer.reset-size4.size4,.katex .sizing.reset-size4.size4{font-size:1em}.katex .fontsize-ensurer.reset-size4.size5,.katex .sizing.reset-size4.size5{font-size:1.125em}.katex .fontsize-ensurer.reset-size4.size6,.katex .sizing.reset-size4.size6{font-size:1.25em}.katex .fontsize-ensurer.reset-size4.size7,.katex .sizing.reset-size4.size7{font-size:1.5em}.katex .fontsize-ensurer.reset-size4.size8,.katex .sizing.reset-size4.size8{font-size:1.8em}.katex .fontsize-ensurer.reset-size4.size9,.katex .sizing.reset-size4.size9{font-size:2.16em}.katex .fontsize-ensurer.reset-size4.size10,.katex .sizing.reset-size4.size10{font-size:2.5925em}.katex .fontsize-ensurer.reset-size4.size11,.katex .sizing.reset-size4.size11{font-size:3.11em}.katex .fontsize-ensurer.reset-size5.size1,.katex .sizing.reset-size5.size1{font-size:.55555556em}.katex .fontsize-ensurer.reset-size5.size2,.katex .sizing.reset-size5.size2{font-size:.66666667em}.katex .fontsize-ensurer.reset-size5.size3,.katex .sizing.reset-size5.size3{font-size:.77777778em}.katex .fontsize-ensurer.reset-size5.size4,.katex .sizing.reset-size5.size4{font-size:.88888889em}.katex .fontsize-ensurer.reset-size5.size5,.katex .sizing.reset-size5.size5{font-size:1em}.katex .fontsize-ensurer.reset-size5.size6,.katex .sizing.reset-size5.size6{font-size:1.11111111em}.katex .fontsize-ensurer.reset-size5.size7,.katex .sizing.reset-size5.size7{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size5.size8,.katex .sizing.reset-size5.size8{font-size:1.6em}.katex .fontsize-ensurer.reset-size5.size9,.katex .sizing.reset-size5.size9{font-size:1.92em}.katex .fontsize-ensurer.reset-size5.size10,.katex .sizing.reset-size5.size10{font-size:2.30444444em}.katex .fontsize-ensurer.reset-size5.size11,.katex .sizing.reset-size5.size11{font-size:2.76444444em}.katex .fontsize-ensurer.reset-size6.size1,.katex .sizing.reset-size6.size1{font-size:.5em}.katex .fontsize-ensurer.reset-size6.size2,.katex .sizing.reset-size6.size2{font-size:.6em}.katex .fontsize-ensurer.reset-size6.size3,.katex .sizing.reset-size6.size3{font-size:.7em}.katex .fontsize-ensurer.reset-size6.size4,.katex .sizing.reset-size6.size4{font-size:.8em}.katex .fontsize-ensurer.reset-size6.size5,.katex .sizing.reset-size6.size5{font-size:.9em}.katex .fontsize-ensurer.reset-size6.size6,.katex .sizing.reset-size6.size6{font-size:1em}.katex .fontsize-ensurer.reset-size6.size7,.katex .sizing.reset-size6.size7{font-size:1.2em}.katex .fontsize-ensurer.reset-size6.size8,.katex .sizing.reset-size6.size8{font-size:1.44em}.katex .fontsize-ensurer.reset-size6.size9,.katex .sizing.reset-size6.size9{font-size:1.728em}.katex .fontsize-ensurer.reset-size6.size10,.katex .sizing.reset-size6.size10{font-size:2.074em}.katex .fontsize-ensurer.reset-size6.size11,.katex .sizing.reset-size6.size11{font-size:2.488em}.katex .fontsize-ensurer.reset-size7.size1,.katex .sizing.reset-size7.size1{font-size:.41666667em}.katex .fontsize-ensurer.reset-size7.size2,.katex .sizing.reset-size7.size2{font-size:.5em}.katex .fontsize-ensurer.reset-size7.size3,.katex .sizing.reset-size7.size3{font-size:.58333333em}.katex .fontsize-ensurer.reset-size7.size4,.katex .sizing.reset-size7.size4{font-size:.66666667em}.katex .fontsize-ensurer.reset-size7.size5,.katex .sizing.reset-size7.size5{font-size:.75em}.katex .fontsize-ensurer.reset-size7.size6,.katex .sizing.reset-size7.size6{font-size:.83333333em}.katex .fontsize-ensurer.reset-size7.size7,.katex .sizing.reset-size7.size7{font-size:1em}.katex .fontsize-ensurer.reset-size7.size8,.katex .sizing.reset-size7.size8{font-size:1.2em}.katex .fontsize-ensurer.reset-size7.size9,.katex .sizing.reset-size7.size9{font-size:1.44em}.katex .fontsize-ensurer.reset-size7.size10,.katex .sizing.reset-size7.size10{font-size:1.72833333em}.katex .fontsize-ensurer.reset-size7.size11,.katex .sizing.reset-size7.size11{font-size:2.07333333em}.katex .fontsize-ensurer.reset-size8.size1,.katex .sizing.reset-size8.size1{font-size:.34722222em}.katex .fontsize-ensurer.reset-size8.size2,.katex .sizing.reset-size8.size2{font-size:.41666667em}.katex .fontsize-ensurer.reset-size8.size3,.katex .sizing.reset-size8.size3{font-size:.48611111em}.katex .fontsize-ensurer.reset-size8.size4,.katex .sizing.reset-size8.size4{font-size:.55555556em}.katex .fontsize-ensurer.reset-size8.size5,.katex .sizing.reset-size8.size5{font-size:.625em}.katex .fontsize-ensurer.reset-size8.size6,.katex .sizing.reset-size8.size6{font-size:.69444444em}.katex .fontsize-ensurer.reset-size8.size7,.katex .sizing.reset-size8.size7{font-size:.83333333em}.katex .fontsize-ensurer.reset-size8.size8,.katex .sizing.reset-size8.size8{font-size:1em}.katex .fontsize-ensurer.reset-size8.size9,.katex .sizing.reset-size8.size9{font-size:1.2em}.katex .fontsize-ensurer.reset-size8.size10,.katex .sizing.reset-size8.size10{font-size:1.44027778em}.katex .fontsize-ensurer.reset-size8.size11,.katex .sizing.reset-size8.size11{font-size:1.72777778em}.katex .fontsize-ensurer.reset-size9.size1,.katex .sizing.reset-size9.size1{font-size:.28935185em}.katex .fontsize-ensurer.reset-size9.size2,.katex .sizing.reset-size9.size2{font-size:.34722222em}.katex .fontsize-ensurer.reset-size9.size3,.katex .sizing.reset-size9.size3{font-size:.40509259em}.katex .fontsize-ensurer.reset-size9.size4,.katex .sizing.reset-size9.size4{font-size:.46296296em}.katex .fontsize-ensurer.reset-size9.size5,.katex .sizing.reset-size9.size5{font-size:.52083333em}.katex .fontsize-ensurer.reset-size9.size6,.katex .sizing.reset-size9.size6{font-size:.5787037em}.katex .fontsize-ensurer.reset-size9.size7,.katex .sizing.reset-size9.size7{font-size:.69444444em}.katex .fontsize-ensurer.reset-size9.size8,.katex .sizing.reset-size9.size8{font-size:.83333333em}.katex .fontsize-ensurer.reset-size9.size9,.katex .sizing.reset-size9.size9{font-size:1em}.katex .fontsize-ensurer.reset-size9.size10,.katex .sizing.reset-size9.size10{font-size:1.20023148em}.katex .fontsize-ensurer.reset-size9.size11,.katex .sizing.reset-size9.size11{font-size:1.43981481em}.katex .fontsize-ensurer.reset-size10.size1,.katex .sizing.reset-size10.size1{font-size:.24108004em}.katex .fontsize-ensurer.reset-size10.size2,.katex .sizing.reset-size10.size2{font-size:.28929605em}.katex .fontsize-ensurer.reset-size10.size3,.katex .sizing.reset-size10.size3{font-size:.33751205em}.katex .fontsize-ensurer.reset-size10.size4,.katex .sizing.reset-size10.size4{font-size:.38572806em}.katex .fontsize-ensurer.reset-size10.size5,.katex .sizing.reset-size10.size5{font-size:.43394407em}.katex .fontsize-ensurer.reset-size10.size6,.katex .sizing.reset-size10.size6{font-size:.48216008em}.katex .fontsize-ensurer.reset-size10.size7,.katex .sizing.reset-size10.size7{font-size:.57859209em}.katex .fontsize-ensurer.reset-size10.size8,.katex .sizing.reset-size10.size8{font-size:.69431051em}.katex .fontsize-ensurer.reset-size10.size9,.katex .sizing.reset-size10.size9{font-size:.83317261em}.katex .fontsize-ensurer.reset-size10.size10,.katex .sizing.reset-size10.size10{font-size:1em}.katex .fontsize-ensurer.reset-size10.size11,.katex .sizing.reset-size10.size11{font-size:1.19961427em}.katex .fontsize-ensurer.reset-size11.size1,.katex .sizing.reset-size11.size1{font-size:.20096463em}.katex .fontsize-ensurer.reset-size11.size2,.katex .sizing.reset-size11.size2{font-size:.24115756em}.katex .fontsize-ensurer.reset-size11.size3,.katex .sizing.reset-size11.size3{font-size:.28135048em}.katex .fontsize-ensurer.reset-size11.size4,.katex .sizing.reset-size11.size4{font-size:.32154341em}.katex .fontsize-ensurer.reset-size11.size5,.katex .sizing.reset-size11.size5{font-size:.36173633em}.katex .fontsize-ensurer.reset-size11.size6,.katex .sizing.reset-size11.size6{font-size:.40192926em}.katex .fontsize-ensurer.reset-size11.size7,.katex .sizing.reset-size11.size7{font-size:.48231511em}.katex .fontsize-ensurer.reset-size11.size8,.katex .sizing.reset-size11.size8{font-size:.57877814em}.katex .fontsize-ensurer.reset-size11.size9,.katex .sizing.reset-size11.size9{font-size:.69453376em}.katex .fontsize-ensurer.reset-size11.size10,.katex .sizing.reset-size11.size10{font-size:.83360129em}.katex .fontsize-ensurer.reset-size11.size11,.katex .sizing.reset-size11.size11{font-size:1em}.katex .delimsizing.size1{font-family:KaTeX_Size1}.katex .delimsizing.size2{font-family:KaTeX_Size2}.katex .delimsizing.size3{font-family:KaTeX_Size3}.katex .delimsizing.size4{font-family:KaTeX_Size4}.katex .delimsizing.mult .delim-size1>span{font-family:KaTeX_Size1}.katex .delimsizing.mult .delim-size4>span{font-family:KaTeX_Size4}.katex .nulldelimiter{display:inline-block;width:.12em}.katex .delimcenter,.katex .op-symbol{position:relative}.katex .op-symbol.small-op{font-family:KaTeX_Size1}.katex .op-symbol.large-op{font-family:KaTeX_Size2}.katex .accent>.vlist-t,.katex .op-limits>.vlist-t{text-align:center}.katex .accent .accent-body{position:relative}.katex .accent .accent-body:not(.accent-full){width:0}.katex .overlay{display:block}.katex .mtable .vertical-separator{display:inline-block;min-width:1px}.katex .mtable .arraycolsep{display:inline-block}.katex .mtable .col-align-c>.vlist-t{text-align:center}.katex .mtable .col-align-l>.vlist-t{text-align:left}.katex .mtable .col-align-r>.vlist-t{text-align:right}.katex .svg-align{text-align:left}.katex svg{fill:currentColor;stroke:currentColor;fill-rule:nonzero;fill-opacity:1;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;display:block;height:inherit;position:absolute;width:100%}.katex svg path{stroke:none}.katex img{border-style:none;max-height:none;max-width:none;min-height:0;min-width:0}.katex .stretchy{display:block;overflow:hidden;position:relative;width:100%}.katex .stretchy:after,.katex .stretchy:before{content:\"\"}.katex .hide-tail{overflow:hidden;position:relative;width:100%}.katex .halfarrow-left{left:0;overflow:hidden;position:absolute;width:50.2%}.katex .halfarrow-right{overflow:hidden;position:absolute;right:0;width:50.2%}.katex .brace-left{left:0;overflow:hidden;position:absolute;width:25.1%}.katex .brace-center{left:25%;overflow:hidden;position:absolute;width:50%}.katex .brace-right{overflow:hidden;position:absolute;right:0;width:25.1%}.katex .x-arrow-pad{padding:0 .5em}.katex .cd-arrow-pad{padding:0 .55556em 0 .27778em}.katex .mover,.katex .munder,.katex .x-arrow{text-align:center}.katex .boxpad{padding:0 .3em}.katex .fbox,.katex .fcolorbox{border:.04em solid;box-sizing:border-box}.katex .cancel-pad{padding:0 .2em}.katex .cancel-lap{margin-left:-.2em;margin-right:-.2em}.katex .sout{border-bottom-style:solid;border-bottom-width:.08em}.katex .angl{border-right:.049em solid;border-top:.049em solid;box-sizing:border-box;margin-right:.03889em}.katex .anglpad{padding:0 .03889em}.katex .eqn-num:before{content:\"(\" counter(katexEqnNo) \")\";counter-increment:katexEqnNo}.katex .mml-eqn-num:before{content:\"(\" counter(mmlEqnNo) \")\";counter-increment:mmlEqnNo}.katex .mtr-glue{width:50%}.katex .cd-vert-arrow{display:inline-block;position:relative}.katex .cd-label-left{display:inline-block;position:absolute;right:calc(50% + .3em);text-align:left}.katex .cd-label-right{display:inline-block;left:calc(50% + .3em);position:absolute;text-align:right}.katex-display{display:block;margin:1em 0;text-align:center}.katex-display>.katex{display:block;text-align:center;white-space:nowrap}.katex-display>.katex>.katex-html{display:block;position:relative}.katex-display>.katex>.katex-html>.tag{position:absolute;right:0}.katex-display.leqno>.katex>.katex-html>.tag{left:0;right:auto}.katex-display.fleqn>.katex{padding-left:2em;text-align:left}body{counter-reset:katexEqnNo mmlEqnNo}\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "104.18.186.31",
        "startedDateTime": "2024-12-05T00:16:08.946Z",
        "time": 0.2789999998640269,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.2479999966453761,
          "receive": 0.031000003218650818,
          "_blocked_queueing": -1
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "window.fetch",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 1652
              },
              {
                "functionName": "QO",
                "scriptId": "625",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                "lineNumber": 22,
                "columnNumber": 14817
              },
              {
                "functionName": "E",
                "scriptId": "670",
                "url": "https://huggingface.co/chat/_app/immutable/nodes/9.PVin43Ht.js",
                "lineNumber": 0,
                "columnNumber": 6651
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "",
                  "scriptId": "670",
                  "url": "https://huggingface.co/chat/_app/immutable/nodes/9.PVin43Ht.js",
                  "lineNumber": 0,
                  "columnNumber": 8230
                },
                {
                  "functionName": "I",
                  "scriptId": "605",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                  "lineNumber": 0,
                  "columnNumber": 361
                },
                {
                  "functionName": "",
                  "scriptId": "609",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                  "lineNumber": 3,
                  "columnNumber": 2552
                },
                {
                  "functionName": "rt",
                  "scriptId": "605",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                  "lineNumber": 0,
                  "columnNumber": 8834
                }
              ],
              "parent": {
                "description": "Promise.then",
                "callFrames": [
                  {
                    "functionName": "it",
                    "scriptId": "605",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                    "lineNumber": 0,
                    "columnNumber": 8484
                  },
                  {
                    "functionName": "ht",
                    "scriptId": "609",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                    "lineNumber": 3,
                    "columnNumber": 2851
                  },
                  {
                    "functionName": "",
                    "scriptId": "609",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                    "lineNumber": 3,
                    "columnNumber": 3388
                  },
                  {
                    "functionName": "r.$$set",
                    "scriptId": "607",
                    "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
                    "lineNumber": 1,
                    "columnNumber": 7432
                  },
                  {
                    "functionName": "$set",
                    "scriptId": "609",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                    "lineNumber": 3,
                    "columnNumber": 3947
                  },
                  {
                    "functionName": "X",
                    "scriptId": "604",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                    "lineNumber": 0,
                    "columnNumber": 20578
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "le",
                      "scriptId": "604",
                      "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                      "lineNumber": 0,
                      "columnNumber": 11886
                    },
                    {
                      "functionName": "cn",
                      "scriptId": "604",
                      "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                      "lineNumber": 0,
                      "columnNumber": 22450
                    },
                    {
                      "functionName": "p",
                      "scriptId": "624",
                      "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                      "lineNumber": 0,
                      "columnNumber": 2024
                    }
                  ],
                  "parent": {
                    "description": "await",
                    "callFrames": [
                      {
                        "functionName": "E",
                        "scriptId": "624",
                        "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                        "lineNumber": 0,
                        "columnNumber": 2233
                      },
                      {
                        "functionName": "",
                        "scriptId": "605",
                        "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                        "lineNumber": 0,
                        "columnNumber": 8170
                      },
                      {
                        "functionName": "",
                        "scriptId": "605",
                        "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                        "lineNumber": 0,
                        "columnNumber": 8156
                      },
                      {
                        "functionName": "K",
                        "scriptId": "625",
                        "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                        "lineNumber": 329,
                        "columnNumber": 4294
                      },
                      {
                        "functionName": "",
                        "scriptId": "605",
                        "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                        "lineNumber": 0,
                        "columnNumber": 4055
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "POST",
          "url": "https://huggingface.co/chat/conversation/6750f0c9cbfac4f9c6998656",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":path",
              "value": "/chat/conversation/6750f0c9cbfac4f9c6998656"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "content-length",
              "value": "266"
            },
            {
              "name": "content-type",
              "value": "multipart/form-data; boundary=----WebKitFormBoundarys9lP8AZ2gbbmeqLa"
            },
            {
              "name": "origin",
              "value": "https://huggingface.co"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/chat/conversation/6750f0c9cbfac4f9c6998656"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 266,
          "postData": {
            "mimeType": "multipart/form-data; boundary=----WebKitFormBoundarys9lP8AZ2gbbmeqLa",
            "text": "------WebKitFormBoundarys9lP8AZ2gbbmeqLa\r\nContent-Disposition: form-data; name=\"data\"\r\n\r\n{\"inputs\":\"hui\\n\\n\",\"id\":\"7cf8c534-8d8a-443b-a8bd-189975633f77\",\"is_retry\":false,\"is_continue\":false,\"web_search\":false,\"tools\":[]}\r\n------WebKitFormBoundarys9lP8AZ2gbbmeqLa--\r\n",
            "params": [
              {
                "name": "data",
                "value": "{\"inputs\":\"hui\\n\\n\",\"id\":\"7cf8c534-8d8a-443b-a8bd-189975633f77\",\"is_retry\":false,\"is_continue\":false,\"web_search\":false,\"tools\":[]}"
              }
            ]
          }
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "content-security-policy",
              "value": "frame-ancestors 'none';"
            },
            {
              "name": "content-type",
              "value": "text/event-stream"
            },
            {
              "name": "date",
              "value": "Thu, 05 Dec 2024 00:16:10 GMT"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "PuHTY6inYEZcJyMLyTbC5Fqt9wfLRKOWC3VhhH_29Xfv9GkWdxdZyQ=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Miss from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 7547,
            "mimeType": "text/event-stream",
            "text": "{\"type\":\"status\",\"status\":\"started\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"title\",\"title\":\"â“ Unknown input\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"stream\",\"token\":\"I\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"stream\",\"token\":\"'m\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\" sorry\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\",\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"stream\",\"token\":\" I\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\" don\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\"'t\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\" understand\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"stream\",\"token\":\" your\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\" request\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\".\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\" Could\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"stream\",\"token\":\" you\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\" please\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\" provide\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"stream\",\"token\":\" more\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\" context\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\" or\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\" clarify\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"stream\",\"token\":\" what\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\" you\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\"'re\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"status\",\"status\":\"keepAlive\"}\n{\"type\":\"stream\",\"token\":\" asking\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\" about\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"stream\",\"token\":\"?\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\"}\n{\"type\":\"finalAnswer\",\"text\":\"I'm sorry, I don't understand your request. Could you please provide more context or clarify what you're asking about?\",\"interrupted\":false}\n
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 8287,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:16:08.960Z",
        "time": 1935.9549999935552,
        "timings": {
          "blocked": 1.8629999974248932,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.2919999999999999,
          "wait": 219.9530000043288,
          "receive": 1713.8469999918016,
          "_blocked_queueing": 1.109999997424893,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "script",
          "lineNumber": 29,
          "stack": {
            "callFrames": [
              {
                "functionName": "$",
                "scriptId": "605",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                "lineNumber": 0,
                "columnNumber": 4218
              },
              {
                "functionName": "h",
                "scriptId": "625",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                "lineNumber": 298,
                "columnNumber": 101526
              },
              {
                "functionName": "c",
                "scriptId": "625",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                "lineNumber": 298,
                "columnNumber": 101367
              },
              {
                "functionName": "c",
                "scriptId": "625",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                "lineNumber": 298,
                "columnNumber": 97949
              },
              {
                "functionName": "c",
                "scriptId": "625",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                "lineNumber": 298,
                "columnNumber": 125276
              },
              {
                "functionName": "St",
                "scriptId": "609",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                "lineNumber": 3,
                "columnNumber": 2423
              },
              {
                "functionName": "c",
                "scriptId": "625",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                "lineNumber": 298,
                "columnNumber": 124765
              },
              {
                "functionName": "c",
                "scriptId": "625",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                "lineNumber": 298,
                "columnNumber": 121075
              },
              {
                "functionName": "c",
                "scriptId": "625",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                "lineNumber": 298,
                "columnNumber": 125306
              },
              {
                "functionName": "St",
                "scriptId": "609",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                "lineNumber": 3,
                "columnNumber": 2423
              },
              {
                "functionName": "c",
                "scriptId": "625",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                "lineNumber": 298,
                "columnNumber": 124765
              },
              {
                "functionName": "c",
                "scriptId": "625",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                "lineNumber": 298,
                "columnNumber": 121075
              },
              {
                "functionName": "p",
                "scriptId": "625",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                "lineNumber": 298,
                "columnNumber": 125779
              },
              {
                "functionName": "ct",
                "scriptId": "605",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                "lineNumber": 0,
                "columnNumber": 9030
              },
              {
                "functionName": "rt",
                "scriptId": "605",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                "lineNumber": 0,
                "columnNumber": 8683
              }
            ],
            "parent": {
              "description": "Promise.then",
              "callFrames": [
                {
                  "functionName": "it",
                  "scriptId": "605",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                  "lineNumber": 0,
                  "columnNumber": 8484
                },
                {
                  "functionName": "ht",
                  "scriptId": "609",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                  "lineNumber": 3,
                  "columnNumber": 2851
                },
                {
                  "functionName": "",
                  "scriptId": "609",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                  "lineNumber": 3,
                  "columnNumber": 3388
                },
                {
                  "functionName": "",
                  "scriptId": "610",
                  "url": "https://huggingface.co/chat/_app/immutable/nodes/0.QS2KVdeN.js",
                  "lineNumber": 3,
                  "columnNumber": 10422
                },
                {
                  "functionName": "r",
                  "scriptId": "604",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                  "lineNumber": 0,
                  "columnNumber": 5030
                },
                {
                  "functionName": "X",
                  "scriptId": "604",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                  "lineNumber": 0,
                  "columnNumber": 21040
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "le",
                    "scriptId": "604",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                    "lineNumber": 0,
                    "columnNumber": 11886
                  },
                  {
                    "functionName": "cn",
                    "scriptId": "604",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                    "lineNumber": 0,
                    "columnNumber": 22450
                  },
                  {
                    "functionName": "p",
                    "scriptId": "624",
                    "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                    "lineNumber": 0,
                    "columnNumber": 2024
                  }
                ],
                "parent": {
                  "description": "await",
                  "callFrames": [
                    {
                      "functionName": "E",
                      "scriptId": "624",
                      "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                      "lineNumber": 0,
                      "columnNumber": 2233
                    },
                    {
                      "functionName": "",
                      "scriptId": "605",
                      "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                      "lineNumber": 0,
                      "columnNumber": 8170
                    },
                    {
                      "functionName": "",
                      "scriptId": "605",
                      "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                      "lineNumber": 0,
                      "columnNumber": 8156
                    },
                    {
                      "functionName": "K",
                      "scriptId": "625",
                      "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                      "lineNumber": 329,
                      "columnNumber": 4294
                    },
                    {
                      "functionName": "",
                      "scriptId": "605",
                      "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                      "lineNumber": 0,
                      "columnNumber": 4055
                    }
                  ]
                }
              }
            }
          }
        },
        "_priority": "Low",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/avatars/2edb18bd0206c16b433841a47f53fa8e.svg",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "Referer",
              "value": "https://huggingface.co/chat/conversation/6750f0c9cbfac4f9c6998656"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "x-request-id",
              "value": "Root=1-674d94de-6f20b50539c813f472326271"
            },
            {
              "name": "cache-control",
              "value": "max-age=31536000"
            },
            {
              "name": "cross-origin-opener-policy",
              "value": "same-origin"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "etag",
              "value": "W/\"4df-VNCLohOQIdAarLAFOFOdFN+NnY4\""
            },
            {
              "name": "age",
              "value": "62604"
            },
            {
              "name": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "name": "via",
              "value": "1.1 8d674b0dbbb3efae2c2364b57d734a54.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "x-amz-cf-id",
              "value": "u7FtGrdJxwjUECVuAiWnNOJjbiGkqqFk1NHVcc5Lb214n8vCaH6ccQ=="
            },
            {
              "name": "date",
              "value": "Mon, 02 Dec 2024 11:07:10 GMT"
            },
            {
              "name": "content-type",
              "value": "image/svg+xml; charset=utf-8"
            },
            {
              "name": "x-powered-by",
              "value": "huggingface-moon"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding, Origin"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1247,
            "mimeType": "image/svg+xml",
            "text": "<svg viewBox=\"0 0 80 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\"><mask id=\"mask__marble\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"80\" height=\"80\"><path d=\"M80 40C80 17.909 62.091 0 40 0S0 17.909 0 40s17.909 40 40 40 40-17.909 40-40z\" fill=\"#fff\"></path></mask><g mask=\"url(#mask__marble)\"><path d=\"M80 40C80 17.909 62.091 0 40 0S0 17.909 0 40s17.909 40 40 40 40-17.909 40-40z\" fill=\"#3b82f6\"></path><path filter=\"url(#prefix__filter0_f)\" d=\"M32.414 59.35L50.376 70.5H72.5v-71H33.728L26.5 13.381l19.057 27.08L32.414 59.35z\" fill=\"#ef4444\" transform=\"translate(-2 2) rotate(-146 40 40) scale(1.5)\"></path><path filter=\"url(#prefix__filter0_f)\" style=\"mix-blend-mode: overlay;\" d=\"M22.216 24L0 46.75l14.108 38.129L78 86l-3.081-59.276-22.378 4.005 12.972 20.186-23.35 27.395L22.215 24z\" fill=\"#a855f7\" transform=\"translate(7 7) rotate(39 40 40) scale(1.5)\"></path></g><defs><filter id=\"prefix__filter0_f\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\"><feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"></feFlood><feBlend in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\"></feBlend><feGaussianBlur stdDeviation=\"7\" result=\"effect1_foregroundBlur\"></feGaussianBlur></filter></defs></svg>"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:16:08.962Z",
        "time": 0.2629999944474548,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.22699999681208283,
          "receive": 0.03599999763537198,
          "_blocked_queueing": -1
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "gt",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 27370
              },
              {
                "functionName": "xe",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 16507
              },
              {
                "functionName": "it",
                "scriptId": "604",
                "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                "lineNumber": 0,
                "columnNumber": 11354
              }
            ],
            "parent": {
              "description": "await",
              "callFrames": [
                {
                  "functionName": "yn",
                  "scriptId": "604",
                  "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                  "lineNumber": 0,
                  "columnNumber": 22616
                },
                {
                  "functionName": "E",
                  "scriptId": "670",
                  "url": "https://huggingface.co/chat/_app/immutable/nodes/9.PVin43Ht.js",
                  "lineNumber": 0,
                  "columnNumber": 7932
                }
              ],
              "parent": {
                "description": "await",
                "callFrames": [
                  {
                    "functionName": "",
                    "scriptId": "670",
                    "url": "https://huggingface.co/chat/_app/immutable/nodes/9.PVin43Ht.js",
                    "lineNumber": 0,
                    "columnNumber": 8230
                  },
                  {
                    "functionName": "I",
                    "scriptId": "605",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                    "lineNumber": 0,
                    "columnNumber": 361
                  },
                  {
                    "functionName": "",
                    "scriptId": "609",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                    "lineNumber": 3,
                    "columnNumber": 2552
                  },
                  {
                    "functionName": "rt",
                    "scriptId": "605",
                    "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                    "lineNumber": 0,
                    "columnNumber": 8834
                  }
                ],
                "parent": {
                  "description": "Promise.then",
                  "callFrames": [
                    {
                      "functionName": "it",
                      "scriptId": "605",
                      "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                      "lineNumber": 0,
                      "columnNumber": 8484
                    },
                    {
                      "functionName": "ht",
                      "scriptId": "609",
                      "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                      "lineNumber": 3,
                      "columnNumber": 2851
                    },
                    {
                      "functionName": "",
                      "scriptId": "609",
                      "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                      "lineNumber": 3,
                      "columnNumber": 3388
                    },
                    {
                      "functionName": "r.$$set",
                      "scriptId": "607",
                      "url": "https://huggingface.co/chat/_app/immutable/entry/app.DEpQDNs9.js",
                      "lineNumber": 1,
                      "columnNumber": 7432
                    },
                    {
                      "functionName": "$set",
                      "scriptId": "609",
                      "url": "https://huggingface.co/chat/_app/immutable/chunks/index.Cljt5KuQ.js",
                      "lineNumber": 3,
                      "columnNumber": 3947
                    },
                    {
                      "functionName": "X",
                      "scriptId": "604",
                      "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                      "lineNumber": 0,
                      "columnNumber": 20578
                    }
                  ],
                  "parent": {
                    "description": "await",
                    "callFrames": [
                      {
                        "functionName": "le",
                        "scriptId": "604",
                        "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                        "lineNumber": 0,
                        "columnNumber": 11886
                      },
                      {
                        "functionName": "cn",
                        "scriptId": "604",
                        "url": "https://huggingface.co/chat/_app/immutable/chunks/entry.CNbBV9gi.js",
                        "lineNumber": 0,
                        "columnNumber": 22450
                      },
                      {
                        "functionName": "p",
                        "scriptId": "624",
                        "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                        "lineNumber": 0,
                        "columnNumber": 2024
                      }
                    ],
                    "parent": {
                      "description": "await",
                      "callFrames": [
                        {
                          "functionName": "E",
                          "scriptId": "624",
                          "url": "https://huggingface.co/chat/_app/immutable/nodes/6.YukEGq_p.js",
                          "lineNumber": 0,
                          "columnNumber": 2233
                        },
                        {
                          "functionName": "",
                          "scriptId": "605",
                          "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                          "lineNumber": 0,
                          "columnNumber": 8170
                        },
                        {
                          "functionName": "",
                          "scriptId": "605",
                          "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                          "lineNumber": 0,
                          "columnNumber": 8156
                        },
                        {
                          "functionName": "K",
                          "scriptId": "625",
                          "url": "https://huggingface.co/chat/_app/immutable/chunks/pendingMessage.BH5nrwUr.js",
                          "lineNumber": 329,
                          "columnNumber": 4294
                        },
                        {
                          "functionName": "",
                          "scriptId": "605",
                          "url": "https://huggingface.co/chat/_app/immutable/chunks/scheduler.CeakrPJD.js",
                          "lineNumber": 0,
                          "columnNumber": 4055
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "4719",
        "pageref": "page_5",
        "request": {
          "method": "GET",
          "url": "https://huggingface.co/chat/conversation/6750f0c9cbfac4f9c6998656/__data.json?x-sveltekit-invalidated=11",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":authority",
              "value": "huggingface.co"
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "/chat/conversation/6750f0c9cbfac4f9c6998656/__data.json?x-sveltekit-invalidated=11"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br, zstd"
            },
            {
              "name": "accept-language",
              "value": "ja,en-US;q=0.9,en;q=0.8"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "https://huggingface.co/chat/conversation/6750f0c9cbfac4f9c6998656"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"Windows\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            }
          ],
          "queryString": [
            {
              "name": "x-sveltekit-invalidated",
              "value": "11"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "private, no-store"
            },
            {
              "name": "content-security-policy",
              "value": "frame-ancestors 'none';"
            },
            {
              "name": "content-type",
              "value": "text/sveltekit-data"
            },
            {
              "name": "date",
              "value": "Thu, 05 Dec 2024 00:16:12 GMT"
            },
            {
              "name": "vary",
              "value": "Accept"
            },
            {
              "name": "via",
              "value": "1.1 270469c8e46f1ea66b777cc8a42fab6a.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-id",
              "value": "dPTjs9N3FeuTLuk3Qp5O_PpiXHH0w_B51LwAuMT3G2QG-XK3j6X1Yg=="
            },
            {
              "name": "x-amz-cf-pop",
              "value": "NRT12-P2"
            },
            {
              "name": "x-cache",
              "value": "Miss from cloudfront"
            }
          ],
          "cookies": [],
          "content": {
            "size": 16608,
            "mimeType": "text/sveltekit-data",
            "text": "{\"type\":\"data\",\"nodes\":[{\"type\":\"data\",\"data\":[{\"nConversations\":1,\"conversations\":2,\"settings\":25,\"models\":33,\"oldModels\":200,\"tools\":238,\"communityToolCount\":279,\"assistants\":280,\"user\":282,\"assistant\":286,\"enableAssistants\":26,\"enableAssistantsRAG\":26,\"enableCommunityTools\":26,\"loginRequired\":32,\"loginEnabled\":26,\"guestMode\":32},5,[3,8,12,16,21],{\"id\":4,\"title\":5,\"model\":6,\"updatedAt\":7,\"assistantId\":-1,\"avatarUrl\":-1},\"6750f0c9cbfac4f9c6998656\",\"Unknown input\",\"CohereForAI/c4ai-command-r-plus-08-2024\",[\"Date\",\"2024-12-05T00:16:11.913Z\"],{\"id\":9,\"title\":10,\"model\":6,\"updatedAt\":11,\"assistantId\":-1,\"avatarUrl\":-1},\"6750ef407b6e20d6431aa367\",\"Greeting\",[\"Date\",\"2024-12-05T00:09:57.443Z\"],{\"id\":13,\"title\":10,\"model\":14,\"updatedAt\":15,\"assistantId\":-1,\"avatarUrl\":-1},\"674e8968c10eb4a02d9b2f7b\",\"Qwen/Qwen2.5-72B-Instruct\",[\"Date\",\"2024-12-05T00:09:20.559Z\"],{\"id\":17,\"title\":18,\"model\":19,\"updatedAt\":20,\"assistantId\":-1,\"avatarUrl\":-1},\"66a5765fbfe2f7b50db05dc4\",\"Hello greeting\",\"CohereForAI/c4ai-command-r-plus\",[\"Date\",\"2024-07-27T22:36:17.115Z\"],{\"id\":22,\"title\":23,\"model\":19,\"updatedAt\":24,\"assistantId\":-1,\"avatarUrl\":-1},\"668ce81d4c62815ea86889e1\",\"Hi\",[\"Date\",\"2024-07-09T07:34:56.550Z\"],{\"searchEnabled\":26,\"ethicsModalAccepted\":26,\"ethicsModalAcceptedAt\":27,\"activeModel\":6,\"hideEmojiOnSidebar\":26,\"shareConversationsWithModelAuthors\":26,\"customPrompts\":28,\"assistants\":30,\"tools\":31,\"disableStream\":32,\"directPaste\":32},true,[\"Date\",\"2024-12-05T00:09:31.944Z\"],{\"meta-llama/Meta-Llama-3-70B-Instruct\":29,\"CohereForAI/c4ai-command-r-plus\":29},\"\",[],[],false,[34,57,73,92,116,129,146,154,166,179,193],{\"id\":14,\"name\":14,\"websiteUrl\":35,\"modelUrl\":36,\"tokenizer\":14,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":14,\"description\":37,\"logoUrl\":38,\"promptExamples\":39,\"parameters\":49,\"preprompt\":56,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":26},\"https://qwenlm.github.io/blog/qwen2.5/\",\"https://huggingface.co/Qwen/Qwen2.5-72B-Instruct\",\"The latest Qwen open model with improved role-playing, long text generation and structured data understanding.\",\"https://huggingface.co/datasets/huggingchat/models-logo/resolve/main/qwen-logo.png\",[40,43,46],{\"title\":41,\"prompt\":42},\"Write an email from bullet list\",\"As a restaurant owner, write a professional email to the supplier to get these products every week: \\n\\n- Wine (x10)\\n- Eggs (x24)\\n- Bread (x12)\",{\"title\":44,\"prompt\":45},\"Code a snake game\",\"Code a basic snake game in python, give explanations for each step.\",{\"title\":47,\"prompt\":48},\"Assist in a task\",\"How do I make a delicious lemon cheesecake?\",{\"temperature\":50,\"truncate\":51,\"max_new_tokens\":52,\"stop\":53,\"stop_sequences\":53},0.6,28672,3072,[54,55],\"\\u003C|endoftext|>\",\"\\u003C|im_end|>\",\"You are Qwen, created by Alibaba Cloud. You are a helpful assistant.\",{\"id\":58,\"name\":58,\"websiteUrl\":59,\"modelUrl\":60,\"tokenizer\":61,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":58,\"description\":62,\"logoUrl\":63,\"promptExamples\":64,\"parameters\":68,\"preprompt\":29,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":26,\"unlisted\":32,\"hasInferenceAPI\":32},\"meta-llama/Meta-Llama-3.1-70B-Instruct\",\"https://llama.meta.com/\",\"https://huggingface.co/meta-llama/Meta-Llama-3.1-70B-Instruct\",\"nsarrazin/llama3.1-tokenizer\",\"Ideal for everyday use. A fast and extremely capable model matching closed source models' capabilities.\",\"https://huggingface.co/datasets/huggingchat/models-logo/resolve/main/meta-logo.png\",[65,66,67],{\"title\":41,\"prompt\":42},{\"title\":44,\"prompt\":45},{\"title\":47,\"prompt\":48},{\"temperature\":50,\"truncate\":69,\"max_new_tokens\":70,\"stop\":71,\"stop_sequences\":71},7167,1024,[54,72],\"\\u003C|eot_id|>\",{\"id\":6,\"name\":6,\"websiteUrl\":74,\"modelUrl\":75,\"tokenizer\":76,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":6,\"description\":77,\"logoUrl\":78,\"promptExamples\":79,\"parameters\":87,\"preprompt\":29,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":26,\"unlisted\":32,\"hasInferenceAPI\":32},\"https://docs.cohere.com/docs/command-r-plus\",\"https://huggingface.co/CohereForAI/c4ai-command-r-plus-08-2024\",\"nsarrazin/c4ai-command-r-v01-tokenizer\",\"Cohere's largest language model, optimized for conversational interaction and tool use. Now with the 2024 update!\",\"https://huggingface.co/datasets/huggingchat/models-logo/resolve/main/cohere-logo.png\",[80,83,86],{\"title\":81,\"prompt\":82},\"Generate a mouse portrait\",\"Generate the portrait of a scientific mouse in its laboratory.\",{\"title\":84,\"prompt\":85},\"Review a pull request\",\"Review this pull request: https://github.com/huggingface/chat-ui/pull/1131/files\",{\"title\":44,\"prompt\":45},{\"temperature\":88,\"truncate\":51,\"max_new_tokens\":89,\"stop\":90,\"stop_sequences\":90},0.3,2048,[91],\"\\u003C|END_OF_TURN_TOKEN|>\",{\"id\":93,\"name\":93,\"websiteUrl\":94,\"modelUrl\":95,\"tokenizer\":-1,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":93,\"description\":96,\"logoUrl\":38,\"promptExamples\":97,\"parameters\":107,\"preprompt\":115,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":26},\"Qwen/QwQ-32B-Preview\",\"https://qwenlm.github.io/blog/qwq-32b-preview/\",\"https://huggingface.co/Qwen/QwQ-32B-Preview\",\"QwQ is an experiment model from the Qwen Team with advanced reasoning capabilities.\",[98,101,104],{\"title\":99,\"prompt\":100},\"Rs in strawberry\",\"how many R in strawberry?\",{\"title\":102,\"prompt\":103},\"Larger number\",\"9.11 or 9.9 which number is larger?\",{\"title\":105,\"prompt\":106},\"Measuring 6 liters\",\"I have a 6- and a 12-liter jug. I want to measure exactly 6 liters.\",{\"temperature\":108,\"truncate\":109,\"max_new_tokens\":110,\"stop\":111,\"top_p\":112,\"top_k\":113,\"repetition_penalty\":114,\"stop_sequences\":111},0.7,12288,4096,[55],0.8,20,1.05,\"You are a helpful and harmless assistant. You are Qwen developed by Alibaba. You should think step-by-step.\",{\"id\":117,\"name\":117,\"websiteUrl\":118,\"modelUrl\":119,\"tokenizer\":117,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":117,\"description\":120,\"logoUrl\":121,\"promptExamples\":122,\"parameters\":126,\"preprompt\":29,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":32},\"nvidia/Llama-3.1-Nemotron-70B-Instruct-HF\",\"https://www.nvidia.com/\",\"https://huggingface.co/nvidia/Llama-3.1-Nemotron-70B-Instruct-HF\",\"Nvidia's latest Llama fine-tune, topping alignment benchmarks and optimized for instruction following.\",\"https://huggingface.co/datasets/huggingchat/models-logo/resolve/main/nvidia-logo.png\",[123,124,125],{\"title\":99,\"prompt\":100},{\"title\":102,\"prompt\":103},{\"title\":105,\"prompt\":106},{\"temperature\":127,\"truncate\":51,\"max_new_tokens\":89,\"stop\":128,\"stop_sequences\":128},0.5,[72,55],{\"id\":130,\"name\":130,\"websiteUrl\":131,\"modelUrl\":132,\"tokenizer\":-1,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":130,\"description\":133,\"logoUrl\":38,\"promptExamples\":134,\"parameters\":144,\"preprompt\":56,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":26},\"Qwen/Qwen2.5-Coder-32B-Instruct\",\"https://qwenlm.github.io/blog/qwen2.5-coder-family/\",\"https://huggingface.co/Qwen/Qwen2.5-Coder-32B-Instruct\",\"Qwen's latest coding model, in its biggest size yet. SOTA on many coding benchmarks.\",[135,138,141],{\"title\":136,\"prompt\":137},\"To-do list web app\",\"Create a simple to-do list application where users can:\\n- Add new tasks.\\n- Mark tasks as complete.\\n- Delete completed tasks.\\nThe tasks should persist in the browser's local storage so that they remain available even after a page reload.\\n\",{\"title\":139,\"prompt\":140},\"Create a REST API\",\"Build a simple REST API using Node.js, TypeScript and Express:\\n- POST /items: Accepts a JSON body with name and quantity and adds a new item.\\n- GET /items: Returns a list of all items.\\n- PUT /items/:id: Updates the name or quantity of an item by its id.\\n- DELETE /items/:id: Removes an item by its id.\\nUse an in-memory array as the data store (no need for a database). Include basic error handling (e.g., item not found).\",{\"title\":142,\"prompt\":143},\"Simple website\",\"Generate a snazzy static landing page for a local coffee shop using HTML and CSS. You can use tailwind using \\u003Cscript src='https://cdn.tailwindcss.com'>\\u003C/script>.\",{\"temperature\":50,\"truncate\":51,\"max_new_tokens\":52,\"stop\":145,\"stop_sequences\":145},[55,54],{\"id\":147,\"name\":147,\"websiteUrl\":148,\"modelUrl\":-1,\"tokenizer\":-1,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":147,\"description\":149,\"logoUrl\":63,\"promptExamples\":-1,\"parameters\":150,\"preprompt\":29,\"multimodal\":26,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":32},\"meta-llama/Llama-3.2-11B-Vision-Instruct\",\"https://llama.com/\",\"The latest multimodal model from Meta! Supports image inputs natively.\",{\"temperature\":50,\"truncate\":151,\"max_new_tokens\":152,\"stop\":153,\"stop_sequences\":153},14336,1536,[72,55],{\"id\":155,\"name\":155,\"websiteUrl\":156,\"modelUrl\":157,\"tokenizer\":155,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":155,\"description\":158,\"logoUrl\":159,\"promptExamples\":160,\"parameters\":164,\"preprompt\":29,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":26},\"NousResearch/Hermes-3-Llama-3.1-8B\",\"https://nousresearch.com/\",\"https://huggingface.co/NousResearch/Hermes-3-Llama-3.1-8B\",\"Nous Research's latest Hermes 3 release in 8B size. Follows instruction closely.\",\"https://huggingface.co/datasets/huggingchat/models-logo/resolve/main/nous-logo.png\",[161,162,163],{\"title\":41,\"prompt\":42},{\"title\":44,\"prompt\":45},{\"title\":47,\"prompt\":48},{\"temperature\":50,\"truncate\":151,\"max_new_tokens\":152,\"stop\":165,\"stop_sequences\":165},[55],{\"id\":167,\"name\":167,\"websiteUrl\":168,\"modelUrl\":169,\"tokenizer\":167,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":167,\"description\":170,\"logoUrl\":171,\"promptExamples\":172,\"parameters\":176,\"preprompt\":29,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":32},\"mistralai/Mistral-Nemo-Instruct-2407\",\"https://mistral.ai/news/mistral-nemo/\",\"https://huggingface.co/mistralai/Mistral-Nemo-Instruct-2407\",\"A small model with good capabilities in language understanding and commonsense reasoning.\",\"https://huggingface.co/datasets/huggingchat/models-logo/resolve/main/mistral-logo.png\",[173,174,175],{\"title\":41,\"prompt\":42},{\"title\":44,\"prompt\":45},{\"title\":47,\"prompt\":48},{\"temperature\":50,\"truncate\":151,\"max_new_tokens\":152,\"stop\":177,\"stop_sequences\":177},[178],\"\\u003C/s>\",{\"id\":180,\"name\":180,\"websiteUrl\":181,\"modelUrl\":182,\"tokenizer\":180,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":180,\"description\":183,\"logoUrl\":184,\"promptExamples\":185,\"parameters\":189,\"preprompt\":29,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":32,\"hasInferenceAPI\":26},\"microsoft/Phi-3.5-mini-instruct\",\"https://techcommunity.microsoft.com/t5/ai-azure-ai-services-blog/discover-the-new-multi-lingual-high-quality-phi-3-5-slms/ba-p/4225280/\",\"https://huggingface.co/microsoft/Phi-3.5-mini-instruct\",\"One of the best small models (3.8B parameters), super fast for simple tasks.\",\"https://huggingface.co/datasets/huggingchat/models-logo/resolve/main/microsoft-logo.png\",[186,187,188],{\"title\":41,\"prompt\":42},{\"title\":44,\"prompt\":45},{\"title\":47,\"prompt\":48},{\"temperature\":50,\"truncate\":51,\"max_new_tokens\":52,\"stop\":190,\"stop_sequences\":190},[191,54,192],\"\\u003C|end|>\",\"\\u003C|assistant|>\",{\"id\":194,\"name\":194,\"websiteUrl\":-1,\"modelUrl\":-1,\"tokenizer\":195,\"datasetName\":-1,\"datasetUrl\":-1,\"displayName\":194,\"description\":-1,\"logoUrl\":-1,\"promptExamples\":-1,\"parameters\":198,\"preprompt\":29,\"multimodal\":32,\"multimodalAcceptedMimetypes\":-1,\"tools\":32,\"unlisted\":26,\"hasInferenceAPI\":32},\"llhf/Meta-Llama-3.1-8B-Instruct\",{\"tokenizerUrl\":196,\"tokenizerConfigUrl\":197},\"https://huggingface.co/nsarrazin/llama3.1-tokenizer/resolve/main/tokenizer.json\",\"https://huggingface.co/nsarrazin/llama3.1-tokenizer/raw/main/tokenizer_config.json\",{\"temperature\":50,\"stop\":199,\"stop_sequences\":199},[54,72],[201,203,205,207,209,211,213,215,217,219,221,223,225,227,228,230,232,234,236],{\"name\":202,\"id\":202,\"displayName\":202},\"bigcode/starcoder\",{\"name\":204,\"id\":204,\"displayName\":204},\"OpenAssistant/oasst-sft-6-llama-30b-xor\",{\"name\":206,\"id\":206,\"displayName\":206},\"HuggingFaceH4/zephyr-7b-alpha\",{\"name\":208,\"id\":208,\"displayName\":208},\"openchat/openchat_3.5\",{\"name\":210,\"id\":210,\"displayName\":210},\"openchat/openchat-3.5-1210\",{\"name\":212,\"id\":212,\"displayName\":212},\"tiiuae/falcon-180B-chat\",{\"name\":214,\"id\":214,\"displayName\":214},\"codellama/CodeLlama-34b-Instruct-hf\",{\"name\":216,\"id\":216,\"displayName\":216},\"google/gemma-7b-it\",{\"name\":218,\"id\":218,\"displayName\":218},\"meta-llama/Llama-2-70b-chat-hf\",{\"name\":220,\"id\":220,\"displayName\":220},\"codellama/CodeLlama-70b-Instruct-hf\",{\"name\":222,\"id\":222,\"displayName\":222},\"openchat/openchat-3.5-0106\",{\"name\":224,\"id\":224,\"displayName\":224},\"meta-llama/Meta-Llama-3-70B-Instruct\",{\"name\":226,\"id\":226,\"displayName\":226},\"meta-llama/Meta-Llama-3.1-405B-Instruct-FP8\",{\"name\":19,\"transferTo\":6,\"id\":19,\"displayName\":19},{\"name\":229,\"transferTo\":6,\"id\":229,\"displayName\":229},\"01-ai/Yi-1.5-34B-Chat\",{\"name\":231,\"transferTo\":167,\"id\":231,\"displayName\":231},\"mistralai/Mixtral-8x7B-Instruct-v0.1\",{\"name\":233,\"transferTo\":155,\"id\":233,\"displayName\":233},\"NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO\",{\"name\":235,\"transferTo\":167,\"id\":235,\"displayName\":235},\"mistralai/Mistral-7B-Instruct-v0.3\",{\"name\":237,\"transferTo\":180,\"id\":237,\"displayName\":237},\"microsoft/Phi-3-mini-4k-instruct\",[239,247,254,261,267,273],{\"_id\":240,\"type\":241,\"displayName\":242,\"name\":243,\"description\":244,\"mimeTypes\":245,\"isOnByDefault\":26,\"isLocked\":26,\"timeToUseMS\":246},\"000000000000000000000001\",\"config\",\"Image Generation\",\"image_generation\",\"Use this tool to generate images based on a prompt.\",[],15000,{\"_id\":248,\"type\":241,\"displayName\":249,\"name\":250,\"description\":251,\"mimeTypes\":252,\"isOnByDefault\":26,\"isLocked\":26,\"timeToUseMS\":246},\"000000000000000000000002\",\"Document Parser\",\"document_parser\",\"Use this tool to parse any document and get its content in markdown format.\",[253],\"application/*\",{\"_id\":255,\"type\":241,\"displayName\":256,\"name\":257,\"description\":258,\"mimeTypes\":259,\"isOnByDefault\":26,\"isLocked\":26,\"timeToUseMS\":246},\"000000000000000000000003\",\"Image Editor\",\"edit_image\",\"This tool lets you edit images\",[260],\"image/*\",{\"_id\":262,\"type\":241,\"displayName\":263,\"name\":264,\"description\":265,\"mimeTypes\":266,\"isOnByDefault\":26,\"isLocked\":26,\"timeToUseMS\":246},\"00000000000000000000000c\",\"Calculator\",\"calculator\",\"Calculate the result of a mathematical expression\",[],{\"_id\":268,\"type\":241,\"displayName\":269,\"name\":270,\"description\":271,\"mimeTypes\":272,\"isOnByDefault\":26,\"isLocked\":26,\"timeToUseMS\":246},\"00000000000000000000000b\",\"Fetch URL\",\"fetchUrl\",\"Fetch the contents of a URL\",[],{\"_id\":274,\"type\":241,\"displayName\":275,\"name\":276,\"description\":277,\"mimeTypes\":278,\"isOnByDefault\":26,\"isLocked\":26,\"timeToUseMS\":246},\"00000000000000000000000a\",\"Web Search\",\"websearch\",\"Search the web for answers to the user's query\",[],42,[\"Promise\",281],1,{\"id\":283,\"username\":284,\"avatarUrl\":285,\"email\":286,\"logoutDisabled\":-1,\"isAdmin\":32,\"isEarlyAccess\":32},\"666681d0f3c30ef88af3f7fe\",\"helloworld1990\",\"https://huggingface.co/avatars/88d46633ff51873d06bd5b7c25c47c70.svg\",null],\"uses\":{\"dependencies\":[\"conversation:list\"]}},{\"type\":\"data\",\"data\":[{\"messages\":1,\"title\":33,\"model\":38,\"preprompt\":5,\"rootMessageId\":3,\"assistant\":37,\"shared\":36},[2,11,20],{\"id\":3,\"from\":4,\"content\":5,\"createdAt\":6,\"updatedAt\":7,\"children\":8,\"ancestors\":10},\"7cf8c534-8d8a-443b-a8bd-189975633f77\",\"system\",\"\",[\"Date\",\"2024-12-05T00:16:09.590Z\"],[\"Date\",\"2024-12-05T00:16:09.590Z\"],[9],\"49fe6fe3-5645-4d62-be0f-ff1a6550859d\",[],{\"from\":12,\"content\":13,\"files\":14,\"createdAt\":15,\"updatedAt\":16,\"ancestors\":17,\"id\":9,\"children\":18},\"user\",\"hui\\n\\n\",[],[\"Date\",\"2024-12-05T00:16:10.195Z\"],[\"Date\",\"2024-12-05T00:16:10.195Z\"],[3],[19],\"1b1fcb6f-ff13-4dba-9ac4-5419f6332fa0\",{\"from\":21,\"content\":22,\"createdAt\":23,\"updatedAt\":24,\"ancestors\":25,\"id\":19,\"children\":26,\"updates\":27,\"interrupted\":36},\"assistant\",\"I'm sorry, I don't understand your request. Could you please provide more context or clarify what you're asking about?\",[\"Date\",\"2024-12-05T00:16:10.195Z\"],[\"Date\",\"2024-12-05T00:16:10.202Z\"],[3,9],[],[28,31,34],{\"type\":29,\"status\":30},\"status\",\"started\",{\"type\":32,\"title\":33},\"title\",\"â“ Unknown input\",{\"type\":35,\"text\":22,\"interrupted\":36,\"webSources\":37},\"finalAnswer\",false,null,\"CohereForAI/c4ai-command-r-plus-08-2024\"],\"uses\":{\"dependencies\":[\"https://huggingface.co/chat/conversation/conversation\"],\"params\":[\"id\"]}}]}\n{\"type\":\"chunk\",\"id\":1,\"data\":[[]]}\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 16922,
          "_error": null,
          "_fetchedViaServiceWorker": false
        },
        "serverIPAddress": "3.164.110.128",
        "startedDateTime": "2024-12-05T00:16:10.900Z",
        "time": 288.3810000057565,
        "timings": {
          "blocked": 2.5360000101020557,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.256,
          "wait": 283.8180000000121,
          "receive": 1.7709999956423417,
          "_blocked_queueing": 0.997000010102056,
          "_workerStart": -1,
          "_workerReady": -1,
          "_workerFetchStart": -1,
          "_workerRespondWithSettled": -1
        }
      }
    ]
  }
}